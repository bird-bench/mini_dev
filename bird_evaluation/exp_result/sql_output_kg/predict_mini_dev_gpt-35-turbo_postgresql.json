{
    "0": "SELECT \n    COUNT(CASE WHEN currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN currency = 'CZK' THEN 1 END) AS ratio\nFROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customerid, SUM(consumption) AS total_consumption\nFROM yearmonth\nWHERE date BETWEEN '201201' AND '201212'\nAND segment = 'LAM'\nGROUP BY customerid\nORDER BY total_consumption\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT customerid, \n       AVG(consumption) / 12 AS average_monthly_consumption\nFROM yearmonth\nWHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')\nAND date BETWEEN '201301' AND '201312'\nGROUP BY customerid\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    SUM(CASE WHEN currency = 'CZK' THEN consumption ELSE 0 END) - \n    SUM(CASE WHEN currency = 'EUR' THEN consumption ELSE 0 END) AS difference_in_consumption\nFROM yearmonth\nWHERE date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT \n    SUBSTRING(date, 1, 4) AS year,\n    SUM(amount * price) AS total_consumption\nFROM transactions_1k\nWHERE currency = 'CZK'\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT \n    SUBSTRING(date, 1, 4) AS year,\n    SUBSTRING(date, 5, 2) AS month,\n    SUM(consumption) AS total_consumption\nFROM yearmonth\nWHERE segment = 'SME' AND SUBSTRING(date, 1, 4) = '2013'\nGROUP BY year, month\nORDER BY total_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT (SUM(amount * price) / COUNT(DISTINCT customerid)) AS annual_average\n    FROM transactions_1k\n    WHERE date BETWEEN '20130101' AND '20131231'\n    AND currency = 'CZK'\n    GROUP BY segment\n    ORDER BY annual_average\n    LIMIT 1) AS sme_annual_average,\n    \n    (SELECT (SUM(amount * price) / COUNT(DISTINCT customerid)) AS annual_average\n    FROM transactions_1k\n    WHERE date BETWEEN '20130101' AND '20131231'\n    AND currency = 'CZK'\n    GROUP BY segment\n    ORDER BY annual_average\n    LIMIT 1 OFFSET 1) AS lam_annual_average,\n    \n    (SELECT (SUM(amount * price) / COUNT(DISTINCT customerid)) AS annual_average\n    FROM transactions_1k\n    WHERE date BETWEEN '20130101' AND '20131231'\n    AND currency = 'CZK'\n    GROUP BY segment\n    ORDER BY annual_average\n    LIMIT 1 OFFSET 2) AS kam_annual_average\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT segment,\n       (SUM(CASE WHEN SUBSTRING(date, 1, 4) = '2013' THEN consumption ELSE 0 END) - \n       SUM(CASE WHEN SUBSTRING(date, 1, 4) = '2012' THEN consumption ELSE 0 END)) AS increase_or_decrease,\n       ((SUM(CASE WHEN SUBSTRING(date, 1, 4) = '2013' THEN consumption ELSE 0 END) - \n       SUM(CASE WHEN SUBSTRING(date, 1, 4) = '2012' THEN consumption ELSE 0 END)) / \n       SUM(CASE WHEN SUBSTRING(date, 1, 4) = '2013' THEN consumption ELSE 0 END)) * 100 AS percentage_increase\nFROM yearmonth\nGROUP BY segment\nORDER BY percentage_increase DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT customerid, SUM(consumption) AS total_consumption\nFROM yearmonth\nWHERE customerid = 6\nAND date >= '201308'\nAND date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE segment = 'discount' AND country = 'CZE') \n    - \n    (SELECT COUNT(*) FROM gasstations WHERE segment = 'discount' AND country = 'SVK') \n    AS \"More Discount Gas Stations in Czech Republic\"\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'CZK') - \n    (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'EUR') AS difference\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT ((COUNT(*) FILTER (WHERE segment = 'LAM' AND consumption > 46.73) / COUNT(*) FILTER (WHERE segment = 'LAM')) * 100) AS percentage_consumed_more_than_46_73\nFROM yearmonth\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT customerid, \n       SUM(CASE WHEN consumption > 528.3 THEN 1 ELSE 0 END) / COUNT(*) * 100 AS percentage\nFROM yearmonth\nWHERE date = '201202'\nGROUP BY customerid\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(consumption) AS highest_monthly_consumption\nFROM yearmonth\nWHERE date LIKE '2012%'\nGROUP BY date\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.description\nFROM transactions_1k\nJOIN products ON transactions_1k.productid = products.productid\nJOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid\nWHERE yearmonth.date LIKE '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT gasstations.country\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nJOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid\nWHERE yearmonth.date LIKE '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(*) \nFROM yearmonth \nWHERE customerid IN \n    (SELECT customerid \n     FROM customers \n     WHERE currency = 'EUR') \nAND consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nJOIN products ON transactions_1k.productid = products.productid\nWHERE gasstations.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT transactions_1k.time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE gasstations.chainid = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE g.country = 'CZE' AND t.date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT transactions_1k.price, customers.currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nWHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.segment\nFROM customers c\nJOIN transactions_1k t ON c.customerid = t.customerid\nWHERE t.date = '2012-08-23' AND t.time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE t.date = '2012-08-26' AND t.time BETWEEN '08:00:00' AND '09:00:00' AND g.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT customers.country\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nWHERE transactions_1k.date = '2012-08-24' AND transactions_1k.price = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    COUNT(DISTINCT customerid) / (SELECT COUNT(DISTINCT customerid) FROM customers) * 100 AS percentage\nFROM transactions_1k t\nJOIN customers c ON t.customerid = c.customerid\nWHERE t.date = '2012-08-25' AND c.currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT customerid, \n       (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate\nFROM yearmonth\nWHERE date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (COUNT(*) FILTER (WHERE segment = 'premium' AND country = 'SVK') * 100.0) / COUNT(*) AS percentage_premium\nFROM gasstations\nWHERE country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT \n    SUM(t.amount * t.price) AS total_spent,\n    SUM(CASE WHEN date LIKE '201201%' THEN t.amount * t.price ELSE 0 END) AS spent_in_january\nFROM transactions_1k t\nWHERE t.customerid = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.customerid, \n       AVG(t.price / t.amount) AS average_price_per_item,\n       c.currency\nFROM customers c\nJOIN transactions_1k t ON c.customerid = t.customerid\nGROUP BY c.customerid, c.currency\nORDER BY SUM(t.price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT \n    y.customerid,\n    y.consumption\nFROM transactions_1k t\nJOIN products p ON t.productid = p.productid\nJOIN yearmonth y ON t.customerid = y.customerid\nWHERE t.date = '201208'\nAND t.productid = 5\nAND t.price / t.amount > 29.00\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_name\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women\\'s Soccer' AND m.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT event_id, event_name, type\nFROM event\nWHERE event_id IN (SELECT link_to_event\n                   FROM attendance\n                   GROUP BY link_to_event\n                   HAVING COUNT(link_to_member) > 10)\nAND type = 'Meeting'\t----- bird -----\tstudent_club",
    "33": "SELECT event_name\nFROM event\nWHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20)\nAND type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount)\nFROM income\nWHERE link_to_member = (SELECT member_id FROM member WHERE position = 'Vice President')\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense_id, expense_description, expense_date, approved\nFROM expense\nWHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08'))\nAND approved = 'True'\t----- bird -----\tstudent_club",
    "37": "SELECT member.first_name, member.last_name, AVG(expense.cost) AS average_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nJOIN event ON expense.link_to_budget = event.event_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND (EXTRACT(MONTH FROM expense.expense_date) = 9 OR EXTRACT(MONTH FROM expense.expense_date) = 10)\nGROUP BY member.first_name, member.last_name\t----- bird -----\tstudent_club",
    "38": "SELECT SUM(CASE WHEN EXTRACT(YEAR FROM event_date) = 2019 THEN spent ELSE 0 END) - \nSUM(CASE WHEN EXTRACT(YEAR FROM event_date) = 2020 THEN spent ELSE 0 END) AS difference_total_amount_spent\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.status = 'completed'\t----- bird -----\tstudent_club",
    "39": "SELECT income.notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone\nFROM member\nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_name\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT member.first_name, member.last_name, major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT DIVIDE(SUM(CASE WHEN event_name = 'Yearly Kickoff' AND category = 'Advertisement' THEN amount ELSE 0 END), \n       SUM(CASE WHEN event_name = 'October Meeting' AND category = 'Advertisement' THEN amount ELSE 0 END)) \nFROM budget\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM attendance \nWHERE link_to_event = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT event_name\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.status = 'Closed'\nORDER BY spent/amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spend\nFROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_on_food\nFROM budget\nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT member.first_name, member.last_name\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nGROUP BY member.first_name, member.last_name\nHAVING COUNT(attendance.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name\nFROM member\nJOIN budget ON member.member_id = budget.link_to_event\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name\nFROM event\nWHERE event_id = (\n    SELECT link_to_event\n    FROM expense\n    WHERE cost = (\n        SELECT MIN(cost)\n        FROM expense\n    )\n)\t----- bird -----\tstudent_club",
    "58": "SELECT DIVIDE(SUM(cost), (SELECT SUM(cost) FROM event)) * 100\nFROM expense\nWHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nWHERE link_to_major = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT \n    member.first_name, member.last_name, event.event_name, attendance.link_to_event, attendance.link_to_member\nFROM\n    member\nJOIN\n    attendance ON member.member_id = attendance.link_to_member\nJOIN\n    event ON event.event_id = attendance.link_to_event\nWHERE\n    member.first_name = 'Maya' AND member.last_name = 'Mclean'\n    AND event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost\nFROM expense e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE ev.event_name = 'September Speaker'\nAND e.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.remaining < 0\nORDER BY budget.remaining\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) AS total_value\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense.expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(amount) AS amount_budgeted\nFROM budget\nWHERE link_to_event = 'April Speaker'\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY member.first_name, member.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event_name, type\nFROM event\nWHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215'\nAND event.type = 'Guest Speaker'\nAND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100\nFROM member\nWHERE t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone AS contact_number\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name || ' ' || member.last_name AS full_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT \n    DIVIDE(\n        COUNT(ID) WHERE SEX = 'M' AND Admission = '+',\n        COUNT(ID) WHERE SEX = 'M' AND Admission = '-'\n    ) AS percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT DIVIDE(COUNT(ID) WHERE year(Birthday) > '1930' AND Sex = 'F'), COUNT(ID) WHERE Sex = 'F') * 100 AS percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    DIVIDE(\n        (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+'),\n        (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-')\n    ) AS ratio_of_outpatient_to_inpatient\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.disease\nFROM Patient\nWHERE Patient.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.patient_id, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.exam_id = Laboratory.exam_id\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, Patient.age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Laboratory.coagulation_degree = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.sex, Examination.disease\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient_ID\nWHERE Examination.thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient\nWHERE sex = 'F' AND year(Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nWHERE e.thrombosis = '1' AND e.examination_date >= '1997-01-01' AND e.examination_date <= '1997-12-31'\nAND p.sex = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Patient.name, Examination.symptoms_observed, Examination.diagnosis\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nWHERE Patient.birthday = (SELECT MAX(birthday) FROM Patient)\nAND Examination.symptoms_observed IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MAX(year(Birthday)) AS Oldest_SJS_Patient_Age, MAX(`First Date`) AS Laboratory_Work_Completion_Date\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Diagnosis = 'SJS'\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND UA <= 8.0) / \n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND UA <= 6.5) AS male_to_female_ratio\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE EXTRACT(YEAR FROM age(p.Birthday)) < 18\nAND EXTRACT(YEAR FROM e.`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT Patient.Birthday, MAX(Laboratory.HGB) AS \"Highest Hemoglobin Count\", Examination.DoctorDiagnosis\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Laboratory.HGB IS NOT NULL\nGROUP BY Patient.Birthday, Examination.DoctorDiagnosis\nORDER BY \"Highest Hemoglobin Count\" DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Patient.PatientID, Laboratory.LabID, Laboratory.ExaminationDate, Laboratory.TestName, Laboratory.TestResult\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND Laboratory.TestName = 'aCL IgM' AND Laboratory.ExaminationDate = '1993/11/12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n  (SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END) - \n  SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END)) /\n  SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) AS decrease_rate\nFROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Examination.ExamDate BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT Patient.id\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.thrombosis_level = 2\nAND Laboratory.ANA_pattern = 'S'\nAND Laboratory.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.patient_id, Patient.patient_name\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Examination.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.T_BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB) \nFROM Patient \nJOIN Examination ON Patient.PatientID = Examination.PatientID \nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID \nWHERE Patient.SEX = 'F' \nAND Laboratory.PLT > 400 \nAND Examination.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Patient.sex = 'F' AND Laboratory.diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(CASE WHEN YEAR(BIRTHDAY) = '1980' AND Diagnosis = 'RA' AND SEX = 'F' THEN 1 ELSE 0 END), COUNT(*)) * 100\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT Patient.patient_number, Examination.uric_acid, Patient.sex\nFROM Patient\nJOIN Examination ON Patient.patient_number = Examination.patient_number\nWHERE (Examination.uric_acid > 8.0 AND Patient.sex = 'M') OR (Examination.uric_acid > 6.5 AND Patient.sex = 'F')\nAND Patient.patient_number = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT > = 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.diagnosis\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.ALT_glutamic_pylvic_transaminase > 60\nORDER BY Patient.date_of_birth ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patientID\nJOIN Laboratory ON Examination.ID = Laboratory.examinationID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT Patient.sex, GROUP_CONCAT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.examination_ID\nWHERE Laboratory.T_BIL >= 2.0\nGROUP BY Patient.sex\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT Patient.ID, \n       Patient.sex, \n       Patient.birthday, \n       Laboratory.T-CHO\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.examination_ID\nWHERE Patient.sex = 'M' AND Laboratory.T-CHO >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT Patient.PatientID\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Laboratory.TG >= 200\nAND (EXTRACT(YEAR FROM current_timestamp) - EXTRACT(YEAR FROM Patient.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.patient_id)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE year(Birthday) BETWEEN '1936' AND '1956'\nAND sex = 'M'\nAND CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.sex, age as Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Laboratory.GLU >= 180 AND Laboratory.T_CHO < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, \n       Patient.Birthday, \n       Examination.Diagnosis, \n       Laboratory.RBC \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.PatientID \nJOIN Laboratory ON Patient.ID = Laboratory.PatientID \nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.sex\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.examination_ID\nWHERE Examination.diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nGROUP BY Patient.ID, age\nHAVING COUNT(Examination.ID) > 2 AND MAX(Laboratory.HCT) >= 52\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT Patient.patient_id, \n       COUNT(CASE WHEN Examination.PLT < 100 THEN 1 END) AS lower_than_normal,\n       COUNT(CASE WHEN Examination.PLT > 400 THEN 1 END) AS higher_than_normal\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nWHERE Examination.PLT <= 100 OR Examination.PLT >= 400\nGROUP BY Patient.patient_id\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.PatientID, Patient.Name\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE YEAR(Examination.Date) = '1984'\nAND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) < 50\nAND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n  DIVIDE(\n    SUM(CASE WHEN SUBTRACT(year(current_timestamp), year(Birthday)) > 55 AND SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END),\n    SUM(CASE WHEN SUBTRACT(year(current_timestamp), year(Birthday)) > 55 AND PT >= 14 THEN 1 ELSE 0 END)\n  ) * 100\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE p.sex = 'M'\nAND l.wbc > 3.5 AND l.wbc < 9.0\nAND (l.fibrinogen <= 150 OR l.fibrinogen >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.ig_g >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nWHERE e.ig_g_level > 900 AND e.ig_g_level < 2000\nAND e.symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500\nAND YEAR(Patient.`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Patient.PatientID, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Patient.PatientID = Laboratory.PatientID\nWHERE (Laboratory.IGM <= 40 OR Laboratory.IGM >= 400)\nGROUP BY Patient.PatientID\nORDER BY COUNT(Examination.Diagnosis) DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.CRP = '+' AND Laboratory.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.creatinine_level >= 1.5\nAND (DATE_PART('year', CURRENT_DATE) - DATE_PART('year', Patient.birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.patient_id)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.RNP IN ('-', '+-') AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.anti_SM = 'negative' AND l.thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.patient_id)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.scl70 = 'negative' \nAND Patient.sex = 'F' \nAND Examination.symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT Patient.PatientID\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Laboratory.AntiCentromereLevel IN ('-', '+-')\nAND Laboratory.AntiSSBLevel IN ('-', '+-')\nAND Patient.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(birthday) \nFROM Patient \nWHERE patient_id IN \n    (SELECT patient_id \n     FROM Examination \n     WHERE glutamic_oxaloacetic_transaminase >= 60)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.creatinine_phosphokinase < 250\nAND (Laboratory.KCT = '+' OR Laboratory.RVVT = '+' OR Laboratory.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League\nFROM Match\nWHERE season = '2015/2016'\nGROUP BY League\nORDER BY SUM(home_team_goal + away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League'\nAND Match.season = '2009/2010'\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT Team.team_name, Team_Attributes.buildUpPlaySpeed\nFROM Team\nJOIN Team_Attributes ON Team.team_id = Team_Attributes.team_id\nORDER BY Team_Attributes.buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY MAX(SUM(CASE WHEN home_team_goal = away_team_goal THEN 1 ELSE 0 END)) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT Player.name, (DATE_PART('year', CURRENT_DATE) - DATE_PART('year', Player.birthday)) AS age\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.sprint_speed >= 97\nAND Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name AS league_name, COUNT(m.id) AS match_count\nFROM League l\nJOIN Match m ON l.id = m.league_id\nGROUP BY l.name\nORDER BY match_count DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT Team.team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL)\nAND strftime('%Y', Team_Attributes.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT DIVIDE(MULTIPLY((SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END), 100)), COUNT(player_fifa_api_id))\nFROM Player\nWHERE YEAR(birthday) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "137": "SELECT DIVIDE(SUM(long_shots), COUNT(player_fifa_api_id))\nFROM Player_Attributes\nWHERE player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(home_team_goal) > AVG(away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT Player.name\nFROM Player\nWHERE EXTRACT(YEAR FROM birthday) = 1970\nAND EXTRACT(MONTH FROM birthday) = 10\t----- bird -----\teuropean_football_2",
    "141": "SELECT Player_Attributes.overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_id = Player.player_id\nWHERE Player.player_name = 'Gabriel Tamas'\nAND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN Team ON Match.home_team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Poland'\nAND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player)\nGROUP BY Player.name\nORDER BY AVG(Player_Attributes.finishing) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player_Attributes t1\nJOIN Player t2 ON t1.player_id = t2.id\nWHERE t1.date >= '2010-01-01' AND t1.date <= '2015-12-31'\nAND t2.height > 170\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n(SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) - \n(SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END)) AS difference\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT \n    CASE \n        WHEN birthday_of_Aaron_Lennon > birthday_of_Abdelaziz_Barrada THEN 'Aaron Lennon is older'\n        ELSE 'Abdelaziz Barrada is older'\n    END AS older_player\nFROM Player\t----- bird -----\teuropean_football_2",
    "147": "SELECT Player.name\nFROM Player\nWHERE Player.height = (SELECT MAX(height) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*)\nFROM Player\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT Player.player_id)\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE strftime('%Y', Player.birthday)<'1986' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.volley_score > 70 AND Player_Attributes.dribbling_score > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*)\nFROM Match\nWHERE date_part('month', date) = 4\nAND date_part('year', date) = 2009\nAND league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\t----- bird -----\teuropean_football_2",
    "152": "SELECT league_name\nFROM League\nWHERE season = '2008/2009'\nORDER BY matches_played DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((player1.overall_rating - player2.overall_rating) / player2.overall_rating) * 100 AS percentage_higher\nFROM Player_Attributes player1\nJOIN Player_Attributes player2 ON player1.player_name = 'Ariel Borysiuk' AND player2.player_name = 'Paulin Puel'\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(overall_rating)\nFROM Player_Attributes\nWHERE player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score, \n       chanceCreationPassingClass AS classified\nFROM Team_Attributes\nWHERE team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT Player_Attributes.overall_rating\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player.player_name = 'Aaron Mooy'\nAND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT Player_Attributes.attacking_work_rate\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_id = Player.player_id\nWHERE Player.player_name = 'Francesco Migliore'\nAND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) \nFROM Player_Attributes \nWHERE player_name = 'Kevin Constant' \nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_name = 'Kevin Constant')\t----- bird -----\teuropean_football_2",
    "160": "SELECT Team_Attributes.buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_id = Team.team_id\nWHERE Team.team_long_name = 'FC Lorient'\nAND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT Team_Attributes.defence_aggression_class\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_id = Team.team_id\nWHERE Team.team_long_name = 'Hannover 96'\nAND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_name = 'Marko Arnautovic' \nAND date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT DIVIDE(SUBTRACT((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12'), (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')), (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12'))*100 AS percentage\t----- bird -----\teuropean_football_2",
    "164": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nORDER BY Player_Attributes.height DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT Player.name\nFROM Player\nWHERE Player.player_id = (\n    SELECT player_id\n    FROM Player_Attributes\n    WHERE overall_rating = (\n        SELECT MAX(overall_rating)\n        FROM Player_Attributes\n    )\n)\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_id = Team_Attributes.team_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*)\nFROM Player\nWHERE player_name LIKE 'Aaron%'\nAND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23)) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT Player.player_id\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player_Attributes.potential IN (SELECT MIN(potential) FROM Player_Attributes)\nAND Player_Attributes.preferred_foot = 'right'\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*)\nFROM Player_Attributes\nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes)\nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT Match.home_team_goal, Match.away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.date = '2008-09-24%'\nAND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT Team_Attributes.speed_class\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_id = Team.team_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player_Attributes.finishing_rate, Player_Attributes.curve_score\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_id = Player.player_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY COUNT(Match.id) DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name AS away_team_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE Match.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "177": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "178": "SELECT (DIVIDE(COUNT(height < 180 AND overall_rating > 70),COUNT(id)) * 100) AS percentage\nFROM Player\t----- bird -----\teuropean_football_2",
    "179": "SELECT \ndrivers.driverref\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nWHERE qualifying.raceid = 20\nAND qualifying.q1 = (SELECT MAX(q1) FROM qualifying WHERE raceid = 20)\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname\nFROM results\nJOIN qualifying ON results.raceid = qualifying.raceid\nAND results.driverid = qualifying.driverid\nWHERE results.raceid = 19\nAND qualifying.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceid = 19)\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nJOIN races ON qualifying.raceid = races.raceid\nWHERE races.raceid = 354\nAND drivers.forename = 'Bruno'\nAND drivers.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT number\nFROM qualifying\nWHERE raceid = 903\nAND q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*)\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE results.raceid = 592\nAND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.forename, drivers.surname, drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverid = lapTimes.driverid\nJOIN races ON lapTimes.raceid = races.raceid\nWHERE races.raceid = 161\nAND lapTimes.time LIKE '0:01:27%'\nLIMIT 1\t----- bird -----\tformula_1",
    "189": "SELECT circuits.location, circuits.lat, circuits.lng\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM results r\nJOIN constructorResults cr ON r.constructorid = cr.constructorid\nJOIN constructors c ON cr.constructorid = c.constructorid\nWHERE r.raceid = 9\nAND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceid = 9)\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nWHERE raceid = 45\nAND q3 LIKE '0:01:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceid = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE results.raceid = 872\nAND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE results.fastestlapspeed = (SELECT MAX(fastestlapspeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT ROUND((fastestlapspeed(853) - fastestlapspeed(854)) * 100 / fastestlapspeed(853), 2) AS percentage\nFROM results\nWHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')\t----- bird -----\tformula_1",
    "196": "SELECT drivers.driverid, \n       COUNT(results.driverid) FILTER (WHERE results.time IS NOT NULL) / COUNT(results.driverid) AS completion_rate\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.date = '1983-07-16'\nGROUP BY drivers.driverid\t----- bird -----\tformula_1",
    "197": "SELECT races.name\nFROM races\nWHERE year = (SELECT year(min(date)) FROM races)\nAND date = (SELECT min(date) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE points = (SELECT MAX(points) FROM results)\t----- bird -----\tformula_1",
    "199": "SELECT MIN(milliseconds) AS \"Best Lap Time\", \n       drivers.forename AS \"Driver Forename\", \n       drivers.surname AS \"Driver Surname\", \n       races.name AS \"Race Name\"\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE fastestlap = 1\nGROUP BY drivers.forename, drivers.surname, races.name\t----- bird -----\tformula_1",
    "200": "SELECT AVG(milliseconds) \nFROM results \nJOIN races ON results.raceid = races.raceid \nJOIN drivers ON results.driverid = drivers.driverid \nWHERE races.name = 'Malaysian Grand Prix' \nAND drivers.forename = 'Lewis' \nAND drivers.surname = 'Hamilton' \nAND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT ((COUNT(raceId) WHERE surname = 'Hamilton' AND position > 1) / COUNT(raceId) WHERE surname = 'Hamilton' AND year >= 2010) * 100 AS percentage_not_first_place\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(COUNT(results.position)) AS wins, MAX(results.points) AS max_points\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nGROUP BY drivers.forename, drivers.surname, drivers.nationality\t----- bird -----\tformula_1",
    "203": "SELECT drivers.forename, drivers.surname, (YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE EXTRACT(MONTH FROM races.date) = 9\nAND EXTRACT(YEAR FROM races.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename || ' ' || drivers.surname = 'Alex Yoong'\nAND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.milliseconds\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT ROUND((COUNT(races) FILTER (WHERE country = 'Germany' AND name = 'European Grand Prix')::numeric / COUNT(races) FILTER (WHERE name = 'European Grand Prix')::numeric) * 100, 2) AS percentage\nFROM races\nWHERE name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitref\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality\nFROM drivers\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverref\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007\nORDER BY results.positionorder\nLIMIT 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.positionorder\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestlapspeed) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.name = 'Spanish Grand Prix' \nAND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.positionorder\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Chinese Grand Prix'\nAND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT results.time\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.year = 2008\nAND races.name = 'Chinese Grand Prix'\nAND results.positionorder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT driverid) \nFROM results \nWHERE raceid = (SELECT raceid FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) \nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT (results.milliseconds - (SELECT MIN(results.milliseconds) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'))) / (SELECT MIN(results.milliseconds) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) * 100\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*)\nFROM circuits\nWHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) \nFROM results \nJOIN constructors ON results.constructorid = constructors.constructorid \nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nLEFT JOIN results ON constructors.constructorid = results.constructorid\nWHERE results.raceid = 291\nAND results.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(results.constructorid) \nFROM results \nJOIN races ON results.raceid = races.raceid \nJOIN constructors ON results.constructorid = constructors.constructorid \nWHERE constructors.nationality = 'Japanese' \nAND results.points = 0 \nGROUP BY results.constructorid \nHAVING COUNT(results.raceid) = 2\t----- bird -----\tformula_1",
    "223": "SELECT drivers.driverid, \n       COUNT(results.driverid) FILTER (WHERE results.time IS NOT NULL AND races.year BETWEEN 2007 AND 2009) AS completed_races,\n       COUNT(results.driverid) FILTER (WHERE races.year BETWEEN 2007 AND 2009) AS total_races,\n       (COUNT(results.driverid) FILTER (WHERE results.time IS NOT NULL AND races.year BETWEEN 2007 AND 2009) / COUNT(results.driverid) FILTER (WHERE races.year BETWEEN 2007 AND 2009)) * 100 AS race_completion_percentage\nFROM drivers\nLEFT JOIN results ON drivers.driverid = results.driverid\nLEFT JOIN races ON results.raceid = races.raceid\nWHERE drivers.nationality = 'Japanese'\nGROUP BY drivers.driverid\t----- bird -----\tformula_1",
    "224": "SELECT races.year, AVG(EXTRACT(EPOCH FROM results.time)) AS average_time_seconds\nFROM races\nJOIN results ON races.raceid = results.raceid\nWHERE results.position = 1 AND races.year < 1975 AND results.time IS NOT NULL\nGROUP BY races.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestlap\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.year = 2009\nAND results.position = 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestlapspeed)\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.year = 2009\nAND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "227": "SELECT (DIVIDE(COUNT(driverId WHERE year(dob) < 1985 AND laps > 50), COUNT(driverId WHERE year(dob) BETWEEN 2000 AND 2005)) * 100) AS percentage\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(drivers.driverid)\nFROM drivers\nJOIN lapTimes ON drivers.driverid = lapTimes.driverid\nWHERE drivers.nationality = 'French' AND lapTimes.laptime < '02:00.00'\t----- bird -----\tformula_1",
    "229": "SELECT code\nFROM drivers\nWHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT driverid, forename, surname, dob, nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT drivers.driverref\nFROM drivers\nWHERE drivers.nationality = 'German'\nORDER BY drivers.dob\nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT \n    driverid, code\nFROM\n    drivers\nJOIN\n    results ON drivers.driverid = results.driverid\nWHERE\n    EXTRACT(YEAR FROM dob) = 1971\n    AND fastestlaptime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE raceid > 50 AND raceid < 100 \nAND positiontext = 'DSQ' \nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT c.name, c.location, c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitid = r.circuitid\nWHERE c.country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT MIN(r.date) AS first_qualifying_race_date,\n       r.name AS first_qualifying_race_name,\n       r.date AS first_qualifying_race_date,\n       r.time AS first_qualifying_race_time\nFROM qualifying q\nJOIN races r ON q.raceid = r.raceid\nJOIN drivers d ON q.driverid = d.driverid\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nGROUP BY r.name, r.date, r.time\t----- bird -----\tformula_1",
    "236": "SELECT drivers.forename, drivers.surname, MIN(avg(pitStops.duration)) AS shortest_average_pitstop_duration\nFROM drivers\nJOIN pitStops ON drivers.driverid = pitStops.driverid\nWHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY drivers.forename, drivers.surname\nORDER BY shortest_average_pitstop_duration\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorref, constructors.url\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nAND results.positionorder = 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points\nFROM constructors\nJOIN results ON constructors.constructorid = results.constructorid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructors.name, constructors.nationality\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nJOIN races ON qualifying.raceid = races.raceid\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE circuits.name = 'Marina Bay Street Circuit' \nAND races.year = 2008\nAND qualifying.position = 1\nAND qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE q3 IS NOT NULL)\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, \n       drivers.nationality, \n       races.name AS first_race\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) AS num_accidents\nFROM results r\nJOIN status s ON r.statusid = s.statusid\nJOIN races ra ON r.raceid = ra.raceid\nJOIN drivers d ON r.driverid = d.driverid\nWHERE s.status = 'Accident'\nAND ra.name = 'Canadian Grand Prix'\nAND r.driverid = (\n    SELECT driverid\n    FROM (\n        SELECT driverid, COUNT(*) AS num_accidents\n        FROM results r\n        JOIN status s ON r.statusid = s.statusid\n        WHERE s.status = 'Accident'\n        GROUP BY driverid\n        ORDER BY num_accidents DESC\n        LIMIT 1\n    ) AS subquery\n)\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE results.fastestlaptime = (SELECT MIN(time) FROM results)\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, results.fastestlaptime\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nJOIN results ON races.raceid = results.raceid\nWHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength'\nAND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT superhero.superhero_name, colour.colour, COUNT(superhero.id) AS eye_color_popularity\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY superhero.superhero_name, colour.colour\nORDER BY eye_color_popularity DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (COUNT(superhero.id) FILTER (WHERE alignment.alignment = 'Bad') * 100) / COUNT(superhero.id) AS percentage,\n    COUNT(superhero.id) FILTER (WHERE alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics') AS marvel_comics_bad_superheroes\nFROM superhero\nLEFT JOIN alignment ON superhero.alignment_id = alignment.id\nLEFT JOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "260": "SELECT \n    publisher_name,\n    COUNT(superhero.id) AS num_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nGROUP BY publisher_name\t----- bird -----\tsuperhero",
    "261": "SELECT id\nFROM publisher\nWHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*)\nFROM superhero\nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg)\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero",
    "264": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nLEFT JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND eye_colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.hair_colour_id = c.id\nJOIN race r ON s.race_id = r.id\nWHERE s.height_cm = 185\nAND r.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (COUNT(superhero.id) * 100) / \n    (SELECT COUNT(superhero.id) FROM superhero WHERE height_cm BETWEEN 150 AND 180) AS percentage_published_by_marvel\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE height_cm BETWEEN 150 AND 180\nAND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nAND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'durability'\nAND publisher.publisher_name = 'Dark Horse Comics'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT superhero.superhero_name, colour.colour AS eye_colour, colour.colour AS hair_colour, colour.colour AS skin_colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE c1.colour = c2.colour AND c2.colour = c3.colour\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (COUNT(*) FILTER (WHERE s.gender_id = g.id AND s.skin_colour_id = c.id AND c.colour = 'Blue') / COUNT(*) FILTER (WHERE s.gender_id = g.id AND g.gender = 'Female')) * 100 AS percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c ON s.skin_colour_id = c.id\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(power_id) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM hero_attribute \nWHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') \nAND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (COUNT(*) FILTER (WHERE superhero.gender_id = (SELECT id FROM gender WHERE gender = 'Female')) / \n    COUNT(*) FILTER (WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))) * 100\n    AS percent_female_heroes_published_by_marvel\nFROM superhero\t----- bird -----\tsuperhero",
    "282": "SELECT SUM(CASE WHEN superhero_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - SUM(CASE WHEN superhero_name = 'Charles Chandler' THEN weight_kg ELSE 0 END) AS weight_difference\nFROM superhero\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, \n       AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT \n    (COUNT(superhero_name WHERE eye_colour_id = 7) / COUNT(superhero_name)) * 100.0\nFROM superhero\t----- bird -----\tsuperhero",
    "290": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) / \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) AS ratio\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT COUNT(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - COUNT(CASE WHEN eye_colour_id = 1 OR eye_colour_id IS NULL THEN 1 ELSE 0 END) AS difference\nFROM superhero\nWHERE weight_kg = 0 OR weight_kg IS NULL\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT s.gender\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT \n    publisher_name,\n    COUNT(superhero.id) AS num_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nGROUP BY publisher_name\t----- bird -----\tsuperhero",
    "297": "SELECT \n    displayname,\n    MAX(reputation) AS highest_reputation\nFROM users\nWHERE displayname IN ('Harlan', 'Jarrod Dixon')\nGROUP BY displayname\t----- bird -----\tcodebase_community",
    "298": "SELECT displayname\nFROM users\nWHERE EXTRACT(YEAR FROM creationdate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*)\nFROM users\nWHERE lastaccessdate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.displayname\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE posts.title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*)\nFROM posts\nWHERE ownerdisplayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT users.displayname\nFROM posts\nJOIN users ON posts.lasteditoruserid = users.id\nWHERE posts.title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.age > 65\nAND posts.score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT tags.excerptpostid, posts.body\nFROM tags\nJOIN posts ON tags.excerptpostid = posts.id\nWHERE tags.tagname = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.score)\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (COUNT(p.id) FILTER (WHERE p.score > 5 AND u.age > 65) / COUNT(p.id)) * 100 AS percentage\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.favoritecount\nFROM comments\nJOIN posts ON comments.postid = posts.id\nWHERE comments.userid = 3025\nAND comments.creationdate = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "308": "SELECT posts.title, posts.closeddate\nFROM comments\nJOIN posts ON comments.postid = posts.id\nWHERE comments.userid = 23853\nAND comments.creationdate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*)\nFROM posts\nWHERE ownerdisplayname = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT users.displayname\nFROM votes\nJOIN users ON votes.userid = users.id\nWHERE votes.id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(DISTINCT posts.id) / COUNT(DISTINCT votes.id) AS post_vote_ratio\nFROM posts\nJOIN votes ON posts.owneruserid = votes.userid\nWHERE posts.owneruserid = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT viewcount\nFROM posts\nWHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT text\nFROM comments\nWHERE score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT comments.userdisplayname\nFROM comments\nWHERE comments.text = 'thank you user93'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.displayname, users.reputation\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE posts.title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.displayname AS editor\nFROM posts\nJOIN users ON posts.lasteditoruserid = users.id\nWHERE posts.title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.text\nFROM comments\nJOIN postHistory ON comments.postid = postHistory.id\nJOIN posts ON postHistory.postid = posts.id\nWHERE posts.title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT users.displayname\nFROM users\nJOIN votes ON users.id = votes.userid\nJOIN posts ON posts.id = votes.postid\nWHERE votes.bountyamount = 50\nAND posts.title ILIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT posts.title, posts.body AS comment, AVG(posts.viewcount) AS average_view_count\nFROM posts\nWHERE posts.tags LIKE '%humor%'\nGROUP BY posts.title, posts.body\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(userid) \nFROM badges \nGROUP BY userid \nHAVING COUNT(name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT u.id, u.displayname\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nWHERE p.viewcount >= 1000\nGROUP BY u.id, u.displayname\nHAVING COUNT(p.id) = 1\t----- bird -----\tcodebase_community",
    "322": "SELECT ((COUNT(CASE WHEN EXTRACT(YEAR FROM date) = 2010 AND name = 'Student' THEN 1 END) / COUNT(name)) * 100) - ((COUNT(CASE WHEN EXTRACT(YEAR FROM date) = 2011 AND name = 'Student' THEN 1 END) / COUNT(name)) * 100) AS percentage_difference\nFROM badges\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(upvotes) AS average_upvotes, AVG(age) AS average_age\nFROM users\nWHERE id IN (SELECT owneruserid\n             FROM posts\n             GROUP BY owneruserid\n             HAVING COUNT(id) > 10)\t----- bird -----\tcodebase_community",
    "324": "SELECT DIVIDE(\n    COUNT(id) FILTER (WHERE EXTRACT(YEAR FROM creationdate) = 2010),\n    COUNT(id) FILTER (WHERE EXTRACT(YEAR FROM creationdate) = 2011)\n) AS vote_ratio\nFROM votes\t----- bird -----\tcodebase_community",
    "325": "SELECT posts.id\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'slashnick'\nORDER BY posts.answercount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(SUM(viewcount)) AS popularity\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'Harvey Motulsky' OR users.displayname = 'Noah Snyder'\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.tagname\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nJOIN tags ON posts.tags LIKE '%' || tags.tagname || '%'\nWHERE users.displayname = 'Mark Meckes'\nAND posts.commentcount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (tags.tagname) as tagname, \n       COUNT(posts.id) as post_count,\n       (SELECT COUNT(posts.id) FROM posts WHERE posts.ownerdisplayname = 'Community' AND tags.tagname = 'r') as r_post_count,\n       (SELECT COUNT(posts.id) FROM posts WHERE posts.ownerdisplayname = 'Community') as total_post_count,\n       (SELECT COUNT(posts.id) FROM posts WHERE posts.ownerdisplayname = 'Community' AND tags.tagname = 'r') / (SELECT COUNT(posts.id) FROM posts WHERE posts.ownerdisplayname = 'Community') as percentage\nFROM posts\nLEFT JOIN tags ON posts.id = tags.id\nWHERE posts.ownerdisplayname = 'Community'\nGROUP BY tags.tagname\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(CASE WHEN ownerdisplayname = 'Mornington' THEN viewcount ELSE 0 END) - \nSUM(CASE WHEN ownerdisplayname = 'Amos' THEN viewcount ELSE 0 END) AS viewcount_difference\nFROM posts\t----- bird -----\tcodebase_community",
    "330": "SELECT EXTRACT(MONTH FROM creationdate) AS month,\n       COUNT(id) AS num_links\nFROM postLinks\nWHERE EXTRACT(YEAR FROM creationdate) = 2010\nAND postid IN (SELECT id FROM posts WHERE answercount <= 2)\nGROUP BY month\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(creationdate) AS first_vote_date\nFROM votes\nJOIN users ON votes.userid = users.id\nWHERE users.displayname = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT users.displayname\nFROM badges\nJOIN users ON badges.userid = users.id\nWHERE badges.name = 'Autobiographer'\nORDER BY badges.date\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.id)\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nWHERE u.location = 'United Kingdom'\nAND p.favoritecount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT p.id, p.title\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'Harvey Motulsky'\nORDER BY p.viewcount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT \n    id,\n    ownerdisplayname\nFROM posts\nWHERE favoritecount = (SELECT MAX(favoritecount) FROM posts WHERE EXTRACT(YEAR FROM creationdate) = 2010)\t----- bird -----\tcodebase_community",
    "336": "SELECT DIVIDE(COUNT(id) FILTER (WHERE EXTRACT(YEAR FROM creationdate) = 2011 AND owneruserid IN (SELECT id FROM users WHERE reputation > 1000)), COUNT(id)) * 100 AS percentage\nFROM posts\t----- bird -----\tcodebase_community",
    "337": "SELECT posts.viewcount AS \"Total Views\",\n       users.displayname AS \"Last User\"\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE posts.title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE postid = (SELECT id \n                FROM posts \n                WHERE score = (SELECT MAX(score) \n                               FROM posts))\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.text, users.displayname\nFROM comments\nJOIN posts ON comments.postid = posts.id\nJOIN users ON comments.userid = users.id\nWHERE posts.title = 'Analysing wind data with R'\nORDER BY comments.creationdate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    DIVIDE(\n        COUNT(posts.id) FILTER (WHERE posts.score > 50) AND MAX(users.reputation),\n        COUNT(posts.id) FILTER (WHERE MAX(users.reputation))\n    ) AS percentage\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.reputation = (SELECT MAX(reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT excerptpostid, wikipostid\nFROM tags\nWHERE tagname = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.reputation, users.upvotes\nFROM users\nJOIN comments ON users.id = comments.userid\nWHERE comments.text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT posts.id, comments.text, MAX(comments.score) AS highest_comment_score\nFROM posts\nJOIN comments ON posts.id = comments.postid\nWHERE posts.viewcount BETWEEN 100 AND 150\nGROUP BY posts.id, comments.text\nORDER BY highest_comment_score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*)\nFROM posts\nJOIN comments ON posts.id = comments.postid\nWHERE posts.commentcount = 1\nAND comments.score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT DIVIDE(COUNT(userid) WHERE upvotes = 0 AND score BETWEEN 5 AND 10) * 100, COUNT(userid WHERE score BETWEEN 5 AND 10) \nFROM comments\t----- bird -----\tcodebase_community",
    "346": "SELECT cards.id, cards.name\nFROM cards\nWHERE cards.cardkingdomfoilid IS NOT NULL\nAND cards.cardkingdomid IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT cards.name\nFROM cards\nWHERE cards.bordercolor = 'borderless' \nAND cards.cardkingdomfoilid IS NULL \nAND cards.cardkingdomid IS NOT NULL\t----- bird -----\tcard_games",
    "348": "SELECT cards.name\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.format = 'gladiator' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT \nlegalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power = '*' OR cards.power IS NULL)\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, cards.name, cards.artist, rulings.text, cards.hascontentwarning\nFROM cards\nJOIN rulings ON cards.id = rulings.id\nWHERE cards.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.ispromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.name, cards.artist, cards.ispromo\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT (language, COUNT(id) * 100.0 / (SELECT COUNT(id) FROM foreign_data) AS percentage\nFROM foreign_data\nWHERE language = 'Chinese Simplified'\nGROUP BY language\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*)\nFROM cards\nWHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT cards.bordercolor\nFROM cards\nWHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT ((COUNT(id) FILTER (WHERE bordercolor = 'borderless'))::NUMERIC / COUNT(id)) * 100 AS percentage\nFROM cards\t----- bird -----\tcard_games",
    "358": "SELECT ROUND((COUNT(id) WHERE language = 'French' AND isStorySpotlight = 1) / COUNT(id) WHERE isStorySpotlight = 1)*100 AS percentage\nFROM foreign_data\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)\nFROM cards\nWHERE originaltype = 'Summon - Angel'\nAND NOT subtypes LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id\nFROM cards\nWHERE dueldeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND cards.bordercolor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.originaltype = 'Artifact' AND cards.colors = 'B' AND foreign_data.language IS NOT NULL\t----- bird -----\tcard_games",
    "363": "SELECT cards.manacost\nFROM cards\nWHERE cards.layout = 'normal'\nAND cards.frameversion = '2003'\nAND cards.bordercolor = 'black'\nAND cards.availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT cards.id\nFROM cards\nWHERE cards.isstoryspotlight = 1\nAND cards.istextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nJOIN sets ON set_translations.setcode = sets.code \nWHERE sets.block = 'Commander' \nAND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT foreign_data.type\nFROM foreign_data\nWHERE foreign_data.language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*')\nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(cards.id)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE legalities.format = 'premodern'\nAND rulings.text = 'This is a triggered mana ability.'\nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT cards.asciiname\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.type = 'Creature'\nAND cards.layout = 'normal'\nAND cards.bordercolor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\nAND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setcode\nWHERE sets.block = 'Ravnica' AND sets.basesetsize = 180\t----- bird -----\tcard_games",
    "371": "SELECT \n(DIVIDE(COUNT(cards.id), COUNT(cards.id)) * 100) AS percentage\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'commander' AND legalities.status = 'legal'\nAND cards.hascontentwarning = 0\t----- bird -----\tcard_games",
    "372": "SELECT ROUND((COUNT(*) FILTER (WHERE language = 'French' AND (power IS NULL OR power = '*'))::NUMERIC / COUNT(*) FILTER (WHERE power IS NULL OR power = '*')) * 100, 2) AS percentage\nFROM cards\t----- bird -----\tcard_games",
    "373": "SELECT foreign_data.language\nFROM foreign_data\nWHERE foreign_data.multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT DIVIDE(COUNT(CASE WHEN istextless = 1 AND layout = 'normal' THEN 1 ELSE NULL END), COUNT(istextless))*100\nFROM cards\t----- bird -----\tcard_games",
    "375": "SELECT language\nFROM set_translations\nWHERE setcode = 'ARC' AND mcmname = 'Archenemy'\t----- bird -----\tcard_games",
    "376": "SELECT foreign_data.language\nFROM foreign_data\nJOIN cards ON foreign_data.id = cards.id\nWHERE cards.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT \n    CASE\n        WHEN (SELECT convertedmanacost FROM cards WHERE name = 'Serra Angel') > (SELECT convertedmanacost FROM cards WHERE name = 'Shrine Keeper') THEN 'Serra Angel'\n        ELSE 'Shrine Keeper'\n    END AS \"More Expensive Card\"\t----- bird -----\tcard_games",
    "378": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setcode = sets.code\nJOIN cards ON cards.setcode = sets.code\nWHERE cards.name = 'Ancestor''s Chosen'\nAND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT \n    EXISTS (SELECT * FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Korean') AS korean_version_exists\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nWHERE id IN (SELECT id FROM sets WHERE name = 'Hauptset Zehnte Edition')\nAND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT st.language, st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setcode\nWHERE s.name = 'Eighth Edition' AND st.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name, sets.mtgoCode\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nWHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) \nFROM sets \nINNER JOIN set_translations ON sets.code = set_translations.setcode \nWHERE sets.block = 'Ice Age' \nAND set_translations.language = 'Italian' \nAND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.name, sets.isforeignonly\nFROM sets\nJOIN cards ON sets.code = cards.setcode\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT sets.name\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setcode\nWHERE set_translations.language = 'Italian' AND sets.basesetsize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist\nFROM cards\nWHERE setcode = 'CSP'\nAND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nWHERE setcode = 'CSP'\nAND convertedmanacost > 5\nAND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT foreign_data.flavortext\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT foreign_data.text\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT \n    foreign_data.name AS italian_name\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.convertedmanacost = (SELECT MAX(convertedmanacost) FROM cards)\nAND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "391": "SELECT \n    DIVIDE(SUM(CASE WHEN cards.convertedmanacost = 7 THEN 1 ELSE 0 END), SUM(cards.convertedmanacost))*100 AS percentage\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT \n(DIVIDE(SUM(cards.cardkingdomfoilid IS NOT NULL AND cards.cardkingdomid IS NOT NULL), SUM(cards.name = 'Coldsnap')) * 100) AS percentage_of_incredibly_powerful_cards\nFROM cards\nWHERE cards.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT legalities.format, COUNT(legalities.status) AS banned_count\nFROM legalities\nWHERE legalities.status = 'Banned'\nGROUP BY legalities.format\nORDER BY banned_count DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND legalities.format = 'Commander'\nORDER BY cards.edhrecrank\nLIMIT 10\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name\nFROM sets\nLEFT JOIN set_translations ON sets.code = set_translations.setcode\nWHERE set_translations.language NOT LIKE '%Japanese%' AND set_translations.language = 'Korean'\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameversion\nFROM cards\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN b.bond_type = '-' AND a.element = 'o' THEN 1 ELSE 0 END) AS avg_oxygen_atoms\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN m.label = '+' AND b.bond_type = '-' THEN 1 ELSE 0 END) AS average_single_bonded_carcinogenic_molecules\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT DIVIDE(SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END), COUNT(DISTINCT a.molecule_id))\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label, COUNT(label) \nFROM atom \nWHERE element = 'h' \nGROUP BY label \nORDER BY COUNT(label) DESC \nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY COUNT(element)\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT DIVIDE(COUNT(DISTINCT molecule_id) - COUNT(DISTINCT molecule_id) FILTER(WHERE element = 'f' AND label = '+') * 100, COUNT(DISTINCT molecule_id)) as percentage\nFROM molecule\nLEFT JOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT m.molecule_id, \n       COUNT(DISTINCT b.bond_id) AS total_bonds,\n       SUM(CASE WHEN b.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT DIVIDE(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END), COUNT(bond_id)) * 100.0 AS percent\nFROM bond\nWHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(molecule_id)) * 100 AS percent\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(atom_id)) as percent\nFROM atom\nWHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT molecule.label, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-'\nAND m.label = '-'\nGROUP BY m.molecule_id\nORDER BY m.molecule_id\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(bond_id) \nFROM connected \nWHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.atom_id LIKE '%21' OR a.atom_id LIKE '%22' OR a.atom_id LIKE '%23' OR a.atom_id LIKE '%24' OR a.atom_id LIKE '%25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT bond.bond_id\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id\nWHERE (atom.element = 'p' OR atom.element = 'n') AND (atom2.element = 'p' OR atom2.element = 'n')\t----- bird -----\ttoxicology",
    "424": "SELECT m.molecule_id, COUNT(b.bond_id) AS double_bonds\nFROM molecule m\nLEFT JOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY double_bonds DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(COUNT(bond_id) / COUNT(atom_id))\nFROM atom\nWHERE element = 'i'\t----- bird -----\ttoxicology",
    "426": "SELECT element\nFROM atom\nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.atom_id\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT DIVIDE(SUM(CASE WHEN bond.bond_type = '-' AND molecule.label = '+' THEN 1 ELSE 0 END) * 100, COUNT(bond.bond_id)) AS proportion\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a.element = 'p' OR a.element = 'br') AND b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT \n    DIVIDE(SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END), COUNT(*)) as percent\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT DIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(DISTINCT molecule_id))\nFROM molecule\nWHERE label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE molecule.label = '+'\nAND substr(atom.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT molecule_id, \n       SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(element) AS hydrogen_ratio,\n       label\nFROM   molecule\nJOIN   atom ON molecule.molecule_id = atom.molecule_id\nWHERE  molecule.molecule_id = 'TR006'\nGROUP BY molecule.molecule_id, label\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(DISTINCT a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores s\nJOIN schools sc ON s.cds = sc.cdscode\nWHERE s.avgscrmath > 400\nAND sc.virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT schools.cdscode\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE (frpm.\"Enrollment (K-12)\" + frpm.\"Enrollment (Ages 5-17)\") > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT schools.school, frpm.`Percent (%) Eligible Free (Ages 5-17)`\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nJOIN frpm ON frpm.cdscode = schools.cdscode\nWHERE satscores.numtsttakr > 0\nAND satscores.numge1500 / satscores.numtsttakr > 0.3\nORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "441": "SELECT satscores.sname, satscores.avgscrwrite, frpm.\"Charter School Number\"\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.cdscode\nWHERE satscores.avgscrwrite > 499\nORDER BY satscores.avgscrwrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.school, schools.street\nFROM schools\nWHERE (schools.\"Enrollment (K-12)\" - schools.\"Enrollment (Ages 5-17)\") > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT schools.school\nFROM frpm\nJOIN satscores ON frpm.cdscode = satscores.cds\nJOIN schools ON frpm.cdscode = schools.cdscode\nWHERE frpm.`Percent (%) Eligible Free (K-12)` / frpm.`Enrollment (K-12)` > 0.1\nAND satscores.numge1500 >= 1\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.school, schools.fundingtype\nFROM schools\nJOIN satscores ON schools.cdscode = satscores.cds\nWHERE satscores.avgscrmath > 400\nAND schools.county = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.school, schools.street, schools.city, schools.state, schools.zip\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.gsoffered LIKE '%12%' \nAND frpm.`Percent (%) Eligible FRPM (Ages 5-17)` > 800 \nAND schools.county = 'Monterey'\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.sname, s.avgscrwrite, s.phone\nFROM satscores s\nJOIN schools sc ON s.cds = sc.cdscode\nWHERE (sc.opendate > '1991-01-01' OR sc.closeddate < '2000-01-01')\nAND s.avgscrwrite IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "447": "SELECT schools.school, schools.doctype\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.fundingtype = 'locally funded'\nAND (frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\") > \n(SELECT AVG(frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\") FROM frpm\nJOIN schools ON schools.cdscode = frpm.cdscode\nWHERE schools.fundingtype = 'locally funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT s.school, \n       s.enrollment, \n       f.\"Free Meal Count (K-12)\", \n       f.\"Enrollment (K-12)\", \n       f.\"Percent (%) Eligible Free (K-12)\"\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.statustype = 'Active'\nORDER BY s.enrollment DESC\nLIMIT 11\t----- bird -----\tcalifornia_schools",
    "449": "SELECT s.school, \n       (s.\"FRPM Count (K-12)\" / s.\"Enrollment (K-12)\") AS \"Eligible Free or Reduced Price Meal Rate\"\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE f.\"Charter School (Y/N)\" = 66\nAND s.gsoffered = '1-12'\nORDER BY s.\"FRPM Count (K-12)\" DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.street, schools.city, schools.zip, schools.state\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nORDER BY satscores.numge1500 / satscores.numtsttakr\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT schools.school, satscores.numge1500, schools.admfname1, schools.admlname1, schools.admfname2, schools.admlname2, schools.admfname3, schools.admlname3\nFROM schools\nJOIN satscores ON schools.cdscode = satscores.cds\nWHERE satscores.numge1500 = (SELECT MAX(numge1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(numtsttakr)\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE schools.city = 'Fresno' \nAND schools.opendate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE satscores.avgscrread = (SELECT MIN(avgscrread) FROM satscores WHERE dname = 'Fresno Unified')\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.sname\nFROM satscores s\nJOIN schools sch ON s.cds = sch.cdscode\nWHERE sch.virtual = 'F'\nAND s.avgscrread IN (\n    SELECT DISTINCT avgscrread\n    FROM satscores\n    ORDER BY avgscrread DESC\n    LIMIT 5\n)\nORDER BY s.avgscrread DESC\t----- bird -----\tcalifornia_schools",
    "455": "SELECT schools.school, satscores.avgscrwrite\nFROM schools\nJOIN satscores ON schools.cdscode = satscores.cds\nWHERE schools.admfname1 = 'Ricci' AND schools.admlname1 = 'Ulrich'\t----- bird -----\tcalifornia_schools",
    "456": "SELECT schools.school, schools.enrollment\nFROM schools\nWHERE schools.doctype = '31' AND schools.gsoffered = 'K-12'\nORDER BY schools.enrollment DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(school)\nFROM schools\nWHERE county = 'Alameda' \nAND doc = '52'\nAND EXTRACT(YEAR FROM opendate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT COUNT(*) \nFROM schools \nWHERE county = 'Orange' \nAND (doc = '54' OR doc = '52')\t----- bird -----\tcalifornia_schools",
    "459": "SELECT schools.\"street\", schools.\"school\"\nFROM satscores\nJOIN schools ON satscores.\"cds\" = schools.\"cdscode\"\nORDER BY satscores.\"avgscrmath\" DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.charter = 0\nAND s.county = 'Los Angeles'\nAND f.\"Percent (%) Eligible Free (K-12)\" < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(\"Enrollment (Ages 5-17)\") \nFROM frpm \nWHERE \"School Name\" = 'State Special School' \nAND \"District Name\" = 'Fremont' \nAND \"Academic Year\" = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.school, frpm.\"Percent (%) Eligible FRPM (Ages 5-17\"\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.\"School Code\"\nWHERE schools.county = 'Los Angeles' \nAND schools.gsserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT COUNT(*) AS num_virtual_schools, county\nFROM schools\nWHERE virtual = 'F'\nAND county IN ('San Diego', 'Santa Barbara')\nGROUP BY county\nORDER BY num_virtual_schools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT schools.gsoffered\nFROM schools\nWHERE schools.longitude = (SELECT MAX(ABS(longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT schools.school, schools.city, COUNT(schools.school) AS num_schools\nFROM schools\nWHERE schools.gsoffered = 'K-8' AND schools.magnet = 1\nGROUP BY schools.city\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.\"Percent (%) Eligible Free (K-12)\", frpm.\"District Code\"\nFROM frpm\nJOIN schools ON frpm.\"cdscode\" = schools.\"cdscode\"\nWHERE schools.\"admfname1\" = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT schools.admemail1, schools.admemail2, schools.admemail3\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE frpm.`County Name` = 'San Bernardino' \nAND frpm.`District Name` = 'San Bernardino City Unified' \nAND schools.opendate BETWEEN '1/1/2009' AND '12/31/2010' \nAND (schools.soctype = '62' OR schools.doctype = '54')\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.a3 = 'East Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id)\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN account a ON c.district_id = a.district_id\nWHERE c.gender = 'F' \nAND d.a11 > 6000 \nAND d.a11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(client.client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M'\nAND district.a3 = 'North Bohemia'\nAND district.a11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id\nFROM client\nJOIN account ON client.client_id = account.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.a11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account_id\nFROM client\nJOIN account ON client.client_id = account.client_id\nORDER BY client.birth_date DESC, district.a11 DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT account_id, MIN(amount) \nFROM loan \nWHERE date >= '1997-01-01' AND date <= '1997-12-31' \nGROUP BY account_id \nHAVING MIN(amount) = \n(SELECT MIN(amount) \nFROM loan \nWHERE date >= '1997-01-01' AND date <= '1997-12-31') \nAND frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "474": "SELECT account_id, MAX(amount) AS highest_approved_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE duration > 12\nAND date >= '1993-01-01' AND date < '1994-01-01'\nGROUP BY account_id\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(client.client_id) \nFROM client \nJOIN district ON client.district_id = district.district_id \nJOIN account ON client.client_id = account.client_id \nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.a2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT d.a2\nFROM client c\nJOIN account a ON c.client_id = a.client_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT ((SELECT COUNT(c.client_id) FROM client c \nJOIN district d ON c.district_id = d.district_id \nWHERE d.a3 = 'south Bohemia' AND d.a4 = (SELECT MAX(a4) FROM district WHERE a3 = 'south Bohemia') AND c.gender = 'M') / \n(SELECT COUNT(c.client_id) FROM client c \nJOIN district d ON c.district_id = d.district_id \nWHERE d.a3 = 'south Bohemia' AND d.a4 = (SELECT MAX(a4) FROM district WHERE a3 = 'south Bohemia'))) * 100 as percentage_male_clients\t----- bird -----\tfinancial",
    "478": "SELECT c.client_id, \n       ((t1.balance - t2.balance) / t2.balance) * 100 AS increase_rate\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t1 ON a.account_id = t1.account_id\nJOIN trans t2 ON a.account_id = t2.account_id\nWHERE t1.date = '1998-12-27' \nAND t2.date = '1993-03-22'\nAND EXISTS (SELECT 1 FROM loan l WHERE l.account_id = a.account_id AND l.date = '1993-07-05' AND l.status = 'approved')\t----- bird -----\tfinancial",
    "479": "SELECT ((SUM(amount) FILTER (WHERE status = 'A')) / SUM(amount)) * 100 AS percentage_of_fully_paid_loans\nFROM loan\t----- bird -----\tfinancial",
    "480": "SELECT \n    (COUNT(*) FILTER (WHERE status = 'C' AND amount < 100000) / COUNT(*) FILTER (WHERE amount < 100000)) * 100\nFROM loan\t----- bird -----\tfinancial",
    "481": "SELECT d.district_id, \n    ((d.a13 - d.a12) / d.a12) * 100 AS unemployment_rate_increment\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nJOIN client c ON a.district_id = c.district_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.a2 AS district_name, COUNT(c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.a2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND l.amount >= 250000\nAND a.frequency = 'POPLATEK MESICNE'\nAND l.status = 'approved'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) \nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE d.district_id = 1\nAND l.status = 'C'\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.a15 = (SELECT MAX(a15) FROM district WHERE a15 < (SELECT MAX(a15) FROM district))\t----- bird -----\tfinancial",
    "486": "SELECT d.a2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.a2\nORDER BY total_withdrawals DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(account_id)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE district_id = 1\nAND status = 'C'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client_id) AS male_clients\nFROM client\nWHERE district_id = (\n    SELECT district_id\n    FROM (\n        SELECT district_id, ROW_NUMBER() OVER (ORDER BY a15 DESC) AS rn\n        FROM district\n    ) sub\n    WHERE rn = 2\n) AND gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN card ON disp.disp_id = card.disp_id\nJOIN trans ON account.account_id = trans.account_id\nWHERE card.type = 'credit' \nAND trans.date >= '1998-01-01' \nAND trans.date <= '1998-12-31'\nAND trans.amount < (SELECT AVG(amount) FROM trans WHERE date >= '1998-01-01' AND date <= '1998-12-31' AND type = 'credit')\nGROUP BY account.account_id\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT type\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.a11 > 8000 AND district.a11 <= 9000\nAND type != 'OWNER'\t----- bird -----\tfinancial",
    "491": "SELECT AVG(district.a15) AS average_crimes\nFROM district\nJOIN account ON district.district_id = account.district_id\nWHERE district.a15 > 4000\nAND EXTRACT(YEAR FROM account.date) >= 1997\t----- bird -----\tfinancial",
    "492": "SELECT trans.trans_id, trans.date, trans.amount\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.client_id = 3356\nAND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT \n    COUNT(c.client_id) FILTER (WHERE c.gender = 'F') / COUNT(c.client_id) * 100 AS percentage_of_women\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE d.a11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT \n    (SUM(l.amount) FILTER (WHERE EXTRACT(YEAR FROM l.date) = 1997) - SUM(l.amount) FILTER (WHERE EXTRACT(YEAR FROM l.date) = 1996)) / SUM(l.amount) FILTER (WHERE EXTRACT(YEAR FROM l.date) = 1996) * 100 AS growth_rate\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.client_id = c.client_id\nWHERE c.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT account_id, COUNT(*) AS statement_request_frequency\nFROM trans\nWHERE account_id = 3\nAND operation = 'statement'\nGROUP BY account_id\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE' THEN 1 END) / COUNT(CASE WHEN a.frequency = 'POPLATEK TYDNE' THEN 1 END)) * 100 AS percentage_of_male_clients\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\t----- bird -----\tfinancial",
    "497": "SELECT account_id\nFROM client\nJOIN account ON client.client_id = account.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'F'\nORDER BY birth_date ASC, a11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) \nFROM loan \nWHERE status = 'C' \nAND account_id IN \n    (SELECT account_id \n     FROM trans \n     WHERE k_symbol = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, \n    EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM c.birth_date) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER'\t----- bird -----\tfinancial"
}