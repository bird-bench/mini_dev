{
    "0": "SELECT \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio_EUR_to_CZK\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) AS LeastConsumption\nFROM yearmonth\nWHERE Date BETWEEN '201201' AND '201212'\nGROUP BY CustomerID\nORDER BY LeastConsumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND SUBSTR(Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    (SELECT SUM(Consumption) \n     FROM yearmonth \n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE customers.Currency = 'CZK' AND SUBSTR(Date, 1, 4) = '2012') \n    -\n    (SELECT SUM(Consumption) \n     FROM yearmonth \n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE customers.Currency = 'EUR' AND SUBSTR(Date, 1, 4) = '2012') \n    AS DifferenceInConsumption\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT substr(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'CZK'\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date, MAX(Consumption) AS PeakConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND SUBSTR(Date, 1, 4) = '2013'\nGROUP BY SUBSTR(Date, 5, 2)\nORDER BY PeakConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SME_avg - LAM_avg) AS Difference_SME_LAM,\n    (LAM_avg - KAM_avg) AS Difference_LAM_KAM,\n    (KAM_avg - SME_avg) AS Difference_KAM_SME\nFROM\n(\n    SELECT\n        AVG(CASE WHEN c.Segment = 'SME' THEN ym.Consumption END) / COUNT(DISTINCT CASE WHEN c.Segment = 'SME' THEN c.CustomerID END) AS SME_avg,\n        AVG(CASE WHEN c.Segment = 'LAM' THEN ym.Consumption END) / COUNT(DISTINCT CASE WHEN c.Segment = 'LAM' THEN c.CustomerID END) AS LAM_avg,\n        AVG(CASE WHEN c.Segment = 'KAM' THEN ym.Consumption END) / COUNT(DISTINCT CASE WHEN c.Segment = 'KAM' THEN c.CustomerID END) AS KAM_avg\n    FROM yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE c.Currency = 'CZK'\n        AND SUBSTR(ym.Date, 1, 4) = '2013'\n)\t----- bird -----\tdebit_card_specializing",
    "7": "WITH ConsumptionData AS (\n    SELECT \n        c.Segment,\n        ym.Date,\n        ym.Consumption,\n        c.Currency\n    FROM \n        yearmonth ym\n    JOIN \n        customers c ON ym.CustomerID = c.CustomerID\n    WHERE \n        c.Segment IN ('SME', 'LAM', 'KAM') AND\n        c.Currency = 'EUR' AND\n        SUBSTR(ym.Date, 1, 4) IN ('2012', '2013')\n),\nYearlyConsumption AS (\n    SELECT \n        Segment,\n        SUBSTR(Date, 1, 4) AS Year,\n        SUM(Consumption) AS TotalConsumption\n    FROM \n        ConsumptionData\n    GROUP BY \n        Segment, Year\n),\nConsumptionIncrease AS (\n    SELECT \n        a.Segment,\n        a.TotalConsumption AS Consumption2013,\n        b.TotalConsumption AS Consumption2012,\n        (a.TotalConsumption - b.TotalConsumption) AS Increase,\n        ((a.TotalConsumption - b.TotalConsumption) / a.TotalConsumption) * 100 AS PercentageIncrease\n    FROM \n        YearlyConsumption a\n    JOIN \n        YearlyConsumption b ON a.Segment = b.Segment\n    WHERE \n        a.Year = '2013' AND b.Year = '2012'\n)\nSELECT \n    Segment,\n    MAX(PercentageIncrease) AS BiggestIncrease,\n    MIN(PercentageIncrease) AS LowestIncrease\nFROM \n    ConsumptionIncrease\nGROUP BY \n    Segment\nORDER BY \n    PercentageIncrease DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6 AND SUBSTR(Date, 1, 6) BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') -\n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS MoreDiscountStationsCZEvsSVK\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(DISTINCT CustomerID) \n     FROM customers \n     WHERE Currency = 'CZK' AND Segment = 'SME') \n    - \n    (SELECT COUNT(DISTINCT CustomerID) \n     FROM customers \n     WHERE Currency = 'EUR' AND Segment = 'SME') \n    AS MoreSMEsCZKThanEUR\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT \n    (COUNT(DISTINCT CASE WHEN y.Consumption > 46.73 THEN y.CustomerID END) * 100.0 / COUNT(DISTINCT y.CustomerID)) AS Percentage\nFROM \n    yearmonth y\nJOIN \n    customers c ON y.CustomerID = c.CustomerID\nWHERE \n    c.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE Date = '201202')) AS Percentage\nFROM \n    yearmonth\nWHERE \n    Date = '201202' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE substr(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT p.Description\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE ym.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE SUBSTR(t.Date, 1, 6) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT c.CustomerID)\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT Currency\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE Date = '2012-08-24' AND Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT Segment\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE'\nAND transactions_1k.Date = '2012-08-26'\nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT Country\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE Date = '2012-08-24' AND Price * Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(DISTINCT t.CustomerID) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR')) AS Percentage\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR' AND\n    t.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate\nFROM\n(\n    SELECT\n        ym2012.Consumption AS consumption_2012,\n        ym2013.Consumption AS consumption_2013\n    FROM\n        yearmonth ym2012\n    JOIN\n        yearmonth ym2013 ON ym2012.CustomerID = ym2013.CustomerID\n    JOIN\n        transactions_1k t ON t.CustomerID = ym2012.CustomerID\n    WHERE\n        t.Date = '2012-08-25' AND\n        t.Price * t.Amount = 634.8 AND\n        ym2012.Date LIKE '2012%' AND\n        ym2013.Date LIKE '2013%'\n)\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (COUNT(CASE WHEN c.Segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS PremiumPercentage\nFROM \n    customers c\nJOIN \n    gasstations g ON c.CustomerID = g.GasStationID\nWHERE \n    g.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Price * Amount) AS TotalSpent\nFROM transactions_1k\nWHERE CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    t.CustomerID, \n    AVG(t.Price / t.Amount) AS AvgPricePerItem, \n    c.Currency\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nGROUP BY \n    t.CustomerID\nORDER BY \n    SUM(t.Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.CustomerID, ym.Consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE t.ProductID = 5\nAND (t.Price / t.Amount) > 29.00\nAND ym.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE event.event_name = 'Women's Soccer'\nAND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id) AS meeting_count\nFROM event\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM attendance\n    GROUP BY link_to_event\n    HAVING COUNT(link_to_member) > 10\n)\nAND type = 'Meeting'\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 20 AND e.type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS total_funds_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "```SQLite\nSELECT first_name || ' ' || last_name AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.approved\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen'\nAND (SUBSTR(e.expense_date, 6, 2) = '09' OR SUBSTR(e.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SELECT SUM(spent) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE SUBSTR(event.event_date, 1, 4) = '2019') -\n    (SELECT SUM(spent) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE SUBSTR(event.event_date, 1, 4) = '2020') AS difference_in_spending\t----- bird -----\tstudent_club",
    "39": "```SQLite\nSELECT notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\n```\t----- bird -----\tstudent_club",
    "40": "```SQLite\nSELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT b.event_status\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nWHERE e.expense_description = 'Post Cards, Posters' AND e.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "```SQLite\nSELECT department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE position = 'President'\t----- bird -----\tstudent_club",
    "45": "```SQLite\nSELECT date_received \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT COUNT(*) AS times_more\nFROM (\n    SELECT \n        SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) AS yearly_kickoff_total,\n        SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS october_meeting_total\n    FROM budget b\n    JOIN event e ON b.link_to_event = e.event_id\n    WHERE b.category = 'Advertisement'\n) AS totals\nWHERE totals.yearly_kickoff_total > totals.october_meeting_total\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) AS attendees_count\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT first_name, last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name, MAX(budget.spent / budget.amount) AS spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nGROUP BY event.event_id\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_for_food\nFROM budget\nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_member\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nORDER BY cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT \n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS yearly_kickoff_percentage\nFROM \n    expense ex\nJOIN \n    budget b ON ex.link_to_budget = b.budget_id\nJOIN \n    event e ON b.link_to_event = e.event_id\t----- bird -----\tstudent_club",
    "59": "SELECT source\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nORDER BY amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS(\n    SELECT 1\n    FROM attendance a\n    JOIN member m ON a.link_to_member = m.member_id\n    JOIN event e ON a.link_to_event = e.event_id\n    WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer'\n) as attended\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "```SQLite\nSELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "```SQLite\nSELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE first_name = 'Sacha' AND last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "```SQLite\nSELECT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT \n    (CAST(COUNT(CASE WHEN i.amount = 50 THEN 1 END) AS REAL) / COUNT(DISTINCT m.member_id)) * 100 AS percentage\nFROM \n    member m\nJOIN \n    income i ON m.member_id = i.link_to_member\nWHERE \n    m.t_shirt_size = 'Medium' \n    AND m.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense)\nGROUP BY m.member_id, m.first_name, m.last_name, m.phone\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name || ' ' || member.last_name AS full_name, expense.cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT \n    CASE \n        WHEN in_patient_count > out_patient_count THEN 'More in-patients'\n        WHEN out_patient_count > in_patient_count THEN 'More out-patients'\n        ELSE 'Equal in-patients and out-patients'\n    END AS patient_type,\n    ABS((in_patient_count - out_patient_count) * 100.0 / GREATEST(in_patient_count, out_patient_count)) AS deviation_percentage\nFROM (\n    SELECT \n        SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS in_patient_count,\n        SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS out_patient_count\n    FROM Patient\n    WHERE SEX = 'M'\n)\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT \n    (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) * 100 AS Percentage\nFROM \n    Patient\nWHERE \n    SEX = 'F' AND strftime('%Y', Birthday) > '1930'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS Outpatient_Inpatient_Ratio\nFROM Patient\nWHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Diagnosis FROM Patient WHERE ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND strftime('%Y', Description) = '1997' \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Examination.Thrombosis = 1 \nAND Patient.SEX = 'F' \nAND strftime('%Y', Examination.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Symptoms, Diagnosis FROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Symptoms IS NOT NULL\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Date, (strftime('%Y', Patient.`First Date`) - strftime('%Y', Patient.Birthday)) AS Age\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS Male_Abnormal_UA,\n    SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS Female_Abnormal_UA,\n    CAST(SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS Male_to_Female_Ratio\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE (SEX = 'M' AND UA <= 8.0) OR (SEX = 'F' AND UA <= 6.5)\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.ID) AS UnderagePatients\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE strftime('%Y', Patient.Birthday) > strftime('%Y', '1990-01-01') - 18\nAND strftime('%Y', Examination.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    strftime('%Y', Examination.`Examination Date`) - strftime('%Y', Patient.Birthday) AS Age,\n    Patient.Diagnosis\nFROM \n    Laboratory\nJOIN \n    Patient ON Laboratory.ID = Patient.ID\nJOIN \n    Examination ON Laboratory.ID = Examination.ID\nWHERE \n    Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory)\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM`\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) AS Cholesterol_Decrease\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*)\nFROM Examination\nWHERE Thrombosis = 2\nAND `ANA Pattern` = 'S'\nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-' AND Laboratory.Date LIKE '1991-10%' AND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "```SQLite\nSELECT AVG(L.ALB)\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE'\n```\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS Percentage_Women\nFROM Patient\nWHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n           WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n           WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n           ELSE 'No'\n       END AS `Uric Acid Normal`\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT Patient.ID) AS Patient_IDs\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE `T-BIL` >= 2.0\nGROUP BY SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR('now') - YEAR(Birthday)) AS AverageAge\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'M' AND `T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE strftime('%Y', Patient.Birthday) BETWEEN '1936' AND '1956'\nAND Patient.SEX = 'M'\nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS Age, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.HCT >= 52\nGROUP BY Patient.ID\nHAVING COUNT(Patient.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT < 100) AS LowerThanNormal,\n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT > 400) AS HigherThanNormal,\n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT < 100) - (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT > 400) AS Comparison\nFROM Laboratory\nWHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE strftime('%Y', l.Date) = '1984'\nAND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 50\nAND l.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "```SQLite\nSELECT \n    (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS Percentage_Female_Abnormal_PT\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    (strftime('%Y', 'now') - strftime('%Y', Birthday)) > 55\n    AND PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND (Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0) AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.IGG > 900 AND l.IGG < 2000 AND e.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500\nAND strftime('%Y', Patient.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE IGM <= 40 OR IGM >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRP = '+' AND Patient.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP IN ('-', '+-') AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SM IN ('-', '+-') AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.SC170 IN ('negative', '0')\nAND Patient.SEX = 'F'\nAND Examination.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.CENTROMEA IN ('-', '+-') AND l.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(Birthday) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE season = '2015/2016' \nGROUP BY League.id \nORDER BY SUM(home_team_goal + away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010'\nGROUP BY Match.away_team_api_id\nHAVING SUM(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 ELSE 0 END) = (\n    SELECT MAX(wins)\n    FROM (\n        SELECT SUM(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 ELSE 0 END) as wins\n        FROM Match\n        JOIN League ON Match.league_id = League.id\n        WHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010'\n        GROUP BY Match.away_team_api_id\n    )\n)\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_long_name, buildUpPlaySpeed\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal \nGROUP BY League.id \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT player_name, (strftime('%Y', 'now') - strftime('%Y', birthday)) AS age\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE sprint_speed >= 97\nAND strftime('%Y', date) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.league_id) AS total_matches\nFROM Match\nJOIN League ON Match.league_id = League.id\nGROUP BY Match.league_id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT Team.team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE strftime('%Y', Team_Attributes.date) = '2012'\nAND Team_Attributes.buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE buildUpPlayPassing IS NOT NULL\n    AND strftime('%Y', date) = '2012'\n)\t----- bird -----\teuropean_football_2",
    "136": "SELECT \n    (COUNT(CASE WHEN preferred_foot = 'left' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_left_foot\nFROM \n    Player\nWHERE \n    strftime('%Y', birthday) BETWEEN '1987' AND '1992'\n    AND player_fifa_api_id IN (SELECT player_fifa_api_id FROM Player_Attributes WHERE preferred_foot = 'left')\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.season = '2009/2010' \nGROUP BY League.id \nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name\nFROM Player\nWHERE substr(birthday, 1, 7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN Country ON Match.country_id = Country.id\nWHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT \n    MAX(average_finishing) AS highest_average_finishing_rate,\n    player_name\nFROM (\n    SELECT \n        AVG(PA.finishing) AS average_finishing,\n        P.player_name\n    FROM \n        Player_Attributes PA\n    JOIN \n        Player P ON PA.player_api_id = P.player_api_id\n    WHERE \n        P.height = (SELECT MAX(height) FROM Player)\n        OR P.height = (SELECT MIN(height) FROM Player)\n    GROUP BY \n        P.player_api_id\n)\nGROUP BY \n    player_name\nORDER BY \n    highest_average_finishing_rate DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player t1\nJOIN Player_Attributes t2 ON t1.player_api_id = t2.player_api_id\nWHERE t1.height > 170\nAND strftime('%Y', t2.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    AVG(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control ELSE NULL END) AS avg_ball_control_abdou,\n    AVG(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control ELSE NULL END) AS avg_ball_control_aaron,\n    (AVG(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control ELSE NULL END) - AVG(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control ELSE NULL END)) AS difference\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye')\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, MAX(height) AS tallest_height\nFROM Player\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id)\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE strftime('%Y', Player.birthday) < '1986' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE volleys > 70 AND dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM `Match`\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.season = '2008/2009' \nGROUP BY League.name \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk') ORDER BY date DESC LIMIT 1) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1)) * 100.0 / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1) AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing, ta.chanceCreationPassingClass\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) AS first_highest_crossing_date\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Kevin Constant'\nAND Player_Attributes.crossing = (\n    SELECT MAX(crossing)\n    FROM Player_Attributes\n    JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\n    WHERE Player.player_name = 'Kevin Constant'\n)\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT defenceAggressionClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nWHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Marko Arnautovic'\nAND SUBSTR(Player_Attributes.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT ((ld.overall_rating - jb.overall_rating) * 100.0 / ld.overall_rating) AS percentage_difference\nFROM Player_Attributes AS ld\nJOIN Player AS pld ON ld.player_api_id = pld.player_api_id\nJOIN Player_Attributes AS jb ON jb.date = ld.date\nJOIN Player AS pjb ON jb.player_api_id = pjb.player_api_id\nWHERE pld.player_name = 'Landon Donovan'\nAND pjb.player_name = 'Jordan Bowery'\nAND ld.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (p1.jumping - p2.jumping) AS difference\nFROM Player_Attributes p1, Player_Attributes p2\nWHERE p1.id = 6 AND p2.id = 23\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE preferred_foot = 'right'\nORDER BY potential ASC\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT finishing, curve \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) AS num_games\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name \nFROM Match \nJOIN Team ON Match.away_team_api_id = Team.team_api_id \nGROUP BY Match.away_team_api_id \nORDER BY SUM(Match.away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "178": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id)) AS percentage\nFROM \n    Player\nJOIN \n    Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE \n    Player.height < 180 AND Player_Attributes.strength > 70\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 20 AND q.q1 IS NOT NULL\nORDER BY q.q1 DESC\nLIMIT 5\t----- bird -----\tformula_1",
    "180": "```SQLite\nSELECT d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 19 AND q.q2 IS NOT NULL\nORDER BY q.q2\nLIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT lat, lng FROM circuits WHERE circuitId IN (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix')\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix')\t----- bird -----\tformula_1",
    "184": "SELECT q1 FROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE raceId = 354 AND forename = 'Bruno' AND surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT driverId FROM qualifying WHERE raceId = 903 AND q3 LIKE '1:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Bahrain Grand Prix' \nAND races.year = 2007 \nAND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 592 AND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.raceId = 161 AND lt.time LIKE '1:27%'\t----- bird -----\tformula_1",
    "189": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Malaysian Grand Prix')\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "```SQLite\nSELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 45 AND qualifying.q3 LIKE '1:33%'\n```\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM races\nJOIN seasons ON races.year = seasons.year\nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, MAX(d.dob) as youngest\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872 AND r.time IS NOT NULL\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY youngest DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "```SQLite\nSELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT ((CAST(fastestLapSpeed853 AS REAL) - CAST(fastestLapSpeed854 AS REAL)) / CAST(fastestLapSpeed853 AS REAL)) * 100 AS percentageFaster\nFROM (\n    SELECT \n        (SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS fastestLapSpeed853,\n        (SELECT fastestLapSpeed FROM results WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS fastestLapSpeed854\n)\t----- bird -----\tformula_1",
    "196": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN r.driverId END) AS REAL) / COUNT(DISTINCT r.driverId)) * 100 AS completion_rate\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT d.forename || ' ' || d.surname AS full_name, SUM(r.points) AS total_points\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nGROUP BY d.driverId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(lapTimes.milliseconds) AS BestLapTime, drivers.forename || ' ' || drivers.surname AS DriverName, races.name AS RaceName\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nGROUP BY lapTimes.raceId, lapTimes.driverId\nORDER BY BestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS averageLapTime\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix'\nAND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(CASE WHEN position > 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_not_first\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.surname = 'Hamilton' AND races.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT d.forename || ' ' || d.surname AS FullName, d.nationality, MAX(ds.points) AS MaxPoints\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nORDER BY SUM(ds.wins) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname, MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age\nFROM drivers\nWHERE nationality = 'Japanese'\nGROUP BY driverId\nORDER BY dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE strftime('%Y-%m', races.date) = '2005-09'\t----- bird -----\tformula_1",
    "205": "SELECT races.name \nFROM races \nJOIN results ON races.raceId = results.raceId \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.grid < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.milliseconds ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT r.year, r.name, res.points\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.year ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix')) AS percentage\nFROM \n    races \nINNER JOIN \n    circuits ON races.circuitId = circuits.circuitId\nWHERE \n    races.name = 'European Grand Prix' AND circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT r.name\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) AS FastestLapSpeed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Chinese Grand Prix'\nAND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT time FROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverId)\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.time IS NOT NULL AND EXISTS (\n    SELECT 1 FROM results rr WHERE rr.driverId = r.driverId AND rr.raceId > 0\n)\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((julianday('00:' || r1.time) - julianday('00:' || r2.time)) / julianday('00:' || r1.time)) * 100 AS percentage_faster\nFROM \n    results r1\nJOIN \n    results r2 ON r1.raceId = r2.raceId\nJOIN \n    races ra ON ra.raceId = r1.raceId\nWHERE \n    ra.year = 2008 AND \n    ra.name = 'Australian Grand Prix' AND \n    r1.position = 1 AND \n    r2.position = (SELECT MAX(position) FROM results WHERE raceId = r1.raceId AND time IS NOT NULL) AND \n    r1.time IS NOT NULL AND \n    r2.time IS NOT NULL\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) AS max_points\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 291 AND cr.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) \nFROM constructors \nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId \nWHERE constructors.nationality = 'Japanese' AND constructorResults.points = 0 \nGROUP BY constructors.constructorId \nHAVING COUNT(constructorResults.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN r.driverId END) AS REAL) / COUNT(DISTINCT r.driverId)) * 100 AS completion_percentage\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nJOIN \n    drivers d ON r.driverId = d.driverId\nWHERE \n    ra.year BETWEEN 2007 AND 2009\n    AND d.nationality = 'Japanese'\t----- bird -----\tformula_1",
    "224": "SELECT r.year, AVG(strftime('%s', res.time) - strftime('%s', '00:00:00')) as average_time_seconds\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nWHERE r.year < 1975 AND res.time IS NOT NULL\nGROUP BY r.year\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN driverStandings ON results.raceId = driverStandings.raceId AND results.driverId = driverStandings.driverId\nWHERE races.year = 2009 AND driverStandings.position = 1 AND results.time IS NOT NULL\nORDER BY races.date DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT \n    (SELECT CAST(COUNT(DISTINCT r.driverId) AS FLOAT)\n     FROM results r\n     JOIN drivers d ON r.driverId = d.driverId\n     JOIN races ra ON r.raceId = ra.raceId\n     WHERE strftime('%Y', d.dob) < '1985' AND r.laps > 50 AND ra.year BETWEEN 2000 AND 2005)\n    /\n    (SELECT CAST(COUNT(DISTINCT r.driverId) AS FLOAT)\n     FROM results r\n     JOIN races ra ON r.raceId = ra.raceId\n     WHERE ra.year BETWEEN 2000 AND 2005)\n    * 100 AS percentage\t----- bird -----\tformula_1",
    "228": "```SQLite\nSELECT COUNT(*) \nFROM drivers \nJOIN lapTimes ON drivers.driverId = lapTimes.driverId \nWHERE drivers.nationality = 'French' AND lapTimes.milliseconds < 120000\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT driverId, nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE strftime('%Y', d.dob) = '1971' AND r.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nWHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT races.year, drivers.forename || ' ' || drivers.surname AS name, races.date, races.time\nFROM qualifying\nJOIN races ON qualifying.raceId = races.raceId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE races.date = (\n    SELECT MIN(races.date)\n    FROM races\n    JOIN qualifying ON races.raceId = qualifying.raceId\n    WHERE qualifying.driverId = (\n        SELECT drivers.driverId\n        FROM drivers\n        ORDER BY drivers.dob DESC\n        LIMIT 1\n    )\n)\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT d.forename || ' ' || d.surname AS full_name, AVG(p.milliseconds) AS avg_duration\nFROM drivers d\nJOIN pitStops p ON d.driverId = p.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1981-01-01' AND '1984-12-31'\nGROUP BY d.driverId\nORDER BY avg_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT d.forename || ' ' || d.surname AS Champion, r.time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year = 2008 AND ra.name = 'Canadian Grand Prix' AND r.position = 1\t----- bird -----\tformula_1",
    "238": "```SQLite\nSELECT constructors.constructorRef, constructors.url\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN constructors ON results.constructorId = constructors.constructorId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY results.time DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nJOIN races r ON cr.raceId = r.raceId\nJOIN circuits ci ON r.circuitId = ci.circuitId\nWHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008 AND c.name = 'Marina Bay Street Circuit' AND q.position = 1 AND q.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = q.raceId)\t----- bird -----\tformula_1",
    "242": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS race_name\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY r.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT MAX(accident_count) AS max_accidents\nFROM (\n    SELECT driverId, COUNT(*) AS accident_count\n    FROM results\n    WHERE raceId IN (\n        SELECT raceId\n        FROM races\n        WHERE name = 'Canadian Grand Prix'\n    )\n    AND statusId = 3\n    GROUP BY driverId\n)\t----- bird -----\tformula_1",
    "244": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nORDER BY lt.time\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name AS CircuitName, MIN(lapTimes.time) AS LapRecord\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.circuitId\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) AS superheroes_with_agility\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "```SQLite\nSELECT p.publisher_name\nFROM publisher p\nJOIN superhero s ON p.id = s.publisher_id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "```SQLite\nSELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "```SQLite\nSELECT race.race \nFROM superhero \nJOIN race ON superhero.race_id = race.id \nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "```SQLite\nSELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' \nAND attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "```SQLite\nSELECT \n    COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_bad,\n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_heroes\nFROM \n    superhero s\nJOIN \n    alignment a ON s.alignment_id = a.id\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    a.alignment = 'Bad'\n```\t----- bird -----\tsuperhero",
    "260": "SELECT ABS(\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))\n    -\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics'))\n) AS difference_in_superheroes_published\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "```SQLite\nSELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) AS average_weight\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superpower sp\nJOIN hero_power hp ON sp.id = hp.power_id\nJOIN superhero sh ON hp.hero_id = sh.id\nJOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero_name \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE height_cm BETWEEN 170 AND 190 \nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour AS hair_colour\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185 AND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_marvel_comics\nFROM \n    superhero\nJOIN \n    publisher ON superhero.publisher_id = publisher.id\nWHERE \n    superhero.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Male' AND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "```SQLite\nSELECT COUNT(DISTINCT hero_id) AS stealth_hero_count\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "```SQLite\nSELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.eye_colour_id = superhero.hair_colour_id\nAND superhero.hair_colour_id = superhero.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (COUNT(DISTINCT CASE WHEN c.colour = 'Blue' THEN s.id END) * 100.0 / COUNT(s.id)) AS percentage_of_blue_female_superheroes\nFROM \n    superhero s\nJOIN \n    gender g ON s.gender_id = g.id\nJOIN \n    colour c ON s.skin_colour_id = c.id\nWHERE \n    g.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "```SQLite\nSELECT COUNT(*) AS number_of_powers\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "```SQLite\nSELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "```SQLite\nSELECT COUNT(*) \nFROM hero_attribute \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = (SELECT MAX(attribute_value) \n                                      FROM hero_attribute \n                                      JOIN attribute ON hero_attribute.attribute_id = attribute.id \n                                      WHERE attribute.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) * 100.0 / COUNT(*)) AS percent_female_marvel\nFROM \n    superhero s\nJOIN \n    gender g ON s.gender_id = g.id\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    p.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT ABS((SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')) AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero\t----- bird -----\tsuperhero",
    "284": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nJOIN superhero ON hero_power.hero_id = superhero.id \nWHERE superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher_name \nFROM publisher \nJOIN superhero ON publisher.id = superhero.publisher_id \nWHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "```SQLite\nSELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage_blue_eyes\nFROM superhero\nWHERE eye_colour_id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) * 1.0 / \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) AS male_female_ratio\t----- bird -----\tsuperhero",
    "291": "```SQLite\nSELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT ABS(\n    (SELECT COUNT(*) FROM superhero WHERE (weight_kg = 0 OR weight_kg IS NULL) AND eye_colour_id = 7) -\n    (SELECT COUNT(*) FROM superhero WHERE (weight_kg = 0 OR weight_kg IS NULL) AND eye_colour_id = 1)\n) AS difference\t----- bird -----\tsuperhero",
    "293": "```SQLite\nSELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT ABS(SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, MAX(Reputation) as HighestReputation\nFROM users\nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.Age > 65 AND posts.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nWHERE t.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS AverageScore\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (COUNT(DISTINCT CASE WHEN u.Age > 65 THEN p.Id END) * 100.0 / COUNT(DISTINCT p.Id)) AS Percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'No' ELSE 'Yes' END AS WellFinished\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(p.Id) / COUNT(v.Id) AS TimesPostsMoreThanVotes\nFROM posts p\nLEFT JOIN votes v ON p.Id = v.PostId\nWHERE p.OwnerUserId = 24 AND v.UserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM comments WHERE Text = 'thank you user93!')\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN postHistory ph ON ph.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND ph.UserId = c.UserId\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nJOIN posts p ON v.PostId = p.Id\nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) AS AverageViewCount\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nJOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = '<humor>'\nGROUP BY p.Id, p.Title, c.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) \nFROM badges\nGROUP BY UserId\nHAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT ph.UserId\nFROM postHistory ph\nJOIN posts p ON ph.PostId = p.Id\nGROUP BY ph.UserId, ph.PostId\nHAVING COUNT(ph.Id) = 1 AND p.ViewCount >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT ABS(\n    (CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') AS REAL) / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') * 100)\n    -\n    (CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011') AS REAL) / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') * 100)\n) AS PercentageDifference\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS AvgUpVotes, AVG(u.Age) AS AvgAge\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nGROUP BY u.Id\nHAVING COUNT(p.Id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010') * 1.0 /\n    (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS ratio_2010_2011\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, MAX(SUM(ViewCount)) AS MaxViewCount\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY DisplayName\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT t.TagName\nFROM tags t\nJOIN posts p ON t.Id = p.Id\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (CAST(COUNT(DISTINCT p.Id) AS FLOAT) / CAST(COUNT(DISTINCT p_all.Id) AS FLOAT)) * 100 AS percentage\nFROM \n    posts p\nJOIN \n    tags t ON p.Tags LIKE '%' || t.TagName || '%'\nJOIN \n    users u ON p.OwnerUserId = u.Id\nLEFT JOIN \n    posts p_all ON u.DisplayName = 'Community'\nWHERE \n    t.TagName = 'r' \n    AND u.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    (SELECT SUM(p.ViewCount) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mornington') -\n    (SELECT SUM(p.ViewCount) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Amos') AS ViewCountDifference\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(MonthlyLinks) AS AverageMonthlyLinks\nFROM (\n    SELECT COUNT(pl.Id) AS MonthlyLinks\n    FROM postLinks pl\n    JOIN posts p ON pl.PostId = p.Id\n    WHERE strftime('%Y', pl.CreationDate) = '2010' AND p.AnswerCount <= 2\n    GROUP BY strftime('%Y-%m', pl.CreationDate)\n)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Autobiographer'\nORDER BY badges.Date ASC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT users.Id) AS UserCount\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE strftime('%Y', p.CreationDate) = '2010'\nORDER BY p.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT \n    (CAST(COUNT(DISTINCT p.Id) AS FLOAT) / CAST(COUNT(DISTINCT all_posts.Id) AS FLOAT)) * 100 AS Percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nJOIN \n    posts all_posts ON all_posts.CreationDate LIKE '2011%'\nWHERE \n    p.CreationDate LIKE '2011%' AND u.Reputation > 1000\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) AS NumberOfComments\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    WHERE Score = (\n        SELECT MAX(Score)\n        FROM posts\n    )\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, c.UserDisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0 / COUNT(p.Id)) AS PercentageAbove50\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.ViewCount BETWEEN 100 AND 150\nORDER BY comments.Score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*)\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT \n    (COUNT(DISTINCT CASE WHEN u.UpVotes = 0 THEN c.UserId END) * 100.0 / COUNT(DISTINCT c.UserId)) AS Percentage\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT * FROM cards WHERE borderColor = 'borderless' AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT c.*\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power = '*' OR cards.power IS NULL)\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hasContentWarning\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.uuid\nORDER BY COUNT(r.id) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage_chinese_simplified\nFROM foreign_data\nWHERE language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT format, status FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Benalish Knight')\t----- bird -----\tcard_games",
    "357": "SELECT \n    (COUNT(id) FILTER (WHERE borderColor = 'borderless') * 100.0 / COUNT(id)) AS percentage_borderless\nFROM \n    cards\t----- bird -----\tcard_games",
    "358": "```SQLite\nSELECT \n    (SELECT COUNT(*) FROM foreign_data fd JOIN cards c ON fd.uuid = c.uuid WHERE fd.language = 'French' AND c.isStorySpotlight = 1) * 100.0 / \n    (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) AS percentage_french_story_spotlight\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.name, c.colors, fd.language, fd.name AS foreign_name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originalType = 'Artifact' AND c.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT \n    COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) AS percentage,\n    id\nFROM cards\nWHERE isStorySpotlight = 1 AND isTextless = 1\nGROUP BY id\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT subtypes, supertypes FROM cards WHERE subtypes IS NOT NULL AND supertypes IS NOT NULL AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.uuid = cards.uuid AND foreign_data.language = 'German')\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE legalities.format = 'premodern'\nAND rulings.text = 'This is a triggered mana ability.'\nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'French'\nAND c.type = 'Creature'\nAND c.layout = 'normal'\nAND c.borderColor = 'black'\nAND c.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT language \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE sets.block = 'Ravnica' AND sets.baseSetSize = 180\t----- bird -----\tcard_games",
    "371": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'legal')) AS percentage\nFROM \n    cards c\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    l.format = 'commander' AND l.status = 'legal' AND c.hasContentWarning = 0\t----- bird -----\tcard_games",
    "372": "SELECT \n    (COUNT(CASE WHEN fd.language = 'French' AND (c.power IS NULL OR c.power = '*') THEN 1 END) * 100.0 / \n     COUNT(CASE WHEN c.power IS NULL OR c.power = '*' THEN 1 END)) AS percentage\nFROM \n    cards c\nLEFT JOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.power IS NULL OR c.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isTextless = 1)) AS proportion\nFROM cards\nWHERE isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT language\nFROM set_translations\nWHERE setCode = 'ARC' AND setCode IN (SELECT code FROM sets WHERE mcmName = 'Archenemy')\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT \n    CASE \n        WHEN a.convertedManaCost > b.convertedManaCost THEN 'Serra Angel'\n        WHEN a.convertedManaCost < b.convertedManaCost THEN 'Shrine Keeper'\n        ELSE 'Both have the same mana cost'\n    END AS MoreExpensiveCard\nFROM \n    cards a, \n    cards b\nWHERE \n    a.name = 'Serra Angel' AND \n    b.name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN set_translations st ON s.code = st.setCode\nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(\n    SELECT 1\n    FROM foreign_data\n    WHERE name = 'Ancestor''s Chosen' AND language = 'Korean'\n) as has_korean_version\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nJOIN set_translations ON cards.setCode = set_translations.setCode\nWHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.mtgoCode IS NOT NULL AS appearedOnMTGO\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.code)\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian'\nAND set_translations.translation IS NOT NULL\nAND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'Italian' AND c.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND r.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND c.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE sets.name = 'Coldsnap'\n)\t----- bird -----\tcard_games",
    "391": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP')) AS percentage\nFROM \n    cards\nWHERE \n    convertedManaCost = 7\n    AND setCode = 'CSP'\t----- bird -----\tcard_games",
    "392": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap')) AS percentage_incredibly_powerful\nFROM \n    cards\nWHERE \n    setCode = 'Coldsnap' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "393": "SELECT format, GROUP_CONCAT(name) AS banned_cards\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1 AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN legalities l ON c.uuid = l.uuid\nWHERE s.name = 'Hour of Devastation' AND l.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT s.name \nFROM sets s \nJOIN set_translations st_korean ON s.code = st_korean.setCode \nLEFT JOIN set_translations st_japanese ON s.code = st_japanese.setCode AND st_japanese.language LIKE '%Japanese%'\nWHERE st_korean.language = 'Korean' AND st_japanese.id IS NULL\t----- bird -----\tcard_games",
    "397": "SELECT c.frameVersion, c.name, l.status\nFROM cards c\nLEFT JOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'Allen Williams' AND (l.status = 'Banned' OR l.status IS NULL)\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(bond_type) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS average_oxygen_atoms\nFROM (\n  SELECT m.molecule_id, COUNT(a.atom_id) AS oxygen_count\n  FROM molecule m\n  JOIN bond b ON m.molecule_id = b.molecule_id\n  JOIN connected c ON b.bond_id = c.bond_id\n  JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\n  WHERE b.bond_type = '-' AND a.element = 'O'\n  GROUP BY m.molecule_id\n)\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) AS average_single_bonded\nFROM (\n  SELECT molecule_id, COUNT(bond_id) AS single_bonded_count\n  FROM bond\n  WHERE bond_type = '-' AND molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n  )\n  GROUP BY molecule_id\n)\t----- bird -----\ttoxicology",
    "401": "```SQLite\nSELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT \n  (COUNT(DISTINCT CASE WHEN a.element = 'c' THEN a.atom_id END) * 100.0 / COUNT(DISTINCT a.atom_id)) AS percentage_of_carbon\nFROM \n  atom a\nJOIN \n  connected c ON a.atom_id = c.atom_id\nJOIN \n  bond b ON c.bond_id = b.bond_id\nWHERE \n  b.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "```SQLite\nSELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '='\n```\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'H'\n)\nGROUP BY label\nORDER BY COUNT(label) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "```SQLite\nSELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type \nFROM connected \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') \n   OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "```SQLite\nSELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element IN ('i', 's') AND bond.bond_type = '-'\n```\t----- bird -----\ttoxicology",
    "409": "```SQLite\nSELECT \n    100 - (COUNT(DISTINCT a.molecule_id) * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage_no_fluorine\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id AND a.element = 'f'\nWHERE \n    m.label = '+'\t----- bird -----\ttoxicology",
    "410": "```SQLite\nSELECT \n    (COUNT(DISTINCT b.bond_id) * 100.0 / (SELECT COUNT(*) FROM bond WHERE bond_type = '\t----- bird -----\ttoxicology",
    "411": "```SQLite\nSELECT element \nFROM atom \nWHERE molecule_id = 'TR000' \nORDER BY element ASC \nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT \n    ROUND(\n        (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond_id)), \n        5\n    ) AS percentage_of_double_bonds\nFROM \n    bond\nWHERE \n    molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "```SQLite\nSELECT ROUND((SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule_id)), 3) AS percentage_carcinogenic\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND((COUNT(CASE WHEN element = 'h' THEN 1 END) * 100.0 / COUNT(atom_id)), 4) AS percentage\nFROM atom\nWHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT atom.element, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "```SQLite\nSELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "```SQLite\nSELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label = '-' AND b.bond_type = '-'\nORDER BY m.molecule_id\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) FROM connected \nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.molecule_id = 'TR009' AND (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(DISTINCT bond_id) AS number_of_connections\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "```SQLite\nSELECT element \nFROM atom \nWHERE molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "```SQLite\nSELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE a1.element = 'P' AND a2.element = 'N'\nUNION\nSELECT b.bond_id\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE a1.element = 'N' AND a2.element = 'P'\t----- bird -----\ttoxicology",
    "424": "```SQLite\nSELECT m.label = '+' AS is_carcinogenic\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n  SELECT a.atom_id, COUNT(c.bond_id) AS bond_count\n  FROM atom a\n  LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n  WHERE a.element = 'i'\n  GROUP BY a.atom_id\n)\t----- bird -----\ttoxicology",
    "426": "```SQLite\nSELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\n```\t----- bird -----\ttoxicology",
    "427": "```SQLite\nSELECT a.atom_id, a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041' AND b.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT element \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "```SQLite\nSELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "```SQLite\nSELECT ROUND(\n    (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id), 5) AS proportion_of_single_bonds_carcinogenic\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-'\n```\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT \n    (COUNT(DISTINCT CASE WHEN a.element = 'cl' THEN a.atom_id ELSE NULL END) * 100.0 / COUNT(DISTINCT a.atom_id)) AS percentage\nFROM \n    atom a\nJOIN \n    connected c ON a.atom_id = c.atom_id\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT \n  (CAST(SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(DISTINCT a.molecule_id)) * 100 AS percentage\nFROM \n  molecule m\nJOIN \n  atom a ON m.molecule_id = a.molecule_id\nWHERE \n  m.label = '+'\t----- bird -----\ttoxicology",
    "435": "```SQLite\nSELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '+' AND substr(a.atom_id, 7, 1) = '4'\n```\t----- bird -----\ttoxicology",
    "436": "```SQLite\nSELECT \n    m.label,\n    (CAST(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(a.element)) AS hydrogen_ratio\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.molecule_id = 'TR006'\nGROUP BY \n    m.molecule_id\t----- bird -----\ttoxicology",
    "437": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '-'\nGROUP BY molecule.molecule_id\nHAVING COUNT(atom.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE AvgScrMath > 400 AND Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) AS HighestEligibleFreeRate\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE (NumGE1500 * 1.0 / NumTstTakr) > 0.3 AND `Enrollment (Ages 5-17)` > 0\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.School, s.CharterNum, ss.AvgScrWrite\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.AvgScrWrite > 499 AND s.CharterNum IS NOT NULL\nORDER BY ss.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.School\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1\nAND ss.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Riverside' AND ss.AvgScrMath > 400\nGROUP BY s.School\nHAVING AVG(ss.AvgScrMath) > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, s.Street, s.City, s.State, s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Monterey'\nAND s.StatusType = 'Active'\nAND s.SOCType = 'High School'\nAND (f.`FRPM Count (Ages 5-17)` > 800 OR f.`Free Meal Count (Ages 5-17)` > 800)\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, ss.AvgScrWrite, s.Phone\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01') AND ss.AvgScrWrite IS NOT NULL\nORDER BY s.School\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.FundingType = 'Local'\nAND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (\n    SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n    FROM frpm f2\n    JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n    WHERE s2.FundingType = 'Local'\n)\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `Percent (%) Eligible Free (K-12)`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT s.School, \n       (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) AS Eligible_FRPM_Rate\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE s.DOC = '66'\nORDER BY f.`FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nORDER BY CAST(ss.NumGE1500 AS REAL) / ss.NumTstTakr ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT AdmFName1 || ' ' || AdmLName1 AS Admin1FullName,\n       AdmFName2 || ' ' || AdmLName2 AS Admin2FullName,\n       AdmFName3 || ' ' || AdmLName3 AS Admin3FullName\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nORDER BY satscores.NumGE1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) AS AvgNumTestTakers\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nWHERE sch.County = 'Fresno'\nAND strftime('%Y', sch.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE s.District = 'Fresno Unified'\nORDER BY ss.AvgScrRead ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'F'\nAND s.School IN (\n    SELECT sname\n    FROM (\n        SELECT sname, cname, RANK() OVER (PARTITION BY cname ORDER BY AvgScrRead DESC) as rank\n        FROM satscores\n    )\n    WHERE rank <= 5\n)\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, ss.AvgScrWrite\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.AdmLName1 = 'Ulrich' AND s.AdmFName1 = 'Ricci'\nGROUP BY s.School\t----- bird -----\tcalifornia_schools",
    "456": "SELECT School, MAX(`Enrollment (K-12)`) as MaxEnrollment\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE DOC = '31'\nGROUP BY School\nORDER BY MaxEnrollment DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT AVG(Count) AS MonthlyAverage\nFROM (\n    SELECT COUNT(*) AS Count\n    FROM schools\n    WHERE County = 'Alameda'\n    AND DOC = '52'\n    AND strftime('%Y', OpenDate) = '1980'\n    GROUP BY strftime('%m', OpenDate)\n)\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange') / \n    (SELECT COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange') AS Ratio_Unified_to_Elementary\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.School, s.MailStreet\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nORDER BY ss.AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Charter = 0\nAND s.County = 'Los Angeles'\nAND (f.`Free Meal Count (K-12)` * 100.0 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT frpm.`Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.EdOpsCode = 'SSS'\nAND schools.City = 'Fremont'\nAND frpm.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) * 100 AS `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles' AND s.GSserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumVirtualSchools\nFROM schools\nWHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara')\nGROUP BY County\nORDER BY NumVirtualSchools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT City, COUNT(School) AS NumberOfSchools\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE Magnet = 1 AND GSoffered = 'K-8' AND `NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.`District Code`, (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) * 100 AS `Percent (%) Eligible Free (K-12)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino' AND City = 'San Bernardino City Unified'\nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\nAND (SOC = '62' OR DOC = '54')\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nWHERE district.A3 = 'East Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id)\nFROM district\nWHERE A11 > 6000 AND A11 < 10000 AND district_id IN (\n    SELECT district_id\n    FROM client\n    WHERE gender = 'F'\n)\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M' AND district.A3 = 'North Bohemia' AND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id, MIN(district.A11) AS LowestAvgSalary, MAX(district.A11) - MIN(district.A11) AS SalaryGap\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nGROUP BY account.account_id\nORDER BY client.birth_date DESC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.birth_date = (SELECT MAX(birth_date) FROM client)\nORDER BY district.A11 DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id, loan.amount\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.date BETWEEN '1997-01-01' AND '1997-12-31'\nAND account.frequency = 'POPLATEK TYDNE'\nAND loan.amount = (\n    SELECT MIN(loan.amount)\n    FROM loan\n    JOIN account ON loan.account_id = account.account_id\n    WHERE loan.date BETWEEN '1997-01-01' AND '1997-12-31'\n    AND account.frequency = 'POPLATEK TYDNE'\n)\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id, loan.amount, account.date\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND strftime('%Y', account.date) = '1993'\nORDER BY loan.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "```SQLite\nSELECT COUNT(*) \nFROM account \nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT d.A2\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT (COUNT(CASE WHEN gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE A3 = 'south Bohemia'\nAND A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT ((balance_1998 - balance_1993) / balance_1993) * 100 AS increase_rate\nFROM (\n    SELECT \n        (SELECT balance FROM trans WHERE account_id = first_loan.account_id AND date = '1998-12-27') AS balance_1998,\n        (SELECT balance FROM trans WHERE account_id = first_loan.account_id AND date = '1993-03-22') AS balance_1993\n    FROM (\n        SELECT account_id\n        FROM loan\n        WHERE date = '1993-07-05'\n        ORDER BY loan_id ASC\n        LIMIT 1\n    ) AS first_loan\n)\t----- bird -----\tfinancial",
    "479": "```SQLite\nSELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage_paid_no_issue\nFROM loan\t----- bird -----\tfinancial",
    "480": "```SQLite\nSELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM loan WHERE amount < 100000)) AS percentage\nFROM \n    loan\nWHERE \n    amount < 100000 AND status = 'C'\n```\t----- bird -----\tfinancial",
    "481": "```SQLite\nSELECT district.A2 AS district, ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_rate_increment\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE loan.status = 'D'\n```\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district, COUNT(*) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan \nJOIN account ON loan.account_id = account.account_id \nWHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31' \nAND loan.amount >= 250000 \nAND account.frequency = 'POPLATEK MESICNE' \nAND loan.status IN ('A', 'B')\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.A2 = 'Branch location 1' AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15)\n    FROM district\n    WHERE A15 < (\n        SELECT MAX(A15)\n        FROM district\n    )\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, t.amount\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nORDER BY t.amount DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "```SQLite\nSELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.A2 = 'Branch location 1' AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) AS male_clients_count\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15)\n    FROM district\n    WHERE A15 < (\n        SELECT MAX(A15)\n        FROM district\n    )\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "```SQLite\nSELECT DISTINCT d.client_id\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE t.operation = 'VYBER KARTOU'\nAND t.date BETWEEN '1998-01-01' AND '1998-12-31'\nAND t.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND date BETWEEN '1998-01-01' AND '1998-12-31')\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT a.frequency\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.frequency != 'OWNER'\nAND d.A11 > 8000 AND d.A11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) AS average_crimes_1995\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000 AND strftime('%Y', a.date) >= '1997'\t----- bird -----\tfinancial",
    "492": "SELECT *\nFROM trans\nJOIN disp ON trans.account_id = disp.account_id\nWHERE disp.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client JOIN account ON client.client_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A11 > 10000)) AS percentage_women\nFROM \n    client \nJOIN \n    account ON client.client_id = account.account_id \nJOIN \n    district ON account.district_id = district.district_id \nWHERE \n    district.A11 > 10000 AND client.gender = 'F'\t----- bird -----\tfinancial",
    "494": "SELECT \n    ((SUM(CASE WHEN strftime('%Y', l.date) = '1997' THEN l.amount ELSE 0 END) - \n      SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) / \n      SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) * 100 AS growth_rate\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    disp d ON a.account_id = d.account_id\nJOIN \n    client c ON d.client_id = c.client_id\nWHERE \n    c.gender = 'M' \n    AND d.type = 'OWNER'\n    AND (strftime('%Y', l.date) = '1996' OR strftime('%Y', l.date) = '1997')\t----- bird -----\tfinancial",
    "495": "```SQLite\nSELECT frequency FROM account WHERE account_id = 3\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(DISTINCT male_clients.client_id) * 100.0 / COUNT(DISTINCT all_weekly_clients.client_id)) AS percentage_male_weekly\nFROM \n    (SELECT client_id FROM client WHERE gender = 'M') AS male_clients\nJOIN \n    disp ON male_clients.client_id = disp.client_id\nJOIN \n    account ON disp.account_id = account.account_id AND account.frequency = 'POPLATEK TYDNE'\nJOIN \n    (SELECT client_id FROM client\n     JOIN disp ON client.client_id = disp.client_id\n     JOIN account ON disp.account_id = account.account_id\n     WHERE account.frequency = 'POPLATEK TYDNE') AS all_weekly_clients\nON \n    male_clients.client_id = all_weekly_clients.client_id\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "```SQLite\nSELECT AVG(amount) AS average_running_loan_amount\nFROM loan\nWHERE status IN ('C', 'D') AND frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, (strftime('%Y', 'now') - strftime('%Y', client.birth_date)) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}