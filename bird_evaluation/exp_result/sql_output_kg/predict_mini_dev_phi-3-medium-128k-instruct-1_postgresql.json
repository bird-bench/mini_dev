{
    "0": " SELECT \n    (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'EUR')::FLOAT / \n    (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'CZK')::FLOAT AS ratio_eur_to_czk;\t----- bird -----\tdebit_card_specializing",
    "1": " SELECT c.customerid, SUM(ym.consumption) AS total_consumption\nFROM customers c\nJOIN yearmonth ym ON c.customerid = ym.customerid\nJOIN transactions_1k t ON c.customerid = t.customerid\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE g.segment = 'LAM'\nAND SUBSTRING(ym.date, 1, 4)::INTEGER BETWEEN 201201 AND 201212\nGROUP BY c.customerid\nORDER BY total_consumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": " SELECT AVG(consumption) / 12 AS avg_monthly_consumption\nFROM yearmonth\nWHERE date BETWEEN '201301' AND '201312'\nAND customerid IN (\n    SELECT customerid\n    FROM customers\n    WHERE segment = 'SME'\n);\t----- bird -----\tdebit_card_specializing",
    "3": " SELECT\n    SUM(CASE WHEN c.currency = 'CZK' THEN ym.consumption ELSE 0 END) AS czk_consumption,\n    SUM(CASE WHEN c.currency = 'EUR' THEN ym.consumption ELSE 0 END) AS eur_consumption,\n    SUM(CASE WHEN c.currency = 'CZK' THEN ym.consumption ELSE 0 END) - SUM(CASE WHEN c.currency = 'EUR' THEN ym.consumption ELSE 0 END) AS consumption_difference\nFROM\n    yearmonth ym\nJOIN\n    customers c ON ym.customerid = c.customerid\nWHERE\n    ym.date BETWEEN '20120101' AND '20121231'\n    AND c.currency IN ('CZK', 'EUR');\t----- bird -----\tdebit_card_specializing",
    "4": " SELECT EXTRACT(YEAR FROM TO_DATE(date, 'YYYY-MM-DD')) AS year,\n       SUM(consumption) AS total_consumption\nFROM yearmonth\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": " SELECT\n    TO_CHAR(date, 'YYYY-MM') AS year_month,\n    SUM(consumption) AS total_consumption\nFROM\n    yearmonth\nWHERE\n    customerid IN (\n        SELECT customerid\n        FROM customers\n        WHERE segment = 'SME'\n    )\n    AND date BETWEEN '201301' AND '201312'\nGROUP BY\n    year_month\nORDER BY\n    total_consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": " SELECT\n    (SELECT AVG(consumption) FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND currency = 'CZK' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -\n    (SELECT AVG(consumption) FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND currency = 'CZK' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_diff,\n    (SELECT AVG(consumption) FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND currency = 'CZK' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -\n    (SELECT AVG(consumption) FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND currency = 'CZK' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_diff,\n    (SELECT AVG(consumption) FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND currency = 'CZK' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -\n    (SELECT AVG(consumption) FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND currency = 'CZK' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_diff;\t----- bird -----\tdebit_card_specializing",
    "7": " SELECT \n    c.segment,\n    ROUND((SUM(CASE WHEN ym.date LIKE '2013%' THEN ym.consumption ELSE 0 END) - SUM(CASE WHEN ym.date LIKE '2012%' THEN ym.consumption ELSE 0 END)) / SUM(CASE WHEN ym.date LIKE '2013%' THEN ym.consumption ELSE 0 END) * 100, 2) AS percentage_increase\nFROM \n    customers c\nJOIN \n    yearmonth ym ON c.customerid = ym.customerid\nWHERE \n    c.currency = 'EUR'\nGROUP BY \n    c.segment\nORDER BY \n    percentage_increase DESC\nLIMIT 1\n\nUNION ALL\n\nSELECT \n    c.segment,\n    ROUND((SUM(CASE WHEN ym.date LIKE '2013%' THEN ym.consumption ELSE 0 END) - SUM(CASE WHEN ym.date LIKE '2012%' THEN ym.consumption ELSE 0 END)) / SUM(CASE WHEN ym.date LIKE '2013%' THEN ym.consumption ELSE 0 END) * 100, 2) AS percentage_increase\nFROM \n    customers c\nJOIN \n    yearmonth ym ON c.customerid = ym.customerid\nWHERE \n    c.currency = 'EUR'\nGROUP BY \n    c.segment\nORDER BY \n    percentage_increase ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "8": " SELECT SUM(consumption)\nFROM yearmonth\nWHERE customerid = 6\nAND date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": " SELECT\n    (SELECT COUNT(*) FROM gasstations WHERE country = 'CZE' AND segment = 'discount') -\n    (SELECT COUNT(*) FROM gasstations WHERE country = 'SVK' AND segment = 'discount') AS more_discount_gasstations_in_czech_republic;\t----- bird -----\tdebit_card_specializing",
    "10": " SELECT\n    (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'CZK') AS czech_koruna_sme_count,\n    (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'EUR') AS euro_sme_count,\n    (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'CZK') - (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE currency = 'EUR') AS difference\n;\t----- bird -----\tdebit_card_specializing",
    "11": " SELECT \n    (COUNT(DISTINCT customerid) FILTER (WHERE consumption > 46.73) / COUNT(DISTINCT customerid)::float) * 100 AS percentage_lam_customer_consumed_more_than_46_73\nFROM yearmonth\nWHERE segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "12": " SELECT \n    (COUNT(DISTINCT customerid) FILTER (WHERE consumption > 528.3)::FLOAT / COUNT(DISTINCT customerid)::FLOAT) * 100 AS percentage_customers_consumed_more_than_528_3\nFROM yearmonth\nWHERE date = '201202';\t----- bird -----\tdebit_card_specializing",
    "13": " SELECT MAX(consumption) AS highest_monthly_consumption\nFROM yearmonth\nWHERE SUBSTRING(date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "14": " SELECT p.description\nFROM transactions_1k t\nJOIN products p ON t.productid = p.productid\nJOIN yearmonth ym ON t.customerid = ym.customerid\nWHERE SUBSTRING(ym.date, 1, 4) = '2013' AND SUBSTRING(ym.date, 5, 2) = '09';\t----- bird -----\tdebit_card_specializing",
    "15": " SELECT DISTINCT gasstations.country\nFROM gasstations\nJOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid\nWHERE TO_CHAR(transactions_1k.date, 'YYYYMM') = '201306';\t----- bird -----\tdebit_card_specializing",
    "16": " SELECT COUNT(DISTINCT ym.customerid)\nFROM yearmonth ym\nJOIN customers c ON ym.customerid = c.customerid\nJOIN transactions_1k t ON ym.customerid = t.customerid\nWHERE c.currency = 'EUR' AND ym.consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": " SELECT p.description\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nJOIN products p ON t.productid = p.productid\nWHERE g.country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": " SELECT DISTINCT date\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE chainid = 11;\t----- bird -----\tdebit_card_specializing",
    "19": " SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE gasstations.country = 'CZE'\nAND transactions_1k.date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": " SELECT currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nWHERE date = '2012-08-24' AND time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": " SELECT c.segment\nFROM customers c\nJOIN transactions_1k t ON c.customerid = t.customerid\nWHERE t.date = '2012-08-23' AND t.time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": " SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE transactions_1k.date = '2012-08-26'\nAND transactions_1k.time BETWEEN '08:00:00' AND '09:00:00'\nAND gasstations.country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "23": " SELECT c.segment\nFROM customers c\nJOIN transactions_1k t ON c.customerid = t.customerid\nWHERE t.date = '2012-08-24' AND t.price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": " SELECT \n    (COUNT(DISTINCT t.customerid) * 100.0 / (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE date = '2012-08-25')) AS percentage_eur_customers\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.customerid = c.customerid\nWHERE \n    t.date = '2012-08-25' AND c.currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "25": " SELECT ((c2.consumption - c1.consumption) / c1.consumption) AS consumption_decrease_rate\nFROM yearmonth c1\nJOIN yearmonth c2 ON c1.customerid = c2.customerid\nWHERE c1.date = '2012-08-25' AND c2.date = '2013-08-25'\nAND c1.customerid IN (\n    SELECT customerid\n    FROM transactions_1k\n    WHERE price = 634.8 AND date = '2012-08-25'\n);\t----- bird -----\tdebit_card_specializing",
    "26": " SELECT \n    (COUNT(*) FILTER (WHERE segment = 'premium' AND country = 'SVK') * 100.0) / COUNT(*) FILTER (WHERE country = 'SVK') AS premium_percentage\nFROM \n    customers\nJOIN \n    transactions_1k ON customers.customerid = transactions_1k.customerid\nWHERE \n    transactions_1k.country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": " SELECT SUM(t.amount) AS total_amount_spent,\n       SUM(CASE WHEN ym.date = '201201' THEN ym.consumption ELSE 0 END) AS january_2012_spent\nFROM transactions_1k t\nJOIN customers c ON t.customerid = c.customerid\nLEFT JOIN yearmonth ym ON c.customerid = ym.customerid\nWHERE c.customerid = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": " SELECT \n    c.customerid,\n    c.currency,\n    SUM(t.amount * t.price) AS total_spent,\n    (SUM(t.price) / NULLIF(SUM(t.amount), 0)) AS avg_price_per_item\nFROM \n    customers c\nJOIN \n    transactions_1k t ON c.customerid = t.customerid\nGROUP BY \n    c.customerid, c.currency\nORDER BY \n    total_spent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": " SELECT ym.customerid, ym.consumption\nFROM yearmonth ym\nJOIN transactions_1k t ON ym.customerid = t.customerid\nWHERE t.productid = 5\nAND (t.price / t.amount) > 29.00\nAND SUBSTRING(ym.date, 1, 6) = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": " SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE first_name = 'Angela' AND last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": " SELECT COUNT(DISTINCT m.member_id)\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer'\nAND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": " SELECT COUNT(DISTINCT e.event_id)\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN member m ON a.link_to_member = m.member_id\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(DISTINCT m.member_id) > 10;\t----- bird -----\tstudent_club",
    "33": " SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 20 AND e.type != 'fundraiser';\t----- bird -----\tstudent_club",
    "34": " SELECT SUM(amount) AS total_funds_received\nFROM income\nWHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "35": " SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'IL';\t----- bird -----\tstudent_club",
    "36": " SELECT expense.expense_id, expense.approved\nFROM expense\nJOIN attendance ON expense.link_to_member = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08' AND expense.approved = TRUE;\t----- bird -----\tstudent_club",
    "37": " SELECT AVG(expense.cost) AS average_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND (EXTRACT(MONTH FROM expense.expense_date) = 9 OR EXTRACT(MONTH FROM expense.expense_date) = 10);\t----- bird -----\tstudent_club",
    "38": " SELECT\n    (SELECT SUM(spent) FROM budget WHERE YEAR(link_to_event) = 2019) -\n    (SELECT SUM(spent) FROM budget WHERE YEAR(link_to_event) = 2020) AS difference_spent;\t----- bird -----\tstudent_club",
    "39": " SELECT notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": " SELECT member.phone\nFROM member\nWHERE member.first_name = 'Carlo' AND member.last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": " SELECT event.status\nFROM event\nJOIN expense ON event.event_id = expense.link_to_event\nWHERE expense.expense_description = 'Post Cards, Posters'\nAND expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": " SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE first_name = 'Brent' AND last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": " SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": " SELECT m.department\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "45": " SELECT date_received\nFROM income\nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues';\t----- bird -----\tstudent_club",
    "46": " SELECT COUNT(*)\nFROM (\n    SELECT\n        (SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN amount ELSE 0 END) / NULLIF(SUM(CASE WHEN event_name = 'October Meeting' THEN amount ELSE 0 END), 0)) AS budget_ratio\n    FROM budget\n    WHERE category = 'Advertisement'\n) AS subquery\nWHERE budget_ratio > 1;\t----- bird -----\tstudent_club",
    "47": " SELECT SUM(expense.cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": " SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": " SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": " SELECT COUNT(DISTINCT a.link_to_member)\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": " SELECT event_name, MAX(spent / amount) AS spend_to_budget_ratio\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.status = 'Closed'\nGROUP BY event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": " SELECT MAX(spent) AS highest_budget_spend\nFROM budget\nWHERE event_status = 'completed';\t----- bird -----\tstudent_club",
    "54": " SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_member\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": " SELECT event_name, MIN(cost) AS lowest_cost\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nGROUP BY event_name\nORDER BY lowest_cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": " SELECT \n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN exp.cost ELSE 0 END) / SUM(exp.cost)) * 100 AS percentage_cost_yearly_kickoff;\nFROM \n    expense exp\nJOIN \n    event e ON exp.link_to_event = e.event_id\nWHERE \n    e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "59": " SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": " SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": " SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE category = 'Advertisement'\nORDER BY spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": " SELECT EXISTS (\n    SELECT 1\n    FROM attendance\n    JOIN member ON attendance.link_to_member = member.member_id\n    JOIN event ON attendance.link_to_event = event.event_id\n    WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean'\n    AND event.event_name = 'Women''s Soccer'\n);\t----- bird -----\tstudent_club",
    "63": " SELECT expense.cost\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": " SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": " SELECT expense.expense_description, SUM(expense.cost) AS total_value\nFROM expense\nJOIN attendance ON expense.link_to_member = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'true'\nGROUP BY expense.expense_description;\t----- bird -----\tstudent_club",
    "66": " SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nWHERE event_status = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": " SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": " SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": " SELECT expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": " SELECT event.type\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": " SELECT m.last_name, m.department, m.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": " SELECT budget.category, budget.spent\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nJOIN attendance ON event.event_id = attendance.link_to_event\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE event.location = 'MU 215'\nAND event.type = 'Guest Speaker'\nAND budget.spent = 0;\t----- bird -----\tstudent_club",
    "73": " SELECT ROUND((COUNT(CASE WHEN expense.amount = 50 THEN 1 END)::FLOAT / COUNT(DISTINCT member.member_id)) * 100, 2) AS percentage\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.t_shirt_size = 'Medium' AND expense.source = 'Student_Club';\t----- bird -----\tstudent_club",
    "74": " SELECT event_name\nFROM event\nWHERE type = 'Game'\nAND status = 'Closed'\nAND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": " SELECT m.first_name, m.last_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": " SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": " SELECT m.first_name, m.last_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "78": " SELECT \n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS InPatientMale,\n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS OutPatientMale,\n    (SELECT (CAST((SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS FLOAT) / CAST((SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS FLOAT)) * 100 - 100 AS DeviationPercentage\nFROM Patient\nGROUP BY Admission;\t----- bird -----\tthrombosis_prediction",
    "79": " SELECT ROUND((COUNT(CASE WHEN Birthday > '1930' AND Sex = 'F' THEN 1 END) * 100.0) / COUNT(CASE WHEN Sex = 'F' THEN 1 END), 2) AS percentage_female_born_after_1930\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "80": " SELECT \n    (COUNT(DISTINCT Examination.ID) FILTER (WHERE Examination.Admission = '-') / \n    COUNT(DISTINCT Examination.ID) FILTER (WHERE Examination.Admission = '+'))::FLOAT AS outpatient_to_inpatient_ratio\nFROM \n    Examination\nJOIN \n    Patient ON Examination.PatientID = Patient.ID\nWHERE \n    Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": " SELECT l.date, l.result\nFROM Laboratory l\nJOIN Examination e ON l.examination_id = e.id\nJOIN Patient p ON e.patient_id = p.id\nWHERE p.id = '30609';\t----- bird -----\tthrombosis_prediction",
    "82": " SELECT p.patient_id, p.sex, p.birthday\nFROM Patient p\nJOIN Laboratory l ON p.patient_id = l.patient_id\nWHERE l.ldh > 500;\t----- bird -----\tthrombosis_prediction",
    "83": " SELECT Patient.ID, (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Patient.Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Laboratory.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": " SELECT p.id, p.sex, l.disease\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.thrombosis_degree = 2;\t----- bird -----\tthrombosis_prediction",
    "85": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE p.Sex = 'F' AND e.Description = '1997' AND e.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.thrombosis = 1\nAND p.sex = 'F'\nAND EXTRACT(YEAR FROM e.examination_date) = 1997;\t----- bird -----\tthrombosis_prediction",
    "87": " SELECT l.symptoms_observed, d.diagnosis\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nJOIN Diagnosis d ON l.diagnosis_id = d.diagnosis_id\nWHERE p.birthday = (SELECT MAX(birthday) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "88": " SELECT MAX(Laboratory.Date) AS Oldest_SJS_Patient_Lab_Date,\n       (SUBTRACT(year(Examination.First_Date), year(Patient.Birthday))) AS Age_At_Arrival\nFROM Patient\nJOIN Examination ON Patient.Patient_ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.Examination_ID = Laboratory.Examination_ID\nWHERE Examination.Diagnosis = 'SJS'\nORDER BY Age_At_Arrival DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": " SELECT \n    (SELECT COUNT(*) FROM Examination WHERE SEX = 'M' AND UA <= '8.0')::FLOAT / \n    (SELECT COUNT(*) FROM Examination WHERE SEX = 'F' AND UA <= '6.5')::FLOAT AS male_to_female_ratio;\t----- bird -----\tthrombosis_prediction",
    "90": " SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE EXTRACT(YEAR FROM e.ExaminationDate) BETWEEN '1990' AND '1993'\nAND EXTRACT(YEAR FROM AGE(p.Birthday)) < 18;\t----- bird -----\tthrombosis_prediction",
    "91": " SELECT \n    P.PatientID,\n    (EXTRACT(YEAR FROM E.ExaminationDate) - EXTRACT(YEAR FROM P.Birthday)) AS AgeAtExamination,\n    L.HGB,\n    D.Diagnosis\nFROM \n    Patient P\nJOIN \n    Examination E ON P.PatientID = E.PatientID\nJOIN \n    Laboratory L ON E.ExaminationID = L.ExaminationID\nJOIN \n    Diagnosis D ON E.ExaminationID = D.ExaminationID\nWHERE \n    L.HGB = (SELECT MAX(HGB) FROM Laboratory)\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": " SELECT Laboratory.Description, Laboratory.Result\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE Patient.Diagnosis = 'SLE'\nAND Examination.Description = '1994-02-19'\nAND Laboratory.Description = '1993-11-12'\nAND Laboratory.TestName = 'anti-Cardiolipin IgM';\t----- bird -----\tthrombosis_prediction",
    "93": " SELECT ((SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` END) - SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` END)) / SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` END)) * 100 AS decrease_rate\nFROM Examination\nJOIN Patient ON Examination.patient_id = Patient.id\nWHERE Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": " SELECT p.id\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE e.date BETWEEN '1987-07-06' AND '1996-01-31'\nAND l.GPT > 30\nAND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.thrombosis_level = 2\nAND l.ana_pattern = 'S'\nAND l.aCl_IgM > (SELECT AVG(aCl_IgM) * 1.2 FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "96": " SELECT p.patient_id\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE e.admission = '-'\nAND l.date LIKE '1991-10%'\nAND l.t_bil < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": " SELECT AVG(ALB)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Laboratory.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE p.sex = 'F' AND l.diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": " SELECT ROUND((COUNT(CASE WHEN YEAR(BIRTHDAY) = '1980' AND DIAGNOSIS = 'RA' AND SEX = 'F' THEN 1 END)::FLOAT / COUNT(CASE WHEN YEAR(BIRTHDAY) = '1980' AND DIAGNOSIS = 'RA' THEN 1 END)::FLOAT) * 100, 2) AS percentage_women;\t----- bird -----\tthrombosis_prediction",
    "100": " SELECT CASE\n  WHEN EXISTS (\n    SELECT 1\n    FROM Patient p\n    JOIN Examination e ON p.patient_id = e.patient_id\n    JOIN Laboratory l ON e.examination_id = l.examination_id\n    WHERE p.patient_id = 57266\n    AND (\n      (l.test_name = 'Uric Acid' AND l.result > 8.0 AND p.sex = 'M')\n      OR\n      (l.test_name = 'Uric Acid' AND l.result > 6.5 AND p.sex = 'F')\n    )\n  ) THEN 'Yes'\n  ELSE 'No'\nEND AS uric_acid_normal_range;\t----- bird -----\tthrombosis_prediction",
    "101": " SELECT p.id\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE p.sex = 'M' AND l.gpt >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": " SELECT p.patient_id, p.date_of_birth, e.examination_date, l.ALT_value\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.ALT_value > 60\nORDER BY p.date_of_birth ASC;\t----- bird -----\tthrombosis_prediction",
    "103": " SELECT p.id, p.sex, p.birthday\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.test_name = 'urea nitrogen' AND l.result = 29;\t----- bird -----\tthrombosis_prediction",
    "104": " SELECT p.sex, COUNT(DISTINCT p.id) AS patient_count\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.test_name = 'total bilirubin' AND l.result > 2.0\nGROUP BY p.sex;\t----- bird -----\tthrombosis_prediction",
    "105": " SELECT AVG(age)\nFROM (\n    SELECT EXTRACT(YEAR FROM AGE(NOW(), birthday)) AS age\n    FROM Patient\n    JOIN Examination ON Patient.ID = Examination.patient_id\n    JOIN Laboratory ON Examination.lab_id = Laboratory.id\n    WHERE sex = 'M' AND T-CHO >= 250\n) AS subquery;\t----- bird -----\tthrombosis_prediction",
    "106": " SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.test_name = 'triglyceride' AND Laboratory.result > 200\nAND (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Patient.birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": " SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Patient.birthday BETWEEN '1936-01-01' AND '1956-12-31'\nAND Patient.sex = 'M'\nAND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": " SELECT p.ID, p.sex, (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.Birthday)) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.GLU >= 180 AND l.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "109": " SELECT p.ID, EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.Birthday)) AS age, d.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nJOIN Diagnosis d ON p.ID = d.PatientID\nWHERE l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": " SELECT p.id, p.sex\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE e.diagnosis = 'SLE' AND l.hgb BETWEEN 10 AND 17\nORDER BY p.birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": " SELECT Patient.ID, (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Laboratory.HCT >= 52\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) > 2;\t----- bird -----\tthrombosis_prediction",
    "112": " SELECT\n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal,\n  SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal\nFROM\n  Laboratory;\t----- bird -----\tthrombosis_prediction",
    "113": " SELECT p.PatientID, p.Name\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE YEAR(e.Date) = '1984'\nAND (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) < 50\nAND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": " SELECT ROUND((SUM(CASE WHEN SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END) / SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END)) * 100, 2) AS percentage\nFROM Examination\nJOIN Patient ON Examination.patient_id = Patient.id\nWHERE (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE p.sex = 'M'\nAND l.wbc > 3.5 AND l.wbc < 9.0\nAND (l.fg <= 150 OR l.fg >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": " SELECT COUNT(DISTINCT p.patient_id)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.igg >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.igg BETWEEN 900 AND 2000\nAND e.symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.IGA > 80 AND l.IGA < 500 AND p.FirstDate >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "119": " SELECT Diagnosis, COUNT(Diagnosis) AS Diagnosis_Count\nFROM Patient\nJOIN Examination ON Patient.Patient_ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.Examination_ID = Laboratory.Examination_ID\nWHERE IgM <= 40 OR IgM >= 400\nGROUP BY Diagnosis\nORDER BY Diagnosis_Count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.description = '+';\t----- bird -----\tthrombosis_prediction",
    "121": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.creatinine >= 1.5 AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": " SELECT COUNT(DISTINCT p.patient_id)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.anti_ribonuclear_protein = '-'\nAND e.admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.anti_sm IN ('-', '+-') AND l.thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": " SELECT COUNT(DISTINCT p.patient_id)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.test_name = 'anti-scl70' AND l.result = 'negative'\nAND p.sex = 'F' AND e.symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": " SELECT COUNT(DISTINCT p.id)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.centromere IN ('-', '+-') AND l.SSB IN ('-', '+-') AND p.sex = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": " SELECT MIN(birthday)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.glutamic_oxaloacetic_transaminase >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.creatinine_phosphokinase < 250\nAND (l.kct = '+' OR l.rvvt = '+' OR l.lac = '+');\t----- bird -----\tthrombosis_prediction",
    "128": " SELECT league_name\nFROM League\nJOIN Match ON League.league_id = Match.league_id\nWHERE season = '2015/2016'\nGROUP BY league_name\nORDER BY SUM(home_team_goal + away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": " SELECT Team.team_long_name\nFROM Team\nJOIN Match ON Team.team_id = Match.away_team_api_id\nWHERE Match.season = '2009/2010'\nAND Match.away_team_goal > Match.home_team_goal\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": " SELECT t.name, MAX(pa.buildUpPlaySpeed) AS buildUpPlaySpeed\nFROM Team t\nJOIN Team_Attributes ta ON t.id = ta.team_id\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": " SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nJOIN (\n    SELECT league_id, COUNT(*) AS draw_count\n    FROM Match\n    WHERE season = '2015/2016' AND home_team_goal = away_team_goal\n    GROUP BY league_id\n) AS DrawMatches ON League.id = DrawMatches.league_id\nORDER BY draw_count DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": " SELECT Player.name, (EXTRACT(YEAR FROM AGE(CURRENT_DATE, Player.birthday))) AS age\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.sprint_speed >= 97\nAND Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "133": " SELECT league_id, COUNT(*) AS matches_played\nFROM Match\nGROUP BY league_id\nORDER BY matches_played DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": " SELECT team_fifa_api_id\nFROM Team\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": " SELECT team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.id = Team_Attributes.team_id\nWHERE buildUpPlayPassing > (\n    SELECT DIVIDE(SUM(buildUpPlayPassing), COUNT(team_long_name))\n    FROM Team_Attributes\n    WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012'\n)\nAND strftime('%Y', date) = '2012';\t----- bird -----\teuropean_football_2",
    "136": " SELECT \n    ROUND((COUNT(CASE WHEN preferred_foot = 'left' AND YEAR(birthday) BETWEEN '1987' AND '1992' THEN 1 END) * 100.0) / COUNT(*), 2) AS percentage_left_foot_players_1987_1992\nFROM \n    Player;\t----- bird -----\teuropean_football_2",
    "137": " SELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes\nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "138": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.height > 180\nGROUP BY p.name\nORDER BY AVG(pa.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": " SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nJOIN (\n    SELECT Match.league_id, AVG(CASE WHEN Match.home_team_id = Match.id THEN Match.home_team_goal ELSE Match.away_team_goal END) AS avg_home_goals,\n           AVG(CASE WHEN Match.home_team_id != Match.id THEN Match.home_team_goal ELSE Match.away_team_goal END) AS avg_away_goals\n    FROM Match\n    WHERE Match.season = '2009/2010'\n    GROUP BY Match.league_id\n) AS Match_Avg ON League.id = Match_Avg.league_id\nWHERE Match_Avg.avg_home_goals > Match_Avg.avg_away_goals;\t----- bird -----\teuropean_football_2",
    "140": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE SUBSTR(pa.birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": " SELECT AVG(Player_Attributes.rating) AS overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_id = Player.id\nWHERE Player.name = 'Gabriel Tamas'\nAND strftime('%Y', Player_Attributes.date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": " SELECT AVG(home_team_goal)\nFROM Match\nWHERE name = 'Poland' AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE p.height = (SELECT MIN(height) FROM Player)\nAND p.id = (SELECT player_id FROM Player_Attributes WHERE attribute = 'finishing' ORDER BY value DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "144": " SELECT AVG(t2.overall_rating)\nFROM Player_Attributes t2\nJOIN Player t1 ON t1.id = t2.player_id\nWHERE t1.height > 170\nAND strftime('%Y', t1.date) >= '2010' AND strftime('%Y', t1.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": " SELECT\n  (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_name = 'Abdou Diallo') -\n  (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_name = 'Aaron Appindangoye') AS difference_in_avg_ball_control;\t----- bird -----\teuropean_football_2",
    "146": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE p.name = 'Aaron Lennon' OR p.name = 'Abdelaziz Barrada'\nORDER BY pa.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nORDER BY pa.height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": " SELECT COUNT(*)\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.preferred_foot = 'left' AND Player_Attributes.attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": " SELECT COUNT(DISTINCT p.player_id)\nFROM Player p\nJOIN Player_Attributes pa ON p.player_id = pa.player_id\nWHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE pa.volley_score > 70 AND pa.dribbling_score > 70;\t----- bird -----\teuropean_football_2",
    "151": " SELECT COUNT(*)\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League'\nAND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": " SELECT league_name\nFROM League\nWHERE season = '2008/2009'\nORDER BY COUNT(match_id) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": " SELECT \n    ROUND(((overall_rating WHERE player_name = 'Ariel Borysiuk' - overall_rating WHERE player_name = 'Paulin Puel') / overall_rating WHERE player_name = 'Paulin Puel') * 100, 2) AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": " SELECT AVG(T1.overall_rating)\nFROM Player_Attributes T1\nJOIN Player P ON T1.player_id = P.player_id\nWHERE P.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": " SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score,\n       CASE\n           WHEN MAX(chanceCreationPassing) >= 80 THEN 'High'\n           WHEN MAX(chanceCreationPassing) >= 60 THEN 'Medium'\n           ELSE 'Low'\n       END AS classification\nFROM Player_Attributes\nWHERE team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nJOIN Match m ON pa.match_id = m.id\nWHERE pa.overall_rating = 77\nAND m.date LIKE '2016-06-23%'\nORDER BY p.birthday DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": " SELECT AVG(rating) AS overall_rating\nFROM Player_Attributes\nWHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": " SELECT p.player_name, pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_id = pa.player_id\nWHERE p.player_name = 'Francesco Migliore'\nAND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": " SELECT m.match_date\nFROM Match m\nJOIN Player_Attributes pa ON m.player_id = pa.player_id\nWHERE pa.player_name = 'Kevin Constant'\nAND pa.crossing = (\n    SELECT MAX(crossing)\n    FROM Player_Attributes\n    WHERE player_name = 'Kevin Constant'\n);\t----- bird -----\teuropean_football_2",
    "160": " SELECT m.match_id, m.match_date, p.player_name, pa.pass_class\nFROM Match m\nJOIN Team t ON m.team_id = t.team_id\nJOIN Team_Attributes ta ON t.team_id = ta.team_id\nJOIN Player p ON m.player_id = p.player_id\nJOIN Player_Attributes pa ON p.player_id = pa.player_id\nWHERE t.team_long_name = 'FC Lorient' AND m.match_date LIKE '2010-02-22%'\nAND pa.pass_class = 'build up play';\t----- bird -----\teuropean_football_2",
    "161": " SELECT pa.defence_aggression_class\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_id = p.player_id\nJOIN Team t ON p.team_id = t.team_id\nWHERE t.team_long_name = 'Hannover 96' AND t.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": " SELECT AVG(Player_Attributes.overall_rating)\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_id = Player.player_id\nWHERE Player.player_name = 'Marko Arnautovic'\nAND Player_Attributes.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": " SELECT \n    (\n        (SELECT overall_rating FROM Player WHERE player_name = 'Landon Donovan') - \n        (SELECT overall_rating FROM Player WHERE player_name = 'Jordan Bowery')\n    ) / \n    (SELECT overall_rating FROM Player WHERE player_name = 'Landon Donovan') * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "164": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nORDER BY pa.height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nJOIN Team t ON pa.team_id = t.id\nJOIN Team_Attributes ta ON t.id = ta.team_id\nWHERE ta.attribute_name = 'attacking_work_rate' AND ta.attribute_value = 'high';\t----- bird -----\teuropean_football_2",
    "167": " SELECT team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.id = Team_Attributes.team_id\nWHERE chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": " SELECT COUNT(*)\nFROM Player\nWHERE player_name LIKE 'Aaron%'\nAND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": " SELECT SUBTRACT(jumping AND id = 6, jumping AND id = 23) AS score_difference\nFROM Player_Attributes\nWHERE id IN (6, 23);\t----- bird -----\teuropean_football_2",
    "170": " SELECT p.id\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nJOIN Match m ON p.id = m.player_id\nJOIN Team t ON m.team_id = t.id\nWHERE pa.potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND pa.preferred_foot = 'right'\nORDER BY p.id\nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "171": " SELECT COUNT(*)\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.crossing = (SELECT MAX(crossing) FROM Player_Attributes)\nAND Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": " SELECT home_team_goal, away_team_goal\nFROM Match\nWHERE match_date = '2008-09-24'\nAND league_name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "173": " SELECT Team_Attributes.buildUpPlaySpeedClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_id = Team.team_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": " SELECT p.name, pa.finishing_rate, pa.curve_score\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nJOIN (\n    SELECT player_id, MAX(weight) AS max_weight\n    FROM Player\n    GROUP BY player_id\n) AS max_weights ON p.id = max_weights.player_id\nWHERE pa.weight = max_weights.max_weight;\t----- bird -----\teuropean_football_2",
    "175": " SELECT League.name, COUNT(Match.id) AS games_count\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY games_count DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": " SELECT team_long_name\nFROM Team\nWHERE team_api_id = (\n  SELECT away_team_api_id\n  FROM Match\n  GROUP BY away_team_api_id\n  ORDER BY MAX(away_team_goal) DESC\n  LIMIT 1\n);\t----- bird -----\teuropean_football_2",
    "177": " SELECT p.name\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": " SELECT ROUND((COUNT(*) FILTER (WHERE height < 180 AND overall_rating > 70) / COUNT(*)) * 100, 2) AS percentage_under_180_strength_over_70\nFROM Player;\t----- bird -----\teuropean_football_2",
    "179": " SELECT drivers.driverref\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nWHERE qualifying.raceid = 20 AND qualifying.q1 = (\n    SELECT MAX(q1)\n    FROM qualifying\n    WHERE raceid = 20\n);\t----- bird -----\tformula_1",
    "180": " SELECT drivers.surname\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nJOIN races ON qualifying.raceid = races.raceid\nWHERE races.raceid = 19 AND qualifying.q2 = (\n    SELECT MIN(q2)\n    FROM qualifying\n    WHERE raceid = 19\n);\t----- bird -----\tformula_1",
    "181": " SELECT races.name\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "182": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": " SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": " SELECT q.position, q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverid = d.driverid\nWHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceid = 354;\t----- bird -----\tformula_1",
    "185": " SELECT drivers.number\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nWHERE qualifying.q3 LIKE '0:01:54%'\nAND qualifying.raceid = 903;\t----- bird -----\tformula_1",
    "186": " SELECT COUNT(*)\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Bahrain Grand Prix'\nAND races.year = 2007\nAND results.time IS NULL;\t----- bird -----\tformula_1",
    "187": " SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.raceid = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": " SELECT d.url\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN races ra ON r.raceid = ra.raceid\nWHERE ra.raceid = 161 AND r.lapTime LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "189": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": " SELECT c.url\nFROM constructors c\nJOIN constructorResults cr ON c.constructorid = cr.constructorid\nJOIN races r ON cr.raceid = r.raceid\nWHERE r.raceid = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": " SELECT d.code\nFROM drivers d\nJOIN qualifying q ON d.driverid = q.driverid\nJOIN races r ON q.raceid = r.raceid\nWHERE r.raceid = 45 AND q.q3 LIKE '0:01:33';\t----- bird -----\tformula_1",
    "192": " SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = EXTRACT(YEAR FROM races.date)\nWHERE races.raceid = 901;\t----- bird -----\tformula_1",
    "193": " SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN races ra ON r.raceid = ra.raceid\nWHERE ra.raceid = 872 AND r.laps = r.laps;\t----- bird -----\tformula_1",
    "194": " SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN lapTimes lt ON r.resultid = lt.resultid\nWHERE lt.fastestLapSpeed = (SELECT MAX(lt.fastestLapSpeed) FROM lapTimes)\nLIMIT 1;\t----- bird -----\tformula_1",
    "195": " SELECT \n    (\n        (SELECT fastestLapSpeed FROM results WHERE raceid = 853) - \n        (SELECT fastestLapSpeed FROM results WHERE raceid = 854)\n    ) / (SELECT fastestLapSpeed FROM results WHERE raceid = 853) * 100 AS percentage_faster;\t----- bird -----\tformula_1",
    "196": " SELECT\n    (COUNT(DISTINCT races.driverid) FILTER (WHERE races.date = '1983-07-16' AND races.time IS NOT NULL)::FLOAT / COUNT(DISTINCT races.driverid) FILTER (WHERE races.date = '1983-07-16')) * 100 AS completion_rate\nFROM\n    races;\t----- bird -----\tformula_1",
    "197": " SELECT races.name\nFROM races\nJOIN seasons ON races.year = seasons.year\nWHERE races.year = (SELECT MIN(year) FROM seasons)\nAND races.date >= (SELECT MIN(date) FROM races WHERE year = (SELECT MIN(year) FROM seasons));\t----- bird -----\tformula_1",
    "198": " SELECT drivers.forename, drivers.surname, MAX(results.points) AS max_points\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nGROUP BY drivers.driverid\nORDER BY max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": " SELECT drivers.forename, drivers.surname, races.name, MIN(lapTimes.milliseconds) AS best_lap_time\nFROM lapTimes\nJOIN results ON lapTimes.resultid = results.resultid\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nGROUP BY drivers.forename, drivers.surname, races.name\nORDER BY best_lap_time ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "200": " SELECT AVG(milliseconds)\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix'\nAND races.year = 2009;\t----- bird -----\tformula_1",
    "201": " SELECT \n    (COUNT(*) FILTER (WHERE surname = 'Hamilton' AND position > 1)::FLOAT / COUNT(*) FILTER (WHERE surname = 'Hamilton')::FLOAT) * 100 AS percentage_not_first_position\nFROM \n    results\nJOIN \n    drivers ON results.driverid = drivers.driverid\nWHERE \n    drivers.surname = 'Hamilton' AND results.year >= 2010;\t----- bird -----\tformula_1",
    "202": " SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) AS max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverid = driverStandings.driverid\nGROUP BY drivers.driverid\nORDER BY max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": " SELECT drivers.forename, drivers.surname, (YEAR(CURRENT_TIMESTAMP) - YEAR(drivers.dob)) AS age\nFROM drivers\nWHERE drivers.nationality = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": " SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location AS circuit_location\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005;\t----- bird -----\tformula_1",
    "205": " SELECT races.name, races.date\nFROM races\nJOIN drivers ON races.driverid = drivers.driverid\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND races.round < 20;\t----- bird -----\tformula_1",
    "206": " SELECT races.year, races.name\nFROM races\nJOIN results ON races.raceid = results.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": " SELECT races.year, results.points\nFROM races\nJOIN results ON races.raceid = results.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": " SELECT (COUNT(*) FILTER (WHERE country = 'Germany' AND name = 'European Grand Prix') / COUNT(*) FILTER (WHERE name = 'European Grand Prix')) * 100 AS percentage_in_germany;\t----- bird -----\tformula_1",
    "209": " SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": " SELECT circuits.circuitref\nFROM circuits\nWHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": " SELECT country\nFROM drivers\nORDER BY dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "212": " SELECT drivers.driverref\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007\nORDER BY results.rank\nLIMIT 1;\t----- bird -----\tformula_1",
    "213": " SELECT races.name, drivers.forename, drivers.surname, results.rank\nFROM races\nJOIN results ON races.raceid = results.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": " SELECT MAX(fastestlapspeed) AS fastest_lap_speed\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "215": " SELECT drivers.forename, drivers.surname, driverStandings.positionOrder\nFROM drivers\nJOIN driverStandings ON drivers.driverid = driverStandings.driverid\nJOIN results ON driverStandings.resultid = results.resultid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008;\t----- bird -----\tformula_1",
    "216": " SELECT r.time\nFROM results r\nJOIN races rc ON r.raceid = rc.raceid\nJOIN drivers d ON r.driverid = d.driverid\nWHERE rc.name = 'Chinese Grand Prix'\nAND rc.year = 2008\nAND r.rank = 2;\t----- bird -----\tformula_1",
    "217": " SELECT COUNT(DISTINCT drivers.driverid)\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.date = '2008-04-19' AND results.position IS NOT NULL;\t----- bird -----\tformula_1",
    "218": " SELECT \n    ((SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') AND position = (SELECT MAX(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix'))) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') AND position = 1)) * 100 / (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') AND position = 1) AS percentage_faster;\t----- bird -----\tformula_1",
    "219": " SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": " SELECT MAX(results.points) AS max_points\nFROM results\nJOIN constructors ON results.constructorid = constructors.constructorid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "221": " SELECT c.name\nFROM constructors c\nJOIN results r ON c.constructorid = r.constructorid\nWHERE r.raceid = 291 AND r.points = 0;\t----- bird -----\tformula_1",
    "222": " SELECT COUNT(DISTINCT constructors.constructorid)\nFROM constructors\nJOIN races ON constructors.constructorid = races.constructorid\nJOIN results ON races.raceid = results.raceid\nWHERE constructors.nationality = 'Japanese'\nAND results.points = 0\nGROUP BY constructors.constructorid\nHAVING COUNT(DISTINCT races.raceid) = 2;\t----- bird -----\tformula_1",
    "223": " SELECT\n    (COUNT(DISTINCT driverid) FILTER (WHERE nationality = 'Japanese' AND year BETWEEN 2007 AND 2009 AND time IS NOT NULL) * 100.0) /\n    (COUNT(DISTINCT driverid) FILTER (WHERE year BETWEEN 2007 AND 2009)) AS completion_percentage\nFROM\n    drivers\nJOIN\n    results ON drivers.driverid = results.driverid\nJOIN\n    races ON results.raceid = races.raceid\nWHERE\n    races.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": " SELECT\n    races.year,\n    AVG(EXTRACT(EPOCH FROM results.time)) AS avg_time_seconds\nFROM\n    results\nJOIN\n    races ON results.raceid = races.raceid\nWHERE\n    races.year < 1975\nGROUP BY\n    races.year;\t----- bird -----\tformula_1",
    "225": " SELECT MAX(fastestlap) AS fastest_lap_number\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.year = 2009;\t----- bird -----\tformula_1",
    "226": " SELECT AVG(fastestLapSpeed)\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "227": " SELECT \n    (COUNT(DISTINCT driverid) FILTER (WHERE dob < 1985 AND laps > 50) * 100.0) / \n    (COUNT(DISTINCT driverid) FILTER (WHERE year BETWEEN 2000 AND 2005)) AS percentage\nFROM \n    drivers\nJOIN \n    results ON drivers.driverid = results.driverid\nWHERE \n    year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": " SELECT COUNT(DISTINCT drivers.driverid)\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE drivers.nationality = 'France'\nAND results.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": " SELECT code, forename, surname FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "230": " SELECT driverid, MIN(dob) AS youngest_dob\nFROM drivers\nGROUP BY driverid\nORDER BY youngest_dob DESC\nLIMIT 3;\n\nSELECT COUNT(*)\nFROM (\n    SELECT driverid\n    FROM drivers\n    WHERE nationality = 'Netherlandic'\n    ORDER BY dob DESC\n    LIMIT 3\n) AS youngest_netherlandic_drivers;\t----- bird -----\tformula_1",
    "231": " SELECT drivers.name\nFROM drivers\nWHERE drivers.nationality = 'German'\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": " SELECT d.driverid, d.code\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN lapTimes lt ON r.resultid = lt.resultid\nWHERE d.dob = 1971 AND lt.fastestLapTime = (\n    SELECT MIN(lt2.fastestLapTime)\n    FROM lapTimes lt2\n    JOIN results r2 ON lt2.resultid = r2.resultid\n    WHERE r2.raceid = r.raceid\n);\t----- bird -----\tformula_1",
    "233": " SELECT COUNT(*)\nFROM results\nJOIN status ON results.statusid = status.statusid\nWHERE status.status = 'disqualified'\nAND results.raceid BETWEEN 50 AND 100;\t----- bird -----\tformula_1",
    "234": " SELECT COUNT(*), circuits.location, circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nJOIN seasons ON races.year = seasons.year\nWHERE circuits.country = 'Austria';\t----- bird -----\tformula_1",
    "235": " SELECT drivers.name, races.date, races.time\nFROM drivers\nJOIN races ON drivers.driverid = races.driverid\nJOIN qualifying ON races.raceid = qualifying.raceid\nWHERE drivers.dob = (\n    SELECT MAX(drivers.dob)\n    FROM drivers\n    JOIN races ON drivers.driverid = races.driverid\n    JOIN qualifying ON races.raceid = qualifying.raceid\n    WHERE qualifying.qualifyid = (\n        SELECT MIN(qualifying.qualifyid)\n        FROM qualifying\n        WHERE qualifying.raceid = races.raceid\n    )\n);\t----- bird -----\tformula_1",
    "236": " SELECT drivers.forename, drivers.surname, AVG(pitStops.duration) AS avg_duration\nFROM drivers\nJOIN pitStops ON drivers.driverid = pitStops.driverid\nWHERE drivers.nationality = 'German'\nAND EXTRACT(YEAR FROM drivers.dob) BETWEEN 1980 AND 1985\nGROUP BY drivers.driverid\nORDER BY avg_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": " SELECT drivers.forename, drivers.surname, results.time\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008\nORDER BY results.points DESC, results.time ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "238": " SELECT c.constructorref, c.url\nFROM constructors c\nJOIN results r ON c.constructorid = r.constructorid\nJOIN races rc ON r.raceid = rc.raceid\nJOIN seasons s ON rc.year = s.year\nWHERE rc.name = 'Singapore Grand Prix' AND s.year = 2009\nORDER BY r.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "239": " SELECT p.power_name\nFROM superpower p\nJOIN hero_power hp ON p.id = hp.power_id\nJOIN superhero h ON hp.hero_id = h.id\nWHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": " SELECT c.name, c.nationality, SUM(r.points) AS total_points\nFROM constructors c\nJOIN results r ON c.constructorid = r.constructorid\nJOIN races rc ON r.raceid = rc.raceid\nJOIN seasons s ON rc.year = s.year\nWHERE rc.name = 'Monaco Grand Prix'\nAND s.year BETWEEN 1980 AND 2010\nGROUP BY c.name, c.nationality\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": " SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nJOIN races ON qualifying.raceid = races.raceid\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE circuits.name = 'Marina Bay Street Circuit'\nAND qualifying.q3 = (\n    SELECT MIN(q3)\n    FROM qualifying\n    JOIN races ON qualifying.raceid = races.raceid\n    JOIN circuits ON races.circuitid = circuits.circuitid\n    WHERE circuits.name = 'Marina Bay Street Circuit'\n    AND races.year = 2008\n)\nAND races.year = 2008;\t----- bird -----\tformula_1",
    "242": " SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS first_race_name\nFROM drivers d\nJOIN races r ON d.driverid = r.driverid\nWHERE d.dob = (SELECT MAX(dob) FROM drivers);\t----- bird -----\tformula_1",
    "243": " SELECT COUNT(*)\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nJOIN status s ON r.statusid = s.statusid\nWHERE s.status = 3\nAND ra.name = 'Canadian Grand Prix'\nAND r.driverid = (\n    SELECT driverid\n    FROM results\n    JOIN races ON results.raceid = races.raceid\n    JOIN status ON results.statusid = status.statusid\n    WHERE status.status = 3\n    AND races.name = 'Canadian Grand Prix'\n    GROUP BY driverid\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);\t----- bird -----\tformula_1",
    "244": " SELECT d.forename || ' ' || d.surname AS full_name\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nORDER BY r.time ASC\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": " SELECT circuits.name, MIN(lapTimes.time) AS lap_record\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nJOIN lapTimes ON races.raceid = lapTimes.raceid\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name;\t----- bird -----\tformula_1",
    "246": " SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN power ON hero_power.power_id = power.id\nWHERE power.power_name = 'Super Strength'\nAND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id AND colour.colour = 'Blue'\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": " SELECT superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Blue' AND colour.id = (SELECT id FROM colour WHERE colour = 'Blue')\nAND superhero.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "249": " SELECT superhero_name, height_cm\nFROM superhero\nWHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\nORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "250": " SELECT e.eye_colour_id, COUNT(e.id) AS popularity\nFROM superhero e\nJOIN publisher p ON e.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY e.eye_colour_id\nORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "251": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE sp.power_name = 'Super Strength' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "252": " SELECT publisher_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nAND colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "254": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": " SELECT race.race\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN race ON attribute.attribute_name = 'race'\nWHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND a.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nAND attribute.attribute_value = 100\nAND superhero.gender_id = (SELECT id FROM gender WHERE gender.gender = 'Female');\t----- bird -----\tsuperhero",
    "259": " SELECT \n    ROUND((COUNT(DISTINCT superhero.id) FILTER (WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0) / COUNT(DISTINCT superhero.id), 2) AS percentage_bad_alignment,\n    COUNT(DISTINCT superhero.id) FILTER (WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) FILTER (WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_comics_bad_alignment\nFROM \n    superhero;\t----- bird -----\tsuperhero",
    "260": " SELECT\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS Marvel_Count,\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS DC_Count,\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) -\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS Difference\n;\t----- bird -----\tsuperhero",
    "261": " SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": " SELECT COUNT(*)\nFROM superhero\nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": " SELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "264": " SELECT superpower.power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nJOIN superhero ON hero_power.hero_id = superhero.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male';\t----- bird -----\tsuperhero",
    "265": " SELECT superhero_name\nFROM superhero\nWHERE height_cm BETWEEN 170 AND 190\nAND eye_colour_id = (SELECT id FROM colour WHERE colour = 'No Colour');\t----- bird -----\tsuperhero",
    "266": " SELECT colour.colour\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN colour ON hero_attribute.attribute_value = colour.id\nWHERE superhero.height_cm = 185\nAND superhero.race = 'human'\nAND attribute.attribute_name = 'hair_colour';\t----- bird -----\tsuperhero",
    "267": " SELECT ROUND((COUNT(DISTINCT superhero.id) FILTER (WHERE superhero.height_cm BETWEEN 150 AND 180) AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))::FLOAT / COUNT(DISTINCT superhero.id) FILTER (WHERE superhero.height_cm BETWEEN 150 AND 180)) * 100, 2) AS percentage_marvel_comics;\t----- bird -----\tsuperhero",
    "268": " SELECT superhero_name\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')\nAND weight_kg > (SELECT MULTIPLY(AVG(weight_kg), 0.79) FROM superhero);\t----- bird -----\tsuperhero",
    "269": " SELECT p.power_name\nFROM hero_power hp\nJOIN superpower p ON hp.power_id = p.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "271": " SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": " SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": " SELECT c.colour AS eye_colour, hc.colour AS hair_colour, sc.colour AS skin_colour\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN colour c ON a.attribute_name = 'eye_colour_id' AND c.id = ha.attribute_value\nJOIN hero_attribute ha2 ON s.id = ha2.hero_id\nJOIN attribute a2 ON ha2.attribute_id = a2.id\nJOIN colour hc ON a2.attribute_name = 'hair_colour_id' AND hc.id = ha2.attribute_value\nJOIN hero_attribute ha3 ON s.id = ha3.hero_id\nJOIN attribute a3 ON ha3.attribute_id = a3.id\nJOIN colour sc ON a3.attribute_name = 'skin_colour_id' AND sc.id = ha3.attribute_value\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": " SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.eye_colour_id = s.hair_colour_id AND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": " SELECT ROUND((COUNT(CASE WHEN skin_colour_id IN (SELECT id FROM colour WHERE colour = 'Blue') AND gender_id IN (SELECT id FROM gender WHERE gender = 'Female') THEN 1 END)::FLOAT / COUNT(CASE WHEN gender_id IN (SELECT id FROM gender WHERE gender = 'Female') THEN 1 END)::FLOAT) * 100, 2) AS percentage_blue_female_superheroes;\t----- bird -----\tsuperhero",
    "276": " SELECT COUNT(*)\nFROM hero_power\nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "277": " SELECT superhero.height_cm\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": " SELECT superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Black' AND hero_attribute.attribute_name IN ('eye_colour_id', 'hair_colour_id');\t----- bird -----\tsuperhero",
    "279": " SELECT superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nAND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "281": " SELECT ROUND((COUNT(CASE WHEN gender = 'Female' AND publisher_name = 'Marvel Comics' THEN 1 END) * 100.0) / COUNT(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 END), 2) AS percentage_female_heroes_marvel;\t----- bird -----\tsuperhero",
    "282": " SELECT (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler');\t----- bird -----\tsuperhero",
    "283": " SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height\nFROM superhero\nGROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "284": " SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": " SELECT ah.attribute_name, ha.attribute_value\nFROM hero_attribute ha\nJOIN superhero h ON ha.hero_id = h.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Blue' AND colour.id = (\n    SELECT eye_colour_id\n    FROM superhero\n    WHERE superhero.id = hero_attribute.hero_id\n)\nAND superhero.hero_id IN (\n    SELECT hero_id\n    FROM hero_attribute\n    JOIN colour ON hero_attribute.attribute_id = colour.id\n    WHERE colour.colour = 'Brown' AND colour.id = (\n        SELECT hair_colour_id\n        FROM superhero\n        WHERE superhero.id = hero_attribute.hero_id\n    )\n);\t----- bird -----\tsuperhero",
    "288": " SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": " SELECT ROUND((COUNT(*) FILTER (WHERE eye_colour_id = 7)::FLOAT / COUNT(*)) * 100, 2) AS percentage_blue_eyes\nFROM superhero;\t----- bird -----\tsuperhero",
    "290": " SELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 1)::FLOAT / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2)::FLOAT AS male_to_female_ratio;\t----- bird -----\tsuperhero",
    "291": " SELECT c.colour\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN colour c ON a.id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan' AND a.attribute_name = 'eye_colour';\t----- bird -----\tsuperhero",
    "292": " SELECT\n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7) -\n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1) AS difference;\t----- bird -----\tsuperhero",
    "293": " SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": " SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN power ON hero_power.power_id = power.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE power.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": " SELECT\n    SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS dc_count,\n    SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_count,\n    (SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference\nFROM\n    superhero\n    JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "297": " SELECT u.displayname, MAX(u.reputation) AS reputation\nFROM users u\nWHERE u.displayname IN ('Harlan', 'Jarrod Dixon')\nGROUP BY u.displayname\nORDER BY reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": " SELECT displayname\nFROM users\nWHERE EXTRACT(YEAR FROM creationdate) = 2011;\t----- bird -----\tcodebase_community",
    "299": " SELECT COUNT(*)\nFROM users\nWHERE lastaccessdate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": " SELECT ownerdisplayname\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": " SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": " SELECT u.displayname\nFROM users u\nJOIN posts p ON u.id = p.lasteditoruserid\nWHERE p.title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": " SELECT COUNT(*)\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.age > 65 AND p.score >= 20;\t----- bird -----\tcodebase_community",
    "304": " SELECT p.body\nFROM posts p\nJOIN tags t ON p.id = t.excerptpostid\nWHERE t.tagname = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": " SELECT AVG(p.score)\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": " SELECT ROUND((COUNT(DISTINCT p.id) FILTER (WHERE p.score > 5 AND u.age > 65)::FLOAT / COUNT(DISTINCT p.id) FILTER (WHERE p.score > 5)::FLOAT) * 100, 2) AS percentage_elder_users\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.score > 5;\t----- bird -----\tcodebase_community",
    "307": " SELECT p.favoritecount\nFROM posts p\nJOIN comments c ON p.id = c.postid\nJOIN users u ON c.userid = u.id\nWHERE u.id = 3025 AND c.creationdate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "308": " SELECT \n    CASE \n        WHEN p.closeddate IS NOT NULL THEN 'Yes'\n        ELSE 'No'\n    END AS is_well_finished\nFROM \n    posts p\nJOIN \n    comments c ON p.id = c.postid\nJOIN \n    users u ON c.userid = u.id\nWHERE \n    u.id = 23853\n    AND c.creationdate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": " SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": " SELECT u.displayname\nFROM votes v\nJOIN users u ON v.userid = u.id\nWHERE v.id = 6347;\t----- bird -----\tcodebase_community",
    "311": " SELECT (COUNT(p.id) / NULLIF(COUNT(v.id), 0)) AS post_to_vote_ratio\nFROM posts p\nLEFT JOIN votes v ON p.id = v.postid\nWHERE p.owneruserid = 24;\t----- bird -----\tcodebase_community",
    "312": " SELECT viewcount\nFROM posts\nWHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": " SELECT c.text\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE p.score = 17;\t----- bird -----\tcodebase_community",
    "314": " SELECT u.displayname\nFROM users u\nJOIN comments c ON u.id = c.userid\nWHERE c.text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": " SELECT u.displayname, u.reputation\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nWHERE p.title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": " SELECT u.displayname AS editor\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": " SELECT c.text\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE p.title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": " SELECT u.displayname\nFROM users u\nJOIN votes v ON u.id = v.userid\nJOIN posts p ON v.postid = p.id\nWHERE v.bountyamount = 50\nAND p.title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": " SELECT p.title, c.text, AVG(p.viewcount) AS avg_view_count\nFROM posts p\nJOIN comments c ON p.id = c.postid\nJOIN tags t ON p.id = t.excerptpostid\nWHERE t.tagname = '<humor>'\nGROUP BY p.title, c.text;\t----- bird -----\tcodebase_community",
    "320": " SELECT COUNT(DISTINCT userid)\nFROM badges\nGROUP BY userid\nHAVING COUNT(name) > 5;\t----- bird -----\tcodebase_community",
    "321": " SELECT u.id, u.displayname\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nWHERE p.viewcount >= 1000\nGROUP BY u.id, u.displayname\nHAVING COUNT(DISTINCT p.id) = 1;\t----- bird -----\tcodebase_community",
    "322": " SELECT \n    ((COUNT(CASE WHEN YEAR(badges.date) = 2010 THEN 1 END) * 100.0) / COUNT(CASE WHEN YEAR(badges.date) = 2010 THEN 1 END)) -\n    ((COUNT(CASE WHEN YEAR(badges.date) = 2011 THEN 1 END) * 100.0) / COUNT(CASE WHEN YEAR(badges.date) = 2011 THEN 1 END)) AS percentage_difference\nFROM \n    badges\nWHERE \n    badges.name = 'Student';\t----- bird -----\tcodebase_community",
    "323": " SELECT AVG(upvotes) AS avg_upvotes, AVG(age) AS avg_age\nFROM users\nWHERE id IN (\n    SELECT owneruserid\n    FROM posts\n    GROUP BY owneruserid\n    HAVING COUNT(id) > 10\n);\t----- bird -----\tcodebase_community",
    "324": " SELECT \n    (SELECT COUNT(*) FROM votes WHERE YEAR(creationdate) = 2010)::FLOAT / \n    (SELECT COUNT(*) FROM votes WHERE YEAR(creationdate) = 2011)::FLOAT AS vote_ratio;\t----- bird -----\tcodebase_community",
    "325": " SELECT p.id\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'slashnick'\nORDER BY p.answercount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": " SELECT p.title, MAX(p.viewcount) AS popularity\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'Harvey Motulsky' OR u.displayname = 'Noah Snyder'\nGROUP BY p.title\nORDER BY popularity DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": " SELECT t.tagname\nFROM tags t\nJOIN posts p ON t.excerptpostid = p.id\nJOIN comments c ON p.id = c.postid\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'Mark Meckes' AND c.commentcount = 0;\t----- bird -----\tcodebase_community",
    "328": " SELECT (COUNT(*) FILTER (WHERE tags.tagname = 'r')::FLOAT / COUNT(*) FILTER (WHERE posts.ownerdisplayname = 'Community')) * 100 AS percentage_r_language_posts;\t----- bird -----\tcodebase_community",
    "329": " SELECT\n    (SELECT SUM(viewcount) FROM posts WHERE ownerdisplayname = 'Mornington') -\n    (SELECT SUM(viewcount) FROM posts WHERE ownerdisplayname = 'Amos') AS view_count_difference;\t----- bird -----\tcodebase_community",
    "330": " SELECT AVG(monthly_links) AS average_monthly_links\nFROM (\n    SELECT EXTRACT(MONTH FROM creationdate) AS month, COUNT(*) AS monthly_links\n    FROM postLinks\n    JOIN posts ON postLinks.postid = posts.id\n    WHERE YEAR(creationdate) = 2010 AND answercount <= 2\n    GROUP BY month\n) AS monthly_links_per_month;\t----- bird -----\tcodebase_community",
    "331": " SELECT MIN(creationdate) AS first_vote_date\nFROM votes\nJOIN users ON votes.userid = users.id\nWHERE users.displayname = 'chl';\t----- bird -----\tcodebase_community",
    "332": " SELECT u.displayname\nFROM users u\nJOIN badges b ON u.id = b.userid\nWHERE b.name = 'Autobiographer'\nORDER BY b.date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": " SELECT COUNT(DISTINCT u.id)\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nJOIN votes v ON p.id = v.postid\nWHERE u.location = 'United Kingdom'\nAND v.bountyamount >= 4;\t----- bird -----\tcodebase_community",
    "334": " SELECT p.id, p.title\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'Harvey Motulsky'\nORDER BY p.viewcount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": " SELECT p.id, u.displayname\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE EXTRACT(YEAR FROM p.creationdate) = 2010\nORDER BY p.favoritecount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": " SELECT \n    (COUNT(*) FILTER (WHERE YEAR(creationdate) = 2011 AND owneruserid IN (SELECT id FROM users WHERE reputation > 1000)) / COUNT(*)) * 100 AS percentage_posts_with_reputation_over_1000_in_2011;\t----- bird -----\tcodebase_community",
    "337": " SELECT posts.viewcount AS total_views, users.displayname AS last_posted_by\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE posts.title = 'Computer Game Datasets'\nORDER BY posts.lasactivitydate DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "338": " SELECT COUNT(*)\nFROM comments\nWHERE postid = (SELECT id FROM posts ORDER BY score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "339": " SELECT c.text, u.displayname\nFROM comments c\nJOIN users u ON c.userid = u.id\nWHERE c.postid IN (\n    SELECT id FROM posts WHERE title = 'Analysing wind data with R'\n)\nORDER BY c.creationdate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": " SELECT \n    (COUNT(*) FILTER (WHERE score > 50)::FLOAT / COUNT(*)) * 100 AS percentage_score_above_50\nFROM \n    posts\nWHERE \n    owneruserid = (SELECT id FROM users ORDER BY reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "341": " SELECT tags.excerptpostid, tags.wikipostid\nFROM tags\nWHERE tags.tagname = 'sample';\t----- bird -----\tcodebase_community",
    "342": " SELECT u.reputation, u.upvotes\nFROM users u\nJOIN comments c ON u.id = c.userid\nWHERE c.text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": " SELECT c.text\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE p.viewcount BETWEEN 100 AND 150\nORDER BY c.score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": " SELECT COUNT(*)\nFROM comments\nWHERE postid IN (\n    SELECT id\n    FROM posts\n    WHERE commentcount = 1\n)\nAND score = 0;\t----- bird -----\tcodebase_community",
    "345": " SELECT ROUND((COUNT(DISTINCT comments.userid) FILTER (WHERE comments.score BETWEEN 5 AND 10 AND comments.upvotes = 0)::FLOAT) / COUNT(DISTINCT comments.userid) FILTER (WHERE comments.score BETWEEN 5 AND 10)::FLOAT) * 100, 2) AS percentage_zero_upvotes\nFROM comments\nWHERE comments.score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": " SELECT cards.id, cards.name\nFROM cards\nWHERE cards.cardkingdomfoilid IS NOT NULL AND cards.cardkingdomid IS NOT NULL;\t----- bird -----\tcard_games",
    "347": " SELECT c.id, c.name, c.bordercolor, c.hasfoil, c.hasnonfoil\nFROM cards c\nWHERE c.bordercolor IS NULL AND (c.hasfoil = 0 OR c.hasnonfoil = 0);\t----- bird -----\tcard_games",
    "348": " SELECT cards.name\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator';\t----- bird -----\tcard_games",
    "349": " SELECT l.status\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE c.type = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": " SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.power = '*' OR cards.power IS NULL\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "351": " SELECT c.id, r.text\nFROM cards c\nJOIN rulings r ON c.id = r.id\nWHERE c.artist = 'Stephen Daniele' AND c.hascontentwarning = 1;\t----- bird -----\tcard_games",
    "352": " SELECT cards.name, cards.artist, cards.ispromo\nFROM cards\nJOIN (\n    SELECT cards.id, COUNT(rulings.uuid) AS ruling_count\n    FROM cards\n    JOIN rulings ON cards.id = rulings.id\n    GROUP BY cards.id\n    ORDER BY ruling_count DESC\n    LIMIT 1\n) AS most_rulings ON cards.id = most_rulings.id\nWHERE cards.ispromo = 1;\t----- bird -----\tcard_games",
    "353": " SELECT (COUNT(*) FILTER (WHERE language = 'Chinese Simplified') / COUNT(*)) * 100 AS percentage_chinese_simplified FROM foreign_data;\t----- bird -----\tcard_games",
    "354": " SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": " SELECT bordercolor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": " SELECT cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": " SELECT (COUNT(*) FILTER (WHERE bordercolor = 'borderless')::FLOAT / COUNT(*)) * 100 AS percentage_borderless_cards FROM cards;\t----- bird -----\tcard_games",
    "358": " SELECT (COUNT(*) FILTER (WHERE language = 'French' AND isStorySpotlight = 1) / COUNT(*) FILTER (WHERE isStorySpotlight = 1)) * 100 AS percentage_french_story_spotlight;\t----- bird -----\tcard_games",
    "359": " SELECT COUNT(*)\nFROM cards\nWHERE originaltype = 'Summon - Angel' AND subtypes != 'Angel';\t----- bird -----\tcard_games",
    "360": " SELECT id FROM cards WHERE dueldeck = 'a';\t----- bird -----\tcard_games",
    "361": " SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE legalities.status = 'Banned' AND cards.bordercolor = 'white';\t----- bird -----\tcard_games",
    "362": " SELECT cards.name, cards.asciiname, foreign_data.language\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.uuid\nWHERE cards.originaltype = 'Artifact' AND cards.colors = 'B' AND foreign_data.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": " SELECT cards.manacost\nFROM cards\nJOIN set_translations ON cards.setcode = set_translations.setcode\nWHERE cards.layout = 'normal'\nAND cards.frameversion = '2003'\nAND cards.bordercolor = 'black'\nAND cards.availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": " SELECT \n    (COUNT(*) FILTER (WHERE isStorylight = 1 AND isTextless = 0)::FLOAT / COUNT(*) FILTER (WHERE isStorylight = 1)) * 100 AS percentage_story_spotlight_no_text_box\nFROM \n    cards;\t----- bird -----\tcard_games",
    "365": " SELECT COUNT(DISTINCT set_translations.id)\nFROM set_translations\nJOIN sets ON set_translations.setcode = sets.code\nWHERE set_translations.language = 'Portuguese (Brasil)'\nAND sets.block = 'Commander';\t----- bird -----\tcard_games",
    "366": " SELECT DISTINCT cards.type\nFROM cards\nJOIN set_translations ON cards.setcode = set_translations.setcode\nWHERE set_translations.language = 'German';\t----- bird -----\tcard_games",
    "367": " SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": " SELECT COUNT(*)\nFROM cards\nJOIN rulings ON cards.id = rulings.id\nWHERE cards.format = 'premodern'\nAND rulings.text = 'This is a triggered mana ability.'\nAND cards.side IS NULL;\t----- bird -----\tcard_games",
    "369": " SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.type = 'Creature'\nAND cards.layout = 'normal'\nAND cards.bordercolor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\nAND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "370": " SELECT set_translations.language\nFROM set_translations\nJOIN sets ON set_translations.setcode = sets.code\nWHERE sets.totalsetsize = 180 AND sets.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": " SELECT ROUND((COUNT(CASE WHEN format = 'commander' AND status = 'legal' AND hasContentWarning = 0 THEN 1 END)::FLOAT / COUNT(CASE WHEN format = 'commander' AND status = 'legal' THEN 1 END)::FLOAT) * 100, 2) AS percentage_no_content_warning;\t----- bird -----\tcard_games",
    "372": " SELECT (COUNT(*) FILTER (WHERE language = 'French' AND (power IS NULL OR power = '*')) / COUNT(*) FILTER (WHERE power IS NULL OR power = '*')) * 100 AS percentage_without_power_in_french;\t----- bird -----\tcard_games",
    "373": " SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": " SELECT (COUNT(*) FILTER (WHERE layout = 'normal' AND text IS NULL) * 100.0) / COUNT(*) AS proportion_without_text_box_normal_layout FROM cards;\t----- bird -----\tcard_games",
    "375": " SELECT DISTINCT set_translations.language\nFROM set_translations\nJOIN sets ON set_translations.setcode = sets.setcode\nWHERE sets.mcmname = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "376": " SELECT language FROM set_translations WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": " SELECT name, convertedmanacost\nFROM cards\nWHERE name IN ('Serra Angel', 'Shrine Keeper')\nORDER BY convertedmanacost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": " SELECT setcode FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "379": " SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    JOIN set_translations ON cards.setcode = set_translations.setcode\n    WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Korean'\n);\t----- bird -----\tcard_games",
    "380": " SELECT COUNT(*)\nFROM cards\nJOIN set_translations ON cards.setcode = set_translations.setcode\nWHERE set_translations.translation = 'Hauptset Zehnte Edition'\nAND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": " SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setcode = sets.name\nWHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": " SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    JOIN sets ON cards.setcode = sets.name\n    WHERE cards.name = 'Angel of Mercy' AND sets.mtgocode IS NOT NULL\n);\t----- bird -----\tcard_games",
    "383": " SELECT COUNT(DISTINCT set_translations.id)\nFROM set_translations\nJOIN sets ON set_translations.setcode = sets.code\nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": " SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    JOIN sets ON cards.setcode = sets.name\n    WHERE cards.name = 'Adarkar Valkyrie' AND sets.isForeignOnly = 1\n);\t----- bird -----\tcard_games",
    "385": " SELECT COUNT(DISTINCT cards.id)\nFROM cards\nJOIN set_translations ON cards.setcode = set_translations.setcode\nWHERE set_translations.language = 'Italian'\nAND cards.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": " SELECT DISTINCT cards.artist\nFROM cards\nJOIN sets ON cards.setcode = sets.name\nWHERE cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\nAND sets.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "387": " SELECT COUNT(*)\nFROM cards\nWHERE setcode = 'Coldsnap'\nAND convertedmanacost > 5\nAND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "388": " SELECT ft.flavortext\nFROM foreign_data ft\nJOIN cards c ON ft.uuid = c.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND ft.language = 'Italian';\t----- bird -----\tcard_games",
    "389": " SELECT cards.name, rulings.text\nFROM cards\nJOIN rulings ON cards.id = rulings.id\nJOIN set_translations ON cards.setcode = set_translations.setcode\nWHERE cards.setcode = 'Coldsnap' AND set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "390": " SELECT cards.name, cards.convertedmanacost\nFROM cards\nJOIN set_translations ON cards.setcode = set_translations.setcode\nWHERE set_translations.language = 'Italian' AND cards.setcode = 'Coldsnap'\nORDER BY cards.convertedmanacost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "391": " SELECT (SUM(CASE WHEN cards.convertedmanacost = 7 AND cards.setcode = 'Coldsnap' THEN 1 ELSE 0 END) / SUM(CASE WHEN cards.setcode = 'Coldsnap' THEN 1 ELSE 0 END)) * 100 AS percentage_converted_mana_cost_7_in_coldsnap;\t----- bird -----\tcard_games",
    "392": " SELECT (COUNT(*) FILTER (WHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL) / COUNT(*)::FLOAT) * 100 AS percentage_incredibly_powerful\nFROM cards\nWHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": " SELECT format, cards.name\nFROM legalities\nJOIN cards ON cards.id = legalities.id\nWHERE legalities.status = 'Banned'\nGROUP BY format\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": " SELECT cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE legalities.status = 'Banned' AND cards.edhrecrank = 1;\t----- bird -----\tcard_games",
    "395": " SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.setcode = 'Hour of Devastation' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "396": " SELECT name\nFROM sets\nWHERE name NOT LIKE '%Japanese%'\nAND name LIKE '%Korean%';\t----- bird -----\tcard_games",
    "397": " SELECT cards.frameversion AS frame_styles, cards.artist, cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.artist = 'Allen Williams' AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "398": " SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": " SELECT AVG(oxygen_count) FROM (\n    SELECT molecule_id, COUNT(*) AS oxygen_count\n    FROM atom\n    WHERE element = 'o'\n    GROUP BY molecule_id\n) AS oxygen_atoms\nJOIN bond ON oxygen_atoms.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '-'\nGROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "400": " SELECT AVG(single_bonded_count) AS average_single_bonded_carcinogens\nFROM (\n    SELECT molecule_id, COUNT(bond_id) AS single_bonded_count\n    FROM bond\n    WHERE bond_type = '-'\n    GROUP BY molecule_id\n) AS single_bonded_molecules\nJOIN molecule ON single_bonded_molecules.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "401": " SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN connected c2 ON c1.atom_id = c2.atom_id AND c1.atom_id2 = c2.atom_id2\nWHERE b.bond_type = '#' AND m.label = '+'\nGROUP BY m.molecule_id, m.label;\t----- bird -----\ttoxicology",
    "402": " SELECT (\n    SELECT COUNT(*)\n    FROM atom\n    WHERE element = 'c'\n    AND molecule_id IN (\n        SELECT molecule_id\n        FROM bond\n        WHERE bond_type = '='\n    )\n)::FLOAT / (\n    SELECT COUNT(*)\n    FROM atom\n    WHERE molecule_id IN (\n        SELECT molecule_id\n        FROM bond\n        WHERE bond_type = '='\n    )\n)::FLOAT AS percentage_carbon_in_double_bond_molecules;\t----- bird -----\ttoxicology",
    "403": " SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": " SELECT a1.element AS element1, a2.element AS element2\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": " SELECT a.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'h'\nGROUP BY a.label\nORDER BY COUNT(a.label) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": " SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": " SELECT bond_type\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE (atom_id = 'TR004_8' AND atom_id2 = 'TR004_20') OR (atom_id = 'TR004_20' AND atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": " SELECT COUNT(DISTINCT a1.atom_id) + COUNT(DISTINCT a2.atom_id) AS total_atoms\nFROM atom a1\nJOIN bond b ON a1.molecule_id = b.molecule_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id\nJOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2\nWHERE a1.element = 'i' AND a2.element = 's' AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": " SELECT \n    (COUNT(DISTINCT molecule_id) FILTER (WHERE label = '+') - COUNT(DISTINCT molecule_id) FILTER (WHERE label = '+' AND element = 'f'))::FLOAT / COUNT(DISTINCT molecule_id) FILTER (WHERE label = '+')::FLOAT * 100 AS percentage_without_fluorine\nFROM \n    molecule\nJOIN \n    atom ON molecule.molecule_id = atom.molecule_id\nWHERE \n    label = '+'\nGROUP BY \n    molecule_id;\t----- bird -----\ttoxicology",
    "410": " SELECT \n    (COUNT(DISTINCT molecule_id) FILTER (WHERE label = '+') * 100.0 / COUNT(DISTINCT molecule_id)) AS percent_carcinogenic_molecules\nFROM \n    molecule\nJOIN \n    bond ON molecule.molecule_id = bond.molecule_id\nWHERE \n    bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "411": " SELECT DISTINCT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR000'\nORDER BY a.element ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": " SELECT ROUND((COUNT(CASE WHEN bond_type = '=' THEN 1 END) / COUNT(bond_id)) * 100, 5) AS percentage\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": " SELECT ROUND(CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(DISTINCT molecule_id) * 100, 3) AS percentage_carcinogenic)\nFROM molecule;\t----- bird -----\ttoxicology",
    "414": " SELECT ROUND(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(atom_id)::FLOAT, 4) AS percentage\nFROM atom\nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": " SELECT molecule.label, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": " SELECT bond_type, COUNT(*) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1;\n\nSELECT CASE\n  WHEN EXISTS (\n    SELECT 1\n    FROM molecule\n    WHERE molecule_id = 'TR010'\n    AND label LIKE '%carcinogenic%'\n  ) THEN 'Yes'\n  ELSE 'No'\nEND AS is_carcinogenic;\t----- bird -----\ttoxicology",
    "417": " SELECT molecule_id\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_type = '-'\nAND molecule.label = '-'\nGROUP BY molecule_id\nORDER BY molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": " SELECT COUNT(*)\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE molecule_id = 'TR009'\nAND (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": " SELECT b.bond_type, a1.atom_id, a2.atom_id\nFROM bond b\nJOIN atom a1 ON b.molecule_id = a1.molecule_id AND b.bond_id = connected.bond_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id AND b.bond_id = connected.bond_id\nJOIN connected ON a1.atom_id = connected.atom_id AND a2.atom_id = connected.atom_id2\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": " SELECT COUNT(*)\nFROM connected\nJOIN atom ON connected.atom_id = atom.atom_id\nWHERE atom.atom_id LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": " SELECT DISTINCT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": " SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+';\t----- bird -----\ttoxicology",
    "423": " SELECT b.bond_id\nFROM bond b\nJOIN atom a1 ON b.molecule_id = a1.molecule_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id\nWHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "424": " SELECT molecule.label\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '='\nGROUP BY molecule.molecule_id\nORDER BY COUNT(bond.bond_id) DESC\nLIMIT 1\nHAVING molecule.label = '+';\t----- bird -----\ttoxicology",
    "425": " SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT COUNT(bond_id) AS bond_count\n    FROM bond\n    JOIN atom ON bond.molecule_id = atom.molecule_id\n    WHERE atom.element = 'i'\n    GROUP BY atom.atom_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "426": " SELECT DISTINCT a.element\nFROM atom a\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.atom_id IS NULL;\t----- bird -----\ttoxicology",
    "427": " SELECT a.element\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE a.molecule_id = 'TR041' AND b.bond_type = '#' AND c.atom_id2 = a.atom_id;\t----- bird -----\ttoxicology",
    "428": " SELECT a.element\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nWHERE b.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": " SELECT DISTINCT a.element\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN connected d ON c.atom_id2 = d.atom_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": " SELECT ROUND(100 * SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(bond_id), 5) AS proportion_carcinogenic_single_bonds\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "431": " SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE b.bond_type = '#'\nAND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": " SELECT \n    (SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT atom.atom_id)) * 100 AS chlorine_percentage\nFROM \n    atom\nJOIN \n    bond ON atom.molecule_id = bond.molecule_id\nWHERE \n    bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "433": " SELECT a.element AS element1, b.element AS element2\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN atom b ON c.atom_id2 = b.atom_id\nJOIN bond bd ON c.bond_id = bd.bond_id\nWHERE bd.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": " SELECT \n    (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT m.molecule_id)) * 100 AS percentage\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+'\t----- bird -----\ttoxicology",
    "435": " SELECT a.element, COUNT(*)\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 1) = '4'\nGROUP BY a.element;\t----- bird -----\ttoxicology",
    "436": " SELECT \n    ROUND(CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100, 2) AS ratio,\n    CASE \n        WHEN ROUND(CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100, 2) > 0 THEN '+'\n        ELSE '-'\n    END AS label\nFROM \n    atom\nWHERE \n    molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "437": " SELECT molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nGROUP BY molecule_id\nHAVING COUNT(atom_id) > 5 AND label = '-';\t----- bird -----\ttoxicology",
    "438": " SELECT COUNT(*)\nFROM schools\nJOIN satscores ON schools.cdscode = satscores.cds\nWHERE satscores.avgscrmath > 400 AND schools.virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": " SELECT schools.cdscode\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE (frpm.Enrollment (K-12) + frpm.Enrollment (Ages 5-17)) > 500;\t----- bird -----\tcalifornia_schools",
    "440": " SELECT MAX(frpm.Percent_Eligible_Free_Ages_5_17) AS Highest_Eligible_Free_Rate\nFROM frpm\nJOIN satscores ON frpm.cdscode = satscores.cds\nWHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": " SELECT s.cdscode, s.charter, ss.avgscrwrite\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE ss.avgscrwrite > 499\nORDER BY ss.avgscrwrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": " SELECT s.school, s.street, s.streetabr, s.city, s.zip, s.state\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE f.Enrollment (K-12) - f.Enrollment (Ages 5-17) > 30;\t----- bird -----\tcalifornia_schools",
    "443": " SELECT s.school\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nJOIN satscores sc ON s.cdscode = sc.cds\nWHERE f.Percent (%) Eligible FRPM (K-12) > 0.1\nAND sc.numtsttakr >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": " SELECT s.school, s.fundingtype\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE s.city = 'Riverside' AND ss.avgscrmath > 400;\t----- bird -----\tcalifornia_schools",
    "445": " SELECT s.school, s.street, s.city, s.state, s.zip\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.city = 'Monterey'\nAND f.Percent (%) Eligible FRPM (Ages 5-17) > 80;\t----- bird -----\tcalifornia_schools",
    "446": " SELECT s.school, ss.avgscrwrite, s.phone\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE s.openedate > '1991-01-01' AND (s.closeddate < '2000-01-01' OR s.closeddate IS NULL)\nORDER BY ss.avgscrwrite DESC;\t----- bird -----\tcalifornia_schools",
    "447": " SELECT s.school, s.doc\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nJOIN satscores sc ON s.cdscode = sc.cds\nWHERE s.fundingtype = 'Locally Funded'\nAND (f.Enrollment (K-12) - f.Enrollment (Ages 5-17)) > (\n    SELECT AVG(f.Enrollment (K-12) - f.Enrollment (Ages 5-17))\n    FROM schools s\n    JOIN frpm f ON s.cdscode = f.cdscode\n    WHERE s.fundingtype = 'Locally Funded'\n)\nORDER BY s.school;\t----- bird -----\tcalifornia_schools",
    "448": " SELECT s.school, (frpm.Free_Meal_Count_K12 / frpm.Enrollment_K12) AS Eligible_Free_Rate\nFROM schools s\nJOIN frpm ON s.cdscode = frpm.cdscode\nORDER BY frpm.Enrollment_K12 DESC\nLIMIT 2 OFFSET 8;\t----- bird -----\tcalifornia_schools",
    "449": " SELECT s.school, (frpm.FRPM_Count_K12 / frpm.Enrollment_K12) AS eligible_free_or_reduced_price_meal_rate\nFROM schools s\nJOIN frpm ON s.cdscode = frpm.cdscode\nWHERE s.charter = 66\nORDER BY frpm.FRPM_Count_K12 DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": " SELECT s.street, s.city, s.zip, s.state\nFROM schools s\nJOIN satscores sc ON s.cdscode = sc.cds\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE sc.numge1500 / sc.numtsttakr = (\n    SELECT MIN(sc2.numge1500 / sc2.numtsttakr)\n    FROM satscores sc2\n    JOIN frpm f2 ON sc2.cds = f2.cdscode\n    JOIN schools s2 ON sc2.cds = s2.cdscode\n)\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": " SELECT s.admfname1, s.admlname1, s.admemail1\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE ss.numge1500 = (SELECT MAX(ss2.numge1500) FROM satscores ss2)\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": " SELECT AVG(numtsttakr)\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE schools.opendate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": " SELECT s.phone\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.district = 'Fresno Unified'\nORDER BY ss.avgscrread ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": " SELECT s.school, s.county\nFROM schools s\nJOIN satscores sc ON s.cdscode = sc.cds\nWHERE sc.rtype = 'Reading'\nAND sc.avgscrread IS NOT NULL\nAND s.virtual = 'F'\nAND s.county IN (\n    SELECT s2.county\n    FROM schools s2\n    JOIN satscores sc2 ON s2.cdscode = sc2.cds\n    WHERE sc2.rtype = 'Reading'\n    AND sc2.avgscrread IS NOT NULL\n    GROUP BY s2.county\n    ORDER BY AVG(sc2.avgscrread) DESC\n    LIMIT 5\n)\nORDER BY sc.avgscrread DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "455": " SELECT s.school, AVG(ss.avgscrwrite) AS avg_writing_score\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE s.doc = 'Ricci Ulrich'\nGROUP BY s.school;\t----- bird -----\tcalifornia_schools",
    "456": " SELECT s.cdscode, s.school, s.county, s.district, s.city, s.state, f.Enrollment (K-12)\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.statustype = '31' AND s.district = 'K-12'\nORDER BY f.Enrollment (K-12) DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": " SELECT COUNT(*) / 12 AS monthly_average_schools_opened\nFROM schools\nWHERE county = 'Alameda'\nAND statustype = 'Elementary School District'\nAND EXTRACT(YEAR FROM opendate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": " SELECT \n    (SELECT COUNT(*) FROM schools WHERE county = 'Orange' AND statustype = '54')::FLOAT /\n    (SELECT COUNT(*) FROM schools WHERE county = 'Orange' AND statustype = '52')::FLOAT AS ratio;\t----- bird -----\tcalifornia_schools",
    "459": " SELECT schools.school, schools.street\nFROM schools\nJOIN satscores ON schools.cdscode = satscores.cds\nORDER BY satscores.avgscrmath DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": " SELECT COUNT(*)\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.county = 'Los Angeles'\nAND schools.charter = 0\nAND (frpm.Percent (%) Eligible Free (K-12) / 100) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": " SELECT COUNT(*)\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.school = 'State Special School'\nAND schools.city = 'Fremont'\nAND frpm.`Academic Year` = '2014-2015'\nAND schools.edopscode = 'SSS';\t----- bird -----\tcalifornia_schools",
    "462": " SELECT s.school, satscores.Percent (%) Eligible FRPM (Ages 5-17)\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nJOIN satscores ON s.cdscode = satscores.cds\nWHERE s.county = 'Los Angeles'\nAND satscores.enroll12 = 9;\t----- bird -----\tcalifornia_schools",
    "463": " SELECT COUNT(*) AS virtual_schools_count\nFROM schools\nWHERE city IN ('San Diego', 'Santa Barbara') AND virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "464": " SELECT schools.gsoffered\nFROM schools\nORDER BY schools.longitude DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": " SELECT\n    s.city,\n    COUNT(DISTINCT s.cdscode) AS num_schools,\n    COUNT(DISTINCT CASE WHEN f.NSLP_Provision_Status = 'Multiple Provision Types' THEN s.cdscode END) AS num_schools_multiple_provision_types\nFROM\n    schools s\nJOIN\n    frpm f ON s.cdscode = f.cdscode\nWHERE\n    s.magnet = 1\n    AND f.Low_Grade = 'K'\n    AND f.High_Grade = '8'\nGROUP BY\n    s.city;\t----- bird -----\tcalifornia_schools",
    "466": " SELECT schools.district, (frpm.Free Meal Count (K-12) / frpm.Enrollment (K-12)) * 100 AS Percent_Eligible_Free_K12\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.admfname1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": " SELECT admemail1, admemail2, admemail3\nFROM schools\nWHERE county = 'San Bernardino'\nAND city = 'San Bernardino'\nAND school = 'City Unified'\nAND statustype IN ('Intermediate/Middle Schools', 'Unified Schools')\nAND opendate BETWEEN '2009-01-01' AND '2010-12-31';\t----- bird -----\tcalifornia_schools",
    "468": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.a3 = 'POPLATEK PO OBRATU' AND account.frequency = 'issuance after transaction';\t----- bird -----\tfinancial",
    "469": " SELECT COUNT(DISTINCT district_id)\nFROM district\nJOIN client ON district.district_id = client.district_id\nWHERE client.gender = 'F'\nAND (SELECT AVG(a11) FROM district) BETWEEN 6000 AND 10000;\t----- bird -----\tfinancial",
    "470": " SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M'\nAND district.a3 = 'North Bohemia'\nAND client.a11 > 8000;\t----- bird -----\tfinancial",
    "471": " SELECT account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC\nLIMIT 1;\n\nWITH female_clients AS (\n  SELECT account_id, AVG(a11) AS avg_salary\n  FROM account\n  JOIN client ON account.district_id = client.district_id\n  WHERE client.gender = 'F'\n  GROUP BY account_id\n),\nmin_avg_salary AS (\n  SELECT MIN(avg_salary) AS min_salary\n  FROM female_clients\n),\nmax_avg_salary AS (\n  SELECT MAX(avg_salary) AS max_salary\n  FROM female_clients\n)\nSELECT (max_avg_salary.max_salary - min_avg_salary.min_salary) AS salary_gap\nFROM min_avg_salary, max_avg_salary;\t----- bird -----\tfinancial",
    "472": " SELECT account_id\nFROM client\nJOIN (\n    SELECT client_id, AVG(a11) AS avg_salary\n    FROM client\n    GROUP BY client_id\n) AS avg_salaries ON client.client_id = avg_salaries.client_id\nORDER BY birth_date DESC, avg_salary DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "473": " SELECT account_id, MIN(amount) AS lowest_approved_amount\nFROM loan\nWHERE date BETWEEN '1997-01-01' AND '1997-12-31'\nAND status = 'approved'\nAND EXISTS (\n    SELECT 1\n    FROM trans\n    WHERE trans.account_id = loan.account_id\n    AND trans.type = 'POPLATEK TYDNE'\n)\nGROUP BY account_id\nORDER BY lowest_approved_amount ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "474": " SELECT account_id, MAX(amount) AS highest_approved_amount\nFROM loan\nWHERE duration > 12 AND account_id IN (\n    SELECT account_id\n    FROM account\n    WHERE EXTRACT(YEAR FROM date) = 1993\n)\nGROUP BY account_id\nORDER BY highest_approved_amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": " SELECT COUNT(DISTINCT client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'F'\nAND birth_date < '1950-01-01'\nAND a2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": " SELECT d.a2 AS district_name\nFROM client c\nJOIN account a ON c.client_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND EXTRACT(YEAR FROM c.birth_date) = 1976 AND EXTRACT(MONTH FROM c.birth_date) = 1 AND EXTRACT(DAY FROM c.birth_date) = 29;\t----- bird -----\tfinancial",
    "477": " SELECT \n    ROUND((COUNT(CASE WHEN gender = 'M' THEN 1 END)::FLOAT / COUNT(*)) * 100, 2) AS percentage_male_clients\nFROM \n    client\nJOIN \n    district ON client.district_id = district.district_id\nWHERE \n    district.a4 = (\n        SELECT \n            a4\n        FROM \n            district\n        WHERE \n            a2 = 'south Bohemia'\n        ORDER BY \n            a4 DESC\n        LIMIT 1\n    );\t----- bird -----\tfinancial",
    "478": " SELECT \n    (\n        (\n            (\n                SELECT balance \n                FROM trans \n                WHERE account_id = (\n                    SELECT account_id \n                    FROM loan \n                    WHERE date = '1993-07-05'\n                )\n                ORDER BY date DESC \n                LIMIT 1\n            ) - \n            (\n                SELECT balance \n                FROM trans \n                WHERE account_id = (\n                    SELECT account_id \n                    FROM loan \n                    WHERE date = '1993-07-05'\n                )\n                ORDER BY date DESC \n                LIMIT 1\n            )\n        )\n    ) / \n    (\n        (\n            (\n                SELECT balance \n                FROM trans \n                WHERE account_id = (\n                    SELECT account_id \n                    FROM loan \n                    WHERE date = '1993-07-05'\n                )\n                ORDER BY date DESC \n                LIMIT 1\n            )\n        )\n    ) * 100\n    ) AS increase_rate;\t----- bird -----\tfinancial",
    "479": " SELECT \n    (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 AS percentage_paid_no_issue\nFROM \n    loan l;\t----- bird -----\tfinancial",
    "480": " SELECT \n    (COUNT(*) FILTER (WHERE loan.status = 'C') / COUNT(*)) * 100 AS percentage_running_contracts\nFROM \n    loan\nWHERE \n    loan.amount < 100000;\t----- bird -----\tfinancial",
    "481": " SELECT d.district_id, ((a13 - a12) / a12) * 100 AS unemployment_rate_increment\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'D'\nAND l.date BETWEEN '1996-01-01' AND '1996-12-31';\t----- bird -----\tfinancial",
    "482": " SELECT d.district_id, COUNT(c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F'\nGROUP BY d.district_id\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": " SELECT COUNT(DISTINCT loan.loan_id)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN trans ON account.account_id = trans.account_id\nWHERE loan.amount >= 250000\nAND trans.type = 'POPLATEK MESICNE'\nAND trans.date BETWEEN '1995-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "484": " SELECT COUNT(DISTINCT account_id)\nFROM account\nWHERE district_id = 1 AND status = 'C';\t----- bird -----\tfinancial",
    "485": " SELECT COUNT(DISTINCT client_id)\nFROM client\nWHERE gender = 'M'\nAND district_id IN (\n    SELECT district_id\n    FROM (\n        SELECT district_id, COUNT(*) AS crime_count\n        FROM loan\n        WHERE EXTRACT(YEAR FROM date) = 1995\n        GROUP BY district_id\n        ORDER BY crime_count DESC\n        LIMIT 2\n    ) AS subquery\n);\t----- bird -----\tfinancial",
    "486": " SELECT d.a2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.type = 'VYDAJ'\nAND t.date LIKE '1996-01%'\nGROUP BY d.a2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": " SELECT COUNT(DISTINCT account_id)\nFROM account\nWHERE district_id = 1 AND status = 'C';\t----- bird -----\tfinancial",
    "488": " SELECT COUNT(DISTINCT client_id)\nFROM client\nWHERE gender = 'M'\nAND district_id IN (\n    SELECT district_id\n    FROM (\n        SELECT district_id, COUNT(*) AS crime_count\n        FROM loan\n        WHERE EXTRACT(YEAR FROM date) = 1995\n        GROUP BY district_id\n        ORDER BY crime_count DESC\n        LIMIT 2\n    ) AS subquery\n);\t----- bird -----\tfinancial",
    "489": " SELECT account_id\nFROM trans\nWHERE type = 'VYBER KARTOU'\nAND date BETWEEN '1998-01-01' AND '1998-12-31'\nGROUP BY account_id\nHAVING AVG(amount) < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND date BETWEEN '1998-01-01' AND '1998-12-31');\t----- bird -----\tfinancial",
    "490": " SELECT account.account_id, account.type\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN client ON account.district_id = client.district_id\nWHERE account.type != 'OWNER'\nAND (SELECT AVG(client.gender) FROM client WHERE client.district_id = account.district_id) BETWEEN 8000 AND 9000;\t----- bird -----\tfinancial",
    "491": " SELECT AVG(a15)\nFROM district\nJOIN account ON district.district_id = account.district_id\nWHERE a15 > 4000 AND account.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "492": " SELECT t.date, t.amount, t.balance\nFROM trans t\nJOIN client c ON t.account_id = c.client_id\nWHERE c.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": " SELECT \n    ROUND((COUNT(DISTINCT client.client_id)::DECIMAL / (SELECT COUNT(DISTINCT client.client_id) FROM client JOIN account ON client.client_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.a11 > 10000) * 100), 2) AS percentage_of_women\nFROM \n    client\nJOIN \n    account ON client.client_id = account.account_id\nJOIN \n    district ON account.district_id = district.district_id\nWHERE \n    client.gender = 'F' AND district.a11 > 10000;\t----- bird -----\tfinancial",
    "494": " SELECT \n    (SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1997 THEN l.amount ELSE 0 END) - \n     SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE 0 END)) / \n     SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE 0 END) * 100 AS growth_rate\nFROM \n    loan l\nJOIN \n    client c ON l.account_id = c.client_id\nWHERE \n    c.gender = 'M';\t----- bird -----\tfinancial",
    "495": " SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit\nFROM trans\nWHERE account_id = 3 AND type = 'debit' AND operation = 'debit' AND k_symbol = 'account_statement';\n\nSELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit\nFROM trans\nWHERE account_id = 3 AND type = 'debit' AND operation = 'debit' AND k_symbol = 'account_statement';\t----- bird -----\tfinancial",
    "496": " SELECT \n    (COUNT(CASE WHEN gender = 'M' AND frequency = 'POPLATEK TYDNE' THEN 1 END) * 100.0) / COUNT(CASE WHEN frequency = 'POPLATEK TYDNE' THEN 1 END) AS percentage_male_clients_weekly_statements\nFROM \n    client;\t----- bird -----\tfinancial",
    "497": " SELECT account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, a11 ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "498": " SELECT AVG(loan.amount)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN trans ON account.account_id = trans.account_id\nWHERE loan.status = 'C' AND trans.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": " SELECT c.client_id, EXTRACT(YEAR FROM AGE(c.birth_date)) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ct ON d.disp_id = ct.disp_id\nWHERE ct.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial"
}