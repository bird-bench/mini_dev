{
    "0": "SELECT\n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') * 1.0 /\n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio\nFROM customers\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) AS LeastConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Date BETWEEN '201201' AND '201212'\nAND Segment = 'LAM'\nGROUP BY CustomerID\nORDER BY LeastConsumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' AND SUBSTR(ym.Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n    SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) -\n    SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM\n    yearmonth ym\nJOIN\n    customers c ON ym.CustomerID = c.CustomerID\nWHERE\n    SUBSTR(ym.Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'CZK'\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date, MAX(Consumption) as MaxConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' AND Date BETWEEN '201301' AND '201312'\nGROUP BY Date\nORDER BY MaxConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n    SME.avg_consumption - LAM.avg_consumption AS SME_LAM_Diff,\n    LAM.avg_consumption - KAM.avg_consumption AS LAM_KAM_Diff,\n    KAM.avg_consumption - SME.avg_consumption AS KAM_SME_Diff\nFROM\n    (SELECT AVG(Consumption) AS avg_consumption\n     FROM yearmonth\n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID\n     WHERE customers.Segment = 'SME'\n       AND customers.Currency = 'CZK'\n       AND Date BETWEEN '201301' AND '201312'\n       AND Consumption = (SELECT MIN(Consumption)\n                          FROM yearmonth AS ym\n                          JOIN customers AS c ON ym.CustomerID = c.CustomerID\n                          WHERE c.Segment = 'SME'\n                            AND c.Currency = 'CZK'\n                            AND ym.Date BETWEEN '201301' AND '201312')) AS SME,\n    (SELECT AVG(Consumption) AS avg_consumption\n     FROM yearmonth\n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID\n     WHERE customers.Segment = 'LAM'\n       AND customers.Currency = 'CZK'\n       AND Date BETWEEN '201301' AND '201312'\n       AND Consumption = (SELECT MIN(Consumption)\n                          FROM yearmonth AS ym\n                          JOIN customers AS c ON ym.CustomerID = c.CustomerID\n                          WHERE c.Segment = 'LAM'\n                            AND c.Currency = 'CZK'\n                            AND ym.Date BETWEEN '201301' AND '201312')) AS LAM,\n    (SELECT AVG(Consumption) AS avg_consumption\n     FROM yearmonth\n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID\n     WHERE customers.Segment = 'KAM'\n       AND customers.Currency = 'CZK'\n       AND Date BETWEEN '201301' AND '201312'\n       AND Consumption = (SELECT MIN(Consumption)\n                          FROM yearmonth AS ym\n                          JOIN customers AS c ON ym.CustomerID = c.CustomerID\n                          WHERE c.Segment = 'KAM'\n                            AND c.Currency = 'CZK'\n                            AND ym.Date BETWEEN '201301' AND '201312')) AS KAM\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT\n    ym2013.Segment,\n    ((ym2013.Consumption - ym2012.Consumption) / ym2013.Consumption) * 100 AS PercentageIncrease\nFROM\n    (SELECT\n        c.Segment,\n        SUM(ym.Consumption) AS Consumption\n    FROM\n        yearmonth ym\n    INNER JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE\n        c.Currency = 'EUR' AND\n        SUBSTR(ym.Date, 1, 4) = '2013'\n    GROUP BY\n        c.Segment) ym2013\nINNER JOIN\n    (SELECT\n        c.Segment,\n        SUM(ym.Consumption) AS Consumption\n    FROM\n        yearmonth ym\n    INNER JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE\n        c.Currency = 'EUR' AND\n        SUBSTR(ym.Date, 1, 4) = '2012'\n    GROUP BY\n        c.Segment) ym2012 ON ym2013.Segment = ym2012.Segment\nORDER BY\n    PercentageIncrease DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\nAND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') -\n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS MoreDiscountGasStationsCZEvsSVK\n\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n    (SELECT COUNT(DISTINCT CustomerID)\n     FROM customers\n     WHERE Segment = 'SME' AND Currency = 'CZK') -\n    (SELECT COUNT(DISTINCT CustomerID)\n     FROM customers\n     WHERE Segment = 'SME' AND Currency = 'EUR') AS MoreSMEsCZKThanEUR\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT\n    (CAST(SUM(CASE WHEN y.Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS PercentageOfLAMCustomers\nFROM\n    yearmonth y\nJOIN\n    customers c ON y.CustomerID = c.CustomerID\nWHERE\n    c.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT\n    (SELECT COUNT(*) FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3) * 100.0 /\n    (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date = '201202') AS percentage\nFROM yearmonth\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nWHERE substr(y.Date, 1, 6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE strftime('%Y%m', t.Date) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT ym.CustomerID)\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT strftime('%Y-%m-%d %H:%M:%S', transactions_1k.Date || ' ' || transactions_1k.Time) AS transaction_time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE'\nAND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE'\nAND transactions_1k.Date = '2012-08-26'\nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Price = 548.4 AND t.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT\n    (COUNT(DISTINCT c.CustomerID) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR')) AS percentage\nFROM\n    transactions_1k t\nJOIN\n    customers c ON t.CustomerID = c.CustomerID\nWHERE\n    c.Currency = 'EUR'\n    AND t.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT\n    (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS ConsumptionDecreaseRate\nFROM\n    yearmonth y2012\nJOIN\n    yearmonth y2013 ON y2012.CustomerID = y2013.CustomerID\nJOIN\n    (SELECT CustomerID\n     FROM transactions_1k\n     WHERE Date = '2012-08-25' AND Amount * Price = 634.8) AS t ON y2012.CustomerID = t.CustomerID\nWHERE\n    y2012.Date LIKE '2012-%' AND\n    y2013.Date LIKE '2013-%' AND\n    y2012.CustomerID = t.CustomerID\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT\n    (COUNT(CASE WHEN g.Segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS premium_percentage\nFROM\n    gasstations g\nWHERE\n    g.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT\n    SUM(Amount * Price) AS TotalSpent,\n    SUM(CASE WHEN strftime('%Y%m', Date) = '201201' THEN Amount * Price ELSE 0 END) AS January2012Spent\nFROM\n    transactions_1k\nWHERE\n    CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    t.CustomerID,\n    c.Currency,\n    SUM(t.Price) / SUM(t.Amount) AS AvgPricePerItem\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nGROUP BY \n    t.CustomerID\nORDER BY \n    SUM(t.Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.CustomerID, ym.Consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID AND ym.Date = '201208'\nWHERE t.ProductID = 5 AND t.Amount > 0 AND (t.Price / t.Amount) > 29.00\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women's Soccer'\nAND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT e.event_id) AS meeting_count\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 20 AND e.type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS funds_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT first_name || ' ' || last_name AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT e.expense_id, e.approved\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) AS average_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nJOIN event ON expense.link_to_event = event.event_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND (SUBSTR(expense.expense_date, 6, 2) = '09' OR SUBSTR(expense.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT\n    (SELECT SUM(spent) FROM budget WHERE event_status = 'Student_Club' AND link_to_event IN (SELECT event_id FROM event WHERE SUBSTR(event_date, 1, 4) = '2019')) -\n    (SELECT SUM(spent) FROM budget WHERE event_status = 'Student_Club' AND link_to_event IN (SELECT event_id FROM event WHERE SUBSTR(event_date, 1, 4) = '2020')) AS difference_in_spent\t----- bird -----\tstudent_club",
    "39": "SELECT notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT b.event_status\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nWHERE e.expense_description = 'Post Cards, Posters'\nAND e.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE first_name = 'Brent' AND last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT m.department\nFROM member AS mem\nJOIN major AS m ON mem.link_to_major = m.major_id\nWHERE mem.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT \n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')) / \n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting')) AS times_more\n\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city)\nFROM zip_code\nWHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) AS members_attended\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "51": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN major mj ON m.link_to_major = mj.major_id\nWHERE mj.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name, MAX(b.spent / b.amount) AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nGROUP BY e.event_id\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nORDER BY cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT\n    (SELECT SUM(cost)\n     FROM expense\n     JOIN event ON expense.link_to_event = event.event_id\n     WHERE event.event_name = 'Yearly Kickoff') / SUM(cost) * 100 AS percentage\nFROM expense\t----- bird -----\tstudent_club",
    "59": "SELECT source\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY SUM(amount) DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS(\n    SELECT 1\n    FROM attendance a\n    JOIN member m ON a.link_to_member = m.member_id\n    JOIN event e ON a.link_to_event = e.event_id\n    WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer'\n) as attended\t----- bird -----\tstudent_club",
    "63": "SELECT e.expense_description, e.cost\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE e.expense_description = 'Posters' AND ev.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT e.expense_description, SUM(e.cost) AS total_value\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting' AND e.approved = 'Yes'\nGROUP BY e.expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id\t----- bird -----\tstudent_club",
    "69": "SELECT expense.expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT type\nFROM event\nWHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, ma.department, ma.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT\n    (SELECT CAST(COUNT(*) AS FLOAT)\n     FROM income\n     JOIN member ON member.member_id = income.link_to_member\n     WHERE member.t_shirt_size = 'Medium' AND income.amount = 50) /\n    (SELECT COUNT(*)\n     FROM member\n     WHERE member.t_shirt_size = 'Medium') * 100 AS percentage\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game'\nAND status = 'Closed'\nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nHAVING MIN(e.cost) > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT\n    SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END) AS InPatientMales,\n    SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END) AS OutPatientMales,\n    (SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END)) * 100.0 / SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END) AS DeviationPercentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT\n    (CAST(SUM(CASE WHEN strftime('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END)) * 100 AS percentage\nFROM\n    Patient\nWHERE\n    SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT\n    (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') AS OutpatientCount,\n    (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS InpatientCount,\n    (SELECT CAST((SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') AS REAL) / (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+')) AS Ratio\nFROM Patient\nWHERE Diagnosis = 'SLE'\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.ID, strftime('%Y', 'now') - strftime('%Y', p.Birthday) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.SEX, p.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F'\nAND strftime('%Y', Description) = '1997'\nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT e.ID) \nFROM Examination e \nJOIN Patient p ON e.ID = p.ID \nWHERE e.Thrombosis = 1 \nAND p.SEX = 'F' \nAND strftime('%Y', e.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.Symptoms, e.Diagnosis\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nORDER BY p.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Date, (strftime('%Y', Patient.`First Date`) - strftime('%Y', Patient.Birthday)) AS AgeAtFirstDate\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Patient.Birthday DESC, Laboratory.Date ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT\n    SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS MaleAbnormalUA,\n    SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS FemaleAbnormalUA\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE (SEX = 'M' AND UA <= 8.0) OR (SEX = 'F' AND UA <= 6.5)\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE strftime('%Y', `Examination Date`) BETWEEN '1990' AND '1993' \nAND strftime('%Y', Birthday) > strftime('%Y', `Examination Date`) - 18\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    (strftime('%Y', e.`Examination Date`) - strftime('%Y', p.Birthday)) AS Age,\n    e.Diagnosis\nFROM \n    Examination e\nJOIN \n    Patient p ON e.ID = p.ID\nJOIN \n    Laboratory l ON e.ID = l.ID AND e.`Examination Date` = l.Date\nWHERE \n    l.HGB = (SELECT MAX(HGB) FROM Laboratory)\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM`\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE'\nAND Patient.Description = '1994-02-19'\nAND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT\n    (SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-11-%') -\n    (SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-12-%') AS DecreaseRate\nFROM Patient\nWHERE Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT COUNT(DISTINCT Laboratory.ID) \nFROM Laboratory \nJOIN Examination ON Laboratory.ID = Examination.ID \nWHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31' \nAND Laboratory.GPT > 30 \nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(DISTINCT e.ID)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.Thrombosis = 2\nAND e.`ANA Pattern` = 'S'\nAND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Examination) * 1.2\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-'\nAND l.Date LIKE '1991-10%'\nAND l.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB)\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT\n    (CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) AS percentage_women\nFROM\n    Patient\nWHERE\n    strftime('%Y', Birthday) = '1980'\n    AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE\n    WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n    WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n    ELSE 'No'\nEND AS UricAcidNormalRange\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT Patient.ID) AS Patient_IDs\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE `T-BIL` >= 2.0\nGROUP BY SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Birthday)) AS AverageAge\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'M' AND `T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND strftime('%Y', Patient.Birthday) BETWEEN '1936' AND '1956'\nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.ID, p.SEX, (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GLU >= 180 AND l.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS age, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SLE' AND l.HGB > 10 AND l.HGB < 17\nORDER BY p.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.HCT >= 52\nGROUP BY p.ID\nHAVING COUNT(l.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT\n  (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT < 100) AS LowerThanNormal,\n  (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT > 400) AS HigherThanNormal,\n  ((SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT < 100) -\n  (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT > 400)) AS Calculation\nFROM Laboratory\nWHERE PLT <= 100 OR PLT >= 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(l.Date) = 1984\nAND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 50\nAND l.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n    (CAST(SUM(CASE WHEN P.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) / SUM(1)) * 100 AS Percentage\nFROM \n    Laboratory L\nJOIN \n    Patient P ON L.ID = P.ID\nWHERE \n    (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) > 55\n    AND L.PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Laboratory.ID)\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.WBC BETWEEN 3.5 AND 9.0\nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.IGG >= 900 AND l.IGG <= 2000 AND e.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.IGA >= 80 \nAND Laboratory.IGA <= 500 \nAND strftime('%Y', Patient.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE IGM <= 40 OR IGM >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE CRP = '+' AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP IN ('-', '+-') AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE (e.SM = '-' OR e.SM = '0') AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'F'\nAND Examination.Symptoms IS NULL\nAND Examination.SC170 IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.CENTROMEA IN('-', '+-')\nAND Laboratory.SSB IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(Birthday) AS YoungestBirthDate\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE GOT >= 60\n)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT e.ID)\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE l.CPK < 250\nAND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name AS league_name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.id\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_api_id, MAX(buildUpPlaySpeed) as max_speed\nFROM Team_Attributes\nGROUP BY team_api_id\nORDER BY max_speed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016' AND m.home_team_goal = m.away_team_goal\nGROUP BY l.id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT p.player_name, \n       (strftime('%Y', 'now') - strftime('%Y', p.birthday)) - \n       (strftime('%m-%d', 'now') < strftime('%m-%d', p.birthday)) AS age\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.sprint_speed >= 97\nAND strftime('%Y', pa.date) BETWEEN '2013' AND '2015'\nGROUP BY p.player_api_id\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name, COUNT(m.league_id) AS total_matches\nFROM Match m\nJOIN League l ON m.league_id = l.id\nGROUP BY m.league_id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T.team_long_name\nFROM Team T\nJOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id\nWHERE TA.buildUpPlayPassing > (\n    SELECT AVG(TA2.buildUpPlayPassing)\n    FROM Team_Attributes TA2\n    WHERE TA2.buildUpPlayPassing IS NOT NULL AND strftime('%Y', TA2.date) = '2012'\n)\nAND strftime('%Y', TA.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT\n    (CAST(SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_left_foot\nFROM\n    Player\nWHERE\n    birthday BETWEEN '1987-01-01' AND '1992-12-31'\n    AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(pa.long_shots) AS average_long_shots\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id\nWHERE p.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) as avg_heading_accuracy\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_api_id\nORDER BY avg_heading_accuracy DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2009/2010'\nGROUP BY l.id\nHAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT * FROM Player WHERE strftime('%Y', birthday) = '1970' AND strftime('%m', birthday) = '10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Country ON League.country_id = Country.id\nWHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT \n    Player.player_name,\n    AVG(Player_Attributes.finishing) as avg_finishing_rate\nFROM \n    Player\nJOIN \n    Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE \n    Player.height = (SELECT MAX(height) FROM Player) \n    OR \n    Player.height = (SELECT MIN(height) FROM Player)\nGROUP BY \n    Player.player_name\nORDER BY \n    avg_finishing_rate DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE strftime('%Y', date) BETWEEN '2010' AND '2015'\nAND Player.height > 170\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SUM(CASE WHEN pa.player_name = 'Abdou Diallo' THEN pa.ball_control ELSE 0 END) / COUNT(CASE WHEN pa.player_name = 'Abdou Diallo' THEN pa.id ELSE NULL END)) -\n    (SUM(CASE WHEN pa.player_name = 'Aaron Appindangoye' THEN pa.ball_control ELSE 0 END) / COUNT(CASE WHEN pa.player_name = 'Aaron Appindangoye' THEN pa.id ELSE NULL END)) AS avg_ball_control_diff\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye')\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name,\n       birthday\n  FROM Player\n WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')\n ORDER BY birthday ASC\n LIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.volleys > 70 AND pa.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS matches_in_april_2009\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2008/2009'\nGROUP BY l.name\nORDER BY COUNT(m.id) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT \n    ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk') ORDER BY date DESC LIMIT 1) - \n    (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1)) * 100.0 / \n    (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1) AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino')\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(TA.chanceCreationPassing) AS highest_chance_creation_passing_score, TA.chanceCreationPassingClass AS classification\nFROM Team_Attributes TA\nJOIN Team T ON TA.team_api_id = T.team_api_id\nWHERE T.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.overall_rating = 77\nAND pa.date LIKE '2016-06-23%'\nORDER BY p.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Francesco Migliore' AND pa.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) AS first_date_with_highest_crossing\nFROM Player_Attributes\nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant')\nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\t----- bird -----\teuropean_football_2",
    "160": "SELECT Team_Attributes.buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.defenceAggressionClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Hannover 96' AND ta.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Marko Arnautovic' \nAND SUBSTR(pa.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT\n  ((ld.overall_rating - jb.overall_rating) * 100.0 / ld.overall_rating) AS percentage_difference\nFROM\n  Player_Attributes AS ld\nJOIN\n  Player AS pld ON ld.player_api_id = pld.player_api_id\nJOIN\n  Player_Attributes AS jb ON jb.date = ld.date\nJOIN\n  Player AS pjb ON jb.player_api_id = pjb.player_api_id\nWHERE\n  pld.player_name = 'Landon Donovan'\n  AND pjb.player_name = 'Jordan Bowery'\n  AND ld.date = '2013-07-12'\n  AND jb.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name FROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT\n  (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) -\n  (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23) AS jumping_difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT id\nFROM Player_Attributes\nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\n  AND preferred_foot = 'right'\nORDER BY id ASC\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE date LIKE '2008-09-24%'\nAND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge')\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing AS finishing_rate, pa.curve AS curve_score\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT l.name, COUNT(m.id) AS num_games\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2015/2016'\nGROUP BY l.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nWHERE team_api_id = (\n    SELECT away_team_api_id \n    FROM Match \n    ORDER BY away_team_goal DESC \n    LIMIT 1\n)\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT\n    (COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END) * 100.0) / COUNT(id) AS percentage\nFROM\n    Player_Attributes\nWHERE\n    id IS NOT NULL\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 20 AND q.q1 IN (\n    SELECT q1\n    FROM qualifying\n    WHERE raceId = 20 AND q1 IS NOT NULL\n    ORDER BY q1 DESC\n    LIMIT 5\n)\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 19 AND q.q2 IS NOT NULL\nORDER BY q.q2\nLIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1 FROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE raceId = 354 AND drivers.forename = 'Bruno' AND drivers.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT driverId FROM qualifying WHERE raceId = 903 AND q3 LIKE '1:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Bahrain Grand Prix' \nAND races.year = 2007 \nAND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.time LIKE '1:27%' AND lt.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT location, lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Malaysian Grand Prix')\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 45 AND q.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872 AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nORDER BY CAST(r.fastestLapSpeed AS REAL) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT\n    ((CAST(fastestLapSpeed853 AS REAL) - CAST(fastestLapSpeed854 AS REAL)) / CAST(fastestLapSpeed853 AS REAL)) * 100 AS percentageFaster\nFROM\n    (SELECT fastestLapSpeed AS fastestLapSpeed853 FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE raceId = 853 AND drivers.forename = 'Paul' AND drivers.surname = 'di Resta') AS race853,\n    (SELECT fastestLapSpeed AS fastestLapSpeed854 FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE raceId = 854 AND drivers.forename = 'Paul' AND drivers.surname = 'di Resta') AS race854\t----- bird -----\tformula_1",
    "196": "SELECT \n    CAST(COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN r.driverId END) AS REAL) / COUNT(DISTINCT r.driverId) AS race_completion_rate\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races WHERE date != '0000-00-00')\t----- bird -----\tformula_1",
    "198": "SELECT d.forename || ' ' || d.surname AS full_name, ds.points\nFROM driverStandings ds\nJOIN drivers d ON ds.driverId = d.driverId\nORDER BY ds.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(lt.milliseconds) AS best_lap_time, d.forename || ' ' || d.surname AS driver_name, r.name AS race_name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE lt.milliseconds IS NOT NULL\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT\n    (COUNT(CASE WHEN r.position > 1 THEN 1 END) * 1.0 / COUNT(*)) AS percentage\nFROM\n    results r\nJOIN\n    drivers d ON r.driverId = d.driverId\nJOIN\n    races ra ON r.raceId = ra.raceId\nWHERE\n    d.surname = 'Hamilton'\n    AND ra.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, MAX(ds.points) AS max_points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nORDER BY SUM(ds.wins) DESC, MAX(ds.points) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\t----- bird -----\tformula_1",
    "204": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.date BETWEEN '2005-09-01' AND '2005-09-30'\t----- bird -----\tformula_1",
    "205": "SELECT races.*\nFROM races\nJOIN drivers ON drivers.driverId = races.raceId\nJOIN results ON results.raceId = races.raceId AND results.driverId = drivers.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT r.name AS race, r.year AS year_of_race\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY res.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT r.year, r.name, res.points\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.year ASC, r.round ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT\n    (SELECT COUNT(*) FROM races WHERE country = 'Germany' AND name = 'European Grand Prix') * 100.0 /\n    (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix') AS percentage\n\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC, races.date DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(CAST(fastestLapSpeed AS REAL)) AS FastestLapSpeed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND ra.year = 2008 AND ra.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "216": "SELECT r.time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT drivers.driverId) \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((julianday(r1.time) - julianday(r2.time)) / julianday(r2.time)) * 100 AS percentage_faster\nFROM \n    results r1\nJOIN \n    results r2 ON r1.raceId = r2.raceId\nJOIN \n    races ON races.raceId = r1.raceId\nWHERE \n    races.year = 2008 AND \n    races.name = 'Australian Grand Prix' AND \n    r1.position = 1 AND \n    r2.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = r1.raceId AND time IS NOT NULL)\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) AS maximum_points\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nWHERE c.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nLEFT JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nWHERE constructorResults.raceId = 291 AND constructorResults.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorId) \nFROM constructors c \nJOIN constructorResults cr ON c.constructorId = cr.constructorId \nJOIN races r ON cr.raceId = r.raceId \nWHERE c.nationality = 'Japanese' AND cr.points = 0 \nGROUP BY c.constructorId \nHAVING COUNT(r.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT\n    (SELECT CAST(COUNT(*) AS FLOAT)\n     FROM results\n     JOIN races ON results.raceId = races.raceId\n     JOIN drivers ON results.driverId = drivers.driverId\n     WHERE drivers.nationality = 'Japanese'\n       AND races.year BETWEEN 2007 AND 2009\n       AND results.time IS NOT NULL) /\n    (SELECT CAST(COUNT(*) AS FLOAT)\n     FROM results\n     JOIN races ON results.raceId = races.raceId\n     JOIN drivers ON results.driverId = drivers.driverId\n     WHERE drivers.nationality = 'Japanese'\n       AND races.year BETWEEN 2007 AND 2009) * 100 AS race_completion_percentage\t----- bird -----\tformula_1",
    "224": "SELECT r.year, AVG(strftime('%s', res.time) - strftime('%s', '00:00:00')) AS avg_time_seconds\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nWHERE res.position = 1\nAND r.year < 1975\nAND res.time IS NOT NULL\nGROUP BY r.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId AND races.raceId = driverStandings.raceId\nWHERE races.year = 2009 AND driverStandings.position = 1\nORDER BY races.round DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(fastestLapSpeed AS REAL)) AS average_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT\n    (SELECT CAST(COUNT(DISTINCT d.driverId) AS FLOAT)\n     FROM drivers d\n     JOIN results r ON d.driverId = r.driverId\n     WHERE strftime('%Y', d.dob) < '1985'\n     AND r.laps > 50\n     AND r.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2000 AND 2005)\n    ) /\n    (SELECT CAST(COUNT(DISTINCT d.driverId) AS FLOAT)\n     FROM drivers d\n     JOIN results r ON d.driverId = r.driverId\n     WHERE r.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2000 AND 2005)\n    ) * 100 AS percentage\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId) \nFROM drivers d \nJOIN lapTimes lt ON d.driverId = lt.driverId \nWHERE d.nationality = 'French' AND \n      (SUBSTR(lt.time, 1, 2) || SUBSTR(lt.time, 4, 2)) < '0200'\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT d.code\nFROM drivers d\nWHERE d.nationality IN ('Netherlandic', 'Dutch')\nORDER BY d.dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE strftime('%Y', d.dob) = '1971' AND r.fastestLapTime IS NOT NULL\nGROUP BY d.driverId, d.code\nHAVING MIN(r.fastestLapTime)\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*)\nFROM results\nWHERE raceId BETWEEN 50 AND 100\n  AND statusId = 2\n  AND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT d.forename || ' ' || d.surname AS driver_name, r.year, r.name AS race_name, r.date, r.time\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nAND r.date = (SELECT MIN(r.date) FROM races JOIN qualifying q ON r.raceId = q.raceId JOIN drivers d ON q.driverId = d.driverId WHERE d.dob = (SELECT MAX(dob) FROM drivers))\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname, AVG(ps.duration) as avg_duration\nFROM drivers d\nJOIN pitStops ps ON d.driverId = ps.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.driverId\nORDER BY avg_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT d.forename || ' ' || d.surname AS champion, r.time AS finish_time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year = 2008 AND ra.name = 'Canadian Grand Prix' AND r.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN constructors ON results.constructorId = constructors.constructorId\nWHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(cr.points) as total_points\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nJOIN races r ON cr.raceId = r.raceId\nJOIN circuits ci ON r.circuitId = ci.circuitId\nWHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010\nGROUP BY cr.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008\nAND c.name = 'Marina Bay Street Circuit'\nAND q.position = 1\nAND r.round = 3\nORDER BY q.q3\nLIMIT 1\t----- bird -----\tformula_1",
    "242": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS race_name\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nAND r.date = (SELECT MIN(date) FROM races WHERE raceId IN (SELECT raceId FROM results WHERE driverId = d.driverId))\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT MAX(accident_count) AS highest_accidents\nFROM (\n    SELECT driverId, COUNT(*) AS accident_count\n    FROM results\n    WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix')\n      AND statusId = 3\n    GROUP BY driverId\n)\t----- bird -----\tformula_1",
    "244": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nORDER BY lt.time\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name AS CircuitName, MIN(lapTimes.time) AS LapRecord\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(DISTINCT superhero.id) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(*) as popularity\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY popularity DESC, c.colour\t----- bird -----\tsuperhero",
    "251": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN publisher p ON sh.publisher_id = p.id\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute_name = 'Intelligence'\nORDER BY attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT superhero.id) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' \nAND attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT\n    (CAST(SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) / COUNT(s.id)) * 100 AS percentage_bad_alignment,\n    SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_alignment\nFROM\n    superhero s\n    LEFT JOIN alignment a ON s.alignment_id = a.id\n    LEFT JOIN publisher p ON s.publisher_id = p.id\t----- bird -----\tsuperhero",
    "260": "SELECT\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) -\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference\nFROM\n    dual\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT sp.power_name\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185\nAND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT\n    (COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_marvel\nFROM\n    superhero s\nJOIN\n    publisher p ON s.publisher_id = p.id\nWHERE\n    s.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender = 'Male' AND weight_kg > (\n    SELECT AVG(weight_kg) * 0.79\n    FROM superhero\n    WHERE weight_kg IS NOT NULL\n)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_power.hero_id) AS stealth_hero_count\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE attribute_name = 'durability' AND publisher_name = 'Dark Horse Comics'\nORDER BY attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT ec.colour AS eye_colour, hc.colour AS hair_colour, sc.colour AS skin_colour\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour ec ON s.eye_colour_id = ec.id\nJOIN colour hc ON s.hair_colour_id = hc.id\nJOIN colour sc ON s.skin_colour_id = sc.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.eye_colour_id = superhero.hair_colour_id\nAND superhero.hair_colour_id = superhero.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT\n    (COUNT(DISTINCT CASE WHEN c.colour = 'Blue' THEN s.id END) * 100.0 / COUNT(DISTINCT s.id)) AS percentage_of_blue_females\nFROM\n    superhero s\nJOIN\n    gender g ON s.gender_id = g.id\nJOIN\n    colour c ON s.skin_colour_id = c.id\nWHERE\n    g.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS number_of_powers\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT ha.hero_id) \nFROM hero_attribute ha \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Strength' AND ha.attribute_value = (SELECT MAX(attribute_value) \n                                                             FROM hero_attribute ha2 \n                                                             JOIN attribute a2 ON ha2.attribute_id = a2.id \n                                                             WHERE a2.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "281": "SELECT\n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics')) AS percent_female_marvel\nFROM\n    superhero s\nJOIN\n    gender g ON s.gender_id = g.id\nJOIN\n    publisher p ON s.publisher_id = p.id\nWHERE\n    g.gender = 'Female' AND p.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT\n    (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') -\n    (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY id\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT\n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage\nFROM\n    superhero\nWHERE\n    eye_colour_id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT\n    (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')) * 1.0 /\n    (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) AS ratio\n\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT\n    (SELECT COUNT(*)\n     FROM superhero\n     WHERE (weight_kg = 0 OR weight_kg IS NULL)\n       AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')) -\n    (SELECT COUNT(*)\n     FROM superhero\n     WHERE (weight_kg = 0 OR weight_kg IS NULL)\n       AND eye_colour_id = (SELECT id FROM colour WHERE colour IS NULL)) AS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) -\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\n\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation\nFROM users\nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\nORDER BY Reputation DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT p.OwnerUserId, u.DisplayName AS OwnerDisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.Age > 65 AND posts.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nWHERE t.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS average_score\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT\n    (CAST(COUNT(DISTINCT CASE WHEN u.Age > 65 THEN p.Id END) AS FLOAT) / COUNT(DISTINCT p.Id)) * 100 AS PercentageElderUserPosts\nFROM\n    posts p\nJOIN\n    users u ON p.OwnerUserId = u.Id\nWHERE\n    p.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'No' ELSE 'Yes' END AS WellFinished\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT\n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / \n    (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS times\nFROM\n    users\nWHERE\n    Id = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT p.LastEditorDisplayName\nFROM posts p\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN postHistory ph ON p.Id = ph.PostId\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND ph.UserId = c.UserId\nAND ph.PostHistoryTypeId IN (4, 5)\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.BountyAmount = 50\nAND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text AS Comment, AVG(p.ViewCount) AS AverageViewCount\nFROM posts p\nLEFT JOIN postTags pt ON p.Id = pt.PostId\nLEFT JOIN tags t ON pt.TagId = t.Id\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = 'humor'\nGROUP BY p.Id\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*)\nFROM (\n    SELECT UserId\n    FROM badges\n    GROUP BY UserId\n    HAVING COUNT(Name) > 5\n) AS UsersWithMoreThanFiveBadges\t----- bird -----\tcodebase_community",
    "321": "SELECT ph.UserId\nFROM postHistory ph\nJOIN posts p ON ph.PostId = p.Id\nGROUP BY ph.UserId, ph.PostId\nHAVING COUNT(ph.Id) = 1 AND MAX(p.ViewCount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT\n    ABS(\n        (CAST(SUM(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) -\n        (CAST(SUM(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100)\n    ) AS percentage_difference\nFROM badges\nWHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS AverageUpVotes, AVG(u.Age) AS AverageAge\nFROM users u\nJOIN (\n    SELECT OwnerUserId, COUNT(*) AS PostCount\n    FROM posts\n    GROUP BY OwnerUserId\n    HAVING PostCount > 10\n) AS SubQuery ON u.Id = SubQuery.OwnerUserId\t----- bird -----\tcodebase_community",
    "324": "SELECT\n    (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010') * 1.0 /\n    (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS ratio\nFROM votes\nLIMIT 1\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, MAX(SumViewCount) AS MaxPopularity\nFROM (\n    SELECT u.DisplayName, SUM(p.ViewCount) AS SumViewCount\n    FROM posts p\n    JOIN users u ON p.OwnerUserId = u.Id\n    WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\n    GROUP BY u.DisplayName\n)\n\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT t.TagName\nFROM tags t\nJOIN posts p ON p.Id = t.ExcerptPostId OR p.Id = t.WikiPostId\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT\n    (SELECT COUNT(*) FROM posts\n     INNER JOIN tags ON posts.Id = tags.ExcerptPostId\n     WHERE tags.TagName = 'r') * 100.0 /\n    (SELECT COUNT(*) FROM posts\n     INNER JOIN users ON posts.OwnerUserId = users.Id\n     WHERE users.DisplayName = 'Community') AS percentage\t----- bird -----\tcodebase_community",
    "329": "SELECT\n    (SELECT SUM(ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE DisplayName = 'Mornington') -\n    (SELECT SUM(ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE DisplayName = 'Amos') AS ViewCountDifference\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(MonthlyLinkCount) AS AverageMonthlyLinks\nFROM (\n    SELECT COUNT(pl.Id) AS MonthlyLinkCount\n    FROM postLinks pl\n    JOIN posts p ON pl.PostId = p.Id\n    WHERE strftime('%Y', pl.CreationDate) = '2010' AND p.AnswerCount <= 2\n    GROUP BY strftime('%Y-%m', pl.CreationDate)\n)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate)\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) \nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE strftime('%Y', CreaionDate) = '2010')\n  AND strftime('%Y', p.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "336": "SELECT\n    (CAST(COUNT(DISTINCT p.Id) AS FLOAT) / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', CreaionDate) = '2011')) * 100 AS percentage\nFROM\n    posts p\nJOIN\n    users u ON p.OwnerUserId = u.Id\nWHERE\n    u.Reputation > 1000\n    AND strftime('%Y', p.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName\nFROM posts p\nLEFT JOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*)\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    ORDER BY Score DESC\n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT\n    (SELECT CAST(COUNT(*) AS FLOAT)\n     FROM posts\n     WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)\n       AND Score > 50)\n    /\n    (SELECT CAST(COUNT(*) AS FLOAT)\n     FROM posts\n     WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)) AS percentage\n\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments AS c\nJOIN posts AS p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*)\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT\n    (CAST(COUNT(DISTINCT c.UserId) AS FLOAT) / (SELECT COUNT(DISTINCT c2.UserId) FROM comments c2 JOIN users u2 ON c2.UserId = u2.Id WHERE c2.Score BETWEEN 5 AND 10)) * 100 AS percentage\nFROM\n    comments c\nJOIN\n    users u ON c.UserId = u.Id\nWHERE\n    c.Score BETWEEN 5 AND 10\n    AND u.UpVotes = 0\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT *\nFROM cards\nWHERE borderColor = 'borderless'\n  AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT c.*\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic'\nAND l.status = 'Banned'\nAND l.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact'\nAND c.side IS NULL\nAND l.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\nAND l.format = 'commander'\nAND l.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hasContentWarning\nFROM cards c\nLEFT JOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.uuid\nORDER BY COUNT(r.id) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT\n    (SELECT COUNT(*)\n     FROM foreign_data\n     WHERE language = 'Chinese Simplified') * 100.0 / COUNT(DISTINCT cards.id) AS percentage\nFROM\n    cards\nJOIN\n    foreign_data ON cards.uuid = foreign_data.uuid\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format, legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT\n    (SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless') * 100.0 / COUNT(*)\nFROM\n    cards\t----- bird -----\tcard_games",
    "358": "SELECT\n    (SELECT COUNT(*)\n     FROM foreign_data\n     WHERE language = 'French'\n     AND uuid IN (SELECT uuid FROM cards WHERE isStorySpotlight = 1)) * 100.0 /\n    (SELECT COUNT(*)\n     FROM cards\n     WHERE isStorySpotlight = 1) AS percentage_story_spotlight_french\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel'\nAND NOT ',' || subtypes || ',' LIKE '%,Angel,%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.*\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originalType = 'Artifact'\nAND c.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost\nFROM cards\nWHERE layout = 'normal'\n  AND frameVersion = '2003'\n  AND borderColor = 'black'\n  AND availability LIKE '%paper%'\n  AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "364": "SELECT\n    id,\n    (SELECT CAST(COUNT(*) AS FLOAT) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0) /\n    (SELECT CAST(COUNT(*) AS FLOAT) FROM cards WHERE isStorySpotlight = 1) * 100 AS percentage\nFROM cards\nWHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT st.setCode) \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE st.language = 'Portuguese (Brasil)' AND s.block = 'Commander'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT fd.type\nFROM foreign_data fd\nWHERE fd.language = 'German' AND fd.type IS NOT NULL\nORDER BY fd.type\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE legalities.format = 'premodern'\nAND rulings.text = 'This is a triggered mana ability.'\nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'French'\n  AND c.type LIKE '%Creature%'\n  AND c.layout = 'normal'\n  AND c.borderColor = 'black'\n  AND c.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ravnica' AND s.baseSetSize = 180\t----- bird -----\tcard_games",
    "371": "SELECT\n    (COUNT(CASE WHEN hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM\n    cards\nJOIN\n    legalities ON cards.uuid = legalities.uuid\nWHERE\n    legalities.format = 'commander'\n    AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT\n    (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND (multiverseid IN (SELECT multiverseId FROM cards WHERE power IS NULL OR power = '*'))) * 100.0 /\n    (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*') AS percentage\n\t----- bird -----\tcard_games",
    "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT\n    (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) * 100.0) / COUNT(*) AS proportion\nFROM\n    cards\nWHERE\n    layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT language\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT\n    CASE\n        WHEN a.convertedManaCost > b.convertedManaCost THEN 'Serra Angel'\n        WHEN a.convertedManaCost < b.convertedManaCost THEN 'Shrine Keeper'\n        ELSE 'Both cards have the same converted mana cost'\n    END AS card_with_more_converted_mana_cost\nFROM\n    cards a,\n    cards b\nWHERE\n    a.name = 'Serra Angel'\n    AND b.name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN set_translations st ON s.code = st.setCode\nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(\n    SELECT 1\n    FROM cards\n    JOIN foreign_data ON cards.uuid = foreign_data.uuid\n    WHERE cards.name = 'Ancestor''s Chosen'\n    AND foreign_data.language = 'Korean'\n) as has_korean_version\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.translation = 'Hauptset Zehnte Edition'\nAND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations WHERE language = 'Chinese Simplified' AND setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition')\t----- bird -----\tcard_games",
    "382": "SELECT sets.mtgoCode\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Angel of Mercy'\nAND sets.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.code)\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT artist\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.convertedManaCost > 5\nAND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\nAND fd.language = 'Italian'\nAND c.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE sets.name = 'Coldsnap'\n)\t----- bird -----\tcard_games",
    "391": "SELECT\n    (SELECT COUNT(*) FROM cards WHERE convertedManaCost = 7 AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) * 100.0 /\n    (SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) AS percentage\t----- bird -----\tcard_games",
    "392": "SELECT\n    (SELECT COUNT(*) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND setCode = 'CSP') * 100.0 /\n    (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP') AS percentage_incredibly_powerful\nFROM cards\nWHERE setCode = 'CSP'\nLIMIT 1\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities AS l\nJOIN cards AS c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(l.status) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1 AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nLEFT JOIN legalities l ON c.uuid = l.uuid AND l.status = 'Legal'\nWHERE s.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "396": "SELECT s.name\nFROM sets s\nJOIN set_translations st_korean ON s.code = st_korean.setCode AND st_korean.language = 'Korean'\nLEFT JOIN set_translations st_japanese ON s.code = st_japanese.setCode AND st_japanese.language LIKE '%Japanese%'\nWHERE st_japanese.id IS NULL\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameVersion FROM cards\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS avg_oxygen_atoms\nFROM (\n  SELECT m.molecule_id, COUNT(a.atom_id) AS oxygen_count\n  FROM molecule m\n  JOIN atom a ON m.molecule_id = a.molecule_id\n  JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n  JOIN bond b ON c.bond_id = b.bond_id\n  WHERE a.element = 'O' AND b.bond_type = '-'\n  GROUP BY m.molecule_id\n)\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) AS average_single_bonded\nFROM (\n  SELECT m.molecule_id, COUNT(b.bond_id) AS single_bonded_count\n  FROM molecule m\n  JOIN bond b ON m.molecule_id = b.molecule_id\n  WHERE m.label = '+' AND b.bond_type = '-'\n  GROUP BY m.molecule_id\n)\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT\n    (CAST(SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(a.atom_id)) * 100 AS carbon_percentage\nFROM\n    atom a\nJOIN\n    connected c ON a.atom_id = c.atom_id\nJOIN\n    bond b ON c.bond_id = b.bond_id\nWHERE\n    b.bond_type = '='\nAND\n    b.molecule_id IN (SELECT molecule_id FROM molecule)\t----- bird -----\ttoxicology",
    "403": "SELECT a.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nWHERE c.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'h'\n)\nGROUP BY label\nORDER BY COUNT(label) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom AS a \nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond AS b ON c.bond_id = b.bond_id \nWHERE a.element IN ('i', 's') AND b.bond_type = '-' \nAND b.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-')\t----- bird -----\ttoxicology",
    "409": "SELECT\n  (COUNT(DISTINCT m.molecule_id) - COUNT(DISTINCT f.molecule_id)) * 100.0 / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM\n  molecule m\nLEFT JOIN\n  (SELECT DISTINCT a.molecule_id\n   FROM atom a\n   WHERE a.element = 'f') f ON m.molecule_id = f.molecule_id\nWHERE\n  m.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT\n    (CAST(SUM(CASE WHEN b.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT\n    ROUND(\n        (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 100.0) / COUNT(bond_id),\n        5\n    ) AS percentage\nFROM\n    bond\nWHERE\n    molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(\n    (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(molecule_id), 3\n) AS percentage\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT\n    ROUND(\n        (SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(atom_id),\n        4\n    ) AS percentage\nFROM\n    atom\nWHERE\n    molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label\nFROM molecule m\nLEFT JOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label = '-' AND b.bond_type = '-'\nORDER BY m.molecule_id ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id \nWHERE (a.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12') \nAND a.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connections\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id, m.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE a1.element = 'P' AND a2.element = 'N'\n   OR a1.element = 'N' AND a2.element = 'P'\t----- bird -----\ttoxicology",
    "424": "SELECT m.label\nFROM molecule m\nJOIN (\n  SELECT b.molecule_id, COUNT(*) as double_bond_count\n  FROM bond b\n  WHERE b.bond_type = ' = '\n  GROUP BY b.molecule_id\n  ORDER BY double_bond_count DESC\n  LIMIT 1\n) AS db ON m.molecule_id = db.molecule_id\nWHERE m.label = '+'\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT a.atom_id, COUNT(c.bond_id) AS bond_count\n    FROM atom AS a\n    LEFT JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n    WHERE a.element = 'I'\n    GROUP BY a.atom_id\n)\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected) AND atom_id NOT IN (SELECT atom_id2 FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT a.atom_id\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT a1.element AS element1, a2.element AS element2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom AS a1 ON connected.atom_id = a1.atom_id\nJOIN atom AS a2 ON connected.atom_id2 = a2.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT\n    ROUND(\n        (\n            CAST(\n                (\n                    SELECT COUNT(*)\n                    FROM molecule m\n                    JOIN bond b ON m.molecule_id = b.molecule_id\n                    JOIN connected c ON b.bond_id = c.bond_id\n                    WHERE m.label = '+' AND b.bond_type = '-'\n                ) AS REAL\n            ) / (\n                SELECT COUNT(*)\n                FROM bond\n                WHERE bond_type = '-'\n            )\n        ) * 100, 5\n    ) AS proportion_of_carcinogenic_single_bonds\n\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom AS a \nJOIN molecule AS m ON a.molecule_id = m.molecule_id \nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond AS b ON c.bond_id = b.bond_id \nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT \n  (CAST(SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(DISTINCT a.atom_id)) * 100 AS percent\nFROM \n  atom a\nJOIN \n  connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN \n  bond b ON c.bond_id = b.bond_id\nWHERE \n  b.bond_type = '-'\nAND \n  a.molecule_id = b.molecule_id\t----- bird -----\ttoxicology",
    "433": "SELECT a.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nWHERE c.bond_id = 'TR001_10_11'\nGROUP BY a.element\t----- bird -----\ttoxicology",
    "434": "SELECT\n  (CAST(SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(DISTINCT a.molecule_id)) * 100 AS percentage\nFROM\n  atom a\nJOIN\n  molecule m ON a.molecule_id = m.molecule_id\nWHERE\n  m.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT a.element, COUNT(*) AS toxicology_count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '+'\nAND substr(a.atom_id, 7, 1) = '4'\nGROUP BY a.element\t----- bird -----\ttoxicology",
    "436": "SELECT \n    (SELECT CAST(COUNT(*) AS FLOAT) FROM atom WHERE element = 'h' AND molecule_id = 'TR006') / \n    (SELECT CAST(COUNT(*) AS FLOAT) FROM atom WHERE molecule_id = 'TR006') AS ratio,\n    m.label\nFROM molecule m\nWHERE m.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nGROUP BY m.molecule_id\nHAVING m.label = '-' AND COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE AvgScrMath > 400 AND Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT frpm.CDSCode\nFROM frpm\nWHERE (IFNULL(`Enrollment (K-12)`, 0) + IFNULL(`Enrollment (Ages 5-17)`, 0)) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`)\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE NumTstTakr > 0 AND CAST(NumGE1500 AS REAL) / NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.School, ss.AvgScrWrite, s.CharterNum\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE ss.AvgScrWrite > 499\nORDER BY ss.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.School\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1\nAND ss.NumGE1500 >= 1\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM satscores AS sat\nJOIN schools AS s ON sat.cds = s.CDSCode\nWHERE s.County = 'Riverside' AND sat.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, s.Street, s.City, s.State, s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Monterey'\nAND s.SchoolType = 'High School'\nAND (f.`FRPM Count (Ages 5-17)` > 800 OR f.`Free Meal Count (Ages 5-17)` > 800)\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, ss.AvgScrWrite, s.Phone\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01') AND ss.AvgScrWrite IS NOT NULL\nGROUP BY s.School, ss.AvgScrWrite, s.Phone\nORDER BY s.School\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > \n    (SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n     FROM frpm f2\n     JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n     WHERE s2.FundingType = 'Local')\nAND s.FundingType = 'Local'\t----- bird -----\tcalifornia_schools",
    "448": "SELECT\n    `School Name`,\n    `Enrollment (K-12)`,\n    `Free Meal Count (K-12)`,\n    (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS `Eligible Free Rate`\nFROM\n    frpm\nORDER BY\n    `Enrollment (K-12)` DESC\nLIMIT 1\nOFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT frpm.`School Name`,\n       frpm.`FRPM Count (K-12)` / frpm.`Enrollment (K-12)` AS `FRPM Rate`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.DOC = '66'\nORDER BY frpm.`FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.School, s.Street, s.City, s.Zip, s.State\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE ss.NumTstTakr > 0\nORDER BY CAST(ss.NumGE1500 AS REAL) / ss.NumTstTakr ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.School, s.AdmFName1 || ' ' || s.AdmLName1 AS Admin1FullName, s.AdmFName2 || ' ' || s.AdmLName2 AS Admin2FullName, s.AdmFName3 || ' ' || s.AdmLName3 AS Admin3FullName\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nORDER BY ss.NumGE1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) \nFROM satscores s \nJOIN schools sch ON s.cds = sch.CDSCode \nWHERE sch.County = 'Fresno' AND sch.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE s.District = 'Fresno Unified' AND ss.AvgScrRead IS NOT NULL\nORDER BY ss.AvgScrRead ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School, s.County\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'F'\nAND ss.AvgScrRead IS NOT NULL\nAND s.School IS NOT NULL\nAND (\n  SELECT COUNT(DISTINCT s2.School)\n  FROM schools s2\n  JOIN satscores ss2 ON s2.CDSCode = ss2.cds\n  WHERE s2.County = s.County\n  AND s2.Virtual = 'F'\n  AND ss2.AvgScrRead > ss.AvgScrRead\n) < 5\nORDER BY s.County, ss.AvgScrRead DESC\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, AVG(ss.AvgScrWrite) AS AverageWritingScore\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE (s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich') OR\n      (s.AdmFName2 = 'Ricci' AND s.AdmLName2 = 'Ulrich') OR\n      (s.AdmFName3 = 'Ricci' AND s.AdmLName3 = 'Ulrich')\nGROUP BY s.School\nHAVING AVG(ss.AvgScrWrite) IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.School, fr.Enrollment\nFROM schools s\nJOIN frpm fr ON s.CDSCode = fr.CDSCode\nWHERE s.DOC = '31' AND fr.`Enrollment (K-12)` IS NOT NULL\nORDER BY fr.`Enrollment (K-12)` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS MonthlyAverage\nFROM schools\nWHERE County = 'Alameda'\nAND DOC = '52'\nAND strftime('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT\n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '54') AS UnifiedSchools,\n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '52') AS ElementarySchools,\n    (SELECT CAST((SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '54') AS REAL) / (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '52')) AS Ratio\n\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.School, s.Street\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE ss.AvgScrMath IS NOT NULL\nORDER BY ss.AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles'\nAND s.Charter = 0\nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT frpm.`Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.EdOpsCode = 'SSS'\nAND frpm.`Academic Year` = '2014-2015'\nAND schools.City = 'Fremont'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, f.`Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles'\nAND s.GSoffered LIKE 'K%'\nAND s.GSoffered LIKE '%9'\nAND f.`Percent (%) Eligible FRPM (Ages 5-17)` IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NoPhysicalBuildingSchools\nFROM schools\nWHERE (County = 'San Diego' OR County = 'Santa Barbara') AND Virtual = 'F'\nGROUP BY County\nORDER BY NoPhysicalBuildingSchools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered\nFROM schools\nORDER BY ABS(Longitude) DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT City, COUNT(*) AS NumberOfSchools\nFROM schools\nWHERE Magnet = 1\nAND GSoffered LIKE '%K%'\nAND GSoffered LIKE '%8%'\nAND EXISTS (\n    SELECT 1\n    FROM frpm\n    WHERE schools.CDSCode = frpm.CDSCode\n    AND `NSLP Provision Status` = 'Multiple Provision Types'\n)\nGROUP BY City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    frpm.`District Code`,\n    (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) * 100 AS `Percent (%) Eligible Free (K-12)`\nFROM \n    frpm\nJOIN \n    schools ON frpm.CDSCode = schools.CDSCode\nWHERE \n    (schools.AdmFName1 = 'Alusine' OR schools.AdmFName2 = 'Alusine' OR schools.AdmFName3 = 'Alusine')\n    AND frpm.`Enrollment (K-12)` > 0\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino'\n  AND City = 'San Bernardino'\n  AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n  AND (\n    (SOC = '62' AND DOCType = 'Public')\n    OR (DOC = '54' AND DOCType = 'Public')\n  )\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(*)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*)\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F'\nAND d.A11 > 6000\nAND d.A11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M'\nAND district.A3 = 'North Bohemia'\nAND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id, MIN(d.A11) AS lowest_avg_salary, (MAX(d.A11) - MIN(d.A11)) AS salary_gap\nFROM account a\nJOIN disp dp ON a.account_id = dp.account_id\nJOIN client c ON dp.client_id = c.client_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F'\nGROUP BY a.account_id\nORDER BY c.birth_date DESC, d.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\nAND dist.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.date >= '1997-01-01' AND l.date < '1998-01-01'\nAND a.frequency = 'POPLATEK TYDNE'\nAND l.amount = (\n    SELECT MIN(l2.amount)\n    FROM loan l2\n    WHERE l2.date >= '1997-01-01' AND l2.date < '1998-01-01'\n)\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, l.amount, a.date\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.duration > 12 AND strftime('%Y', a.date) = '1993'\nORDER BY l.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.client_id) \nFROM client \nJOIN district ON client.district_id = district.district_id \nJOIN account ON client.client_id = account.account_id \nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT d.A2\nFROM client c\nJOIN account a ON c.district_id = a.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT\n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients\nFROM\n    client c\nJOIN\n    district d ON c.district_id = d.district_id\nWHERE\n    d.A3 = 'south Bohemia'\nAND\n    d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT\n    ((final_balance.balance - initial_balance.balance) / initial_balance.balance) * 100 AS increase_rate\nFROM\n    (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY loan_id LIMIT 1) AND date <= '1993-03-22' ORDER BY date DESC, trans_id DESC LIMIT 1) AS initial_balance,\n    (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY loan_id LIMIT 1) AND date <= '1998-12-27' ORDER BY date DESC, trans_id DESC LIMIT 1) AS final_balance\t----- bird -----\tfinancial",
    "479": "SELECT\n    (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 AS percentage_fully_paid\nFROM\n    loan l\t----- bird -----\tfinancial",
    "480": "SELECT\n    (COUNT(CASE WHEN l.status = 'C' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_running_no_issue\nFROM loan l\nWHERE l.amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT d.A2 AS district, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.A2, COUNT(*) as female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp di ON c.client_id = di.client_id\nJOIN account a ON di.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT loan.loan_id) AS total_loans\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND loan.amount >= 250000\nAND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id) \nFROM account a \nJOIN district d ON a.district_id = d.district_id \nJOIN loan l ON a.account_id = l.account_id \nWHERE d.A2 = 'Branch location 1' AND (l.status = 'C' OR l.status = 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15)\n    FROM district\n    WHERE A15 < (\n        SELECT MAX(A15)\n        FROM district\n    )\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, t.amount\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\nAND t.date LIKE '1996-01%'\nORDER BY t.amount DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.A2 = 'Branch location 1' AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) AS male_clients\nFROM client\nWHERE gender = 'M' AND district_id = (\n    SELECT district_id\n    FROM district\n    ORDER BY A15 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT d.client_id\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nJOIN card c ON d.disp_id = c.disp_id\nWHERE t.operation = 'VYBER KARTOU'\nAND t.date BETWEEN '1998-01-01' AND '1998-12-31'\nAND t.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND date BETWEEN '1998-01-01' AND '1998-12-31')\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT d.A11, a.type\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN district dt ON a.district_id = dt.district_id\nWHERE a.type != 'OWNER'\nAND dt.A11 > 8000\nAND dt.A11 <= 9000\nAND NOT EXISTS (\n    SELECT 1\n    FROM loan l\n    WHERE l.account_id = a.account_id\n)\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) AS average_crimes_1995\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000\nAND strftime('%Y', a.date) >= '1997'\t----- bird -----\tfinancial",
    "492": "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.client_id = 3356 AND t.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT\n    (COUNT(DISTINCT case when c.gender = 'F' then c.client_id end) * 100.0) / COUNT(DISTINCT c.client_id) AS percentage_of_women\nFROM\n    client c\nJOIN\n    account a ON c.client_id = a.account_id\nJOIN\n    district d ON c.district_id = d.district_id\nWHERE\n    d.A11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT\n    ((SUM(CASE WHEN strftime('%Y', l.date) = '1997' THEN l.amount ELSE 0 END) - \n      SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) /\n     SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) * 100.0 AS growth_rate\nFROM\n    loan l\nJOIN\n    account a ON l.account_id = a.account_id\nJOIN\n    disp d ON a.account_id = d.account_id\nJOIN\n    client c ON d.client_id = c.client_id\nWHERE\n    c.gender = 'M'\n    AND d.type = 'OWNER'\n    AND (strftime('%Y', l.date) = '1996' OR strftime('%Y', l.date) = '1997')\t----- bird -----\tfinancial",
    "495": "SELECT frequency FROM account WHERE account_id = 3\t----- bird -----\tfinancial",
    "496": "SELECT\n    (CAST(SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_male_clients_weekly_statements\nFROM\n    client c\nJOIN\n    account a ON c.district_id = a.district_id\nWHERE\n    a.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.gender = 'F'\nORDER BY c.birth_date DESC, dist.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) AS average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE status IN ('C', 'D') AND frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, (strftime('%Y', 'now') - strftime('%Y', c.birth_date)) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER'\t----- bird -----\tfinancial"
}