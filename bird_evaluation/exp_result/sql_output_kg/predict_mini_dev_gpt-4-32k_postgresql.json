{
    "0": "SELECT (COUNT(*) FILTER (WHERE currency = 'EUR'))::decimal / NULLIF(COUNT(*) FILTER (WHERE currency = 'CZK'), 0) AS ratio\nFROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customerid, MIN(consumption) AS least_consumption\nFROM yearmonth\nWHERE date BETWEEN '201201' AND '201212'\nAND segment = 'LAM'\nGROUP BY customerid\nORDER BY least_consumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(consumption)/12 AS average_monthly_consumption\nFROM yearmonth\nWHERE customerid IN (\n    SELECT customerid\n    FROM customers\n    WHERE segment = 'SME'\n) AND SUBSTRING(date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT (SUM(CASE WHEN customers.currency = 'CZK' THEN yearmonth.consumption ELSE 0 END) - \n SUM(CASE WHEN customers.currency = 'EUR' THEN yearmonth.consumption ELSE 0 END)) AS difference_in_consumption\nFROM customers\nJOIN yearmonth ON customers.customerid = yearmonth.customerid\nWHERE CAST(SUBSTRING(yearmonth.date, 1, 4) AS INTEGER) BETWEEN 2012 AND 2012\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTRING(date, 1, 4) AS year, SUM(consumption) AS total_consumption\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE currency = 'CZK'\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT SUBSTRING(date, 5, 2) AS month, SUM(consumption) AS total_consumption\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE customers.segment = 'SME' AND SUBSTRING(date, 1, 4) = '2013'\nGROUP BY month\nORDER BY total_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT The question is quite complex and requires several steps to answer. Here is a step-by-step breakdown of the SQL query needed to answer it:\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT segment, \n    ((SUM(consumption_2013) - SUM(consumption_2012)) / SUM(consumption_2013)) * 100 AS percentage_increase\nFROM \n    (\n        SELECT \n            c.segment, \n            CASE \n                WHEN y.date LIKE '2013%' THEN y.consumption \n                ELSE 0 \n            END AS consumption_2013,\n            CASE \n                WHEN y.date LIKE '2012%' THEN y.consumption \n                ELSE 0 \n            END AS consumption_2012\n        FROM \n            customers c\n        JOIN \n            yearmonth y ON c.customerid = y.customerid\n        WHERE \n            c.currency = 'EUR' AND \n            c.segment IN ('SME', 'LAM', 'KAM')\n    ) AS subquery\nGROUP BY \n    segment\nORDER BY \n    percentage_increase DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(consumption) \nFROM yearmonth \nWHERE customerid = 6 \nAND (date >= '201308' AND date <= '201311')\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE country = 'CZE' AND segment = 'discount') - \n(SELECT COUNT(*) FROM gasstations WHERE country = 'SVK' AND segment = 'discount') AS difference_in_discount_gas_stations\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT (\n    SELECT COUNT(DISTINCT customerid) \n    FROM customers \n    WHERE segment = 'SME' \n    AND currency = 'CZK'\n) - (\n    SELECT COUNT(DISTINCT customerid) \n    FROM customers \n    WHERE segment = 'SME' \n    AND currency = 'EUR'\n) AS difference\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (\n    SELECT COUNT(*) \n    FROM customers c \n    JOIN yearmonth ym ON c.customerid = ym.customerid \n    WHERE c.segment = 'LAM' AND ym.consumption > 46.73\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM customers \n    WHERE segment = 'LAM'\n) AS percentage_of_LAM_customers_consumed_more_than_46_73\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT (\n    SELECT COUNT(DISTINCT customerid) \n    FROM yearmonth \n    WHERE date = '201202' AND consumption > 528.3\n) * 100.0 / \n(\n    SELECT COUNT(DISTINCT customerid) \n    FROM yearmonth \n    WHERE date = '201202'\n) AS percentage\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(consumption) AS highest_monthly_consumption\nFROM yearmonth\nWHERE SUBSTRING(date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.description\nFROM transactions_1k\nJOIN products ON transactions_1k.productid = products.productid\nJOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid\nWHERE SUBSTRING(yearmonth.date, 1, 6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gasstations.country\nFROM gasstations\nJOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid\nWHERE SUBSTRING(transactions_1k.date, 1, 6) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT customers.customerid)\nFROM customers\nJOIN yearmonth ON customers.customerid = yearmonth.customerid\nWHERE customers.currency = 'EUR' AND yearmonth.consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nJOIN products ON transactions_1k.productid = products.productid\nWHERE gasstations.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT transactions_1k.time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE gasstations.chainid = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k \nWHERE gasstationid IN (\n    SELECT gasstationid \n    FROM gasstations \n    WHERE country = 'CZE'\n) \nAND date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT customers.currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nWHERE transactions_1k.date = '2012-08-24' AND transactions_1k.time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.segment\nFROM customers\nJOIN transactions_1k ON customers.customerid = transactions_1k.customerid\nWHERE transactions_1k.date = '2012-08-23' AND transactions_1k.time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k \nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid \nWHERE gasstations.country = 'CZE' \nAND transactions_1k.date = '2012-08-26' \nAND transactions_1k.time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT gasstations.country\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE transactions_1k.price = 548.4 AND transactions_1k.date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT (\n    SELECT COUNT(DISTINCT customerid) \n    FROM transactions_1k \n    INNER JOIN customers ON transactions_1k.customerid = customers.customerid \n    WHERE date = '2012-08-25' AND currency = 'EUR'\n) * 100.0 / \n(\n    SELECT COUNT(DISTINCT customerid) \n    FROM transactions_1k \n    WHERE date = '2012-08-25'\n) AS percentage\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (\n    (SELECT consumption \n     FROM yearmonth \n     WHERE customerid = \n         (SELECT customerid \n          FROM transactions_1k \n          WHERE date = '2012-08-25' AND price = 634.8) \n     AND date LIKE '2012%') \n    - \n    (SELECT consumption \n     FROM yearmonth \n     WHERE customerid = \n         (SELECT customerid \n          FROM transactions_1k \n          WHERE date = '2012-08-25' AND price = 634.8) \n     AND date LIKE '2013%')\n) \n/ \n(SELECT consumption \n FROM yearmonth \n WHERE customerid = \n     (SELECT customerid \n      FROM transactions_1k \n      WHERE date = '2012-08-25' AND price = 634.8) \n AND date LIKE '2012%') AS consumption_decrease_rate\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT (\n    SELECT COUNT(*) \n    FROM gasstations \n    WHERE segment = 'premium' AND country = 'SVK'\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM gasstations \n    WHERE country = 'SVK'\n) AS percentage\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(transactions_1k.price * transactions_1k.amount) AS total_spent\nFROM transactions_1k\nWHERE transactions_1k.customerid = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT customers.customerid, AVG(transactions_1k.price/transactions_1k.amount) as average_price_per_item, customers.currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nGROUP BY customers.customerid, customers.currency\nORDER BY SUM(transactions_1k.price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT yearmonth.customerid, yearmonth.consumption\nFROM transactions_1k\nJOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid\nWHERE transactions_1k.productid = 5 \nAND transactions_1k.price / transactions_1k.amount > 29.00\nAND yearmonth.date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) \nFROM member \nJOIN attendance ON member.member_id = attendance.link_to_member \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = 'Women's Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id) \nFROM event \nWHERE type = 'Meeting' \nAND event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 10\n)\t----- bird -----\tstudent_club",
    "33": "SELECT event_name \nFROM event \nWHERE event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 20\n) \nAND type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT amount \nFROM income \nINNER JOIN member ON income.link_to_member = member.member_id \nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name, member.last_name \nFROM member \nJOIN zip_code ON member.zip = zip_code.zip_code \nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.expense_id, expense.approved\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) AS average_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE (EXTRACT(MONTH FROM expense_date) IN (9, 10)) AND (member.first_name = 'Elijah' AND member.last_name = 'Allen')\t----- bird -----\tstudent_club",
    "38": "SELECT (SUM(b1.spent) - SUM(b2.spent)) AS difference\nFROM budget b1\nJOIN event e1 ON b1.link_to_event = e1.event_id\nJOIN budget b2 ON b1.budget_id = b2.budget_id\nJOIN event e2 ON b2.link_to_event = e2.event_id\nWHERE EXTRACT(YEAR FROM e1.event_date::date) = 2019\nAND EXTRACT(YEAR FROM e2.event_date::date) = 2020\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone \nFROM member \nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT CASE \n    WHEN SUM(b1.amount) IS NULL OR SUM(b2.amount) IS NULL THEN 'N/A'\n    WHEN SUM(b1.amount) = 0 THEN 'N/A'\n    ELSE CAST(SUM(b1.amount) AS FLOAT) / CAST(SUM(b2.amount) AS FLOAT)\nEND AS ratio\nFROM budget b1\nJOIN event e1 ON b1.link_to_event = e1.event_id AND e1.event_name = 'Yearly Kickoff'\nJOIN budget b2 ON b1.category = b2.category\nJOIN event e2 ON b2.link_to_event = e2.event_id AND e2.event_name = 'October Meeting'\nWHERE b1.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name \nFROM major \nJOIN member ON major.major_id = member.link_to_major \nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM attendance \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name, MAX(budget.spent / budget.amount) AS spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nGROUP BY event.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent\nFROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_for_food\nFROM budget\nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT first_name, last_name \nFROM member \nWHERE member_id IN \n    (SELECT link_to_member \n    FROM attendance \n    GROUP BY link_to_member \n    HAVING COUNT(link_to_event) > 7)\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name\nFROM member\nJOIN budget ON member.member_id = budget.link_to_event\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.cost = (SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "58": "SELECT (\n    SELECT SUM(cost) \n    FROM expense \n    WHERE link_to_budget IN (\n        SELECT budget_id \n        FROM budget \n        WHERE link_to_event IN (\n            SELECT event_id \n            FROM event \n            WHERE event_name = 'Yearly Kickoff'\n        )\n    )\n) / (\n    SELECT SUM(cost) \n    FROM expense\n) * 100 AS percentage\t----- bird -----\tstudent_club",
    "59": "SELECT source \nFROM income \nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' \nGROUP BY source \nORDER BY SUM(amount) DESC \nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT member.first_name, member.last_name, event.event_name\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed' AND budget.remaining < 0\nORDER BY budget.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) as total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE expense.approved = 'Yes' AND event.event_name = 'October Meeting'\nGROUP BY expense.expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) as total_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY total_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY member.first_name, member.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event.type\nFROM event\nWHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT (COUNT(amount = 50) FILTER (WHERE t_shirt_size = 'Medium') / COUNT(member_id) FILTER (WHERE t_shirt_size = 'Medium')) * 100 AS percentage\nFROM member\nJOIN income ON member.member_id = income.link_to_member\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' \nAND status = 'Closed' \nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name, member.last_name, member.phone\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name, member.last_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM member\nINNER JOIN income\nON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT CASE \n    WHEN COUNT(*) FILTER (WHERE SEX = 'M' AND Admission = '+') > COUNT(*) FILTER (WHERE SEX = 'M' AND Admission = '-')\n    THEN 'More in-patient males'\n    ELSE 'More outpatient males'\nEND AS Result,\nABS(\n    (CAST(COUNT(*) FILTER (WHERE SEX = 'M' AND Admission = '+') AS DECIMAL) / CAST(COUNT(*) FILTER (WHERE SEX = 'M') AS DECIMAL) \n    - \n    CAST(COUNT(*) FILTER (WHERE SEX = 'M' AND Admission = '-') AS DECIMAL) / CAST(COUNT(*) FILTER (WHERE SEX = 'M') AS DECIMAL)\n) * 100 AS Deviation_Percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (\n    SELECT COUNT(*) FROM Patient \n    WHERE YEAR(Birthday) > 1930 AND Sex = 'F'\n) * 100.0 / \n(\n    SELECT COUNT(*) FROM Patient \n    WHERE Sex = 'F'\n) AS percentage\nFROM Patient\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT (COUNT(ID) FILTER (WHERE Diagnosis = 'SLE' AND Admission = '-')::decimal / \n COUNT(ID) FILTER (WHERE Diagnosis = 'SLE' AND Admission = '+')) AS ratio\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.PatientID, Examination.Diagnosis, Laboratory.TestDate\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Patient.PatientID = Laboratory.PatientID\nWHERE Patient.PatientID = '30609'\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT The provided tables are empty, so it's impossible to generate a specific SQL query without knowing the structure and the fields of the tables. However, assuming that the tables have the necessary fields, a possible query could look like this:\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, EXTRACT(YEAR FROM AGE(current_timestamp, Patient.Birthday)) AS Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.Laboratory_ID = Laboratory.ID\nWHERE Laboratory.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.id, Patient.sex, Examination.diagnosis\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nWHERE Examination.thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nJOIN Examination ON Patient.PatientID = Examination.PatientID \nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID \nWHERE Patient.Sex = 'F' AND YEAR(Examination.Description) = 1997 AND Laboratory.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE e.examination_year = 1997 \nAND l.thrombosis = '1' \nAND p.sex = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT I'm sorry, but I can't generate the PostgreSQL for the above question as the tables provided don't have any columns. Please provide the columns and their data types for each table.\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Unfortunately, the tables provided do not have any columns or data to work with. However, assuming that the tables have the necessary columns, the PostgreSQL query might look something like this:\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT (COUNT(DISTINCT CASE WHEN UA <= 8.0 AND SEX = 'M' THEN Patient.id END)::float / NULLIF(COUNT(DISTINCT CASE WHEN UA <= 6.5 AND SEX = 'F' THEN Patient.id END), 0)) AS ratio\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE (UA <= 8.0 AND SEX = 'M') OR (UA <= 6.5 AND SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.PatientID)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nWHERE EXTRACT(YEAR FROM Patient.Birthday) > (EXTRACT(YEAR FROM Examination.`Examination Date`) - 18)\nAND EXTRACT(YEAR FROM Examination.`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT EXTRACT(YEAR FROM age(`Examination Date`, Birthday)) AS Patient_Age, Diagnosis\nFROM Patient\nJOIN Examination ON Patient.Patient_ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.Examination_ID = Laboratory.Examination_ID\nWHERE HGB = (SELECT MAX(HGB) FROM Laboratory)\nAND HGB IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Laboratory.aCL_IgM\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE Patient.Diagnosis = 'SLE' AND Examination.Description = '1994-02-19' AND Laboratory.Examination_Date = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (\n    SELECT SUM(`T-CHO`) \n    FROM Examination \n    WHERE Date LIKE '1981-11-%' \n    AND PatientID IN (\n        SELECT PatientID \n        FROM Patient \n        WHERE Birthday = '1959-02-18'\n    )\n) - (\n    SELECT SUM(`T-CHO`) \n    FROM Examination \n    WHERE Date LIKE '1981-12-%' \n    AND PatientID IN (\n        SELECT PatientID \n        FROM Patient \n        WHERE Birthday = '1959-02-18'\n    )\n) AS DecreaseRate\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.id\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Examination.date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON p.id = l.patient_id\nWHERE e.Thrombosis = 2 AND e.ANA = 'S' AND l.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.*\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE Examination.Admission = '-' \nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.T-BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB) \nFROM Patient \nJOIN Examination ON Patient.PatientID = Examination.PatientID \nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID \nWHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nJOIN Examination ON Patient.PatientID = Examination.PatientID \nWHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (DIVIDE(SUM(CASE WHEN Patient.SEX = 'F' THEN 1 ELSE 0 END), COUNT(Patient.SEX))) * 100 AS percentage\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nWHERE YEAR(Patient.BIRTHDAY) = 1980 AND Examination.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT Unfortunately, I can't generate the exact PostgreSQL query as the structure and fields of the tables are not provided. However, I can provide a general structure of the query based on your question and the external knowledge provided. \t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.id\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Patient.sex = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.name, Examination.diagnosis\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Patient.id = Laboratory.patient_id\nWHERE Laboratory.GPT > 60\nORDER BY Patient.date_of_birth ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.id, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.urea_nitrogen = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT I'm sorry, but I can't generate the PostgreSQL query as the tables provided above are empty. They don't have any columns or data. However, I can provide a general structure of the query based on your question. \t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(EXTRACT(YEAR FROM AGE(birthday))) AS average_age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient_id\nJOIN Laboratory ON Examination.ID = Laboratory.examination_id\nWHERE sex = 'M' AND T_CHO >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.PatientID)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE Laboratory.TG >= 200 AND EXTRACT(YEAR FROM AGE(CURRENT_DATE, Patient.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.patient_id) \nFROM Patient \nJOIN Examination ON Patient.patient_id = Examination.patient_id \nJOIN Laboratory ON Examination.exam_id = Laboratory.exam_id \nWHERE Patient.birthday BETWEEN '1936-01-01' AND '1956-12-31' \nAND Patient.sex = 'M' \nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.sex, EXTRACT(YEAR FROM AGE(Patient.Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.Examination_ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.T_CHO < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, SUBTRACT(year(current_timestamp), year(Patient.Birthday)) as Age, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Patient.ID = Laboratory.Patient_ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.Sex\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.Examination_ID\nWHERE Examination.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, (EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM Patient.Birthday)) AS Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.Examination_ID\nWHERE Laboratory.HCT >= 52\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \"Lower Than Normal Range\", \"Higher Than Normal Range\", \n(\"Lower Than Normal Range\" - \"Higher Than Normal Range\") AS \"Comparison\"\nFROM\n(\n    SELECT \n    (SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.id = e.patient_id JOIN Laboratory l ON e.laboratory_id = l.id WHERE l.PLT < 100) AS \"Lower Than Normal Range\",\n    (SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.id = e.patient_id JOIN Laboratory l ON e.laboratory_id = l.id WHERE l.PLT > 400) AS \"Higher Than Normal Range\"\n) AS SubQuery\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT P.*\nFROM Patient P\nJOIN Examination E ON P.PatientID = E.PatientID\nJOIN Laboratory L ON E.ExaminationID = L.ExaminationID\nWHERE YEAR(E.Date) = 1984 \nAND (EXTRACT(YEAR FROM AGE(CURRENT_DATE, P.Birthday))) < 50\nAND L.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (COUNT(*) FILTER (WHERE PT >= 14 AND SEX = 'F')::decimal / COUNT(*) FILTER (WHERE PT >= 14)) * 100 AS percentage\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nWHERE EXTRACT(YEAR FROM AGE(current_timestamp, Birthday)) > 55\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.PatientID)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Patient.Sex = 'M' \nAND Laboratory.WBC > 3.5 \nAND Laboratory.WBC < 9.0 \nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT Patient.id) \nFROM Patient \nJOIN Examination ON Patient.id = Examination.patient_id \nJOIN Laboratory ON Examination.id = Laboratory.examination_id \nWHERE Laboratory.ig_g >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient p \nJOIN Examination e ON p.PatientID = e.PatientID \nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID \nWHERE l.IGG > 900 AND l.IGG < 2000 AND p.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*) \nFROM Patient \nJOIN Examination ON Patient.PatientID = Examination.PatientID \nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID \nWHERE Laboratory.IGA >= 80 AND Laboratory.IGA <= 500 \nAND Examination.`First Date` >= '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(*) AS Frequency\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE (Laboratory.IGM <= 40 OR Laboratory.IGM >= 400)\nGROUP BY Diagnosis\nORDER BY Frequency DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.CRP = '+' AND l.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.CRE >= 1.5 AND (EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.Birthday))) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.patient_id) \nFROM Patient \nJOIN Examination ON Patient.patient_id = Examination.patient_id \nJOIN Laboratory ON Patient.patient_id = Laboratory.patient_id \nWHERE (Laboratory.RNP = '-' OR Laboratory.RNP = '+-') \nAND Examination.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON p.id = l.patient_id\nWHERE (l.SM = '-' OR l.SM = '+-') AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.id) \nFROM Patient \nJOIN Examination ON Patient.id = Examination.patient_id \nJOIN Laboratory ON Patient.id = Laboratory.patient_id \nWHERE Laboratory.SC170 IN('negative', '0') \nAND Patient.Sex = 'F' \nAND Examination.symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.PatientID)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExamID = Laboratory.ExamID\nWHERE Laboratory.CENTROMEA IN('-', '+-') \nAND Laboratory.SSB IN('-', '+-') \nAND Patient.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT Unfortunately, without knowing the structure of your tables (the columns and their data types), it's impossible to write an accurate SQL query. However, I can provide a general idea of how the query might look like. \t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON p.patient_id = l.patient_id\nWHERE l.creatinine_phosphokinase < 250\nAND (l.KCT = '+' OR l.RVVT = '+' OR l.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT L.name AS league_name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_id, buildUpPlaySpeed \nFROM Team_Attributes \nORDER BY buildUpPlaySpeed DESC \nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name \nFROM League \nJOIN Match ON League.id = Match.league_id \nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal \nGROUP BY League.name \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT Player.player_name, EXTRACT(YEAR FROM AGE(CURRENT_DATE, Player.birthday)) AS age\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.sprint_speed >= 97 \nAND EXTRACT(YEAR FROM Player_Attributes.date) BETWEEN 2013 AND 2015\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) AS total_matches\nFROM League\nJOIN Match ON League.id = Match.league_id\nGROUP BY League.name\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name \nFROM Team \nJOIN Team_Attributes \nON Team.team_api_id = Team_Attributes.team_api_id \nWHERE buildUpPlayPassing > \n    (SELECT AVG(buildUpPlayPassing) \n    FROM Team_Attributes \n    WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012') \nAND strftime('%Y', date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT (DIVIDE(COUNT(preferred_foot = 'left'), COUNT(player_fifa_api_id)) * 100) AS percentage\nFROM Player\nWHERE preferred_foot = 'left' AND EXTRACT(YEAR FROM birthday) BETWEEN 1987 AND 1992\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_fifa_api_id IN \n    (SELECT player_fifa_api_id \n    FROM Player \n    WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes\nON Player.player_api_id = Player_Attributes.player_fifa_api_id\nWHERE Player.height > 180\nGROUP BY Player.name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT *\nFROM Player\nWHERE EXTRACT(YEAR FROM birthday) = 1970 AND EXTRACT(MONTH FROM birthday) = 10\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT I'm sorry, but I can't generate the PostgreSQL for the above question as the tables provided don't have any columns defined. In order to generate the SQL, I would need to know the structure of the tables including the column names and their data types. \t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(Player_Attributes.overall_rating) \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_id = Player.id \nWHERE Player.height > 170 AND strftime('%Y', Player_Attributes.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT (AVG(ball_control) FILTER (WHERE player_name = 'Abdou Diallo')) - (AVG(ball_control) FILTER (WHERE player_name = 'Aaron Appindangoye')) AS difference\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT Player.player_name \nFROM Player \nWHERE Player.birthday = \n(SELECT MIN(Player.birthday) \nFROM Player \nWHERE Player.player_name IN ('Aaron Lennon', 'Abdelaziz Barrada'))\t----- bird -----\teuropean_football_2",
    "147": "SELECT Player.player_name \nFROM Player \nORDER BY Player.height DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT Player.id) \nFROM Player \nJOIN Player_Attributes \nON Player.id = Player_Attributes.player_id \nWHERE strftime('%Y', Player.birthday)<'1986' \nAND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name \nFROM Player \nJOIN Player_Attributes \nON Player.player_id = Player_Attributes.player_id \nWHERE Player_Attributes.volley > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*)\nFROM Match\nWHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\nAND SUBSTR(date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT league_name \nFROM League \nWHERE id = (\n    SELECT league_id \n    FROM Match \n    WHERE season = '2008/2009' \n    GROUP BY league_id \n    ORDER BY COUNT(*) DESC \n    LIMIT 1\n)\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') * 100 AS percentage_difference\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(Player_Attributes.overall_rating)\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_id = Player.player_id\nWHERE Player.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(Team_Attributes.chanceCreationPassing), Team_Attributes.chanceCreationPassingClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.name \nFROM Player \nJOIN Player_Attributes \nON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player_Attributes.overall_rating = 77 \nAND Player_Attributes.date LIKE '2016-06-23%' \nORDER BY Player.birthday \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating \nFROM Player_Attributes \nWHERE player_id = (SELECT id FROM Player WHERE player_name = 'Aaron Mooy') \nAND date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate \nFROM Player_Attributes \nWHERE player_id = (\n    SELECT player_id \n    FROM Player \n    WHERE player_name = 'Francesco Migliore'\n) \nAND date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT date \nFROM Player_Attributes \nWHERE player_name = 'Kevin Constant' \nORDER BY crossing DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT team_attributes.build_up_play_passing_class \nFROM Team \nJOIN Team_Attributes \nON Team.team_api_id = Team_Attributes.team_api_id \nWHERE Team.team_long_name = 'FC Lorient' \nAND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT team_attributes.defence_aggression_class\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT avg(overall_rating) \nFROM Player_Attributes \nWHERE player_id = (SELECT id FROM Player WHERE player_name = 'Marko Arnautovic') \nAND date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT (\n    (SELECT overall_rating \n     FROM Player_Attributes \n     WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') - \n    (SELECT overall_rating \n     FROM Player_Attributes \n     WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')\n) / \n(SELECT overall_rating \n FROM Player_Attributes \n WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "164": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes\nON Player.id = Player_Attributes.player_id\nORDER BY Player_Attributes.height DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes\nON Player.player_id = Player_Attributes.player_id\nORDER BY Player_Attributes.overall_rating DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.name \nFROM Player \nJOIN Player_Attributes \nON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT team_short_name \nFROM Team \nWHERE team_api_id IN \n(\n    SELECT team_api_id \n    FROM Team_Attributes \n    WHERE chanceCreationPassingClass = 'Safe'\n)\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_id = 6) - \n(SELECT jumping FROM Player_Attributes WHERE player_id = 23) AS jumping_difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_id \nFROM Player_Attributes \nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes) AND preferred_foot = 'right' \nORDER BY player_id \nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player p \nJOIN Player_Attributes pa ON p.player_id = pa.player_id \nWHERE pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND pa.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT team_long_name, buildUpPlaySpeedClass \nFROM Team \nJOIN Team_Attributes \nON Team.team_id = Team_Attributes.team_id \nWHERE team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player.player_name, Player_Attributes.finishing, Player_Attributes.curve\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) AS num_games\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nWHERE team_api_id = \n(\n    SELECT away_team_api_id \n    FROM Match \n    ORDER BY away_team_goal DESC \n    LIMIT 1\n)\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name \nFROM Player \nJOIN Player_Attributes \nON Player.player_id = Player_Attributes.player_id \nORDER BY Player_Attributes.overall_rating DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT (COUNT(*) FILTER (WHERE height < 180 AND overall_rating > 70) * 100.0) / COUNT(*) AS percentage\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverref \nFROM qualifying \nJOIN drivers ON qualifying.driverid = drivers.driverid \nWHERE qualifying.raceid = 20 \nORDER BY qualifying.q1 DESC \nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname \nFROM drivers \nJOIN qualifying ON drivers.driverid = qualifying.driverid \nWHERE qualifying.raceid = 19 AND qualifying.q2 = (\n    SELECT MIN(q2) \n    FROM qualifying \n    WHERE raceid = 19\n)\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT c.circuitid, c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitid = r.circuitid\nWHERE r.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverid = drivers.driverid \nWHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceid = 354\t----- bird -----\tformula_1",
    "185": "SELECT number FROM qualifying \nJOIN drivers ON qualifying.driverid = drivers.driverid \nWHERE raceid = 903 AND q3 = '0:01:54'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.driverid, drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE results.raceid = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverid = lapTimes.driverid\nWHERE lapTimes.time LIKE '1:27%' AND lapTimes.raceid = 161\t----- bird -----\tformula_1",
    "189": "SELECT c.location, c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitid = c.circuitid\nWHERE r.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructors\nJOIN constructorResults ON constructors.constructorid = constructorResults.constructorid\nWHERE constructorResults.raceid = 9\nORDER BY constructorResults.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nWHERE qualifying.raceid = 45 AND qualifying.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url \nFROM seasons \nJOIN races ON seasons.year = races.year \nWHERE races.raceid = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE results.raceid = 872 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE results.fastestlapspeed = (SELECT MAX(fastestlapspeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT (\n    (SELECT fastestlapspeed FROM results WHERE driverid = \n        (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceid = 853)\n    -\n    (SELECT fastestlapspeed FROM results WHERE driverid = \n        (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceid = 854)\n) / \n(SELECT fastestlapspeed FROM results WHERE driverid = \n    (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceid = 853) * 100 AS percentage_difference\t----- bird -----\tformula_1",
    "196": "SELECT COUNT(driverid) FILTER (WHERE time IS NOT NULL) * 1.0 / COUNT(driverid) AS completion_rate\nFROM results\nWHERE raceid IN (\n    SELECT raceid\n    FROM races\n    WHERE date = '1983-07-16'\n)\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, MAX(results.points) \nFROM drivers \nJOIN results ON drivers.driverid = results.driverid\t----- bird -----\tformula_1",
    "199": "SELECT MIN(results.milliseconds), drivers.forename, drivers.surname, races.name\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE results.milliseconds IS NOT NULL\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds)\nFROM lapTimes\nJOIN drivers ON lapTimes.driverid = drivers.driverid\nJOIN races ON lapTimes.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT (\n    SELECT COUNT(*) \n    FROM results \n    JOIN drivers ON results.driverid = drivers.driverid \n    JOIN races ON results.raceid = races.raceid \n    WHERE drivers.surname = 'Hamilton' \n    AND races.year >= 2010 \n    AND results.position != 1\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM results \n    JOIN drivers ON results.driverid = drivers.driverid \n    JOIN races ON results.raceid = races.raceid \n    WHERE drivers.surname = 'Hamilton' \n    AND races.year >= 2010\n) AS percentage\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(results.points)\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nGROUP BY drivers.forename, drivers.surname, drivers.nationality\nORDER BY COUNT(results.position = 1) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE EXTRACT(MONTH FROM races.date) = 9 AND EXTRACT(YEAR FROM races.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.fastestlaptime\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year, races.round\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT (COUNT(*) FILTER (WHERE country = 'Germany' AND name = 'European Grand Prix') * 100.0 / COUNT(*) FILTER (WHERE name = 'European Grand Prix')) AS percentage\nFROM races\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng \nFROM circuits \nWHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitref FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality\nFROM drivers\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverref\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionorder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name, races.year\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(results.fastestlapspeed) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.positionorder\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT results.time \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT results.driverid) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT ((results.time - last_driver_time) / last_driver_time) * 100 AS faster_percentage\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(results.points) \nFROM results \nJOIN drivers ON results.driverid = drivers.driverid \nJOIN constructors ON results.constructorid = constructors.constructorid \nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nJOIN results ON constructors.constructorid = results.constructorid\nWHERE results.raceid = 291 AND results.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT constructors.constructorid) \nFROM constructors \nJOIN results ON constructors.constructorid = results.constructorid \nWHERE constructors.nationality = 'Japanese' \nAND results.points = 0 \nGROUP BY constructors.constructorid \nHAVING COUNT(results.raceid) = 2\t----- bird -----\tformula_1",
    "223": "SELECT (\n    SELECT COUNT(*) \n    FROM results \n    JOIN races ON results.raceid = races.raceid \n    JOIN drivers ON results.driverid = drivers.driverid \n    WHERE drivers.nationality = 'Japanese' \n    AND races.year BETWEEN 2007 AND 2009 \n    AND results.time IS NOT NULL\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM results \n    JOIN races ON results.raceid = races.raceid \n    JOIN drivers ON results.driverid = drivers.driverid \n    WHERE drivers.nationality = 'Japanese' \n    AND races.year BETWEEN 2007 AND 2009\n) AS race_completion_percentage\t----- bird -----\tformula_1",
    "224": "SELECT races.year, AVG(EXTRACT(EPOCH FROM results.time::interval)) as average_time\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.year < 1975 AND results.position = 1 AND results.time IS NOT NULL\nGROUP BY races.year\t----- bird -----\tformula_1",
    "225": "SELECT fastestlap \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.year = 2009 \nORDER BY fastestlaptime \nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestlapspeed) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT (COUNT(driverid) FILTER (WHERE EXTRACT(YEAR FROM dob) < 1985 AND laps > 50) / COUNT(driverid) FILTER (WHERE EXTRACT(YEAR FROM dob) BETWEEN 2000 AND 2005)) * 100 AS percentage\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE EXTRACT(YEAR FROM dob) BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) \nFROM drivers d \nJOIN lapTimes l ON d.driverid = l.driverid \nWHERE d.nationality = 'French' AND l.time < 120\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT drivers.code\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT drivers.driverref \nFROM drivers \nWHERE drivers.nationality = 'German' \nORDER BY drivers.dob \nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverid, drivers.code\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE EXTRACT(YEAR FROM drivers.dob) = 1971 AND results.fastestlaptime IS NOT NULL\nORDER BY results.fastestlaptime ASC\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE raceid BETWEEN 50 AND 100 \nAND time IS NOT NULL \nAND statusid = 2\t----- bird -----\tformula_1",
    "234": "SELECT count(*), location, lat, lng \nFROM circuits \nWHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT drivers.forename, drivers.surname, races.year, races.date, races.time\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nJOIN races ON qualifying.raceid = races.raceid\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT drivers.driverid, drivers.forename, drivers.surname, AVG(pitStops.duration) as average_duration\nFROM drivers\nJOIN pitStops ON drivers.driverid = pitStops.driverid\nWHERE drivers.nationality = 'German' AND EXTRACT(YEAR FROM drivers.dob) BETWEEN 1980 AND 1985\nGROUP BY drivers.driverid\nORDER BY average_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.positionorder = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorref, constructors.url\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructors.name, constructors.nationality, SUM(results.points) as total_points\nFROM constructors\nJOIN results ON constructors.constructorid = results.constructorid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructors.name, constructors.nationality\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nJOIN races ON qualifying.raceid = races.raceid\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE races.year = 2008 AND circuits.name = 'Marina Bay Street Circuit' AND qualifying.position = 1 AND qualifying.q3 IS NOT NULL\nORDER BY qualifying.q3 ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename, drivers.surname, drivers.nationality, races.name\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT drivers.driverid, drivers.forename, drivers.surname, COUNT(results.statusid) as accidents\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Canadian Grand Prix' AND results.statusid = 3\nGROUP BY drivers.driverid\nORDER BY accidents DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN lapTimes ON drivers.driverid = lapTimes.driverid\nORDER BY lapTimes.time ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, MIN(results.fastestlaptime) as lap_record\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS count\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM publisher\nJOIN superhero ON publisher.id = superhero.publisher_id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT (SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,\n(SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_bad_heroes\t----- bird -----\tsuperhero",
    "260": "SELECT CASE \n    WHEN SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) > SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) THEN 'Marvel Comics'\n    ELSE 'DC Comics'\nEND AS publisher_with_more_superheroes,\nABS(SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference_in_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190 AND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185 AND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT ROUND(\n    (\n        SELECT COUNT(*) FROM superhero\n        JOIN publisher ON superhero.publisher_id = publisher.id\n        WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics'\n    )::DECIMAL / \n    (\n        SELECT COUNT(*) FROM superhero\n        WHERE height_cm BETWEEN 150 AND 180\n    ) * 100, 2\n) AS percentage_marvel_comics\nFROM superhero\nLIMIT 1\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male' AND superhero.weight_kg > (SELECT AVG(superhero.weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name \nFROM hero_power \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hp.hero_id) \nFROM hero_power hp \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT colour.eye_colour, colour.hair_colour, colour.skin_colour\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN colour ON superhero.eye_colour_id = colour.id OR superhero.hair_colour_id = colour.id OR superhero.skin_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN colour ON superhero.eye_colour_id = colour.id \n        JOIN gender ON superhero.gender_id = gender.id \n        WHERE colour.colour = 'Blue' AND gender.gender = 'Female'\n    )::decimal / \n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN gender ON superhero.gender_id = gender.id \n        WHERE gender.gender = 'Female'\n    ) * 100, 2\n) AS percentage_blue_female_superheroes\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) \nFROM hero_power \nJOIN superhero ON superhero.id = hero_power.hero_id \nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength' AND ha.attribute_value = (\n    SELECT MAX(attribute_value) \n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'Strength'\n)\t----- bird -----\tsuperhero",
    "281": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN gender ON superhero.gender_id = gender.id \n        JOIN publisher ON superhero.publisher_id = publisher.id \n        WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'\n    )::DECIMAL / \n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN gender ON superhero.gender_id = gender.id \n        WHERE gender.gender = 'Female'\n    ) * 100, 2\n) AS percentage\nFROM superhero\nLIMIT 1\t----- bird -----\tsuperhero",
    "282": "SELECT (SUM(weight_kg) FILTER (WHERE full_name = 'Emil Blonsky') - SUM(weight_kg) FILTER (WHERE full_name = 'Charles Chandler')) AS weight_difference\nFROM superhero\t----- bird -----\tsuperhero",
    "283": "SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height\nFROM superhero\nGROUP BY superhero.superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT ROUND((SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7) * 100.0 / (SELECT COUNT(*) FROM superhero), 2) AS percentage_blue_eyes\t----- bird -----\tsuperhero",
    "290": "SELECT (COUNT(*) FILTER (WHERE gender_id = 1))::decimal / NULLIF(COUNT(*) FILTER (WHERE gender_id = 2), 0) AS ratio\nFROM superhero\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT (SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference\nFROM superhero AS T1\nWHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT CASE \n    WHEN COUNT(DISTINCT CASE WHEN publisher.publisher_name = 'DC Comics' THEN superhero.id END) > COUNT(DISTINCT CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id END) THEN 'DC Comics'\n    ELSE 'Marvel Comics'\nEND AS publisher_with_more_superheroes,\nABS(COUNT(DISTINCT CASE WHEN publisher.publisher_name = 'DC Comics' THEN superhero.id END) - COUNT(DISTINCT CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id END)) AS difference_in_superheroes\nFROM superhero\nLEFT JOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "297": "SELECT displayname, reputation \nFROM users \nWHERE displayname IN ('Harlan', 'Jarrod Dixon') \nORDER BY reputation DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT displayname \nFROM users \nWHERE EXTRACT(YEAR FROM creationdate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) \nFROM users \nWHERE lastaccessdate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.displayname \nFROM users \nJOIN posts ON users.id = posts.owneruserid \nWHERE posts.title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE owneruserid = \n    (SELECT id \n     FROM users \n     WHERE displayname = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT users.displayname \nFROM users \nJOIN posts ON users.id = posts.lasteditoruserid \nWHERE posts.title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nWHERE owneruserid IN (\n    SELECT id \n    FROM users \n    WHERE age > 65\n) \nAND score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.body\nFROM tags\nJOIN posts ON tags.excerptpostid = posts.id\nWHERE tags.tagname = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(posts.score) \nFROM posts \nJOIN users ON posts.owneruserid = users.id \nWHERE users.displayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT (COUNT(posts.id) FILTER (WHERE users.age > 65) / COUNT(posts.id)::float) * 100 AS percentage\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE posts.score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT p.favoritecount\nFROM posts p\nJOIN comments c ON p.id = c.postid\nWHERE c.userid = 3025 AND c.creationdate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE \n    WHEN p.closeddate IS NULL THEN 'No'\n    ELSE 'Yes'\nEND AS well_finished\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE c.userid = 23853 AND c.creationdate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) \nFROM posts \nWHERE owneruserid = \n    (SELECT id \n     FROM users \n     WHERE displayname = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT users.displayname \nFROM users \nJOIN votes ON users.id = votes.userid \nWHERE votes.id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(posts.id) AS DECIMAL) / NULLIF(COUNT(votes.id), 0) AS ratio\nFROM posts\nLEFT JOIN votes ON posts.owneruserid = votes.userid\nWHERE posts.owneruserid = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT `viewcount` \nFROM `posts` \nWHERE `title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT text \nFROM comments \nWHERE score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.displayname \nFROM users \nJOIN comments ON users.id = comments.userid \nWHERE comments.text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.displayname, users.reputation\nFROM users\nJOIN posts ON users.id = posts.owneruserid\nWHERE posts.title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.displayname \nFROM posts \nJOIN users ON posts.lasteditoruserid = users.id \nWHERE posts.title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.text\nFROM comments\nJOIN posts ON comments.postid = posts.id\nJOIN users ON comments.userid = users.id\nWHERE posts.title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND users.id = posts.lasteditoruserid\t----- bird -----\tcodebase_community",
    "318": "SELECT users.displayname \nFROM users \nJOIN votes ON users.id = votes.userid \nJOIN posts ON votes.postid = posts.id \nWHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.title, c.text, AVG(p.viewcount) AS average_view_count\nFROM posts p\nLEFT JOIN comments c ON p.id = c.postid\nWHERE p.tags LIKE '%<humor>%'\nGROUP BY p.title, c.text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) \nFROM (\n    SELECT userid \n    FROM badges \n    GROUP BY userid \n    HAVING COUNT(*) > 5\n) AS subquery\t----- bird -----\tcodebase_community",
    "321": "SELECT users.id, users.displayname\nFROM users\nJOIN posts ON users.id = posts.owneruserid\nJOIN postHistory ON posts.id = postHistory.postid\nGROUP BY users.id, users.displayname\nHAVING COUNT(postHistory.id) = 1 AND SUM(posts.viewcount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT (\n    (\n        (\n            SELECT COUNT(*) \n            FROM badges \n            WHERE name = 'Student' AND EXTRACT(YEAR FROM date) = 2010\n        )::decimal / \n        (\n            SELECT COUNT(*) \n            FROM badges \n            WHERE name = 'Student'\n        ) * 100\n    ) - \n    (\n        (\n            SELECT COUNT(*) \n            FROM badges \n            WHERE name = 'Student' AND EXTRACT(YEAR FROM date) = 2011\n        )::decimal / \n        (\n            SELECT COUNT(*) \n            FROM badges \n            WHERE name = 'Student'\n        ) * 100\n    )\n) AS percentage_difference\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(users.upvotes) AS average_upvotes, AVG(users.age) AS average_age\nFROM users\nJOIN posts ON users.id = posts.owneruserid\nGROUP BY users.id\nHAVING COUNT(posts.id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT (COUNT(id) FILTER (WHERE EXTRACT(YEAR FROM creationdate) = 2010))::decimal / \nNULLIF(COUNT(id) FILTER (WHERE EXTRACT(YEAR FROM creationdate) = 2011), 0) AS ratio\nFROM votes\t----- bird -----\tcodebase_community",
    "325": "SELECT p.id\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'slashnick'\nORDER BY p.answercount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT ownerdisplayname, MAX(viewcount) AS max_viewcount\nFROM posts\nWHERE ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY ownerdisplayname\nORDER BY max_viewcount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.tagname\nFROM tags\nJOIN posts ON posts.tags LIKE CONCAT('%', tags.tagname, '%')\nJOIN users ON users.id = posts.owneruserid\nWHERE users.displayname = 'Mark Meckes' AND posts.commentcount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (\n    SELECT COUNT(*) \n    FROM posts \n    WHERE tags LIKE '%<r>%' AND ownerdisplayname = 'Community'\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM posts \n    WHERE ownerdisplayname = 'Community'\n) AS percentage\t----- bird -----\tcodebase_community",
    "329": "SELECT (SUM(posts.viewcount) FILTER (WHERE users.displayname = 'Mornington')) - \n(SUM(posts.viewcount) FILTER (WHERE users.displayname = 'Amos')) \nFROM posts \nINNER JOIN users ON posts.owneruserid = users.id\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(id) / 12 AS average_monthly_links\nFROM posts\nWHERE EXTRACT(YEAR FROM creaiondate) = 2010 AND answercount <= 2\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(votes.creationdate)\nFROM votes\nJOIN users ON votes.userid = users.id\nWHERE users.displayname = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT users.displayname \nFROM users \nJOIN badges ON users.id = badges.userid \nWHERE badges.name = 'Autobiographer' \nORDER BY badges.date \nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT users.id)\nFROM users\nJOIN posts ON users.id = posts.owneruserid\nWHERE users.location = 'United Kingdom' AND posts.favoritecount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.id, posts.title\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'Harvey Motulsky'\nORDER BY posts.viewcount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.id, users.displayname\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE EXTRACT(YEAR FROM posts.creaiondate) = 2010\nORDER BY posts.favoritecount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT (\n    SELECT COUNT(*) \n    FROM posts \n    INNER JOIN users ON posts.owneruserid = users.id \n    WHERE EXTRACT(YEAR FROM users.creationdate) = 2011 AND users.reputation > 1000\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM posts\n) AS percentage\t----- bird -----\tcodebase_community",
    "337": "SELECT p.viewcount AS total_views, u.displayname AS user_name\nFROM posts p\nJOIN users u ON p.lasteditoruserid = u.id\nWHERE p.title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE postid = \n    (SELECT id \n    FROM posts \n    ORDER BY score DESC \n    LIMIT 1)\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.text, users.displayname\nFROM comments\nJOIN users ON comments.userid = users.id\nJOIN posts ON comments.postid = posts.id\nWHERE posts.title = 'Analysing wind data with R'\nORDER BY comments.creationdate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT (COUNT(posts.id) FILTER (WHERE posts.score > 50) * 100.0) / COUNT(posts.id) AS percentage\nFROM posts\nINNER JOIN users ON posts.owneruserid = users.id\nWHERE users.reputation = (SELECT MAX(reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT excerptpostid, wikipostid \nFROM tags \nWHERE tagname = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.reputation, users.upvotes\nFROM users\nJOIN comments ON users.id = comments.userid\nWHERE comments.text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.text\nFROM comments\nJOIN posts ON comments.postid = posts.id\nWHERE posts.viewcount BETWEEN 100 AND 150\nORDER BY comments.score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nWHERE postid IN \n    (SELECT id \n     FROM posts \n     WHERE commentcount = 1) \nAND score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT (COUNT(DISTINCT comments.userid) FILTER (WHERE users.upvotes = 0 AND comments.score BETWEEN 5 AND 10))::decimal / \nNULLIF((COUNT(DISTINCT comments.userid) FILTER (WHERE comments.score BETWEEN 5 AND 10)), 0) * 100 AS percentage\nFROM comments\nLEFT JOIN users ON comments.userid = users.id\t----- bird -----\tcodebase_community",
    "346": "SELECT id, name \nFROM cards \nWHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT name FROM cards WHERE bordercolor = 'borderless' AND (cardkingdomfoilid IS NULL OR cardkingdomid IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT cards.name\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, cards.artist, rulings.text, cards.hascontentwarning\nFROM cards\nLEFT JOIN rulings ON cards.id = rulings.id\nWHERE cards.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.ispromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.name, cards.artist, cards.ispromo\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT (COUNT(*) FILTER (WHERE language = 'Chinese Simplified') * 100.0 / COUNT(*)) AS percentage\nFROM foreign_data\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT `bordercolor` \nFROM `cards` \nWHERE `name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format, legalities.status\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT (COUNT(*) FILTER (WHERE bordercolor = 'borderless') * 100.0 / COUNT(*)) AS percentage_borderless\nFROM cards\t----- bird -----\tcard_games",
    "358": "SELECT (COUNT(cards.id) FILTER (WHERE foreign_data.language = 'French' AND cards.isstoryspotlight = 1) * 100.0) / NULLIF(COUNT(cards.id) FILTER (WHERE cards.isstoryspotlight = 1), 0) AS percentage\nFROM cards\nLEFT JOIN foreign_data ON cards.id = foreign_data.id\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originaltype = 'Summon - Angel' \nAND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE dueldeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.id = legalities.id \nWHERE legalities.status = 'Banned' AND cards.bordercolor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT cards.name, foreign_data.language\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.originaltype = 'Artifact' AND cards.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manacost \nFROM cards \nWHERE layout = 'normal' \nAND frameversion = '2003' \nAND bordercolor = 'black' \nAND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT id, \n(COUNT(*) FILTER (WHERE isstoryspotlight = 1 AND istextless = 0) OVER() / COUNT(*) OVER()) * 100 AS percentage\nFROM cards\nWHERE isstoryspotlight = 1 AND istextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT st.setcode)\nFROM set_translations st\nJOIN sets s ON st.setcode = s.code\nWHERE st.language = 'Portuguese (Brasil)' AND s.block = 'Commander'\t----- bird -----\tcard_games",
    "366": "SELECT types \nFROM cards \nJOIN foreign_data \nON cards.id = foreign_data.id \nWHERE foreign_data.language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') \nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.id = legalities.id \nJOIN rulings ON cards.id = rulings.id \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name \nFROM cards \nJOIN foreign_data ON cards.id = foreign_data.id \nWHERE cards.artist = 'Matthew D. Wilson' \nAND cards.type LIKE '%Creature%' \nAND cards.layout = 'normal' \nAND cards.bordercolor = 'black' \nAND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM sets\nJOIN set_translations ON sets.id = set_translations.id\nWHERE sets.basesetsize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT (DIVIDE(COUNT(cards.hascontentwarning = 0), COUNT(cards.id)) * 100) AS percentage\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE legalities.format = 'commander' AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT (COUNT(*) FILTER (WHERE cards.power IS NULL OR cards.power = '*') AND foreign_data.language = 'French') * 100.0 / COUNT(*) FILTER (WHERE cards.power IS NULL OR cards.power = '*')\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\t----- bird -----\tcard_games",
    "373": "SELECT language \nFROM foreign_data \nWHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT (COUNT(*) FILTER (WHERE istextless = 1 AND layout = 'normal') * 100.0) / COUNT(*) AS proportion\nFROM cards\t----- bird -----\tcard_games",
    "375": "SELECT set_translations.language \nFROM set_translations \nJOIN sets ON set_translations.id = sets.id \nWHERE sets.mcmname = 'Archenemy' AND sets.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language \nFROM foreign_data \nWHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedmanacost \nFROM cards \nWHERE name IN ('Serra Angel', 'Shrine Keeper')\t----- bird -----\tcard_games",
    "378": "SELECT set_translations.translation\nFROM set_translations\nJOIN cards ON set_translations.setcode = cards.setcode\nWHERE set_translations.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "379": "SELECT *\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nJOIN sets ON cards.setcode = sets.code \nJOIN set_translations ON sets.code = set_translations.setcode \nWHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation \nFROM set_translations \nWHERE setcode = (SELECT code FROM sets WHERE name = 'Eighth Edition') \nAND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.mtgocode\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nWHERE cards.name = 'Angel of Mercy' AND sets.mtgocode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.id = set_translations.id\nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT isforeignonly \nFROM sets \nWHERE name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets \nWHERE id IN (\n    SELECT id \n    FROM set_translations \n    WHERE language = 'Italian' AND translation IS NOT NULL\n) AND basesetsize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist \nFROM cards \nWHERE setcode = (SELECT code FROM sets WHERE name = 'Coldsnap') \nAND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards AS T1 \nJOIN sets AS T2 ON T1.id = T2.id \nWHERE T1.convertedmanacost > 5 AND T2.name = 'Coldsnap' AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT flavortext \nFROM foreign_data \nJOIN cards ON foreign_data.id = cards.id \nWHERE foreign_data.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.id = cards.id\nJOIN sets ON cards.setcode = sets.code\nJOIN set_translations ON sets.id = set_translations.id\nWHERE sets.name = 'Coldsnap' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT cards.name\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian' AND cards.convertedmanacost = (\n    SELECT MAX(convertedmanacost)\n    FROM cards\n    WHERE setcode = (\n        SELECT code\n        FROM sets\n        WHERE name = 'Coldsnap'\n    )\n)\t----- bird -----\tcard_games",
    "391": "SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = (SELECT code FROM sets WHERE name = 'Coldsnap'))::decimal / \n(SELECT COUNT(*) FROM cards WHERE setcode = (SELECT code FROM sets WHERE name = 'Coldsnap')) * 100 AS percentage\t----- bird -----\tcard_games",
    "392": "SELECT (\n    SELECT COUNT(*) FROM cards \n    WHERE cardkingdomfoilid IS NOT NULL \n    AND cardkingdomid IS NOT NULL \n    AND setcode = (SELECT code FROM sets WHERE name = 'Coldsnap')\n) * 100.0 / \n(\n    SELECT COUNT(*) FROM cards \n    WHERE setcode = (SELECT code FROM sets WHERE name = 'Coldsnap')\n) AS percentage_of_incredibly_powerful_cards_in_coldsnap\t----- bird -----\tcard_games",
    "393": "SELECT format, COUNT(status) AS banned_count\nFROM legalities\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY banned_count DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.edhrecrank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.id = sets.id\nJOIN legalities ON cards.id = legalities.id\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name \nFROM sets \nJOIN set_translations ON sets.id = set_translations.id \nWHERE sets.name NOT IN (SELECT sets.name FROM sets JOIN set_translations ON sets.id = set_translations.id WHERE set_translations.language LIKE '%Japanese%') \nAND set_translations.language = 'Korean'\t----- bird -----\tcard_games",
    "397": "SELECT cards.frameversion, cards.name, legalities.status\nFROM cards\nLEFT JOIN legalities ON cards.id = legalities.id\nWHERE cards.artist = 'Allen Williams' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) \nFROM (\n    SELECT molecule_id, COUNT(*) as oxygen_count\n    FROM atom \n    WHERE element = 'O' AND molecule_id IN (\n        SELECT molecule_id \n        FROM bond \n        WHERE bond_type = '-'\n    ) \n    GROUP BY molecule_id\n) AS subquery\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) AS average_single_bonded_carcinogenic\nFROM\n(\n    SELECT molecule.molecule_id, COUNT(bond.bond_id) AS single_bonded_count\n    FROM molecule\n    JOIN atom ON molecule.molecule_id = atom.molecule_id\n    JOIN bond ON molecule.molecule_id = bond.molecule_id\n    JOIN connected ON atom.atom_id = connected.atom_id AND bond.bond_id = connected.bond_id\n    WHERE molecule.label = '+' AND bond.bond_type = '-'\n    GROUP BY molecule.molecule_id\n) AS subquery\t----- bird -----\ttoxicology",
    "401": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT (\n    SELECT COUNT(*) FROM atom \n    INNER JOIN connected ON atom.atom_id = connected.atom_id \n    INNER JOIN bond ON connected.bond_id = bond.bond_id \n    WHERE atom.element = 'c' AND bond.bond_type = '='\n) * 100.0 / \n(\n    SELECT COUNT(*) FROM atom \n    INNER JOIN connected ON atom.atom_id = connected.atom_id \n    INNER JOIN bond ON connected.bond_id = bond.bond_id \n    WHERE bond.bond_type = '='\n) AS percentage_of_carbon_in_double_bond_molecules\t----- bird -----\ttoxicology",
    "403": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT a1.element, a2.element\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'h'\n)\nGROUP BY label\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(*) as count\nFROM atom\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '-'\n)\nGROUP BY element\nORDER BY count\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') \nOR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE (atom.element = 'i' OR atom.element = 's') AND bond.bond_type = '-' AND bond.molecule_id = atom.molecule_id\t----- bird -----\ttoxicology",
    "409": "SELECT 100 - (COUNT(DISTINCT CASE WHEN atom.element = 'f' THEN atom.molecule_id END) * 100.0 / COUNT(DISTINCT molecule.molecule_id)) AS percentage\nFROM molecule\nLEFT JOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT (\n    SELECT COUNT(DISTINCT molecule_id) \n    FROM bond \n    WHERE bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM bond \n        WHERE bond_type = '=' AND molecule_id = 'TR008'\n    )::decimal / \n    (\n        SELECT COUNT(*) \n        FROM bond \n        WHERE molecule_id = 'TR008'\n    ) * 100, 5\n) AS percentage_of_double_bonds\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(\n    (SELECT COUNT(*) FROM molecule WHERE label = '+')::decimal / \n    (SELECT COUNT(*) FROM molecule)::decimal * 100, 3\n) AS percentage_of_carcinogenic_molecules\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM atom \n        WHERE molecule_id = 'TR206' AND element = 'h'\n    )::decimal / \n    (\n        SELECT COUNT(*) \n        FROM atom \n        WHERE molecule_id = 'TR206'\n    ) * 100, 4\n) AS percentage_of_hydrogen\nFROM atom\nWHERE molecule_id = 'TR206'\nLIMIT 1\t----- bird -----\ttoxicology",
    "415": "SELECT molecule.label, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT molecule.molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE molecule.label = '-' AND bond.bond_type = '-'\nGROUP BY molecule.molecule_id\nORDER BY molecule.molecule_id ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(bond_id) \nFROM connected \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12') \nAND bond.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT bond.bond_id, bond.bond_type\nFROM bond\nJOIN connected AS c1 ON bond.bond_id = c1.bond_id\nJOIN atom AS a1 ON c1.atom_id = a1.atom_id AND a1.element = 'p'\nJOIN connected AS c2 ON bond.bond_id = c2.bond_id\nJOIN atom AS a2 ON c2.atom_id = a2.atom_id AND a2.element = 'n'\nWHERE bond.molecule_id = a1.molecule_id AND a1.molecule_id = a2.molecule_id\t----- bird -----\ttoxicology",
    "424": "SELECT molecule.label = '+'\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = ' = '\nGROUP BY molecule.molecule_id\nORDER BY COUNT(bond.bond_type) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) \nFROM (\n    SELECT COUNT(bond_id) as bond_count\n    FROM atom \n    JOIN connected ON atom.atom_id = connected.atom_id\n    WHERE element = 'i'\n    GROUP BY atom.atom_id\n) AS iodine_bonds\t----- bird -----\ttoxicology",
    "426": "SELECT element \nFROM atom \nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.atom_id\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id AND atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM molecule m \n        JOIN bond b ON m.molecule_id = b.molecule_id \n        WHERE b.bond_type = '-' AND m.label = '+'\n    )::decimal / \n    (\n        SELECT COUNT(*) \n        FROM bond \n        WHERE bond_type = '-'\n    ) * 100, 5\n) AS proportion_carcinogenic_single_bonds\nFROM molecule\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nJOIN bond ON molecule.molecule_id = bond.molecule_id \nJOIN connected ON atom.atom_id = connected.atom_id \nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT (DIVIDE(SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END), COUNT(atom.atom_id))) * 100 as percent\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT (DIVIDE(SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END), COUNT(DISTINCT molecule.molecule_id))) * 100 as percentage\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT element, COUNT(*) as count\nFROM atom\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n) AND substr(atom_id, 7, 1) = '4'\nGROUP BY element\t----- bird -----\ttoxicology",
    "436": "SELECT molecule.label, \nCAST(SUM(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(atom.element) AS ratio\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR006'\nGROUP BY molecule.label\t----- bird -----\ttoxicology",
    "437": "SELECT molecule.molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '-'\nGROUP BY molecule.molecule_id\nHAVING COUNT(atom.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE avgscrmath > 400 AND virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT cdscode \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS highest_eligible_free_rate\nFROM frpm\nWHERE `cdscode` IN (\n    SELECT `cds`\n    FROM satscores\n    WHERE `numge1500` / `numtsttakr` > 0.3\n)\t----- bird -----\tcalifornia_schools",
    "441": "SELECT `school`, `avgscrwrite`, `charternum`\nFROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode`\nWHERE `avgscrwrite` > 499 AND `charternum` IS NOT NULL\nORDER BY `avgscrwrite` DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.school, schools.street\nFROM schools\nJOIN frpm\nON schools.cdscode = frpm.cdscode\nWHERE (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.school\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE (f.\"Free Meal Count (K-12)\" / f.\"Enrollment (K-12)\") > 0.1\nAND ss.numge1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.school, schools.fundingtype\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE satscores.avgscrmath > 400 AND schools.county = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.school AS \"School Name\", \n       CONCAT(schools.street, ', ', schools.city, ', ', schools.state, ', ', schools.zip) AS \"Full Address\"\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.county = 'Monterey' \nAND frpm.`FRPM Count (Ages 5-17)` > 800\nAND schools.school LIKE '%High School%'\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.school, s.phone, avg(satscores.avgscrwrite)\nFROM schools s\nJOIN satscores ON s.cdscode = satscores.cds\nWHERE s.opendate > '1991-12-31' OR s.closeddate < '2000-01-01'\nGROUP BY s.school, s.phone\t----- bird -----\tcalifornia_schools",
    "447": "SELECT schools.school, schools.doctype\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.fundingtype = 'Local'\nAND (frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\") > \n    (SELECT AVG(frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\")\n     FROM schools\n     JOIN frpm ON schools.cdscode = frpm.cdscode\n     WHERE schools.fundingtype = 'Local')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, `Enrollment (K-12)`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) as `Eligible Free Rate`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 10, 2\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \"School Name\", \"FRPM Count (K-12)\", \"Enrollment (K-12)\", (\"FRPM Count (K-12)\" / \"Enrollment (K-12)\") as \"Eligible FRPM Rate\"\nFROM frpm\nWHERE \"irc\" = 66\nORDER BY \"FRPM Count (K-12)\" DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.street, s.city, s.zip, s.state\nFROM satscores ss\nJOIN schools s ON ss.cds = s.cdscode\nORDER BY (ss.numge1500 / ss.numtsttakr) ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.admfname1, s.admlname1, s.admfname2, s.admlname2, s.admfname3, s.admlname3\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE ss.numge1500 = (SELECT MAX(numge1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.numtsttakr) \nFROM satscores \nJOIN schools ON satscores.cds = schools.cdscode \nWHERE schools.opendate BETWEEN '1980-01-01' AND '1980-12-31' \nAND schools.county = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.phone\nFROM schools\nJOIN satscores ON schools.cdscode = satscores.cds\nWHERE satscores.avgscrread = (\n    SELECT MIN(avgscrread)\n    FROM satscores\n    JOIN schools ON schools.cdscode = satscores.cds\n    WHERE schools.district = 'Fresno Unified'\n)\t----- bird -----\tcalifornia_schools",
    "454": "SELECT sname\nFROM (\n    SELECT sname, cname, avgscrread, \n    ROW_NUMBER() OVER(PARTITION BY cname ORDER BY avgscrread DESC) as rank\n    FROM satscores\n    WHERE cds IN (\n        SELECT cdscode\n        FROM schools\n        WHERE virtual = 'F'\n    )\n) t\nWHERE rank <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.school, AVG(satscores.avgscrwrite) as avg_writing_score\nFROM schools s\nJOIN satscores on s.cdscode = satscores.cds\nWHERE s.admfname1 = 'Ricci' AND s.admlname1 = 'Ulrich'\nGROUP BY s.school\t----- bird -----\tcalifornia_schools",
    "456": "SELECT \"school\", \"Enrollment (K-12)\"\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE \"doc\" = '31'\nORDER BY \"Enrollment (K-12)\" DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*)/12 AS average_monthly_openings\nFROM schools\nWHERE county = 'Alameda' AND doc = '52' AND EXTRACT(YEAR FROM opendate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT (SELECT COUNT(*) FROM schools WHERE county='Orange' AND doc='54')::decimal / \n(SELECT COUNT(*) FROM schools WHERE county='Orange' AND doc='52') AS ratio\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.school, s.street\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nORDER BY ss.avgscrmath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools \nJOIN frpm ON schools.cdscode = frpm.cdscode \nWHERE schools.charter = 0 \nAND frpm.`County Name` = 'Los Angeles' \nAND (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) < 0.0018\t----- bird -----\tcalifornia_schools",
    "461": "SELECT \"Enrollment (Ages 5-17)\" \nFROM frpm \nJOIN schools ON frpm.cdscode = schools.cdscode \nWHERE \"Academic Year\" = '2014-2015' \nAND city = 'Fremont' \nAND edopscode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.school, (frpm.\"FRPM Count (Ages 5-17)\" / frpm.\"Enrollment (Ages 5-17)\") * 100 as \"Percent (%) Eligible FRPM (Ages 5-17)\"\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.county = 'Los Angeles' AND schools.gsserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT county, COUNT(*) as num_virtual_schools\nFROM schools\nWHERE (county = 'San Diego' OR county = 'Santa Barbara') AND virtual = 'F'\nGROUP BY county\nORDER BY num_virtual_schools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT `gsoffered` \nFROM schools \nORDER BY ABS(`longitude`) DESC \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT city, COUNT(*) as num_schools\nFROM schools\nWHERE magnet = 1 AND gsserved = 'K-8' AND EXISTS (\n    SELECT 1\n    FROM frpm\n    WHERE schools.cdscode = frpm.cdscode AND `NSLP Provision Status` = 'Multiple Provision Types'\n)\nGROUP BY city\t----- bird -----\tcalifornia_schools",
    "466": "SELECT `frpm`.`Percent (%) Eligible Free (K-12)`, `frpm`.`District Code`\nFROM `frpm`\nJOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode`\nWHERE `schools`.`admfname1` = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT admemail1, admemail2, admemail3\nFROM schools\nWHERE county = 'San Bernardino' \nAND district = 'San Bernardino City Unified' \nAND opendate BETWEEN '2009-01-01' AND '2010-12-31' \nAND soc = '62' \nAND doc = '54'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE account.frequency = 'POPLATEK PO OBRATU' AND district.a3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(DISTINCT district_id) \nFROM district \nJOIN client ON district.district_id = client.district_id \nWHERE client.gender = 'F' AND district.a11 > 6000 AND district.a11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' AND district.a3 = 'North Bohemia' AND district.a11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT The question is a bit complex and requires multiple steps to solve. Here is a step-by-step breakdown of the SQL query:\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.birth_date = (SELECT MAX(birth_date) FROM client)\nAND district.a11 = (SELECT MAX(a11) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id, loan.amount\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.date BETWEEN '1997-01-01' AND '1997-12-31'\nAND loan.status = 'A'\nAND account.frequency = 'POPLATEK TYDNE'\nORDER BY loan.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id, loan.amount\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND EXTRACT(YEAR FROM account.date) = 1993\nORDER BY loan.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.client_id)\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.a2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT district.a2\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = \n    (SELECT district_id FROM district WHERE a3 = 'south Bohemia' ORDER BY a4 DESC LIMIT 1)) * 100.0 / \n(SELECT COUNT(*) FROM client WHERE district_id = \n    (SELECT district_id FROM district WHERE a3 = 'south Bohemia' ORDER BY a4 DESC LIMIT 1)) AS male_percentage\t----- bird -----\tfinancial",
    "478": "SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate\nFROM\n(\n    SELECT account_id, balance\n    FROM trans\n    WHERE date = '1993-03-22'\n) t1\nJOIN\n(\n    SELECT account_id, balance\n    FROM trans\n    WHERE date = '1998-12-27'\n) t2\nON t1.account_id = t2.account_id\nWHERE t1.account_id = \n(\n    SELECT account_id\n    FROM loan\n    WHERE date = '1993-07-05'\n    ORDER BY loan_id ASC\n    LIMIT 1\n)\t----- bird -----\tfinancial",
    "479": "SELECT (SELECT SUM(amount) FROM loan WHERE status = 'A') / (SELECT SUM(amount) FROM loan) * 100 AS percentage_of_loan_paid_no_issue\t----- bird -----\tfinancial",
    "480": "SELECT (COUNT(*) FILTER (WHERE status = 'C') / CAST(COUNT(*) AS FLOAT)) * 100 AS percentage\nFROM loan\nWHERE amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT district.a2 AS district, ((district.a13 - district.a12) / district.a12) * 100 AS unemployment_rate_increment\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.a2 AS district, COUNT(*) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F' AND dp.type = 'OWNER'\nGROUP BY d.a2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan \nJOIN account ON loan.account_id = account.account_id \nWHERE loan.amount >= 250000 \nAND account.frequency = 'POPLATEK MESICNE' \nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE district.district_id = 1 AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) \nFROM client \nWHERE gender = 'M' AND district_id = \n(\n    SELECT district_id \n    FROM district \n    ORDER BY a15 DESC \n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "486": "SELECT district.a2 AS district_name, SUM(trans.amount) AS total_withdrawal\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%'\nGROUP BY district.a2\nORDER BY total_withdrawal DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE district.district_id = 1 AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.a15 = (\n    SELECT MAX(a15)\n    FROM district\n    WHERE a15 < (\n        SELECT MAX(a15)\n        FROM district\n    )\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT disp.client_id\nFROM disp\nJOIN card ON disp.disp_id = card.disp_id\nJOIN trans ON disp.account_id = trans.account_id\nWHERE trans.operation = 'VYBER KARTOU' \nAND trans.amount < (SELECT AVG(amount) FROM trans WHERE date BETWEEN '1998-01-01' AND '1998-12-31')\nAND EXTRACT(YEAR FROM trans.date) = 1998\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT disp.type\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE disp.type != 'OWNER' AND district.a11 > 8000 AND district.a11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT avg(d.a15) as average_crimes\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.a15 > 4000 AND EXTRACT(YEAR FROM a.date) >= 1997\t----- bird -----\tfinancial",
    "492": "SELECT *\nFROM trans\nWHERE operation = 'VYBER' AND account_id IN (\n    SELECT account_id\n    FROM disp\n    WHERE client_id = 3356\n)\t----- bird -----\tfinancial",
    "493": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id IN \n    (SELECT district_id FROM district WHERE a11 > 10000)) * 100.0 / \n    (SELECT COUNT(*) FROM client WHERE district_id IN \n    (SELECT district_id FROM district WHERE a11 > 10000)) AS percentage\t----- bird -----\tfinancial",
    "494": "SELECT (\n    (SUM(CASE WHEN EXTRACT(YEAR FROM loan.date) = 1997 THEN loan.amount ELSE 0 END) - \n    SUM(CASE WHEN EXTRACT(YEAR FROM loan.date) = 1996 THEN loan.amount ELSE 0 END)) / \n    SUM(CASE WHEN EXTRACT(YEAR FROM loan.date) = 1996 THEN loan.amount ELSE 0 END)\n) * 100 AS growth_rate\nFROM loan\nJOIN disp ON loan.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT frequency, k_symbol\nFROM account\nJOIN trans ON account.account_id = trans.account_id\nWHERE account.account_id = 3 AND trans.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT (COUNT(client.client_id) FILTER (WHERE client.gender = 'M' AND account.frequency = 'POPLATEK TYDNE') / COUNT(client.client_id) FILTER (WHERE account.frequency = 'POPLATEK TYDNE')) * 100 AS percentage_male_clients_weekly_statements\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.a11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) \nFROM loan \nWHERE status = 'C' \nAND account_id IN \n    (SELECT account_id \n    FROM account \n    WHERE frequency = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, EXTRACT(YEAR FROM AGE(client.birth_date)) as age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}