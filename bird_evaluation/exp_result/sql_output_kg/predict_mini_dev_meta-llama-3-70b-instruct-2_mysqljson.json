{
    "0": "SELECT \n  (SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END)) \nAS ratio \nFROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT ym.CustomerID, c.Segment, ym.Consumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE ym.Date BETWEEN '201201' AND '201212' AND c.Segment = 'LAM'\nORDER BY ym.Consumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 \nFROM yearmonth \nWHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') \nAND LEFT(Date, 4) = '2013';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    (SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption END) - \n     SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption END)) AS Consumption_Difference\nFROM \n    customers c \nJOIN \n    yearmonth y ON c.CustomerID = y.CustomerID \nWHERE \n    y.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT LEFT(ym.Date, 4) AS Year, SUM(ym.Consumption) AS TotalConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'CZK'\nGROUP BY LEFT(ym.Date, 4)\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT \n    ym.Date, \n    SUM(t.Amount) AS Consumption\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nJOIN \n    yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE \n    c.Segment = 'SME' \n    AND LEFT(ym.Date, 4) = '2013'\nGROUP BY \n    ym.Date\nORDER BY \n    Consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n  (SME_avg - LAM_avg) AS SME_LAM_diff, \n  (LAM_avg - KAM_avg) AS LAM_KAM_diff, \n  (KAM_avg - SME_avg) AS KAM_SME_diff\nFROM \n  (SELECT \n     (SUM(Consumption) / COUNT(DISTINCT CustomerID)) AS SME_avg\n   FROM \n     yearmonth \n   WHERE \n     Date BETWEEN '201301' AND '201312' \n     AND CustomerID IN \n       (SELECT \n          CustomerID \n        FROM \n          customers \n        WHERE \n          Segment = 'SME' \n          AND Currency = 'CZK' \n        ORDER BY \n          Consumption ASC \n        LIMIT 1)) AS SME,\n  \n  (SELECT \n     (SUM(Consumption) / COUNT(DISTINCT CustomerID)) AS LAM_avg\n   FROM \n     yearmonth \n   WHERE \n     Date BETWEEN '201301' AND '201312' \n     AND CustomerID IN \n       (SELECT \n          CustomerID \n        FROM \n          customers \n        WHERE \n          Segment = 'LAM' \n          AND Currency = 'CZK' \n        ORDER BY \n          Consumption ASC \n        LIMIT 1)) AS LAM,\n  \n  (SELECT \n     (SUM(Consumption) / COUNT(DISTINCT CustomerID)) AS KAM_avg\n   FROM \n     yearmonth \n   WHERE \n     Date BETWEEN '201301' AND '201312' \n     AND CustomerID IN \n       (SELECT \n          CustomerID \n        FROM \n          customers \n        WHERE \n          Segment = 'KAM' \n          AND Currency = 'CZK' \n        ORDER BY \n          Consumption ASC \n        LIMIT 1)) AS KAM;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    Segment, \n    CONCAT(ROUND((Consumption2013 - Consumption2012) / Consumption2013 * 100, 2), '%') AS PercentageIncrease\nFROM \n    (SELECT \n        c.Segment, \n        SUM(y1.Consumption) AS Consumption2012, \n        SUM(y2.Consumption) AS Consumption2013\n    FROM \n        customers c \n    JOIN \n        yearmonth y1 ON c.CustomerID = y1.CustomerID AND LEFT(y1.Date, 4) = '2012'\n    JOIN \n        yearmonth y2 ON c.CustomerID = y2.CustomerID AND LEFT(y2.Date, 4) = '2013'\n    WHERE \n        c.Currency = 'EUR'\n    GROUP BY \n        c.Segment) AS subquery\nORDER BY \n    PercentageIncrease DESC;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n  (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n  (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS more_discount_gas_stations\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n  SUM(CASE WHEN c.Currency = 'CZK' THEN t.Amount ELSE 0 END) - \n  SUM(CASE WHEN c.Currency = 'EUR' THEN t.Amount ELSE 0 END) AS difference\nFROM \n  transactions_1k t\nJOIN \n  customers c ON t.CustomerID = c.CustomerID\nWHERE \n  c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT \n    (COUNT(CASE WHEN y.Consumption > 46.73 THEN 1 END) / COUNT(*)) * 100 \nFROM \n    yearmonth y \nWHERE \n    y.Date LIKE '%LAM%';\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \n    (COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) / COUNT(*)) * 100 \nFROM \n    yearmonth \nWHERE \n    LEFT(Date, 4) = '2012' AND RIGHT(LEFT(Date, 6), 2) = '02';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) \nFROM yearmonth \nWHERE LEFT(Date, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nWHERE y.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gs.Country \nFROM gasstations gs \nJOIN transactions_1k t ON gs.GasStationID = t.GasStationID \nWHERE t.Date >= '2013-06-01' AND t.Date < '2013-07-01';\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT c.CustomerID)\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Currency = 'EUR' AND y.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time \nFROM transactions_1k \nWHERE GasStationID IN (SELECT GasStationID \n                        FROM gasstations \n                        WHERE ChainID = 11);\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k \nWHERE GasStationID IN (SELECT GasStationID \n                        FROM gasstations \n                        WHERE Country = 'CZE') \nAND Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment \nFROM customers c \nJOIN transactions_1k t ON c.CustomerID = t.CustomerID \nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k\nWHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00' \nAND GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE');\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Country \nFROM customers c \nJOIN transactions_1k t ON c.CustomerID = t.CustomerID \nJOIN gasstations g ON t.GasStationID = g.GasStationID \nWHERE t.Date = '2012-08-24' AND t.Amount * t.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(DISTINCT t.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM customers)) * 100 \nFROM \n    transactions_1k t \nJOIN \n    customers c ON t.CustomerID = c.CustomerID \nWHERE \n    t.Date = '2012-08-25' AND c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (y1.Consumption - y2.Consumption) / y1.Consumption AS DecreaseRate\nFROM yearmonth y1\nJOIN yearmonth y2 ON y1.CustomerID = y2.CustomerID\nJOIN transactions_1k t ON y1.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-25' AND t.Amount = 634.8 AND y1.Date = '2012' AND y2.Date = '2013';\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (COUNT(CASE WHEN g.Segment = 'premium' THEN 1 END) / COUNT(g.Segment)) * 100 \nFROM \n    gasstations g \nWHERE \n    g.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t.Amount * t.Price) AS TotalAmountSpent\nFROM transactions_1k t\nWHERE t.CustomerID = 38508 AND t.GasStationID IS NOT NULL;\n\nSELECT y.Consumption\nFROM yearmonth y\nWHERE y.CustomerID = 38508 AND y.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, c.Currency, SUM(t.Price) / SUM(t.Amount) AS avg_price\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nGROUP BY t.CustomerID, c.Currency\nORDER BY SUM(t.Price) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT y.Consumption\nFROM yearmonth y\nJOIN transactions_1k t ON y.CustomerID = t.CustomerID\nWHERE t.ProductID = 5 AND t.Price / t.Amount > 29.00 AND y.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM member\nWHERE t_shirt_size = 'Medium' AND member_id IN (\n    SELECT link_to_member\n    FROM attendance\n    WHERE link_to_event IN (\n        SELECT event_id\n        FROM event\n        WHERE event_name = 'Women\\'s Soccer'\n    )\n)\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) \nFROM event \nWHERE event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(*) > 10\n) \nAND type = 'Meeting';\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name \nFROM event e \nJOIN (SELECT link_to_event \n      FROM attendance \n      GROUP BY link_to_event \n      HAVING COUNT(link_to_event) > 20) a ON e.event_id = a.link_to_event \nWHERE e.type != 'fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT amount \nFROM income \nWHERE link_to_member IN \n    (SELECT member_id \n     FROM member \n     WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "35": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT e.expense_description, e.approved\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) \nFROM expense e \nJOIN member m ON e.link_to_member = m.member_id \nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' \nAND (MONTH(STR_TO_DATE(e.expense_date, '%Y-%m-%d')) = 9 OR MONTH(STR_TO_DATE(e.expense_date, '%Y-%m-%d')) = 10)\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SUM(b.spent) - SUM(c.spent)) AS difference_in_spent\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    YEAR(e.event_date) = 2019\nAND \n    e.type = 'Student_Club'\n\nMINUS\n\nSELECT \n    SUM(b.spent)\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    YEAR(e.event_date) = 2020\nAND \n    e.type = 'Student_Club';\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone \nFROM member \nWHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT e.status \nFROM expense \nJOIN budget ON expense.link_to_budget = budget.budget_id \nJOIN event e ON budget.link_to_event = e.event_id \nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nWHERE t_shirt_size = 'Medium' AND link_to_major IN (\n    SELECT major_id\n    FROM major\n    WHERE major_name = 'Business'\n)\t----- bird -----\tstudent_club",
    "44": "SELECT m.department \nFROM member m \nJOIN major ma ON m.link_to_major = ma.major_id \nWHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT date_received \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT CEIL(DIVIDE(SUM(b.amount), (SELECT SUM(b2.amount) FROM budget b2 WHERE b2.category = 'Advertisement' AND b2.link_to_event IN (SELECT e.event_id FROM event e WHERE e.event_name = 'October Meeting'))) - 1) AS times_more \nFROM budget b \nWHERE b.category = 'Advertisement' AND b.link_to_event IN (SELECT e.event_id FROM event e WHERE e.event_name = 'Yearly Kickoff');\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(e.cost) \nFROM expense e \nWHERE e.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.link_to_member) \nFROM attendance a \nJOIN event e ON a.link_to_event = e.event_id \nWHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT CONCAT(m.first_name, ' ', m.last_name) \nFROM member m \nJOIN major ma ON m.link_to_major = ma.major_id \nWHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name, b.spent, b.amount, b.spent / b.amount AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) \nFROM budget \nWHERE event_status = 'event';\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name \nFROM budget b \nJOIN event e ON b.link_to_event = e.event_id \nJOIN expense ex ON b.budget_id = ex.link_to_budget \nJOIN member m ON ex.link_to_member = m.member_id \nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name \nFROM event e \nJOIN expense ex ON e.event_id = ex.link_to_budget \nJOIN budget b ON ex.link_to_budget = b.link_to_event \nWHERE b.cost = (SELECT MIN(cost) FROM budget);\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS percentage\nFROM expense ex\nJOIN event e ON ex.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) as total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' and '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*)\nFROM member\nWHERE link_to_major IN (\n    SELECT major_id\n    FROM major\n    WHERE major_name = 'Physics Teaching'\n)\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE b.category = 'Advertisement' \nAND b.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement');\t----- bird -----\tstudent_club",
    "62": "SELECT *\nFROM attendance\nWHERE link_to_member IN (\n  SELECT member_id\n  FROM member\n  WHERE first_name = 'Maya' AND last_name = 'Mclean'\n) AND link_to_event IN (\n  SELECT event_id\n  FROM event\n  WHERE event_name = 'Women\\'s Soccer'\n);\t----- bird -----\tstudent_club",
    "63": "SELECT e.expense_description, e.cost \nFROM expense e \nJOIN budget b ON e.link_to_budget = b.budget_id \nJOIN event ev ON b.link_to_event = ev.event_id \nWHERE ev.event_name = 'September Speaker' AND e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE e.status = 'Closed' \nAND b.remaining = (SELECT MIN(remaining) FROM budget WHERE remaining < 0);\t----- bird -----\tstudent_club",
    "65": "SELECT e.expense_description, SUM(e.cost) AS total_value\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting' AND e.approved = 'approved'\nGROUP BY e.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) as amount_budgeted\nFROM budget\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker')\nGROUP BY category\nORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) \nFROM expense \nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = \"rec4BLdZHS2Blfp4v\"\nGROUP BY m.member_id, m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT e.expense_description \nFROM expense e \nJOIN member m ON e.link_to_member = m.member_id \nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT b.category \nFROM budget b \nJOIN event e ON b.link_to_event = e.event_id \nWHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, ma.department, ma.college \nFROM member m \nJOIN major ma ON m.link_to_major = ma.major_id \nWHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT b.category \nFROM budget b \nJOIN event e ON b.link_to_event = e.event_id \nWHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT ROUND((COUNT(CASE WHEN i.amount = 50 THEN 1 END) / COUNT(m.member_id)) * 100, 2) AS percentage\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.t_shirt_size = 'Medium' AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name, m.last_name, m.phone \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "78": "SELECT \n    (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) / COUNT(CASE WHEN SEX = 'M' THEN ID END)) * 100 AS in_patient_percentage,\n    (COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END) / COUNT(CASE WHEN SEX = 'M' THEN ID END)) * 100 AS out_patient_percentage,\n    ((COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) / COUNT(CASE WHEN SEX = 'M' THEN ID END)) - (COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END) / COUNT(CASE WHEN SEX = 'M' THEN ID END))) * 100 AS deviation_percentage\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT ROUND((COUNT(CASE WHEN year(Birthday) > 1930 AND SEX = 'F' THEN ID END) / COUNT(CASE WHEN SEX = 'F' THEN ID END) * 100), 2) AS percentage \nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT DIVIDE(COUNT(CASE WHEN Admission = '-' THEN ID END), COUNT(CASE WHEN Admission = '+' THEN ID END)) AS ratio \nFROM Patient \nWHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT p.ID, p.SEX, p.Birthday \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.ID, TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.SEX, p.Diagnosis \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nWHERE e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND YEAR(Description) = 1997 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 1 AND p.SEX = 'F' AND e.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.Symptoms, e.Diagnosis \nFROM Examination e \nJOIN Patient p ON e.ID = p.ID \nWHERE p.Birthday = (SELECT MAX(Birthday) FROM Patient) AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT l.Date, TIMESTAMPDIFF(YEAR, p.Birthday, p.`First Date`) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SJS'\nORDER BY p.Birthday LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    SUM(SEX = 'M' AND UA <= 8.0) / SUM(SEX = 'F' AND UA <= 6.5) AS ratio\nFROM \n    Patient \nJOIN \n    Laboratory \nON \n    Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE YEAR(p.Birthday) < 18 AND YEAR(e.`Examination Date`) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n  (YEAR(e.`Examination Date`) - YEAR(p.Birthday)) AS Age, \n  e.Diagnosis\nFROM \n  Examination e\n  JOIN Patient p ON e.ID = p.ID\n  JOIN Laboratory l ON e.ID = l.ID\nWHERE \n  l.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.aCL_IgM \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nWHERE p.Diagnosis = 'SLE' AND p.Description = '1994-02-19' AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(CASE WHEN L.Date LIKE '1981-11-%' THEN L.T_CHO END) - SUM(CASE WHEN L.Date LIKE '1981-12-%' THEN L.T_CHO END)) / SUM(CASE WHEN L.Date LIKE '1981-11-%' THEN L.T_CHO END) * 100 AS decrease_rate\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT p.ID \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.Date BETWEEN '1987-07-06' AND '1996-01-31' \nAND l.GPT > 30 \nAND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2 AND e.`ANA Pattern` = 'S' AND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT p.ID \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE p.Admission = '-' AND l.Date LIKE '1991-10%' AND l.T_BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(L.ALB) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(SEX = 'F'), COUNT(SEX)) * 100 \nFROM Patient \nWHERE YEAR(Birthday) = '1980' AND Diagnosis='RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT \n    CASE \n        WHEN P.SEX = 'M' AND L.UA > 8.0 THEN 'Yes'\n        WHEN P.SEX = 'F' AND L.UA > 6.5 THEN 'Yes'\n        ELSE 'No'\n    END AS Is_Uric_Acid_Within_Normal_Range\nFROM \n    Patient P \nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    P.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT p.ID \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE p.SEX = 'M' AND l.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Birthday, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT p.ID, p.SEX, p.Birthday \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT p.SEX, COUNT(*) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.T_BIL >= 2.0 \nGROUP BY p.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(DATEDIFF(NOW(), Birthday) / 365) \nFROM Patient \nWHERE SEX = 'M' AND ID IN \n    (SELECT ID \n     FROM Laboratory \n     WHERE `T-CHO` >= 250);\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TG >= 200 AND TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT DISTINCT p.ID \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE year(p.Birthday) BETWEEN 1936 AND 1956 \nAND p.SEX = 'M' \nAND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.ID, p.SEX, TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GLU >= 180 AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) AS age, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nJOIN Laboratory l ON p.ID = l.ID \nWHERE e.Diagnosis = 'SLE' AND l.HGB > 10 AND l.HGB < 17 \nORDER BY p.Birthday ASC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) AS age\nFROM Patient p\nJOIN (\n  SELECT l.ID\n  FROM Laboratory l\n  GROUP BY l.ID\n  HAVING COUNT(l.ID) > 2\n) AS lab ON p.ID = lab.ID\nJOIN Laboratory l2 ON p.ID = l2.ID\nWHERE l2.HCT >= 52;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS Lower_than_Normal,\n  SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS Higher_than_Normal\nFROM \n  Laboratory\nWHERE \n  PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.ID \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE YEAR(l.Date) = 1984 \nAND SUBTRACT(year(current_timestamp), year(p.Birthday)) < 50 \nAND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT ROUND(SUM(PT >= 14 AND SEX = 'F') / SUM(PT >= 14) * 100, 2) AS percentage\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE SUBTRACT(year(current_timestamp), year(p.Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.WBC > 3.5 AND l.WBC < 9.0 AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.IGG > 900 AND l.IGG < 2000 AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(p.`First Date`) >= 1990 AND l.IGA > 80 AND l.IGA < 500;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE IGM <= 40 OR IGM >= 400 \nGROUP BY Diagnosis \nORDER BY COUNT(Diagnosis) DESC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRP = '+' AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5 AND TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT DISTINCT P.ID \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nJOIN Laboratory L ON P.ID = L.ID \nWHERE E.RNP IN ('-', '+-') AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nWHERE e.Symptoms LIKE '%-%' OR e.Symptoms = '0' AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT DISTINCT COUNT(*) \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.SC170 IN ('negative', '0') AND p.SEX = 'F' AND e.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT DISTINCT COUNT(*) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE p.SEX = 'M' AND l.CENTROMEA IN('-', '+-') AND l.SSB IN('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) \nFROM Patient \nWHERE ID IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE GOT >= 60\n)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT L.name \nFROM League L \nJOIN Match M ON L.id = M.league_id \nWHERE M.season = '2015/2016' \nGROUP BY L.name \nORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name \nFROM Match M \nJOIN Team T ON M.away_team_api_id = T.team_api_id \nWHERE M.season = '2009/2010' AND M.league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') \nGROUP BY M.away_team_api_id \nORDER BY SUM(M.away_team_goal > M.home_team_goal) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT t.team_long_name, ta.buildUpPlaySpeed\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nORDER BY ta.buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT L.name \nFROM League L \nJOIN Match M ON L.id = M.league_id \nWHERE M.season = '2015/2016' \nGROUP BY L.name \nORDER BY SUM(M.home_team_goal = M.away_team_goal) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT TIMESTAMPDIFF(YEAR, birthday, CURDATE()) AS age \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE sprint_speed >= 97 AND YEAR(date) >= '2013' AND YEAR(date) <= '2015';\t----- bird -----\teuropean_football_2",
    "133": "SELECT L.name, COUNT(M.id) as total_matches\nFROM Match M\nJOIN League L ON M.league_id = L.id\nGROUP BY M.league_id\nORDER BY total_matches DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name \nFROM Team \nWHERE team_api_id IN (\n    SELECT team_api_id \n    FROM Team_Attributes \n    WHERE strftime('%Y', date) = '2012' \n    AND buildUpPlayPassing > (\n        SELECT AVG(buildUpPlayPassing) \n        FROM Team_Attributes \n        WHERE strftime('%Y', date) = '2012' \n        AND buildUpPlayPassing IS NOT NULL\n    )\n)\t----- bird -----\teuropean_football_2",
    "136": "SELECT ROUND((SUM(pa.preferred_foot = 'left') / COUNT(pa.player_fifa_api_id)) * 100, 2) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.id \nWHERE YEAR(p.birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_api_id IN (SELECT id \n                         FROM Player \n                         WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name, avg(pa.heading_accuracy) as avg_heading_accuracy\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180\nGROUP BY p.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name \nFROM League L \nJOIN Match M ON L.id = M.league_id \nWHERE M.season = '2009/2010' \nGROUP BY L.name \nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT * \nFROM Player \nWHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.country_id = (SELECT id FROM League WHERE name = 'Poland') AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT \n    CASE \n        WHEN h.player_api_id IS NOT NULL THEN h.player_api_id \n        WHEN s.player_api_id IS NOT NULL THEN s.player_api_id \n    END AS player_api_id, \n    CASE \n        WHEN h.player_name IS NOT NULL THEN h.player_name \n        WHEN s.player_name IS NOT NULL THEN s.player_name \n    END AS player_name, \n    CASE \n        WHEN h.avg_finishing IS NOT NULL THEN h.avg_finishing \n        WHEN s.avg_finishing IS NOT NULL THEN s.avg_finishing \n    END AS avg_finishing \nFROM \n    (SELECT \n         p.player_api_id, \n         p.player_name, \n         AVG(pa.finishing) AS avg_finishing \n     FROM \n         Player p \n     JOIN \n         Player_Attributes pa ON p.player_api_id = pa.player_api_id \n     WHERE \n         p.height = (SELECT MAX(height) FROM Player) \n     GROUP BY \n         p.player_api_id, \n         p.player_name) h \nFULL OUTER JOIN \n    (SELECT \n         p.player_api_id, \n         p.player_name, \n         AVG(pa.finishing) AS avg_finishing \n     FROM \n         Player p \n     JOIN \n         Player_Attributes pa ON p.player_api_id = pa.player_api_id \n     WHERE \n         p.height = (SELECT MIN(height) FROM Player) \n     GROUP BY \n         p.player_api_id, \n         p.player_name) s \nON \n    h.player_api_id = s.player_api_id \nORDER BY \n    avg_finishing DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) \nFROM Player_Attributes t2 \nJOIN Player t1 ON t2.player_api_id = t1.id \nWHERE t1.height > 170 AND strftime('%Y', t2.date) >= '2010' AND strftime('%Y', t2.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SUM(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control ELSE 0 END) / COUNT(CASE WHEN p.player_name = 'Abdou Diallo' THEN p.id ELSE NULL END)) - \n    (SUM(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control ELSE 0 END) / COUNT(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN p.id ELSE NULL END))\nFROM \n    Player p \nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id;\t----- bird -----\teuropean_football_2",
    "146": "SELECT p1.player_name \nFROM Player p1, Player p2 \nWHERE p1.player_name = 'Aaron Lennon' AND p2.player_name = 'Abdelaziz Barrada' \nAND p1.birthday < p2.birthday;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name \nFROM Player \nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*)\nFROM Player_Attributes\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT p.id) \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE strftime('%Y', p.birthday)<'1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.player_name \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match \nWHERE league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League') \nAND SUBSTR(`date`, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT L.name \nFROM League L \nJOIN Match M ON L.id = M.league_id \nWHERE M.season = '2008/2009' \nGROUP BY L.name \nORDER BY COUNT(M.id) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((pa1.overall_rating - pa2.overall_rating) / pa2.overall_rating) * 100 \nFROM Player_Attributes pa1, Player_Attributes pa2 \nWHERE pa1.player_api_id = (SELECT id FROM Player WHERE player_name = 'Ariel Borysiuk') \nAND pa2.player_api_id = (SELECT id FROM Player WHERE player_name = 'Paulin Puel');\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) \nFROM Player_Attributes T1 \nJOIN Player T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) as highest_chance_creation_passing_score, ta.chanceCreationPassingClass\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE pa.overall_rating = 77 AND pa.date LIKE '2016-06-23%' \nORDER BY p.birthday LIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate \nFROM Player_Attributes \nWHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Francesco Migliore') \nAND date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT date \nFROM Player_Attributes \nWHERE player_api_id = (SELECT id \n                        FROM Player \n                        WHERE player_name = 'Kevin Constant') \nAND crossing = (SELECT MAX(crossing) \n                 FROM Player_Attributes \n                 WHERE player_api_id = (SELECT id \n                                         FROM Player \n                                         WHERE player_name = 'Kevin Constant')) \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'FC Lorient') \nAND date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT defenceAggressionClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hannover 96') \nAND date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Marko Arnautovic' AND pa.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    ROUND(((SELECT overall_rating \n             FROM Player_Attributes \n             WHERE player_api_id = (SELECT id \n                                    FROM Player \n                                    WHERE player_name = 'Landon Donovan') \n             AND date = '2013-07-12') - \n            (SELECT overall_rating \n             FROM Player_Attributes \n             WHERE player_api_id = (SELECT id \n                                    FROM Player \n                                    WHERE player_name = 'Jordan Bowery') \n             AND date = '2013-07-12')) / \n           (SELECT overall_rating \n            FROM Player_Attributes \n            WHERE player_api_id = (SELECT id \n                                   FROM Player \n                                   WHERE player_name = 'Landon Donovan') \n            AND date = '2013-07-12')) * 100, 2) \nAS percentage_difference;\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name \nFROM Player \nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "166": "SELECT p.player_name \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name \nFROM Team t \nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id \nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT SUBTRACT(pa1.jumping, pa2.jumping) \nFROM Player_Attributes pa1, Player_Attributes pa2 \nWHERE pa1.player_api_id = 6 AND pa2.player_api_id = 23;\t----- bird -----\teuropean_football_2",
    "170": "SELECT id \nFROM Player_Attributes \nWHERE preferred_foot = 'right' \nORDER BY potential ASC \nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*)\nFROM Player_Attributes\nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal \nFROM Match \nWHERE date = '2008-09-24' AND league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League');\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id \n                      FROM Team \n                      WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing, pa.curve, p.weight\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) as num_games\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY num_games DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nWHERE team_api_id = (SELECT away_team_api_id \n                      FROM Match \n                      GROUP BY away_team_api_id \n                      ORDER BY SUM(away_team_goal) DESC \n                      LIMIT 1);\t----- bird -----\teuropean_football_2",
    "177": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "178": "SELECT DIVIDE(COUNT(CASE WHEN p.height < 180 AND pa.overall_rating > 70 THEN 1 END), COUNT(p.id)) * 100 AS percentage\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef \nFROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nWHERE q.raceId = 20 AND q.q1 IN (SELECT MAX(q1) FROM qualifying WHERE raceId = 20 LIMIT 5)\t----- bird -----\tformula_1",
    "180": "SELECT d.surname \nFROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nWHERE q.raceId = 19 AND q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19);\t----- bird -----\tformula_1",
    "181": "SELECT r.name \nFROM races r \nJOIN circuits c ON r.circuitId = c.circuitId \nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT lat, lng \nFROM circuits \nWHERE circuitId IN (SELECT circuitId \n                     FROM races \n                     WHERE name = 'Australian Grand Prix');\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nJOIN races ON qualifying.raceId = races.raceId \nWHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND races.raceId = 354;\t----- bird -----\tformula_1",
    "185": "SELECT d.number \nFROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nWHERE q.q3 LIKE '1:54%' AND q.raceId = 903;\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*)\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2007 AND races.name = 'Bahrain Grand Prix' AND results.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 592 AND r.time IS NOT NULL\nORDER BY d.dob\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.url \nFROM lapTimes lt \nJOIN drivers d ON lt.driverId = d.driverId \nWHERE lt.raceId = 161 AND lt.time LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "189": "SELECT lat, lng \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url \nFROM constructorResults cr \nJOIN constructors c ON cr.constructorId = c.constructorId \nWHERE cr.raceId = 9 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9)\t----- bird -----\tformula_1",
    "191": "SELECT d.code \nFROM drivers d \nJOIN qualifying q ON d.driverId = q.driverId \nJOIN races r ON q.raceId = r.raceId \nWHERE r.raceId = 45 AND q.q3 LIKE '0:01:33%';\t----- bird -----\tformula_1",
    "192": "SELECT s.url \nFROM seasons s \nJOIN races r ON s.year = r.year \nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.forename, d.surname, d.dob \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nWHERE r.raceId = 872 AND r.time IS NOT NULL \nORDER BY d.dob DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality \nFROM results r \nJOIN drivers d ON r.driverId = d.driverId \nWHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "195": "SELECT ROUND(((SELECT fastestLapSpeed FROM results WHERE raceId = 853) - (SELECT fastestLapSpeed FROM results WHERE raceId = 854)) / (SELECT fastestLapSpeed FROM results WHERE raceId = 853) * 100, 2) AS percentage \nFROM results \nWHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta');\t----- bird -----\tformula_1",
    "196": "SELECT \n    DIVIDE(COUNT(driverid), (COUNT(*))) AS race_completion_rate\nFROM \n    results\nWHERE \n    raceId IN (\n        SELECT \n            raceId \n        FROM \n            races \n        WHERE \n            date = '1983-07-16'\n    ) \n    AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE year = (SELECT YEAR(MIN(date)) FROM races) \nAND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, SUM(r.points) as total_points\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nGROUP BY r.driverId, d.forename, d.surname\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name, lt.milliseconds \nFROM lapTimes lt \nJOIN drivers d ON lt.driverId = d.driverId \nJOIN races r ON lt.raceId = r.raceId \nWHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lt.milliseconds) \nFROM lapTimes lt \nJOIN drivers d ON lt.driverId = d.driverId \nJOIN races r ON lt.raceId = r.raceId \nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.year = 2009 AND r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(r.raceId) / (SELECT COUNT(raceId) FROM results WHERE surname = 'Hamilton' AND year >= 2010)) * 100 \nFROM \n    results r \nWHERE \n    surname = 'Hamilton' \n    AND position > 1 \n    AND year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT d.forename, d.surname, d.nationality, MAX(ds.points) \nFROM driverStandings ds \nJOIN drivers d ON ds.driverId = d.driverId \nWHERE ds.wins = (SELECT MAX(wins) FROM driverStandings) \nGROUP BY d.forename, d.surname, d.nationality;\t----- bird -----\tformula_1",
    "203": "SELECT MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age, forename, surname \nFROM drivers \nWHERE nationality = 'Japanese';\t----- bird -----\tformula_1",
    "204": "SELECT r.name, c.name, c.location \nFROM races r \nJOIN circuits c ON r.circuitId = c.circuitId \nWHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "205": "SELECT r.name \nFROM results \nJOIN drivers d ON results.driverId = d.driverId \nJOIN races r ON results.raceId = r.raceId \nWHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND results.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.year, r.name \nFROM results \nJOIN races r ON results.raceId = r.raceId \nJOIN drivers d ON results.driverId = d.driverId \nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND results.fastestLap = 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.date, res.points \nFROM results res \nJOIN races r ON res.raceId = r.raceId \nJOIN drivers d ON res.driverId = d.driverId \nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' \nORDER BY r.year, r.round \nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT ROUND(COUNT(CASE WHEN country = 'Germany' THEN 1 END) / COUNT(*) * 100, 2) AS percentage\nFROM races\nWHERE name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT nationality \nFROM drivers \nWHERE dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef \nFROM results r \nJOIN drivers d ON r.driverId = d.driverId \nJOIN races ra ON r.raceId = ra.raceId \nWHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2007 AND r.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.raceId, r.name \nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' \nORDER BY results.rank LIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "215": "SELECT positionOrder \nFROM results \nJOIN races ON results.raceId = races.raceId \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "216": "SELECT time \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT d.driverId)\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Chinese Grand Prix') AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT \n    (SUBTIME(r1.time, r2.time) / r2.time) * 100 \nFROM \n    results r1, \n    results r2 \nWHERE \n    r1.raceId = 841 \n    AND r2.raceId = 841 \n    AND r1.position = 1 \n    AND r2.position = (SELECT COUNT(DISTINCT position) FROM results WHERE raceId = 841) \n    AND r2.time IS NOT NULL;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) \nFROM constructorStandings cs \nJOIN constructors c ON cs.constructorId = c.constructorId \nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name \nFROM constructors c \nJOIN constructorResults cr ON c.constructorId = cr.constructorId \nWHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorId)\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE c.nationality = 'Japanese' AND cr.points = 0\nGROUP BY c.constructorId\nHAVING COUNT(DISTINCT cr.raceId) = 2;\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(DR.driverId) / (SELECT COUNT(DR.driverId) FROM drivers DR WHERE DR.nationality = 'Japanese' AND DR.dob BETWEEN '1900-01-01' AND '2009-12-31')) * 100 AS race_completion_percentage\nFROM \n    results R\nJOIN \n    drivers DR ON R.driverId = DR.driverId\nWHERE \n    R.time IS NOT NULL \n    AND R.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2007 AND 2009) \n    AND DR.nationality = 'Japanese';\t----- bird -----\tformula_1",
    "224": "SELECT \n    YEAR(r.date) AS year, \n    AVG(TIME_TO_SEC(SUBSTR(r.time, 1, 8))) AS avg_time_in_seconds\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.year < 1975 AND r.position = 1 AND r.time IS NOT NULL\nGROUP BY \n    YEAR(ra.date)\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap \nFROM results \nWHERE year = 2009 AND position = 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) \nFROM results \nWHERE raceId IN (SELECT raceId \n                 FROM races \n                 WHERE year = 2009 AND name = 'Spanish Grand Prix');\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(CASE WHEN year(dob) < 1985 AND laps > 50 THEN driverId END) / \n     COUNT(CASE WHEN year(dob) BETWEEN 2000 AND 2005 THEN driverId END)) * 100 AS percentage\nFROM \n    drivers \nJOIN \n    results ON drivers.driverId = results.driverId;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId)\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French' AND lt.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": "SELECT code \nFROM drivers \nWHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT code \nFROM drivers \nWHERE driverId IN (\n    SELECT driverId \n    FROM drivers \n    ORDER BY YEAR(dob) DESC \n    LIMIT 3\n) AND nationality = 'Dutch';\t----- bird -----\tformula_1",
    "231": "SELECT driverRef \nFROM drivers \nWHERE nationality = 'German' \nAND dob = (SELECT MIN(dob) \n            FROM drivers \n            WHERE nationality = 'German');\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nWHERE year(d.dob) = 1971 AND r.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*)\nFROM results\nWHERE raceId BETWEEN 50 AND 100\nAND time IS NOT NULL\nAND statusId = 2;\t----- bird -----\tformula_1",
    "234": "SELECT c.name, c.location, c.lat, c.lng \nFROM circuits c \nWHERE c.country = 'Austria';\t----- bird -----\tformula_1",
    "235": "SELECT r.year, d.forename, d.surname, r.name, r.date, r.time\nFROM drivers d\nJOIN (\n  SELECT MIN(r.date) AS first_qualifying_race\n  FROM drivers d\n  JOIN races r ON d.dob = (SELECT MAX(dob) FROM drivers)\n) AS sq ON 1=1\nJOIN races r ON sq.first_qualifying_race = r.date\nJOIN results res ON r.raceId = res.raceId\nJOIN qualifying q ON res.driverId = q.driverId AND res.raceId = q.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers);\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname, AVG(ps.duration) as avg_pitstop_duration\nFROM drivers d\nJOIN pitStops ps ON d.driverId = ps.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.driverId\nORDER BY avg_pitstop_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT r.driverId, d.forename, d.surname, r.time \nFROM results r \nJOIN races ra ON r.raceId = ra.raceId \nJOIN drivers d ON r.driverId = d.driverId \nWHERE ra.year = 2008 AND ra.name = 'Canadian Grand Prix' AND r.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url \nFROM results r \nJOIN races ra ON r.raceId = ra.raceId \nJOIN constructors c ON r.constructorId = c.constructorId \nWHERE ra.name = 'Singapore Grand Prix' AND ra.year = 2009 \nORDER BY r.time LIMIT 1;\t----- bird -----\tformula_1",
    "239": "SELECT p.power_name \nFROM hero_power hp \nJOIN superpower p ON hp.power_id = p.id \nJOIN superhero s ON hp.hero_id = s.id \nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(cr.points) as score, c.name, c.nationality\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010\nGROUP BY c.name, c.nationality\nORDER BY score DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename, d.surname \nFROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nJOIN races r ON q.raceId = r.raceId \nJOIN circuits c ON r.circuitId = c.circuitId \nWHERE r.year = 2008 AND c.name = 'Marina Bay Street Circuit' AND q.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, d.nationality, r.name AS first_race\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers);\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(r.statusId) \nFROM results r \nJOIN races ra ON r.raceId = ra.raceId \nWHERE ra.name = 'Canadian Grand Prix' AND r.statusId = 3 \nGROUP BY r.driverId \nORDER BY COUNT(r.statusId) DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname \nFROM lapTimes lt \nJOIN drivers d ON lt.driverId = d.driverId \nWHERE lt.milliseconds = (SELECT MIN(mill) FROM (SELECT MIN(milliseconds) AS mill FROM lapTimes) AS t) \nORDER BY lt.milliseconds LIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT c.name, MIN(lt.milliseconds) AS lap_record\nFROM lapTimes lt\nJOIN races r ON lt.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Italy'\nGROUP BY c.name;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT h.id)\nFROM superhero h\nJOIN colour c ON h.eye_colour_id = c.id\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c1 ON s.eye_colour_id = c1.id \nJOIN colour c2 ON s.hair_colour_id = c2.id \nWHERE c1.colour = 'Blue' AND c2.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT superhero_name, height_cm \nFROM superhero \nWHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') \nORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(s.id) as count\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\nGROUP BY c.colour\nORDER BY count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') \nAND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name \nFROM publisher p \nJOIN superhero s ON p.id = s.publisher_id \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Speed' \nAND ha.attribute_value = (SELECT MIN(ha2.attribute_value) \n                           FROM hero_attribute ha2 \n                           JOIN attribute a2 ON ha2.attribute_id = a2.id \n                           WHERE a2.attribute_name = 'Speed');\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Intelligence' \nAND ha.attribute_value = (SELECT MIN(attribute_value) \n                           FROM hero_attribute \n                           JOIN attribute ON hero_attribute.attribute_id = attribute.id \n                           WHERE attribute.attribute_name = 'Intelligence');\t----- bird -----\tsuperhero",
    "255": "SELECT r.race \nFROM superhero s \nJOIN race r ON s.race_id = r.id \nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT s.id)\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT \n    ROUND((SUM(s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) / COUNT(s.id) * 100), 2) AS percentage,\n    SUM(s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) AS marvel_bad_heroes\nFROM \n    superhero s;\t----- bird -----\tsuperhero",
    "260": "SELECT ABS(SUM(IF(p.publisher_name = 'Marvel Comics', 1, -1))) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nWHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "264": "SELECT sp.power_name \nFROM hero_power hp \nJOIN superhero s ON hp.hero_id = s.id \nJOIN gender g ON s.gender_id = g.id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE g.gender = 'Male';\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c ON s.eye_colour_id = c.id \nWHERE s.height_cm BETWEEN 170 AND 190 AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour \nFROM superhero s \nJOIN colour c ON s.hair_colour_id = c.id \nJOIN race r ON s.race_id = r.id \nWHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (SUM(s.publisher_id = 13) / COUNT(s.publisher_id)) * 100 \nFROM \n    superhero s \nWHERE \n    s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name \nFROM superhero s \nJOIN gender g ON s.gender_id = g.id \nWHERE g.gender = 'Male' \nAND s.weight_kg > (SELECT 0.79 * AVG(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name \nFROM hero_power hp \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT h.id) \nFROM superhero h \nJOIN hero_power hp ON h.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'strength' \nAND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength'));\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nJOIN publisher p ON s.publisher_id = p.id \nWHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics' \nORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT \n  c.colour AS eye_colour, \n  h.colour AS hair_colour, \n  s.colour AS skin_colour\nFROM \n  superhero \n  INNER JOIN colour c ON superhero.eye_colour_id = c.id \n  INNER JOIN colour h ON superhero.hair_colour_id = h.id \n  INNER JOIN colour s ON superhero.skin_colour_id = s.id \n  INNER JOIN gender g ON superhero.gender_id = g.id \n  INNER JOIN publisher p ON superhero.publisher_id = p.id \nWHERE \n  g.gender = 'Female' \n  AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id AND s.hair_colour_id = c.id AND s.skin_colour_id = c.id\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "275": "SELECT ROUND((SUM(s.skin_colour_id = c.id AND g.gender = 'Female' AND c.colour = 'Blue') / COUNT(g.gender = 'Female')) * 100, 2) AS percentage\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c ON s.skin_colour_id = c.id;\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(power_id) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "277": "SELECT height_cm \nFROM superhero \nWHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Amber');\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c1 ON s.eye_colour_id = c1.id \nJOIN colour c2 ON s.hair_colour_id = c2.id \nWHERE c1.colour = 'Black' AND c2.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT superhero_name \nFROM superhero \nWHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT h.id)\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN superhero h ON ha.hero_id = h.id\nWHERE a.attribute_name = 'Strength' AND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute ha2 JOIN attribute a2 ON ha2.attribute_id = a2.id WHERE a2.attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "281": "SELECT ROUND(SUM(CASE WHEN s.gender_id IN (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS percent\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT SUBTRACT((SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky'), (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler')) AS difference;\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, AVG(height_cm) AS average_height \nFROM superhero \nGROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "284": "SELECT p.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower p ON hp.power_id = p.id \nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Speed' \nAND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed'));\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value \nFROM hero_attribute ha \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE ha.hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c1 ON s.eye_colour_id = c1.id \nJOIN colour c2 ON s.hair_colour_id = c2.id \nWHERE c1.colour = 'Blue' AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT p.publisher_name \nFROM superhero s \nJOIN publisher p ON s.publisher_id = p.id \nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT ROUND((SUM(CASE WHEN ec.id = 7 THEN 1 ELSE 0 END) / COUNT(sh.id) * 100.0), 2) AS percentage \nFROM superhero sh \nJOIN colour ec ON sh.eye_colour_id = ec.id;\t----- bird -----\tsuperhero",
    "290": "SELECT \n    (SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END)) AS ratio\nFROM \n    superhero \nJOIN \n    gender ON superhero.gender_id = gender.id;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour \nFROM superhero s \nJOIN colour c ON s.eye_colour_id = c.id \nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT \n    SUBTRACT(SUM(T2.eye_colour_id = 7), SUM(T2.eye_colour_id = 1)) AS difference\nFROM \n    superhero T1\nJOIN \n    colour T2 ON T1.eye_colour_id = T2.id\nWHERE \n    T1.weight_kg IS NULL OR T1.weight_kg = 0;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'Wind Control' \nORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nJOIN gender g ON s.gender_id = g.id \nWHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT \n    (SUM(p.publisher_name = 'DC Comics') - SUM(p.publisher_name = 'Marvel Comics')) AS difference\nFROM \n    superhero s\nJOIN \n    publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "297": "SELECT MAX(Reputation) \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon');\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName \nFROM users \nWHERE year(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) \nFROM users \nWHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName \nFROM posts p \nJOIN users u ON p.LastEditorUserId = u.Id \nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts\nWHERE OwnerUserId IN (\n    SELECT Id\n    FROM users\n    WHERE Age > 65\n) AND Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body \nFROM tags t \nJOIN posts p ON t.ExcerptPostId = p.Id \nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (COUNT(DISTINCT p.Id) / (SELECT COUNT(DISTINCT p.Id) FROM posts p WHERE p.Score > 5) * 100) \nAS \n    Percentage \nFROM \n    posts p \nJOIN \n    users u ON p.OwnerUserId = u.Id \nWHERE \n    p.Score > 5 AND u.Age > 65;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount \nFROM posts p \nJOIN comments c ON p.Id = c.PostId \nJOIN users u ON c.UserId = u.Id \nWHERE u.Id = 3025 AND c.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "308": "SELECT c.PostId, p.ClosedDate \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0' \nAND p.ClosedDate IS NULL;\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(p.Id) \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.DisplayName \nFROM votes v \nJOIN users u ON v.UserId = u.Id \nWHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(p.Id) / COUNT(v.Id) \nFROM posts p \nJOIN votes v ON p.OwnerUserId = v.UserId \nWHERE p.OwnerUserId = 24 AND v.UserId = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount \nFROM posts \nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text \nFROM comments \nWHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT u.DisplayName \nFROM comments c \nJOIN users u ON c.UserId = u.Id \nWHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName \nFROM posts p \nJOIN users u ON p.LastEditorUserId = u.Id \nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nJOIN postHistory ph ON p.Id = ph.PostId \nJOIN users u ON ph.UserId = u.Id \nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' \nAND ph.PostHistoryTypeId = 5;\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName \nFROM votes v \nJOIN posts p ON v.PostId = p.Id \nJOIN users u ON v.UserId = u.Id \nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) \nFROM posts p \nJOIN comments c ON p.Id = c.PostId \nJOIN tags t ON p.Tags LIKE CONCAT('%<', t.TagName, '>%') \nWHERE t.TagName = 'humor' \nGROUP BY p.Title, c.Text;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT b.UserId) \nFROM badges b \nGROUP BY b.UserId \nHAVING COUNT(b.Id) > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT u.Id, u.DisplayName\nFROM users u\nJOIN (\n  SELECT ph.UserId\n  FROM postHistory ph\n  JOIN posts p ON ph.PostId = p.Id\n  GROUP BY ph.UserId, ph.PostId\n  HAVING COUNT(ph.Id) = 1 AND p.ViewCount >= 1000\n) AS phu ON u.Id = phu.UserId;\t----- bird -----\tcodebase_community",
    "322": "SELECT ((SELECT COUNT(Name) FROM badges WHERE Name = 'Student' AND YEAR(Date) = 2010) / (SELECT COUNT(Name) FROM badges WHERE Name = 'Student')) * 100 - ((SELECT COUNT(Name) FROM badges WHERE Name = 'Student' AND YEAR(Date) = 2011) / (SELECT COUNT(Name) FROM badges WHERE Name = 'Student')) * 100 AS percentage_difference;\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) / COUNT(u.Id) AS avg_up_votes, AVG(u.Age) / COUNT(u.Id) AS avg_age\nFROM users u\nJOIN (\n  SELECT OwnerUserId\n  FROM posts\n  GROUP BY OwnerUserId\n  HAVING COUNT(Id) > 10\n) p ON u.Id = p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    (SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2010) / \n    (SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2011) AS ratio \nFROM \n    dual;\t----- bird -----\tcodebase_community",
    "325": "SELECT Id \nFROM posts \nWHERE OwnerDisplayName = 'slashnick' \nAND AnswerCount = (SELECT MAX(AnswerCount) \n                    FROM posts \n                    WHERE OwnerDisplayName = 'slashnick');\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(ViewCount) AS MaxViewCount, DisplayName \nFROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder') \nGROUP BY DisplayName \nORDER BY MaxViewCount DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT t.TagName \nFROM tags t \nJOIN posts p ON t.Id = p.Tags \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (COUNT(p.Id) / (SELECT COUNT(Id) FROM posts WHERE OwnerDisplayName = 'Community')) * 100 \nAS \n    percentage\nFROM \n    posts p \nJOIN \n    postLinks pl ON p.Id = pl.PostId \nJOIN \n    tags t ON pl.RelatedPostId = t.Id \nWHERE \n    t.TagName = 'r' \n    AND p.OwnerDisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(p.ViewCount) - (SELECT SUM(p2.ViewCount) FROM posts p2 JOIN users u2 ON p2.OwnerUserId = u2.Id WHERE u2.DisplayName = 'Amos') \nFROM posts p JOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'Mornington';\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(monthly_count) \nFROM (\n    SELECT COUNT(pl.Id) as monthly_count \n    FROM postLinks pl \n    JOIN posts p ON pl.PostId = p.Id \n    WHERE YEAR(pl.CreationDate) = 2010 AND p.AnswerCount <= 2 \n    GROUP BY MONTH(pl.CreationDate)\n) AS subquery;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) \nFROM votes v \nJOIN users u ON v.UserId = u.Id \nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName \nFROM badges b \nJOIN users u ON b.UserId = u.Id \nWHERE b.Name = 'Autobiographer' \nORDER BY b.Date \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' AND p.Id IN (\n    SELECT p.Id\n    FROM posts p\n    GROUP BY p.Id\n    HAVING SUM(p.FavoriteCount) >= 4\n)\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'Harvey Motulsky' \nORDER BY p.ViewCount DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, p.OwnerDisplayName \nFROM posts p \nWHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) \n                         FROM posts \n                         WHERE YEAR(CreationDate) = 2010) \nAND YEAR(p.CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "336": "SELECT \n    (COUNT(p.Id) / (SELECT COUNT(*) FROM posts) * 100) \nAS \n    percentage \nFROM \n    posts p \nJOIN \n    users u ON p.OwnerUserId = u.Id \nWHERE \n    YEAR(p.CreaionDate) = 2011 AND u.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Body = 'Computer Game Datasets' \nORDER BY p.LastActivityDate DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(c.Id) \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nWHERE p.Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, u.DisplayName \nFROM comments c \nJOIN users u ON c.UserId = u.Id \nJOIN posts p ON c.PostId = p.Id \nWHERE p.Title = 'Analysing wind data with R' \nORDER BY c.CreationDate DESC \nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT \n  (COUNT(p.Id) / (SELECT COUNT(p2.Id) FROM posts p2 WHERE p2.OwnerUserId = u.Id)) * 100 AS percentage\nFROM \n  posts p\n  JOIN users u ON p.OwnerUserId = u.Id\nWHERE \n  p.OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1) \n  AND p.Score > 50;\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId \nFROM tags \nWHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes \nFROM users u \nJOIN comments c ON u.Id = c.UserId \nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text, c.Score\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(c.Id)\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT ROUND((COUNT(DISTINCT c.UserId) / (SELECT COUNT(DISTINCT u.Id) FROM users u WHERE u.UpVotes = 0 AND u.Id IN (SELECT c.UserId FROM comments c WHERE c.Score BETWEEN 5 AND 10))) * 100, 2) AS percentage \nFROM comments c \nWHERE c.Score BETWEEN 5 AND 10 AND c.UserId IN (SELECT u.Id FROM users u WHERE u.UpVotes = 0);\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT * \nFROM cards \nWHERE borderColor = 'borderless' AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "348": "SELECT c.name \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "349": "SELECT l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.power = '*' OR c.power IS NULL AND l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hasContentWarning\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele' AND c.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, COUNT(r.uuid) AS ruling_count, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.uuid\nORDER BY ruling_count DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT (SUM(CASE WHEN fd.language = 'Chinese Simplified' THEN 1 ELSE 0 END) / COUNT(c.id)) * 100 AS percentage\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT ROUND((COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) / COUNT(id)) * 100, 2) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT ROUND((SELECT COUNT(fd.id) FROM foreign_data fd JOIN cards c ON fd.uuid = c.uuid WHERE fd.language = 'French' AND c.isStorySpotlight = 1) / (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1) * 100, 2) AS percentage;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = \"Summon - Angel\" AND NOT subtypes LIKE \"%Angel%\";\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(c.id)\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned' AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT c.name, fd.language, fd.translation \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.originalType = 'Artifact' AND c.colors LIKE '%B%' AND fd.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": "SELECT manaCost \nFROM cards \nWHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT id, \n       (SELECT ROUND(SUM(isStorylight = 1 AND isTextless = 0) / COUNT(*) * 100, 2) \n        FROM cards) AS percentage\nFROM cards\nWHERE isStorylight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT st.setCode)\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE st.language = 'Portuguese (Brasil)' AND s.block = 'Commander';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT c.type \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE fd.language = 'German';\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(c.id)\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'premodern' AND r.text = \"This is a triggered mana ability.\" AND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.artist = 'Matthew D. Wilson' \nAND c.layout = 'normal' \nAND c.borderColor = 'black' \nAND c.type = 'Creature' \nAND fd.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT st.language \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE s.block = 'Ravnica' AND s.baseSetSize = 180;\t----- bird -----\tcard_games",
    "371": "SELECT ROUND((COUNT(c.id) / (SELECT COUNT(id) FROM cards WHERE id IN (SELECT uuid FROM legalities WHERE format = 'commander' AND status = 'legal'))) * 100, 2) \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE l.format = 'commander' AND l.status = 'legal' AND c.hasContentWarning = 0;\t----- bird -----\tcard_games",
    "372": "SELECT ROUND((COUNT(c.id) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*')) * 100, 2) \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE fd.language = 'French' AND (c.power IS NULL OR c.power = '*');\t----- bird -----\tcard_games",
    "373": "SELECT fd.language \nFROM foreign_data fd \nJOIN cards c ON fd.multiverseid = c.multiverseId \nWHERE c.multiverseId = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT ROUND(DIVIDE(SUM(isTextless), COUNT(*)) * 100, 2) \nFROM cards \nWHERE layout = 'normal' AND isTextless = 1;\t----- bird -----\tcard_games",
    "375": "SELECT st.language \nFROM set_translations st \nJOIN sets s ON st.setCode = s.code \nWHERE s.mcmName = 'Archenemy' AND s.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT language \nFROM foreign_data \nWHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT c1.name, c1.convertedManaCost, c2.name, c2.convertedManaCost\nFROM cards c1, cards c2\nWHERE c1.name = 'Serra Angel' AND c2.name = 'Shrine Keeper'\nORDER BY c1.convertedManaCost DESC, c2.convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": "SELECT st.translation \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nJOIN set_translations st ON s.code = st.setCode \nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Korean';\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nWHERE setCode IN (SELECT code FROM sets WHERE translation = 'Hauptset Zehnte Edition') AND artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT translation \nFROM set_translations \nWHERE setCode = (SELECT code \n                 FROM sets \n                 WHERE name = 'Eighth Edition') \nAND language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT s.mtgoCode \nFROM sets s \nJOIN cards c ON s.code = c.setCode \nWHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.code) \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT s.isForeignOnly \nFROM sets s \nWHERE s.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE st.language = 'Italian' AND st.translation IS NOT NULL AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT artist \nFROM cards \nWHERE setCode = 'CDS' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nWHERE setCode = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT fd.text \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nJOIN rulings r ON c.uuid = r.uuid \nJOIN foreign_data fd ON r.uuid = fd.uuid \nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT st.translation \nFROM cards c \nJOIN set_translations st ON c.uuid = st.uuid \nWHERE c.setCode = 'CSP' AND st.language = 'Italian' AND c.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = 'CSP');\t----- bird -----\tcard_games",
    "391": "SELECT DIVIDE(SUM(c.convertedManaCost = 7), COUNT(c.id))*100 \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nWHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT \n    (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*)) * 100 \nFROM \n    cards \nWHERE \n    name IN (SELECT name FROM sets WHERE code = 'Coldsnap');\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(l.status) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nJOIN legalities l ON c.uuid = l.uuid \nWHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT s.name\nFROM sets s\nWHERE s.code NOT IN (\n    SELECT st.setCode\n    FROM set_translations st\n    WHERE st.language LIKE '%Japanese%'\n) AND s.code IN (\n    SELECT st.setCode\n    FROM set_translations st\n    WHERE st.language = 'Korean'\n);\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameVersion AS frame_styles, c.name AS cards_by_Allen_Williams\nFROM cards c\nWHERE c.artist = 'Allen Williams'\n\nUNION ALL\n\nSELECT NULL, NULL\nFROM legalities l\nWHERE l.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(bond_type) DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) \nFROM (\n    SELECT molecule_id, COUNT(DISTINCT a.atom_id) as oxygen_count \n    FROM molecule m \n    JOIN atom a ON m.molecule_id = a.molecule_id \n    JOIN bond b ON m.molecule_id = b.molecule_id \n    WHERE b.bond_type = '-' AND a.element = 'o' \n    GROUP BY molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) \nFROM (\n    SELECT molecule_id, COUNT(DISTINCT bond_id) as single_bonded_count \n    FROM molecule \n    JOIN atom ON molecule.molecule_id = atom.molecule_id \n    JOIN connected ON atom.atom_id = connected.atom_id \n    JOIN bond ON connected.bond_id = bond.bond_id \n    WHERE molecule.label = '+' AND bond.bond_type = '-' \n    GROUP BY molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id, m.label \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE m.label = '+' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "402": "SELECT \n    DIVIDE(SUM(a.element = 'c'), COUNT(a.atom_id)) * 100 \nFROM \n    atom a \nJOIN \n    connected c ON a.atom_id = c.atom_id \nJOIN \n    bond b ON c.bond_id = b.bond_id \nWHERE \n    b.bond_type = '=';\t----- bird -----\ttoxicology",
    "403": "SELECT a.element \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id \nWHERE c.bond_id = 'TR004_8_9' \nUNION \nSELECT a.element \nFROM connected c \nJOIN atom a ON c.atom_id2 = a.atom_id \nWHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT a.element, a2.element \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT label \nFROM atom \nWHERE element = 'h' \nGROUP BY label \nORDER BY COUNT(label) DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom\nWHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-')\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element IN ('i', 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT \n    (COUNT(DISTINCT m.molecule_id) - \n    COUNT(DISTINCT a.molecule_id)) / COUNT(DISTINCT m.molecule_id) * 100 \nFROM \n    molecule m \nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id \nWHERE \n    m.label = '+' AND a.element != 'F' OR a.element IS NULL;\t----- bird -----\ttoxicology",
    "410": "SELECT DIVIDE(SUM(b.bond_type = '#') * 100, COUNT(b.bond_id)) as percent\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+'\t----- bird -----\ttoxicology",
    "411": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR000' \nORDER BY element ASC \nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND((SUM(b.`bond_type` = '=') / COUNT(b.`bond_id`)) * 100, 5) AS percent\nFROM bond b\nWHERE b.`molecule_id` = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SUM(IF(m.label = '+', 1, 0)) / COUNT(m.molecule_id)) * 100, 3) AS percent \nFROM molecule m;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(atom_id)) * 100, 4) AS percent \nFROM atom \nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT m.label, a.element \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT bt.bond_type, COUNT(bt.bond_type) as count\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN (SELECT MAX(count) as max_count FROM \n    (SELECT bond_type, COUNT(bond_type) as count\n    FROM bond b\n    JOIN connected c ON b.bond_id = c.bond_id\n    JOIN atom a ON c.atom_id = a.atom_id\n    JOIN molecule m ON a.molecule_id = m.molecule_id\n    WHERE m.molecule_id = 'TR010'\n    GROUP BY bond_type) as subquery) as max_count_table\nON count = max_count\nWHERE m.molecule_id = 'TR010'\nGROUP BY bt.bond_type;\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = '-' AND b.bond_type = '-' AND c.atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = m.molecule_id)\nGROUP BY m.molecule_id\nORDER BY m.molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT b.bond_id)\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12' AND b.molecule_id = 'TR009';\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, a1.element, a2.element \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a1 ON c.atom_id = a1.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(DISTINCT c.bond_id) \nFROM connected c \nWHERE c.atom_id LIKE 'TR%_19' OR c.atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT m.label, m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25';\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "424": "SELECT m.label\nFROM molecule m\nJOIN (\n  SELECT molecule_id\n  FROM bond\n  WHERE bond_type = ' = '\n  GROUP BY molecule_id\n  ORDER BY COUNT(bond_id) DESC\n  LIMIT 1\n) b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) \nFROM (\n    SELECT atom_id, COUNT(bond_id) as bond_count \n    FROM connected \n    JOIN atom ON connected.atom_id = atom.atom_id \n    WHERE atom.element = 'i' \n    GROUP BY atom_id\n) AS iodine_atoms;\t----- bird -----\ttoxicology",
    "426": "SELECT element \nFROM atom \nWHERE atom_id NOT IN (SELECT atom_id FROM connected UNION SELECT atom_id2 FROM connected);\t----- bird -----\ttoxicology",
    "427": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT a.element \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id \nWHERE c.bond_id = 'TR144_8_19' \nUNION \nSELECT a.element \nFROM connected c \nJOIN atom a ON c.atom_id2 = a.atom_id \nWHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(DIVIDE(SUM(m.label = '+') * 100, COUNT(b.bond_id)), 5) \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT DIVIDE(SUM(a.element = 'cl'), COUNT(a.atom_id)) * 100 as percent\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a.element, a2.element \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT \n    ROUND(\n        SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / \n        COUNT(DISTINCT m.molecule_id) * 100, 2\n    ) AS percentage\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT element, COUNT(*) as count\nFROM atom\nWHERE atom_id IN (\n  SELECT atom_id\n  FROM atom\n  WHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n  ) AND SUBSTR(atom_id, 7, 1) = '4'\n)\nGROUP BY element;\t----- bird -----\ttoxicology",
    "436": "SELECT \n  (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) / COUNT(a.element)) AS ratio, \n  m.label \nFROM \n  atom a \n  JOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE \n  a.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN (\n  SELECT molecule_id\n  FROM atom\n  GROUP BY molecule_id\n  HAVING COUNT(molecule_id) > 5\n) a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-';\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE AvgScrMath > 400 AND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT s.CDSCode \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE f.`Enrollment (K-12)` + f.`Enrollment (Ages 5-17)` > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`)\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE satscores.NumGE1500 / satscores.NumTstTakr > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.cname, s.AvgScrWrite, sch.CharterNum\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nWHERE s.AvgScrWrite > 499 AND sch.CharterNum IS NOT NULL\nORDER BY s.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street, s.City, s.Zip, s.State, f.`Enrollment (K-12)`, f.`Enrollment (Ages 5-17)`\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.sname \nFROM satscores s \nJOIN frpm f ON s.cds = f.CDSCode \nJOIN schools sc ON f.CDSCode = sc.CDSCode \nWHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND s.NumGE1500 IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.cname, f.CharterFundingType\nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE sc.County = 'Riverside' AND s.cds IN (\n    SELECT cds\n    FROM satscores\n    GROUP BY cds\n    HAVING AVG(AvgScrMath) > 400\n)\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, CONCAT(s.Street, ', ', s.City, ', ', s.State, ' ', s.Zip) AS FullAddress\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Percent (%) Eligible FRPM (Ages 5-17)` > 800 AND s.County = 'Monterey' AND s.StatusType = 'High';\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.sname, sat.AvgScrWrite, sch.Phone\nFROM satscores sat\nJOIN schools sch ON sat.cds = sch.CDSCode\nWHERE (sch.OpenDate > '1991-01-01' OR sch.ClosedDate < '2000-01-01') AND sat.AvgScrWrite IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Charter Funding Type` = 'Locally Funded'\nAND f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > (\n  SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n  FROM frpm f2\n  WHERE f2.`Charter Funding Type` = 'Locally Funded'\n);\t----- bird -----\tcalifornia_schools",
    "448": "SELECT \n    f.`School Name`, \n    f.`Enrollment (K-12)`, \n    f.`Free Meal Count (K-12)`, \n    f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)` AS `Eligible Free Rate`\nFROM \n    frpm f\nORDER BY \n    f.`Enrollment (K-12)` DESC\nLIMIT 11, 2;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT s.CDSCode, s.School, f.FRPM_Count_K_12 / f.Enrollment_K_12 AS Eligible_Free_Reduced_Price_Meal_Rate\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE s.EdOpsCode = 66\nORDER BY f.FRPM_Count_K_12 DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nORDER BY sat.NumGE1500 / sat.NumTstTakr LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3 \nFROM schools \nWHERE CDSCode = (SELECT cds \n                 FROM satscores \n                 ORDER BY NumGE1500 DESC \n                 LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) \nFROM satscores s \nJOIN schools sc ON s.cds = sc.CDSCode \nWHERE sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND sc.County = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone \nFROM satscores ss \nJOIN schools s ON ss.cds = s.CDSCode \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE f.`District Name` = 'Fresno Unified' \nAND ss.AvgScrRead = (SELECT MIN(AvgScrRead) \n                     FROM satscores \n                     JOIN frpm ON satscores.cds = frpm.CDSCode \n                     WHERE frpm.`District Name` = 'Fresno Unified');\t----- bird -----\tcalifornia_schools",
    "454": "SELECT sname \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE Virtual = 'F' \nAND (County, AvgScrRead) IN (\n    SELECT County, AVG(AvgScrRead) \n    FROM satscores \n    JOIN schools ON satscores.cds = schools.CDSCode \n    WHERE Virtual = 'F' \n    GROUP BY County \n    ORDER BY AVG(AvgScrRead) DESC \n    LIMIT 5\n) \nORDER BY County, AvgScrRead DESC;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.cds, AVG(s.AvgScrWrite) \nFROM satscores s \nJOIN schools sc ON s.cds = sc.CDSCode \nWHERE sc.AdmFName1 = 'Ricci' AND sc.AdmLName1 = 'Ulrich' \nGROUP BY s.cds;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.CDSCode, s.School, s.Enrollment\nFROM schools s\nWHERE s.DOC = 31\nORDER BY s.Enrollment DESC;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 \nFROM schools \nWHERE County = 'Alameda' AND DOC = 52 AND YEAR(OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SUM(CASE WHEN s.DOC = 54 THEN 1 ELSE 0 END) / SUM(CASE WHEN s.DOC = 52 THEN 1 ELSE 0 END)) AS ratio\nFROM \n    schools s\nWHERE \n    s.County = 'Orange' \n    AND s.CDSCode IN (SELECT cds FROM satscores) \n    AND s.CDSCode IN (SELECT CDSCode FROM frpm);\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.Street, s.School, ss.AvgScrMath\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nORDER BY ss.AvgScrMath DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.County = 'Los Angeles' AND schools.Charter = 0 AND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(f.Enrollment `(Ages 5-17)`) \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE s.EdOpsCode = 'SSS' AND s.City = 'Fremont' AND f.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, (f.FRPM Count (Ages 5-17) / f.Enrollment (Ages 5-17)) * 100 AS PercentEligibleFRPM\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles' AND s.LowGrade = 'K' AND s.HighGrade = '9';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) as num_schools\nFROM schools\nWHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara')\nGROUP BY County\nORDER BY num_schools DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered \nFROM schools \nWHERE ABS(Longitude) = (SELECT MAX(ABS(Longitude)) FROM schools);\t----- bird -----\tcalifornia_schools",
    "465": "SELECT \n    city, \n    COUNT(DISTINCT s.CDSCode) AS num_schools\nFROM \n    schools s\nJOIN \n    frpm f ON s.CDSCode = f.CDSCode\nWHERE \n    s.Magnet = 1 \n    AND s.LowGrade = 'K' \n    AND s.HighGrade = '8' \n    AND f.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY \n    city;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    f.`Percent (%) Eligible Free (K-12)`, \n    s.District \nFROM \n    frpm f \nJOIN \n    schools s ON f.CDSCode = s.CDSCode \nWHERE \n    s.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' \nAND City = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND (SOC = 62 OR DOC = 54) \nAND StatusType = 'Public';\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A3 = 'East Bohemia' AND a.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000 AND A6 = 'F';\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*)\nFROM client\nWHERE gender = 'M' AND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE A3 = 'North Bohemia'\n) AND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE A11 > 8000\n);\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id, d.A11, (MAX_A11 - d.A11) as gap\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\nAND d.A11 = (SELECT MIN(A11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F'))\nCROSS JOIN (SELECT MAX(A11) as MAX_A11 FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F')) as max_salary;\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\nAND d.A11 = (SELECT MAX(A11) FROM district);\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount \nFROM account a \nJOIN loan l ON a.account_id = l.account_id \nWHERE l.date BETWEEN '1997-01-01' AND '1997-12-31' \nAND l.amount = (SELECT MIN(amount) FROM loan WHERE date BETWEEN '1997-01-01' AND '1997-12-31') \nAND a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12 AND a.date LIKE '1993%'\nORDER BY l.amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT c.client_id)\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN account a ON c.district_id = a.district_id\nWHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND d.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT d.A2 \nFROM client c \nJOIN disp d1 ON c.client_id = d1.client_id \nJOIN account a ON d1.account_id = a.account_id \nJOIN district d ON a.district_id = d.district_id \nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT \n    ROUND((COUNT(CASE WHEN c.gender = 'M' THEN 1 END) / COUNT(c.client_id)) * 100, 2) AS percentage_of_male_clients\nFROM \n    client c\nJOIN \n    district d ON c.district_id = d.district_id\nWHERE \n    d.A3 = 'South Bohemia' AND d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'South Bohemia');\t----- bird -----\tfinancial",
    "478": "SELECT ((b.balance - a.balance) / a.balance) * 100 \nFROM \n    (SELECT t.balance \n     FROM trans t \n     JOIN loan l ON t.account_id = l.account_id \n     JOIN client c ON l.account_id IN (SELECT a.account_id \n                                       FROM account a \n                                       WHERE a.date = (SELECT MIN(b.date) \n                                                         FROM account b \n                                                         JOIN loan lb ON b.account_id = lb.account_id \n                                                         WHERE lb.date = '1993-07-05')) \n     WHERE t.date = '1998-12-27' \n     AND c.client_id IN (SELECT cl.client_id \n                         FROM client cl \n                         JOIN account ac ON cl.district_id = ac.district_id \n                         WHERE ac.date = (SELECT MIN(b.date) \n                                           FROM account b \n                                           JOIN loan lb ON b.account_id = lb.account_id \n                                           WHERE lb.date = '1993-07-05'))) b, \n    (SELECT t.balance \n     FROM trans t \n     JOIN loan l ON t.account_id = l.account_id \n     JOIN client c ON l.account_id IN (SELECT a.account_id \n                                       FROM account a \n                                       WHERE a.date = (SELECT MIN(b.date) \n                                                         FROM account b \n                                                         JOIN loan lb ON b.account_id = lb.account_id \n                                                         WHERE lb.date = '1993-07-05')) \n     WHERE t.date = '1993-03-22' \n     AND c.client_id IN (SELECT cl.client_id \n                         FROM client cl \n                         JOIN account ac ON cl.district_id = ac.district_id \n                         WHERE ac.date = (SELECT MIN(b.date) \n                                           FROM account b \n                                           JOIN loan lb ON b.account_id = lb.account_id \n                                           WHERE lb.date = '1993-07-05'))) a;\t----- bird -----\tfinancial",
    "479": "SELECT ((SUM(l.amount) / (SELECT SUM(amount) FROM loan)) * 100) \nFROM loan l \nWHERE l.status = 'A';\t----- bird -----\tfinancial",
    "480": "SELECT \n    (SUM(CASE WHEN l.amount < 100000 AND l.status = 'C' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 \nFROM \n    loan l \nWHERE \n    l.amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT d.A2, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nJOIN client c ON a.district_id = c.district_id\nWHERE l.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT d.A2, COUNT(c.gender) as num_female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY num_female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT l.loan_id)\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE a.frequency = 'POPLATEK MESICNE' AND l.amount >= 250000 AND l.date BETWEEN '1995-01-01' AND '1997-12-31' AND l.status = 'approved';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE d.A2 = '1' AND l.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*)\nFROM client\nWHERE gender = 'M' AND district_id IN (\n    SELECT district_id\n    FROM district\n    ORDER BY A15 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "486": "SELECT d.A2, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE d.A2 = '1' AND l.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*)\nFROM client\nWHERE gender = 'M' AND district_id IN (\n    SELECT district_id\n    FROM district\n    ORDER BY A15 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "489": "SELECT c.client_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card cd ON d.disp_id = cd.disp_id\nJOIN trans t ON c.district_id = t.account_id\nWHERE t.type = 'VYBER KARTOU' AND t.amount < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND YEAR(date) = 1998) AND YEAR(t.date) = 1998;\t----- bird -----\tfinancial",
    "490": "SELECT frequency \nFROM account \nWHERE district_id IN (\n    SELECT district_id \n    FROM district \n    WHERE A11 BETWEEN 8000 AND 9000\n) AND frequency != 'OWNER';\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) \nFROM district d \nJOIN account a ON d.district_id = a.district_id \nWHERE d.A15 > 4000 AND a.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "492": "SELECT t.date, t.amount, t.balance, t.k_symbol, t.bank, t.account\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT \n    (COUNT(CASE WHEN c.gender = 'F' THEN 1 END) / COUNT(*)) * 100 \nFROM \n    client c \nJOIN \n    district d ON c.district_id = d.district_id \nJOIN \n    account a ON c.district_id = a.district_id \nWHERE \n    d.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT \n    ((SUM(CASE WHEN YEAR(l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) / SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) * 100 AS growth_rate\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    client c ON a.district_id = c.district_id\nWHERE \n    c.gender = 'M';\t----- bird -----\tfinancial",
    "495": "SELECT frequency, k_symbol \nFROM account \nJOIN trans ON account.account_id = trans.account_id \nWHERE account.account_id = 3 AND trans.type = 'debit' AND trans.amount = 3539;\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) / COUNT(*)) * 100 \nFROM \n    client c \nJOIN \n    disp d ON c.client_id = d.client_id \nJOIN \n    account a ON d.account_id = a.account_id \nWHERE \n    a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND d.A11 = (SELECT MIN(A11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F'));\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) \nFROM loan l \nWHERE l.status = 'C' AND l.payments = (SELECT t.amount \n                                      FROM trans t \n                                      WHERE t.type = 'POPLATEK PO OBRATU' \n                                      AND t.account_id = l.account_id);\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE d.type = 'OWNER' AND ca.type = 'gold';\t----- bird -----\tfinancial"
}