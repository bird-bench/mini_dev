{
    "0": " SELECT \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS EUR_CZK_Ratio;\t----- bird -----\tdebit_card_specializing",
    "1": " SELECT c.CustomerID, SUM(ym.Consumption) AS TotalConsumption\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Segment = 'LAM' AND SUBSTRING(ym.Date, 1, 4) = '2012'\nGROUP BY c.CustomerID\nORDER BY TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": " SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth\nWHERE CustomerID IN (\n    SELECT CustomerID\n    FROM customers\n    WHERE Segment = 'SME'\n)\nAND Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "3": " SELECT SUM(CASE WHEN Currency = 'CZK' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) AS ConsumptionDifference\nFROM yearmonth\nWHERE Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": " SELECT YEAR(STR_TO_DATE(Date, '%Y-%m-%d')) AS Year, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": " SELECT ym.Date\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME'\nAND SUBSTRING(ym.Date, 1, 4) = '2013'\nORDER BY ym.Consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": " SELECT \n    (SUM(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN Segment = 'SME' THEN CustomerID END)) -\n    (SUM(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN Segment = 'LAM' THEN CustomerID END)) AS SME_LAM_Diff,\n    (SUM(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN Segment = 'LAM' THEN CustomerID END)) -\n    (SUM(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN Segment = 'KAM' THEN CustomerID END)) AS LAM_KAM_Diff,\n    (SUM(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN Segment = 'KAM' THEN CustomerID END)) -\n    (SUM(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN Segment = 'SME' THEN CustomerID END)) AS KAM_SME_Diff\nFROM yearmonth\nWHERE Date BETWEEN '201301' AND '201312'\nAND Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "7": " SELECT Segment, \n       (SUM(CASE WHEN YEAR(STR_TO_DATE(Date, '%Y%m')) = 2013 THEN Consumption ELSE 0 END) - \n        SUM(CASE WHEN YEAR(STR_TO_DATE(Date, '%Y%m')) = 2012 THEN Consumption ELSE 0 END)) / \n        SUM(CASE WHEN YEAR(STR_TO_DATE(Date, '%Y%m')) = 2013 THEN Consumption ELSE 0 END) * 100 AS PercentageIncrease\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Segment IN ('SME', 'LAM', 'KAM')\nGROUP BY Segment\nORDER BY PercentageIncrease DESC;\t----- bird -----\tdebit_card_specializing",
    "8": " SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": " SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS more_discount_gas_stations_in_czech_republic;\t----- bird -----\tdebit_card_specializing",
    "10": " SELECT\n    (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Currency = 'CZK') AS CZK_Customers,\n    (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Currency = 'EUR') AS EUR_Customers,\n    (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Currency = 'CZK') - (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Currency = 'EUR') AS Difference\n;\t----- bird -----\tdebit_card_specializing",
    "11": " SELECT \n    (COUNT(DISTINCT CASE WHEN ym.Consumption > 46.73 THEN ym.CustomerID END) / COUNT(DISTINCT ym.CustomerID)) * 100 AS Percentage_LAM_Customers_Consumed_More_Than_46_73\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "12": " SELECT \n    (COUNT(DISTINCT t.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date = '201202')) * 100 AS percentage\nFROM \n    transactions_1k t\nJOIN \n    yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE \n    ym.Date = '201202' AND ym.Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "13": " SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE LEFT(Date, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "14": " SELECT p.Description\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE ym.Date = '201309';\t----- bird -----\tdebit_card_specializing",
    "15": " SELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE YEAR(STR_TO_DATE(t.Date, '%Y%m%d')) = 2013 AND MONTH(STR_TO_DATE(t.Date, '%Y%m%d')) = 6;\t----- bird -----\tdebit_card_specializing",
    "16": " SELECT COUNT(DISTINCT ym.CustomerID)\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": " SELECT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": " SELECT DISTINCT DATE_FORMAT(t.Date, '%Y-%m') AS TransactionMonth\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "19": " SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE'\nAND transactions_1k.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": " SELECT Currency\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": " SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": " SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-26'\nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\nAND gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "23": " SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": " SELECT \n    (COUNT(DISTINCT t.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25')) * 100 AS percentage_eur_customers\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nWHERE \n    t.Date = '2012-08-25' AND c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "25": " SELECT ((c2.Consumption - c1.Consumption) / c1.Consumption) AS DecreaseRate\nFROM yearmonth c1\nJOIN yearmonth c2 ON c1.CustomerID = c2.CustomerID\nWHERE c1.Date = '2012-08-25' AND c2.Date = '2013-08-25';\t----- bird -----\tdebit_card_specializing",
    "26": " SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'premium') / \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') * 100 AS percentage_premium;\t----- bird -----\tdebit_card_specializing",
    "27": " SELECT SUM(t.Amount) AS Total_Spent\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.CustomerID = 38508;\n\nSELECT SUM(t.Amount) AS Total_Spent_Jan_2012\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.CustomerID = 38508 AND t.Date LIKE '201201%';\t----- bird -----\tdebit_card_specializing",
    "28": " SELECT \n    c.CustomerID, \n    c.Currency, \n    SUM(t.Amount * t.Price) AS TotalSpent, \n    AVG(t.Price) AS AvgPricePerItem\nFROM \n    customers c\nJOIN \n    transactions_1k t ON c.CustomerID = t.CustomerID\nGROUP BY \n    c.CustomerID, c.Currency\nORDER BY \n    TotalSpent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": " SELECT ym.CustomerID, ym.Consumption\nFROM yearmonth ym\nJOIN transactions_1k t ON ym.CustomerID = t.CustomerID\nWHERE t.ProductID = 5\nAND t.Price / t.Amount > 29.00\nAND ym.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": " SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE first_name = 'Angela' AND last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": " SELECT COUNT(DISTINCT member.member_id)\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer'\nAND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": " SELECT COUNT(DISTINCT e.event_id)\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN member m ON a.link_to_member = m.member_id\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(DISTINCT m.member_id) > 10;\t----- bird -----\tstudent_club",
    "33": " SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type != 'fundraiser'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "34": " SELECT SUM(amount) AS total_funds_received\nFROM income\nWHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "35": " SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'IL';\t----- bird -----\tstudent_club",
    "36": " SELECT expense.expense_id, expense.approved\nFROM expense\nJOIN attendance ON expense.link_to_member = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08' AND expense.approved = 'True';\t----- bird -----\tstudent_club",
    "37": " SELECT AVG(expense.cost) AS average_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND (MONTH(expense.expense_date) = 9 OR MONTH(expense.expense_date) = 10);\t----- bird -----\tstudent_club",
    "38": " SELECT \n    (SELECT SUM(spent) FROM budget WHERE YEAR(event_date) = 2019) - \n    (SELECT SUM(spent) FROM budget WHERE YEAR(event_date) = 2020) AS difference_spent;\t----- bird -----\tstudent_club",
    "39": " SELECT notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": " SELECT member.phone\nFROM member\nWHERE member.first_name = 'Carlo' AND member.last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": " SELECT event.status\nFROM event\nJOIN expense ON event.event_id = expense.link_to_event\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": " SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE first_name = 'Brent' AND last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": " SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": " SELECT m.department\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "45": " SELECT date_received\nFROM income\nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues';\t----- bird -----\tstudent_club",
    "46": " SELECT COUNT(*)\nFROM (\n  SELECT \n    (SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN amount ELSE 0 END) / \n     SUM(CASE WHEN event_name = 'October Meeting' THEN amount ELSE 0 END)) AS ratio\n  FROM budget\n  WHERE category = 'Advertisement'\n) AS subquery\nWHERE ratio > 1;\t----- bird -----\tstudent_club",
    "47": " SELECT SUM(expense.cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": " SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": " SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": " SELECT COUNT(DISTINCT member_id)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": " SELECT e.event_name, MAX(b.spent / b.amount) AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nGROUP BY e.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": " SELECT MAX(spent) AS highest_budget_spend\nFROM budget;\t----- bird -----\tstudent_club",
    "54": " SELECT SUM(spent) AS total_spent_for_food\nFROM budget\nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.event_name = 'Yearly Kickoff' AND b.event_status = 'managed';\t----- bird -----\tstudent_club",
    "57": " SELECT event_name, MIN(cost) AS lowest_cost\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nGROUP BY event_name\nORDER BY lowest_cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": " SELECT (SUM(cost) / (SELECT SUM(cost) FROM budget WHERE event_name = 'Yearly Kickoff') * 100) AS percentage_cost_yearly_kickoff;\t----- bird -----\tstudent_club",
    "59": " SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": " SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": " SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": " SELECT \n    CASE \n        WHEN EXISTS (\n            SELECT 1 \n            FROM attendance \n            JOIN member ON attendance.link_to_member = member.member_id \n            JOIN event ON attendance.link_to_event = event.event_id \n            WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women''s Soccer'\n        ) THEN 'Yes' \n        ELSE 'No' \n    END AS attended_event;\t----- bird -----\tstudent_club",
    "63": " SELECT expense.cost\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": " SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": " SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN attendance ON expense.link_to_member = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense_description;\t----- bird -----\tstudent_club",
    "66": " SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nWHERE event_status = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": " SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": " SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, SUM(expense.cost) AS total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = 'rec4BLdZHS2Blfp4v';\t----- bird -----\tstudent_club",
    "69": " SELECT expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": " SELECT event.type\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": " SELECT m.last_name, m.department, m.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": " SELECT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN member m ON a.link_to_member = m.member_id\nJOIN major ma ON m.link_to_major = ma.major_id\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE e.location = 'MU 215'\nAND e.type = 'Guest Speaker'\nAND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": " SELECT ROUND((COUNT(DISTINCT CASE WHEN expense_description = 'Amount 50' THEN expense_id END) / COUNT(DISTINCT member_id)) * 100, 2) AS percentage\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.t_shirt_size = 'Medium' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "74": " SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": " SELECT m.first_name, m.last_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": " SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": " SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "78": " SELECT \n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS InPatientMale,\n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS OutPatientMale,\n    (SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M')) AS PercentageDeviation\nFROM Patient\nWHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "79": " SELECT ROUND((COUNT(DISTINCT CASE WHEN SEX = 'F' AND YEAR(Birthday) > 1930 THEN ID END) / COUNT(DISTINCT CASE WHEN SEX = 'F' THEN ID END)) * 100, 2) AS percentage_female_born_after_1930;\t----- bird -----\tthrombosis_prediction",
    "80": " SELECT \n    DIVIDE(\n        COUNT(DISTINCT Patient.ID) \n        WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '-'\n    ) AS OutpatientCount,\n    DIVIDE(\n        COUNT(DISTINCT Patient.ID) \n        WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '+'\n    ) AS InpatientCount,\n    DIVIDE(\n        COUNT(DISTINCT Patient.ID) \n        WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '-'\n    ) / DIVIDE(\n        COUNT(DISTINCT Patient.ID) \n        WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '+'\n    ) AS OutpatientToInpatientRatio\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "81": " SELECT Laboratory.Date\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": " SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": " SELECT Patient.ID, TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": " SELECT Patient.ID, Patient.SEX, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": " SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND YEAR(Birthday) <= 1997 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.Thrombosis = 1\nAND YEAR(Examination.Examination Date) = 1997\nAND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "87": " SELECT Examination.Symptoms, Examination.Diagnosis\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nORDER BY Patient.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "88": " SELECT Laboratory.Date, SUBTRACT(year(Patient.First Date), year(Patient.Birthday)) AS Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Age DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": " SELECT \n    SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS Male_Abnormal_UA,\n    SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS Female_Abnormal_UA,\n    SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS Ratio_Male_to_Female\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "90": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE YEAR(Examination.Examination Date) BETWEEN 1990 AND 1993\nAND YEAR(Patient.Birthday) < 1990;\t----- bird -----\tthrombosis_prediction",
    "91": " SELECT \n    TIMESTAMPDIFF(YEAR, Patient.Birthday, Examination.ExaminationDate) AS Age,\n    Examination.Diagnosis\nFROM \n    Patient\nJOIN \n    Examination ON Patient.ID = Examination.ID\nJOIN \n    Laboratory ON Examination.ID = Laboratory.ID\nWHERE \n    Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory)\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": " SELECT e.aCL_IgM\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE p.Diagnosis = 'SLE' AND e.Examination_Date = '1993/11/12';\t----- bird -----\tthrombosis_prediction",
    "93": " SELECT ((SUM(CASE WHEN Birthday = '1959-02-18' AND Examination Date LIKE '1981-11-%' THEN `T-CHO` END) - SUM(CASE WHEN Birthday = '1959-02-18' AND Examination Date LIKE '1981-12-%' THEN `T-CHO` END)) / SUM(CASE WHEN Birthday = '1959-02-18' AND Examination Date LIKE '1981-11-%' THEN `T-CHO` END)) * 100 AS decrease_rate_percentage\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": " SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Examination.Examination Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.Thrombosis = 2\nAND e.ANA = 'S'\nAND l.aCL IgM > (SELECT AVG(aCL IgM) * 1.2 FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "96": " SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.Admission = '-'\nAND Examination.Examination Date BETWEEN '1991-10-01' AND '1991-10-31'\nAND Laboratory.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": " SELECT AVG(Laboratory.ALB)\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.SEX = 'F' AND e.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": " SELECT ROUND((SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) / COUNT(*)) * 100, 2) AS percentage\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": " SELECT CASE\n  WHEN EXISTS (\n    SELECT 1\n    FROM Laboratory\n    WHERE ID = 57266 AND (\n      (SEX = 'M' AND UA > 8.0) OR\n      (SEX = 'F' AND UA > 6.5)\n    )\n  ) THEN 'Yes'\n  ELSE 'No'\nEND AS 'Uric Acid Normal Range';\t----- bird -----\tthrombosis_prediction",
    "101": " SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": " SELECT Patient.ID, Patient.Birthday, Laboratory.Date, Laboratory.GPT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": " SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": " SELECT Patient.SEX, COUNT(*) AS Patients_Count\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.T-BIL >= 2.0\nGROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": " SELECT AVG(YEAR(NOW()) - YEAR(Birthday)) AS average_age\nFROM Patient\nWHERE SEX = 'M' AND T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG > 200 AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Birthday BETWEEN '1936-01-01' AND '1956-12-31'\nAND Patient.SEX = 'M'\nAND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": " SELECT Patient.ID, Patient.SEX, (YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "109": " SELECT Patient.ID, TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) AS Age, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": " SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.Diagnosis = 'SLE' AND Laboratory.HGB BETWEEN 10 AND 17\nORDER BY Patient.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": " SELECT Patient.ID, (YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (SELECT COUNT(Laboratory.ID) FROM Laboratory WHERE Laboratory.ID = Patient.ID) > 2\nAND Laboratory.HCT >= 52;\t----- bird -----\tthrombosis_prediction",
    "112": " SELECT \n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal\nFROM Laboratory;\t----- bird -----\tthrombosis_prediction",
    "113": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(l.Date) = 1984\nAND (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) < 50\nAND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": " SELECT \n    ROUND((SUM(CASE WHEN SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END) / SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END)) * 100, 2) AS percentage_female_abnormal_PT\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0\nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": " SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGG > 900 AND l.IGG < 2000 AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500\nAND YEAR(Patient.First Date) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": " SELECT Diagnosis, COUNT(Diagnosis) AS Diagnosis_Count\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (Examination.aCL IgM <= 40 OR Examination.aCL IgM >= 400)\nGROUP BY Diagnosis\nORDER BY Diagnosis_Count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": " SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRP = '+' AND l.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": " SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5 AND SUBTRACT((YEAR(CURDATE()), YEAR(p.Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP = '-' AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.Diagnosis = 'normal anti-SM' AND l.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.ANA Pattern = 'negative'\nAND Patient.SEX = 'F'\nAND Examination.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CENTROMEA IN ('-', '+-')\nAND Laboratory.SSB IN ('-', '+-')\nAND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": " SELECT MIN(Birthday) AS YoungestBirthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CPK < 250 AND (Laboratory.KCT = '+' OR Laboratory.RVVT = '+' OR Laboratory.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": " SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.id\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": " SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE Match.league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\nAND Match.season = '2009/2010'\nGROUP BY Match.away_team_api_id\nORDER BY SUM(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 ELSE 0 END) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": " SELECT t.team_long_name, MAX(ta.buildUpPlaySpeed) AS buildUpPlaySpeed\nFROM Team t\nJOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id\nGROUP BY t.team_long_name\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": " SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.name\nORDER BY SUM(home_team_goal = away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": " SELECT Player.player_name, TIMESTAMPDIFF(YEAR, Player.birthday, CURDATE()) AS age\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_api_id\nWHERE Player_Attributes.sprint_speed >= 97\nAND YEAR(Player_Attributes.date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "133": " SELECT l.name, COUNT(m.id) AS match_count\nFROM League l\nJOIN Match m ON l.id = m.league_id\nGROUP BY l.id\nORDER BY match_count DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": " SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": " SELECT Team.team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id\nWHERE Team_Attributes.date LIKE '%2012%'\nAND Team_Attributes.buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE buildUpPlayPassing IS NOT NULL\n    AND date LIKE '%2012%'\n);\t----- bird -----\teuropean_football_2",
    "136": " SELECT \n    (SUM(CASE WHEN preferred_foot = 'left' AND YEAR(birthday) BETWEEN 1987 AND 1992 THEN 1 ELSE 0 END) / COUNT(player_fifa_api_id)) * 100 AS percentage_left_foot_players_1987_1992;\t----- bird -----\teuropean_football_2",
    "137": " SELECT AVG(long_shots) AS average_long_shots\nFROM Player\nWHERE player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": " SELECT p.player_name, AVG(pa.heading_accuracy) AS avg_heading_accuracy\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180\nGROUP BY p.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": " SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(home_team_goal) > AVG(away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": " SELECT p.player_name\nFROM Player p\nWHERE substr(p.birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": " SELECT overall_rating\nFROM Player_Attributes\nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Gabriel Tamas')\nAND date LIKE '%2011%';\t----- bird -----\teuropean_football_2",
    "142": " SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nWHERE season = '2010/2011' AND country_id = (SELECT id FROM League WHERE name = 'Poland');\t----- bird -----\teuropean_football_2",
    "143": " SELECT p.player_name\nFROM Player p\nJOIN (\n  SELECT MAX(overall_rating) AS max_rating, MIN(height) AS min_height\n  FROM Player\n) AS max_min\nON p.overall_rating = max_min.max_rating AND p.height = max_min.min_height;\t----- bird -----\teuropean_football_2",
    "144": " SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player_Attributes t2\nJOIN Player t1 ON t2.player_api_id = t1.id\nWHERE t1.height > 170\nAND strftime('%Y', t2.date) >= '2010' AND strftime('%Y', t2.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": " SELECT ABS(AVG(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE NULL END) - AVG(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE NULL END)) AS difference_in_avg_ball_control;\t----- bird -----\teuropean_football_2",
    "146": " SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') AND birthday < (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada');\t----- bird -----\teuropean_football_2",
    "147": " SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nORDER BY p.height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": " SELECT COUNT(*)\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_api_id\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": " SELECT COUNT(DISTINCT p.id)\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": " SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.crossing > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": " SELECT COUNT(*) FROM Match\nWHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\nAND SUBSTR(date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": " SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2008/2009'\nGROUP BY l.name\nORDER BY COUNT(m.id) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": " SELECT \n  (\n    (\n      (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - \n      (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')\n    ) / \n    (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')\n  ) * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": " SELECT AVG(T1.overall_rating)\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_api_id = T2.id\nWHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": " SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing, chanceCreationPassingClass AS classification\nFROM Team_Attributes\nWHERE team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": " SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE pa.overall_rating = 77\nAND pa.date LIKE '2016-06-23%'\nORDER BY p.birthday DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": " SELECT p.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": " SELECT player_attributes.attacking_work_rate\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.id\nWHERE Player.player_name = 'Francesco Migliore'\nAND Player_Attributes.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": " SELECT MIN(date) AS first_highest_crossing_date\nFROM Match\nJOIN Player ON Match.home_player_X1 = Player.id OR Match.home_player_X2 = Player.id OR Match.home_player_X3 = Player.id OR Match.home_player_X4 = Player.id OR Match.home_player_X5 = Player.id OR Match.home_player_X6 = Player.id OR Match.home_player_X7 = Player.id OR Match.home_player_X8 = Player.id OR Match.home_player_X9 = Player.id OR Match.home_player_X10 = Player.id OR Match.home_player_X11 = Player.id OR Match.away_player_X1 = Player.id OR Match.away_player_X2 = Player.id OR Match.away_player_X3 = Player.id OR Match.away_player_X4 = Player.id OR Match.away_player_X5 = Player.id OR Match.away_player_X6 = Player.id OR Match.away_player_X7 = Player.id OR Match.away_player_X8 = Player.id OR Match.away_player_X9 = Player.id OR Match.away_player_X10 = Player.id OR Match.away_player_X11 = Player.id\nWHERE Player.player_name = 'Kevin Constant'\nAND (\n    (home_player_X1 = Player.id OR home_player_X2 = Player.id OR home_player_X3 = Player.id OR home_player_X4 = Player.id OR home_player_X5 = Player.id OR home_player_X6 = Player.id OR home_player_X7 = Player.id OR home_player_X8 = Player.id OR home_player_X9 = Player.id OR home_player_X10 = Player.id OR home_player_X11 = Player.id)\n    OR\n    (away_player_X1 = Player.id OR away_player_X2 = Player.id OR away_player_X3 = Player.id OR away_player_X4\t----- bird -----\teuropean_football_2",
    "160": " SELECT Team_Attributes.buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": " SELECT Team_Attributes.defenceAggressionClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.id\nWHERE Team.team_long_name = 'Hannover 96'\nAND Team_Attributes.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": " SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.id\nWHERE Player.player_name = 'Marko Arnautovic'\nAND Player_Attributes.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": " SELECT \n    ((SELECT overall_rating FROM Player WHERE player_name = 'Landon Donovan') - \n    (SELECT overall_rating FROM Player WHERE player_name = 'Jordan Bowery')) / \n    (SELECT overall_rating FROM Player WHERE player_name = 'Landon Donovan') * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "164": " SELECT p.player_name\nFROM Player p\nORDER BY p.height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": " SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": " SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": " SELECT team_short_name\nFROM Team\nWHERE team_short_name IN (\n  SELECT DISTINCT team_short_name\n  FROM Match\n  JOIN Team ON Match.home_team_api_id = Team.team_api_id OR Match.away_team_api_id = Team.team_api_id\n  WHERE goal LIKE '%B365H%' AND goal LIKE '%B365D%' AND goal LIKE '%B365A%'\n);\t----- bird -----\teuropean_football_2",
    "168": " SELECT COUNT(*)\nFROM Player\nWHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": " SELECT SUBTRACT(jumping AND id = 6, jumping AND id = 23) AS jumping_score_difference FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "170": " SELECT p.id\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE pa.potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND p.preferred_foot = 'right';\n\nThis query will return the IDs of the top five football players who are among the lowest potential players and prefer to use the right foot when attacking.\t----- bird -----\teuropean_football_2",
    "171": " SELECT COUNT(DISTINCT p.id)\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes)\nAND p.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": " SELECT home_team_goal, away_team_goal\nFROM Match\nWHERE date = '2008-09-24' AND league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League');\t----- bird -----\teuropean_football_2",
    "173": " SELECT Team_Attributes.buildUpPlaySpeedClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.id\nWHERE Team.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": " SELECT player_name, overall_rating, potential, preferred_foot, finishing, curve\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_api_id\nWHERE weight = (SELECT MAX(weight) FROM Player)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "175": " SELECT League.name, COUNT(Match.id) AS games_count\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY games_count DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": " SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nGROUP BY Team.team_long_name\nORDER BY MAX(away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": " SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": " SELECT (COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END) / COUNT(*)) * 100 AS percentage_under_180_strength_over_70;\t----- bird -----\teuropean_football_2",
    "179": " SELECT d.driverRef\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 20 AND q.q1 IS NOT NULL\nORDER BY q.q1 DESC\nLIMIT 5;\t----- bird -----\tformula_1",
    "180": " SELECT drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN qualifying ON results.raceId = qualifying.raceId\nWHERE qualifying.raceId = 19 AND qualifying.q2 = (\n    SELECT MIN(qualifying.q2)\n    FROM qualifying\n    WHERE qualifying.raceId = 19\n);\t----- bird -----\tformula_1",
    "181": " SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "182": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": " SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": " SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceId = 354;\t----- bird -----\tformula_1",
    "185": " SELECT drivers.number\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nWHERE qualifying.q3 LIKE '0:01:54%'\nAND qualifying.raceId = 903;\t----- bird -----\tformula_1",
    "186": " SELECT COUNT(*)\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Bahrain Grand Prix'\nAND results.year = 2007\nAND results.time IS NULL;\t----- bird -----\tformula_1",
    "187": " SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": " SELECT drivers.url\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.raceId = 161 AND results.lapTime LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "189": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": " SELECT c.url\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": " SELECT d.code\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nWHERE r.raceId = 45 AND q.q3 LIKE '0:01:33%'\t----- bird -----\tformula_1",
    "192": " SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = YEAR(races.date)\nWHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "193": " SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.raceId = 872\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": " SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN lapTimes lt ON r.raceId = lt.raceId AND r.driverId = lt.driverId\nWHERE lt.milliseconds = (\n    SELECT MAX(milliseconds)\n    FROM lapTimes\n);\t----- bird -----\tformula_1",
    "195": " SELECT ((SELECT fastestLapSpeed FROM results WHERE raceId = 853) - (SELECT fastestLapSpeed FROM results WHERE raceId = 854)) / (SELECT fastestLapSpeed FROM results WHERE raceId = 853) * 100 AS percentage_faster;\t----- bird -----\tformula_1",
    "196": " SELECT COUNT(DISTINCT driverId) AS total_drivers,\n       COUNT(DISTINCT CASE WHEN lapTimes.time IS NOT NULL THEN driverId END) AS completed_drivers,\n       (COUNT(DISTINCT CASE WHEN lapTimes.time IS NOT NULL THEN driverId END) / COUNT(DISTINCT driverId)) * 100 AS completion_rate\nFROM drivers\nJOIN races ON drivers.driverId = races.driverId\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId AND races.raceId = lapTimes.raceId\nWHERE races.date = '1983-07-16';\t----- bird -----\tformula_1",
    "197": " SELECT races.name\nFROM races\nJOIN seasons ON races.year = seasons.year\nWHERE races.year = (SELECT MIN(year) FROM races)\nAND races.date >= (SELECT DATE_FORMAT(MIN(date), '%Y-%m-01') FROM races);\t----- bird -----\tformula_1",
    "198": " SELECT drivers.forename, drivers.surname, MAX(driverStandings.points) AS max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": " SELECT drivers.forename, drivers.surname, races.name, MIN(lapTimes.milliseconds) AS best_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nGROUP BY drivers.forename, drivers.surname, races.name\nORDER BY best_lap_time ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "200": " SELECT AVG(milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix'\nAND races.year = 2009;\t----- bird -----\tformula_1",
    "201": " SELECT ROUND((1 - (SELECT COUNT(DISTINCT r.raceId) FROM races r JOIN results rt ON r.raceId = rt.raceId JOIN drivers d ON rt.driverId = d.driverId WHERE d.surname = 'Hamilton' AND rt.position > 1 AND r.year >= 2010) / (SELECT COUNT(DISTINCT r.raceId) FROM races r WHERE r.year >= 2010), 2) * 100) AS percentage_not_first_position;\t----- bird -----\tformula_1",
    "202": " SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) AS max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": " SELECT drivers.forename, drivers.surname, YEAR(CURRENT_TIMESTAMP) - YEAR(drivers.dob) AS age\nFROM drivers\nWHERE drivers.nationality = 'Japanese'\nORDER BY age DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": " SELECT races.name AS RaceName, circuits.name AS CircuitName, circuits.location AS CircuitLocation\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE YEAR(races.date) = 2005 AND MONTH(races.date) = 9;\t----- bird -----\tformula_1",
    "205": " SELECT races.name, races.date\nFROM races\nJOIN drivers ON races.driverId = drivers.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND races.round < 20;\t----- bird -----\tformula_1",
    "206": " SELECT races.year, races.date\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": " SELECT races.name, constructorResults.points\nFROM races\nJOIN constructorResults ON races.raceId = constructorResults.raceId\nJOIN drivers ON constructorResults.constructorId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": " SELECT (COUNT(races.raceId) / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')) * 100 AS percentage_in_germany\nFROM races\nWHERE country = 'Germany' AND name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": " SELECT lat, lng FROM circuits WHERE circuitRef = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": " SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": " SELECT country FROM drivers ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "212": " SELECT drivers.driverRef\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND driverStandings.position = 1;\t----- bird -----\tformula_1",
    "213": " SELECT races.name, drivers.forename, drivers.surname, results.rank\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": " SELECT MAX(results.fastestLapSpeed) AS fastestLapSpeed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "215": " SELECT drivers.forename, drivers.surname, driverStandings.positionOrder AS final_rank\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008;\t----- bird -----\tformula_1",
    "216": " SELECT r.time\nFROM results r\nJOIN races rc ON r.raceId = rc.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE rc.name = 'Chinese Grand Prix'\nAND rc.year = 2008\nAND r.position = 2;\t----- bird -----\tformula_1",
    "217": " SELECT COUNT(DISTINCT drivers.driverId)\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE races.date = '2008-04-19' AND driverStandings.position IS NOT NULL;\t----- bird -----\tformula_1",
    "218": " SELECT \n    ((SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix') AND rank = 1) - \n    (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix') AND rank = (SELECT MAX(rank) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix'))) * 100) / \n    (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix') AND rank = 1) AS percentage_faster;\t----- bird -----\tformula_1",
    "219": " SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": " SELECT MAX(constructorStandings.points) AS max_points\nFROM constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "221": " SELECT c.name\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "222": " SELECT COUNT(DISTINCT constructors.constructorId)\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nJOIN races ON constructorResults.raceId = races.raceId\nWHERE constructors.nationality = 'Japanese'\nAND races.year IN (\n    SELECT year\n    FROM races\n    GROUP BY year\n    HAVING COUNT(raceId) = 2\n)\nGROUP BY constructors.constructorId\nHAVING SUM(constructorResults.points) = 0;\t----- bird -----\tformula_1",
    "223": " SELECT \n    (COUNT(DISTINCT driverId) / (SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'Japanese' AND driverId IN (SELECT driverId FROM results WHERE year BETWEEN 2007 AND 2009))) * 100 AS completion_percentage\nFROM \n    results\nWHERE \n    year BETWEEN 2007 AND 2009\n    AND nationality = 'Japanese'\n    AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "224": " SELECT \n    YEAR(r.date) AS year, \n    AVG(TIME_TO_SEC(TIME(r.time))) AS avg_time_seconds\nFROM \n    races r\nJOIN \n    results res ON r.raceId = res.raceId\nWHERE \n    r.date < '1975-01-01'\nGROUP BY \n    YEAR(r.date);\t----- bird -----\tformula_1",
    "225": " SELECT MAX(fastestLap) AS fastestLapNumber\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009;\t----- bird -----\tformula_1",
    "226": " SELECT AVG(results.fastestLapSpeed) AS average_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN seasons ON races.year = seasons.year\nWHERE races.name = 'Spanish Grand Prix' AND seasons.year = 2009;\t----- bird -----\tformula_1",
    "227": " SELECT ROUND((SELECT COUNT(DISTINCT driverId) FROM drivers WHERE dob < 1985 AND driverId IN (SELECT driverId FROM results WHERE laps > 50)) / (SELECT COUNT(DISTINCT driverId) FROM drivers WHERE year(dob) BETWEEN 2000 AND 2005) * 100), 2) AS percentage;\t----- bird -----\tformula_1",
    "228": " SELECT COUNT(DISTINCT drivers.driverId)\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.nationality = 'French'\nAND results.time < '02:00:00';\t----- bird -----\tformula_1",
    "229": " SELECT `driverId`, `forename`, `surname`, `nationality`\nFROM drivers\nWHERE `nationality` = 'America';\t----- bird -----\tformula_1",
    "230": " SELECT d.driverId, d.forename, d.surname, YEAR(d.dob) - YEAR(CURDATE()) AS age\nFROM drivers d\nORDER BY age ASC\nLIMIT 3;\n\nSELECT COUNT(*)\nFROM (\n  SELECT d.driverId\n  FROM drivers d\n  WHERE d.nationality = 'Netherlandic'\n  ORDER BY YEAR(d.dob) - YEAR(CURDATE()) ASC\n  LIMIT 3\n) AS netherlandic_drivers;\t----- bird -----\tformula_1",
    "231": " SELECT drivers.forename, drivers.surname\nFROM drivers\nWHERE drivers.nationality = 'German'\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": " SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN qualifying q ON r.raceId = q.raceId AND r.driverId = q.driverId\nWHERE d.dob = 1971 AND q.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": " SELECT COUNT(*)\nFROM results\nJOIN status ON results.statusId = status.statusId\nWHERE status.status = 'disqualified'\nAND results.raceId BETWEEN 50 AND 100;\t----- bird -----\tformula_1",
    "234": " SELECT COUNT(DISTINCT circuits.circuitId), circuits.location, circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE circuits.country = 'Austria';\t----- bird -----\tformula_1",
    "235": " SELECT drivers.forename, drivers.surname, MIN(drivers.dob) AS youngest_dob, MIN(races.date) AS first_qualifying_race_date, races.time AS first_qualifying_race_time\nFROM drivers\nJOIN races ON drivers.driverId = races.driverId\nJOIN qualifying ON races.raceId = qualifying.raceId\nWHERE drivers.dob = (SELECT MIN(dob) FROM drivers)\nAND qualifying.q1 IS NOT NULL\nORDER BY races.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "236": " SELECT d.forename, d.surname, AVG(p.duration) AS avg_duration\nFROM drivers d\nJOIN pitStops p ON d.driverId = p.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.driverId\nORDER BY avg_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": " SELECT drivers.forename, drivers.surname, results.time\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1;\t----- bird -----\tformula_1",
    "238": " SELECT c.constructorRef, r.url\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nJOIN races r ON cs.raceId = r.raceId\nWHERE r.name = '2009 Singapore Grand Prix' AND cs.position = 1;\t----- bird -----\tformula_1",
    "239": " SELECT p.power_name\nFROM hero_power hp\nJOIN superpower p ON hp.power_id = p.id\nJOIN superhero h ON hp.hero_id = h.id\nWHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": " SELECT c.name, c.nationality, SUM(cs.points) AS total_points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nJOIN seasons s ON r.year = s.year\nWHERE r.name = 'Monaco Grand Prix' AND s.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorId\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": " SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nJOIN races ON qualifying.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Marina Bay Street Circuit'\nAND qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = races.raceId)\nAND races.year = 2008;\t----- bird -----\tformula_1",
    "242": " SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS full_name, drivers.nationality, races.name\nFROM drivers\nJOIN races ON drivers.driverId = races.driverId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers);\t----- bird -----\tformula_1",
    "243": " SELECT COUNT(*)\nFROM results r\nJOIN status s ON r.statusId = s.statusId\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE s.status = '3'\nAND ra.name = 'Canadian Grand Prix'\nAND r.driverId = (\n    SELECT driverId\n    FROM results\n    JOIN status ON results.statusId = status.statusId\n    JOIN races ON results.raceId = races.raceId\n    WHERE status.status = '3'\n    AND races.name = 'Canadian Grand Prix'\n    GROUP BY driverId\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);\t----- bird -----\tformula_1",
    "244": " SELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN (\n    SELECT MIN(time) AS shortest_lap_time\n    FROM results\n) AS min_time ON r.time = min_time.shortest_lap_time\nORDER BY r.points DESC\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": " SELECT circuits.circuitRef, circuits.name, MIN(lapTimes.time) AS lapRecord\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.circuitRef, circuits.name;\t----- bird -----\tformula_1",
    "246": " SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN colour ON hero_attribute.attribute_value = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE attribute.attribute_name = 'eye_colour'\nAND colour.colour = 'Blue'\nAND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": " SELECT superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Blue' AND colour.id = (SELECT id FROM colour WHERE colour = 'Blue')\nAND superhero.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "249": " SELECT superhero_name, height_cm\nFROM superhero\nWHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\nORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "250": " SELECT e.eye_colour_id, COUNT(e.id) AS popularity\nFROM superhero e\nJOIN publisher p ON e.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY e.eye_colour_id\nORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "251": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE sp.power_name = 'Super Strength' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "252": " SELECT publisher_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nAND colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "254": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": " SELECT race.race\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN race ON attribute.attribute_name = 'race'\nWHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nAND hero_attribute.attribute_value = 100\nAND superhero.gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "259": " SELECT \n    ROUND(\n        (\n            (\n                SELECT COUNT(*)\n                FROM superhero\n                WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\n            ) /\n            (\n                SELECT COUNT(*)\n                FROM superhero\n            )\n        ) * 100, 2\n    ) AS percentage_bad_alignment,\n    (\n        SELECT COUNT(*)\n        FROM superhero\n        WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\n        AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\n    ) AS marvel_comics_bad_alignment\n;\t----- bird -----\tsuperhero",
    "260": " SELECT \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS Marvel_Count,\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS DC_Count,\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS Difference;\t----- bird -----\tsuperhero",
    "261": " SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": " SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": " SELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "264": " SELECT superpower.power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nJOIN superhero ON hero_power.hero_id = superhero.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male';\t----- bird -----\tsuperhero",
    "265": " SELECT superhero_name\nFROM superhero\nWHERE height_cm BETWEEN 170 AND 190\nAND eye_colour_id IN (SELECT id FROM colour WHERE colour = 'No Colour');\t----- bird -----\tsuperhero",
    "266": " SELECT c.colour\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN colour c ON a.attribute_name = 'hair_colour' AND c.id = ha.attribute_value\nJOIN race r ON s.race_id = r.id\nWHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": " SELECT \n    ROUND((COUNT(DISTINCT superhero.id) / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) * 100, 2) AS percentage_marvel_comics\nFROM \n    superhero\nJOIN \n    publisher ON superhero.publisher_id = publisher.id\nWHERE \n    superhero.height_cm BETWEEN 150 AND 180\n    AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "268": " SELECT superhero_name\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')\nAND weight_kg > (SELECT MULTIPLY(AVG(weight_kg), 0.79) FROM superhero);\t----- bird -----\tsuperhero",
    "269": " SELECT p.power_name\nFROM hero_power hp\nJOIN superpower p ON hp.power_id = p.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "271": " SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": " SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": " SELECT c.colour AS eye_colour, hc.colour AS hair_colour, sc.colour AS skin_colour\nFROM superhero AS h\nJOIN hero_attribute AS ha ON h.id = ha.hero_id\nJOIN attribute AS a ON ha.attribute_id = a.id\nJOIN colour AS c ON a.attribute_name = 'eye_colour' AND c.id = ha.attribute_value\nJOIN colour AS hc ON a.attribute_name = 'hair_colour' AND hc.id = ha.attribute_value\nJOIN colour AS sc ON a.attribute_name = 'skin_colour' AND sc.id = ha.attribute_value\nJOIN gender AS g ON h.gender_id = g.id\nJOIN publisher AS p ON h.publisher_id = p.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": " SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.hair_colour_id = s.eye_colour_id AND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": " SELECT ROUND((SUM(CASE WHEN skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) / COUNT(CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE NULL END)) * 100, 2) AS percentage_blue_female_superheroes;\t----- bird -----\tsuperhero",
    "276": " SELECT COUNT(*)\nFROM hero_power\nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "277": " SELECT superhero.height_cm\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Black' AND hero_attribute.attribute_name IN ('eye_colour', 'hair_colour');\t----- bird -----\tsuperhero",
    "279": " SELECT superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nAND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "281": " SELECT ROUND(SUM(CASE WHEN gender = 'Female' AND publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) * 100, 2) AS percentage_female_heroes_marvel;\t----- bird -----\tsuperhero",
    "282": " SELECT ABS(SUM(weight_kg) - (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler')) AS weight_difference\nFROM superhero\nWHERE full_name = 'Emil Blonsky';\t----- bird -----\tsuperhero",
    "283": " SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height\nFROM superhero\nGROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "284": " SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": " SELECT ah.attribute_name, ha.attribute_value\nFROM hero_attribute ha\nJOIN superhero h ON ha.hero_id = h.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON hero_attribute.attribute_id = colour.id\nWHERE colour.colour = 'Blue' AND colour.id = (SELECT eye_colour_id FROM superhero WHERE superhero.id = hero_attribute.hero_id)\nAND superhero.hero_id IN (\n    SELECT hero_id\n    FROM hero_attribute\n    JOIN colour ON hero_attribute.attribute_id = colour.id\n    WHERE colour.colour = 'Brown' AND colour.id = (SELECT hair_colour_id FROM superhero WHERE superhero.id = hero_attribute.hero_id)\n);\t----- bird -----\tsuperhero",
    "288": " SELECT publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": " SELECT ROUND((SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) / COUNT(*)) * 100, 2) AS percentage_blue_eyes\nFROM superhero;\t----- bird -----\tsuperhero",
    "290": " SELECT \n    SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS male_to_female_ratio\nFROM \n    superhero;\t----- bird -----\tsuperhero",
    "291": " SELECT c.colour\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN colour c ON a.attribute_name = 'eye_colour' AND c.id = ha.attribute_value\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": " SELECT\n  (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7) -\n  (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1) AS difference;\t----- bird -----\tsuperhero",
    "293": " SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": " SELECT superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": " SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN power ON hero_power.power_id = power.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE power.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": " SELECT \n    SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS DC_Superheroes,\n    SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS Marvel_Superheroes,\n    ABS(SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS Difference\nFROM \n    superhero\n    JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "297": " SELECT u.DisplayName, MAX(u.Reputation) AS Reputation\nFROM users u\nWHERE u.DisplayName IN ('Harlan', 'Jarrod Dixon')\nGROUP BY u.DisplayName\nORDER BY Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": " SELECT DisplayName\nFROM users\nWHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": " SELECT COUNT(DISTINCT users.Id)\nFROM users\nWHERE users.LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": " SELECT u.DisplayName AS OwnerDisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": " SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": " SELECT u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.LastEditorUserId\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": " SELECT COUNT(*)\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": " SELECT p.Body\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": " SELECT AVG(p.Score) AS average_score\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": " SELECT ROUND((COUNT(DISTINCT p.Id) / (SELECT COUNT(*) FROM posts WHERE Score > 5)) * 100, 2) AS percentage_elder_users\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5 AND u.Age > 65;\t----- bird -----\tcodebase_community",
    "307": " SELECT `FavoriteCount`\nFROM `posts`\nWHERE `Id` = (\n  SELECT `PostId`\n  FROM `comments`\n  WHERE `UserId` = 3025\n    AND `CreationDate` = '2014-04-23 20:29:39'\n);\t----- bird -----\tcodebase_community",
    "308": " SELECT \n    CASE \n        WHEN p.ClosedDate IS NULL THEN 'Not well-finished'\n        ELSE 'Well-finished'\n    END AS PostStatus\nFROM \n    posts p\nJOIN \n    comments c ON p.Id = c.PostId\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    u.Id = 23853 AND \n    c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": " SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": " SELECT u.DisplayName\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.Id = '6347';\t----- bird -----\tcodebase_community",
    "311": " SELECT (COUNT(DISTINCT posts.Id) / COUNT(votes.Id)) AS post_to_vote_ratio\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nLEFT JOIN votes ON posts.Id = votes.PostId\nWHERE users.Id = 24;\t----- bird -----\tcodebase_community",
    "312": " SELECT `ViewCount`\nFROM `posts`\nWHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": " SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Score = 17;\t----- bird -----\tcodebase_community",
    "314": " SELECT u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": " SELECT u.DisplayName, u.Reputation\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": " SELECT u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": " SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": " SELECT u.DisplayName\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nJOIN posts p ON v.PostId = p.Id\nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": " SELECT p.Title, c.Text\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nJOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = 'humor'\nGROUP BY p.Id\nORDER BY p.Id;\t----- bird -----\tcodebase_community",
    "320": " SELECT COUNT(DISTINCT UserId)\nFROM badges\nGROUP BY UserId\nHAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "321": " SELECT u.Id, u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nJOIN postHistory ph ON p.Id = ph.PostId\nGROUP BY p.Id\nHAVING COUNT(ph.Id) = 1 AND p.ViewCount >= 1000;\t----- bird -----\tcodebase_community",
    "322": " SELECT \n    ((COUNT(CASE WHEN YEAR(Date) = 2010 THEN 1 END) / COUNT(*)) * 100 - \n    (COUNT(CASE WHEN YEAR(Date) = 2011 THEN 1 END) / COUNT(*)) * 100) AS percentage_difference\nFROM badges\nWHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": " SELECT AVG(upvotes) AS avg_upvotes, AVG(age) AS avg_age\nFROM (\n    SELECT u.Age, v.UpVotes\n    FROM users u\n    JOIN votes v ON u.Id = v.UserId\n    JOIN posts p ON v.PostId = p.Id\n    WHERE p.PostTypeId = 1\n    GROUP BY u.Id\n    HAVING COUNT(p.Id) > 10\n) AS subquery;\t----- bird -----\tcodebase_community",
    "324": " SELECT \n    (SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010) / \n    (SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2011) AS vote_ratio;\t----- bird -----\tcodebase_community",
    "325": " SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": " SELECT p.Title, p.ViewCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky' OR u.DisplayName = 'Noah Snyder'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": " SELECT t.TagName\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nJOIN comments c ON p.Id = c.PostId\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Mark Meckes' AND c.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": " SELECT (\n    SELECT COUNT(*)\n    FROM posts\n    JOIN tags ON posts.Id = tags.ExcerptPostId\n    WHERE tags.TagName = 'r'\n) / (\n    SELECT COUNT(*)\n    FROM posts\n    JOIN users ON posts.OwnerUserId = users.Id\n    WHERE users.DisplayName = 'Community'\n) * 100 AS percentage;\t----- bird -----\tcodebase_community",
    "329": " SELECT \n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Mornington') - \n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Amos') AS ViewCountDifference;\t----- bird -----\tcodebase_community",
    "330": " SELECT AVG(monthly_links) AS average_monthly_links\nFROM (\n  SELECT YEAR(CreationDate) AS year, MONTH(CreationDate) AS month, COUNT(*) AS monthly_links\n  FROM postLinks\n  WHERE YEAR(CreationDate) = 2010\n  GROUP BY year, month\n) AS monthly_links_data\nWHERE EXISTS (\n  SELECT 1\n  FROM posts\n  WHERE posts.Id = postLinks.PostId\n  AND posts.AnswerCount <= 2\n);\t----- bird -----\tcodebase_community",
    "331": " SELECT MIN(votes.CreationDate) AS FirstVoteDate\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": " SELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": " SELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": " SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": " SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY p.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": " SELECT \n    (COUNT(DISTINCT p.Id) / (SELECT COUNT(*) FROM posts WHERE YEAR(p.CreationDate) = 2011)) * 100 AS percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    YEAR(p.CreationDate) = 2011 AND u.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": " SELECT p.ViewCount, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": " SELECT COUNT(*)\nFROM comments\nWHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "339": " SELECT c.Text, u.DisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN users u ON c.UserId = u.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": " SELECT COUNT(DISTINCT p.Id) AS TotalPosts,\n       COUNT(DISTINCT CASE WHEN p.Score > 50 THEN p.Id END) AS HighScorePosts,\n       (COUNT(DISTINCT CASE WHEN p.Score > 50 THEN p.Id END) / COUNT(DISTINCT p.Id)) * 100 AS PercentageHighScore\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "341": " SELECT t.ExcerptPostId, t.WikiPostId\nFROM tags t\nWHERE t.TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": " SELECT u.Reputation, v.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nJOIN votes v ON c.Id = v.PostId\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": " SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": " SELECT COUNT(*)\nFROM comments\nWHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) AND Score = 0;\t----- bird -----\tcodebase_community",
    "345": " SELECT ROUND((COUNT(DISTINCT CASE WHEN c.Score BETWEEN 5 AND 10 AND c.UpVotes = 0 THEN c.UserId END) / COUNT(DISTINCT CASE WHEN c.Score BETWEEN 5 AND 10 THEN c.UserId END)) * 100, 2) AS PercentageOfUsersWithZeroUpVotes;\n\nSELECT COUNT(DISTINCT CASE WHEN c.Score BETWEEN 5 AND 10 AND c.UpVotes = 0 THEN c.UserId END) AS UsersWithZeroUpVotes,\n       COUNT(DISTINCT CASE WHEN c.Score BETWEEN 5 AND 10 THEN c.UserId END) AS TotalUsersWithScoreBetween5And10\nFROM comments c;\t----- bird -----\tcodebase_community",
    "346": " SELECT cards.id, cards.name\nFROM cards\nWHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": " SELECT cards.id, cards.name\nFROM cards\nWHERE cards.borderColor IS NULL AND cards.cardKingdomFoilId IS NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "348": " SELECT cards.name\nFROM cards\nJOIN legalities ON cards.scryfallId = legalities.uuid\nWHERE legalities.status = 'Banned'\nAND legalities.format = 'gladiator'\nAND cards.rarity = 'mythic';\t----- bird -----\tcard_games",
    "349": " SELECT l.status\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE c.type = 'Artifact' AND c.side IS NULL AND s.name = 'Vintage';\t----- bird -----\tcard_games",
    "350": " SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.power = '*' OR cards.power IS NULL\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "351": " SELECT c.id, r.text\nFROM cards c\nJOIN rulings r ON c.id = r.id\nWHERE c.artist = 'Stephen Daniele' AND c.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "352": " SELECT cards.name, cards.artist, COUNT(rulings.uuid) AS ruling_count, cards.isPromo\nFROM cards\nJOIN rulings ON cards.id = rulings.id\nWHERE cards.isPromo = 1\nGROUP BY cards.id\nORDER BY ruling_count DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": " SELECT (COUNT(DISTINCT cards.id) / (SELECT COUNT(*) FROM cards) * 100) AS percentage_chinese_simplified\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE foreign_data.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "354": " SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": " SELECT `borderColor` FROM cards WHERE `name` = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": " SELECT r.text\nFROM cards c\nJOIN rulings r ON c.id = r.id\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": " SELECT (COUNT(*) / (SELECT COUNT(*) FROM cards) * 100) AS percentage_borderless_cards\nFROM cards\nWHERE borderColor = 'borderless';\t----- bird -----\tcard_games",
    "358": " SELECT (COUNT(DISTINCT cards.id) WHERE cards.language = 'French' AND cards.isStorySpotlight = 1) / (COUNT(DISTINCT cards.id) WHERE cards.isStorySpotlight = 1) * 100 AS percentage_french_story_spotlight;\t----- bird -----\tcard_games",
    "359": " SELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": " SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": " SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": " SELECT cards.id, cards.name, cards.artist, cards.asciiName, cards.colors, foreign_data.language\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.uuid\nWHERE cards.originalType = 'Artifact' AND cards.colors LIKE '%B%' AND foreign_data.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": " SELECT cards.convertedManaCost\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.layout = 'normal'\nAND cards.frameVersion = '2003'\nAND cards.borderColor = 'black'\nAND cards.availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": " SELECT \n    (COUNT(id) / (SELECT COUNT(*) FROM cards WHERE isStorylight = 1 AND isTextless = 0)) * 100 AS percentage,\n    id\nFROM \n    cards\nWHERE \n    isStorylight = 1 AND isTextless = 0\nORDER BY \n    id;\t----- bird -----\tcard_games",
    "365": " SELECT COUNT(DISTINCT set_translations.setCode)\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.block = 'Commander'\nAND set_translations.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": " SELECT DISTINCT `types` FROM cards WHERE `language` = 'German';\t----- bird -----\tcard_games",
    "367": " SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": " SELECT COUNT(*)\nFROM cards\nJOIN rulings ON cards.id = rulings.id\nWHERE cards.format = 'premodern'\nAND rulings.text = 'This is a triggered mana ability.'\nAND cards.side IS NULL;\t----- bird -----\tcard_games",
    "369": " SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.type = 'Creature'\nAND cards.layout = 'normal'\nAND cards.borderColor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\nAND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "370": " SELECT language FROM sets WHERE baseSetSize = 180 AND block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": " SELECT ROUND((COUNT(CASE WHEN format = 'commander' AND status = 'legal' AND hasContentWarning = 0 THEN 1 END) / COUNT(CASE WHEN format = 'commander' AND status = 'legal' THEN 1 END)) * 100, 2) AS percentage_no_content_warning;\t----- bird -----\tcard_games",
    "372": " SELECT (COUNT(CASE WHEN cards.power IS NULL OR cards.power = '*' AND foreign_data.language = 'French' THEN 1 END) / COUNT(CASE WHEN cards.power IS NULL OR cards.power = '*' THEN 1 END)) * 100 AS percentage_without_power_in_french;\t----- bird -----\tcard_games",
    "373": " SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": " SELECT (COUNT(*) - COUNT(CASE WHEN layout = 'normal' AND isTextless = 1 THEN 1 END)) / COUNT(*) * 100 AS proportion_without_text_box_normal_layout;\t----- bird -----\tcard_games",
    "375": " SELECT DISTINCT set_translations.language\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "376": " SELECT language FROM set_translations WHERE setCode = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": " SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "378": " SELECT setCode FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "379": " SELECT DISTINCT cards.id\nFROM cards\nJOIN set_translations ON cards.setCode = set_translations.setCode\nWHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Korean';\t----- bird -----\tcard_games",
    "380": " SELECT COUNT(*)\nFROM cards\nJOIN set_translations ON cards.setCode = set_translations.setCode\nWHERE set_translations.translation = 'Hauptset Zehnte Edition'\nAND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": " SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": " SELECT EXISTS(\n  SELECT 1\n  FROM cards\n  JOIN sets ON cards.setCode = sets.code\n  WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\n);\t----- bird -----\tcard_games",
    "383": " SELECT COUNT(DISTINCT setCode)\nFROM sets\nWHERE block = 'Ice Age'\nAND EXISTS (\n    SELECT 1\n    FROM set_translations\n    WHERE set_translations.setCode = sets.code\n    AND set_translations.language = 'Italian'\n);\t----- bird -----\tcard_games",
    "384": " SELECT `isForeignOnly` FROM `sets` WHERE `name` = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": " SELECT COUNT(DISTINCT s.id)\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian' AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": " SELECT DISTINCT cards.artist\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": " SELECT COUNT(*)\nFROM cards\nWHERE setCode = 'Coldsnap'\nAND convertedManaCost > 5\nAND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "388": " SELECT flavorText\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE name = 'Ancestor''s Chosen' AND language = 'Italian';\t----- bird -----\tcard_games",
    "389": " SELECT r.text\nFROM cards c\nJOIN foreign_data fd ON c.id = fd.uuid\nJOIN set_translations st ON c.setCode = st.setCode\nJOIN sets s ON c.setCode = s.code\nJOIN rulings r ON c.id = r.id\nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND r.text IS NOT NULL;\t----- bird -----\tcard_games",
    "390": " SELECT cards.name, cards.asciiName\nFROM cards\nJOIN set_translations ON cards.setCode = set_translations.setCode\nWHERE set_translations.language = 'Italian' AND cards.setCode = 'Coldsnap'\nORDER BY cards.convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "391": " SELECT (SUM(CASE WHEN cards.convertedManaCost = 7 AND cards.setCode = 'Coldsnap' THEN 1 ELSE 0 END) / SUM(CASE WHEN cards.setCode = 'Coldsnap' THEN 1 ELSE 0 END)) * 100 AS percentage;\t----- bird -----\tcard_games",
    "392": " SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_incredibly_powerful\nFROM cards\nWHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": " SELECT format, cards.name\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE legalities.status = 'Banned'\nGROUP BY format\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": " SELECT cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.scryfallId = legalities.uuid\nWHERE cards.edhrecRank = 1 AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "395": " SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.scryfallId = legalities.uuid\nWHERE cards.setCode = 'HOU' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "396": " SELECT name\nFROM sets\nWHERE name NOT LIKE '%Japanese%'\nAND name LIKE '%Korean%';\t----- bird -----\tcard_games",
    "397": " SELECT cards.frameVersion, cards.artist, cards.status\nFROM cards\nWHERE cards.artist = 'Allen Williams' OR cards.status = 'Banned';\t----- bird -----\tcard_games",
    "398": " SELECT bond_type, COUNT(bond_type) AS count\nFROM bond\nGROUP BY bond_type\nORDER BY count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": " SELECT AVG(oxygen_count) AS avg_oxygen_atoms\nFROM (\n  SELECT m.molecule_id, COUNT(a.element) AS oxygen_count\n  FROM molecule m\n  JOIN atom a ON m.molecule_id = a.molecule_id\n  JOIN bond b ON m.molecule_id = b.molecule_id\n  JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n  WHERE b.bond_type = '-'\n  GROUP BY m.molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "400": " SELECT AVG(carcinogenic_count) AS average_carcinogenic_single_bonded\nFROM (\n  SELECT molecule_id, COUNT(bond_id) AS carcinogenic_count\n  FROM bond\n  JOIN molecule ON bond.molecule_id = molecule.molecule_id\n  WHERE molecule.label = '+' AND bond.bond_type = '-'\n  GROUP BY molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "401": " SELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN connected c2 ON c1.atom_id = c2.atom_id AND c1.atom_id2 = c2.atom_id2\nWHERE b.bond_type = '#'\nAND m.label = '+';\t----- bird -----\ttoxicology",
    "402": " SELECT (\n  SELECT COUNT(*)\n  FROM atom\n  JOIN bond ON atom.molecule_id = bond.molecule_id\n  WHERE atom.element = 'c' AND bond.bond_type = '='\n) / (\n  SELECT COUNT(*)\n  FROM bond\n  WHERE bond.bond_type = '='\n) AS percentage_carbon_in_double_bond_molecules;\t----- bird -----\ttoxicology",
    "403": " SELECT a.element AS element1, b.element AS element2\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN atom b ON c.atom_id2 = b.atom_id\nJOIN bond bd ON c.bond_id = bd.bond_id\nWHERE bd.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": " SELECT a1.element AS element1, a2.element AS element2\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": " SELECT a.element, COUNT(*) AS count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'h'\nGROUP BY a.element\nORDER BY count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": " SELECT element, COUNT(element) AS count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY count ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": " SELECT bond_type\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE (atom_id = 'TR004_8' AND atom_id2 = 'TR004_20') OR (atom_id = 'TR004_20' AND atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": " SELECT COUNT(DISTINCT a1.atom_id) + COUNT(DISTINCT a2.atom_id) AS total_atoms\nFROM atom a1\nJOIN bond b ON a1.molecule_id = b.molecule_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id\nJOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2\nWHERE a1.element = 'i' AND a2.element = 's' AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": " SELECT \n    (1 - (\n        SELECT \n            (\n                SELECT \n                    COUNT(DISTINCT molecule_id) \n                FROM \n                    molecule \n                WHERE \n                    label = '+' \n                    AND molecule_id NOT IN (\n                        SELECT \n                            molecule_id \n                        FROM \n                            atom \n                        WHERE \n                            element = 'f'\n                    )\n            )\n            / \n            (\n                SELECT \n                    COUNT(DISTINCT molecule_id) \n                FROM \n                    molecule \n                WHERE \n                    label = '+'\n            )\n        )\n    ) * 100 AS percentage_without_fluorine\n;\t----- bird -----\ttoxicology",
    "410": " SELECT \n    ROUND(\n        (\n            SELECT COUNT(*)\n            FROM molecule\n            WHERE label = '+'\n            AND molecule_id IN (\n                SELECT molecule_id\n                FROM bond\n                WHERE bond_type = '#'\n            )\n        ) /\n        (\n            SELECT COUNT(DISTINCT molecule_id)\n            FROM bond\n            WHERE bond_type = '#'\n        ) * 100\n    ) AS percentage;\t----- bird -----\ttoxicology",
    "411": " SELECT DISTINCT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR000'\nORDER BY a.element ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": " SELECT ROUND(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(bond_id) * 100, 5) AS percentage\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": " SELECT ROUND(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(DISTINCT molecule_id) * 100, 3) AS percentage_carcinogenic;\t----- bird -----\ttoxicology",
    "414": " SELECT ROUND(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(*), 4) AS percentage\nFROM atom\nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": " SELECT molecule.label, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": " SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1;\n\nSELECT CASE\n  WHEN bond_type = 'C-C' THEN 'Yes'\n  ELSE 'No'\nEND AS is_carcinogenic\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nHAVING bond_type = (\n  SELECT bond_type\n  FROM (\n    SELECT bond_type, COUNT(bond_type) AS bond_count\n    FROM bond\n    WHERE molecule_id = 'TR010'\n    GROUP BY bond_type\n    ORDER BY bond_count DESC\n    LIMIT 1\n  ) AS subquery\n);\t----- bird -----\ttoxicology",
    "417": " SELECT molecule_id\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nWHERE bond.bond_type = '-'\nAND molecule.label = '-'\nGROUP BY molecule_id\nORDER BY molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": " SELECT COUNT(*)\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE molecule_id = 'TR009' AND (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": " SELECT b.bond_type, a1.atom_id, a2.atom_id\nFROM bond b\nJOIN atom a1 ON b.molecule_id = a1.molecule_id AND b.bond_id = CONCAT(a1.atom_id, '_', a2.atom_id)\nJOIN atom a2 ON b.molecule_id = a2.molecule_id AND b.bond_id = CONCAT(a2.atom_id, '_', a1.atom_id)\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": " SELECT COUNT(*)\nFROM connected\nWHERE atom_id LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": " SELECT DISTINCT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": " SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+';\t----- bird -----\ttoxicology",
    "423": " SELECT b.bond_id\nFROM bond b\nJOIN atom a1 ON b.molecule_id = a1.molecule_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id\nWHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "424": " SELECT molecule.label\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_type = '='\nGROUP BY molecule.molecule_id\nORDER BY COUNT(bond.bond_id) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": " SELECT AVG(bond_count) AS average_bonds\nFROM (\n  SELECT COUNT(bond_id) AS bond_count\n  FROM bond\n  JOIN atom ON bond.molecule_id = atom.molecule_id\n  WHERE atom.element = 'i'\n  GROUP BY atom.atom_id\n) AS iodine_bonds;\t----- bird -----\ttoxicology",
    "426": " SELECT DISTINCT a.element\nFROM atom a\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.atom_id IS NULL;\t----- bird -----\ttoxicology",
    "427": " SELECT a.atom_id, a.element\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE b.molecule_id = 'TR041' AND b.bond_type = '#' AND c.bond_id = b.bond_id;\t----- bird -----\ttoxicology",
    "428": " SELECT a.element\nFROM atom a\nJOIN bond b ON a.atom_id = b.atom_id\nWHERE b.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": " SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": " SELECT ROUND(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond_id), 5) AS proportion_carcinogenic\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "431": " SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE b.bond_type = '#'\nAND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": " SELECT \n    (SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT atom.atom_id)) * 100 AS chlorine_percentage\nFROM \n    atom\nJOIN \n    bond ON atom.molecule_id = bond.molecule_id\nWHERE \n    bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "433": " SELECT b.element, a2.element\nFROM bond b\nJOIN atom a ON b.molecule_id = a.molecule_id AND b.bond_id = a.atom_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id AND b.bond_id = a2.atom_id2\nWHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": " SELECT \n    (SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT molecule_id)) * 100 AS percentage\nFROM \n    atom\nJOIN \n    molecule ON atom.molecule_id = molecule.molecule_id\nWHERE \n    molecule.label = '+';\t----- bird -----\ttoxicology",
    "435": " SELECT a.element, COUNT(*) as toxic_count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 1) = '4'\nGROUP BY a.element;\t----- bird -----\ttoxicology",
    "436": " SELECT \n    ROUND(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(*), 2) AS ratio,\n    CASE \n        WHEN ROUND(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(*), 2) > 0 THEN '+'\n        ELSE '-'\n    END AS label\nFROM \n    atom\nWHERE \n    molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "437": " SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5 AND m.label = '-';\t----- bird -----\ttoxicology",
    "438": " SELECT COUNT(*)\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": " SELECT CDSCode\nFROM schools\nWHERE Enrollment (K-12) + Enrollment (Ages 5-17) > 500;\t----- bird -----\tcalifornia_schools",
    "440": " SELECT MAX(`FRPM Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS `Highest Eligible Free Rate`\nFROM frpm\nJOIN satscores ON frpm.`CDSCode` = satscores.`cds`\nWHERE (`NumGE1500` / `NumTstTakr`) > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": " SELECT s.CDSCode, s.CharterNum\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE sc.AvgScrWrite > 499\nORDER BY sc.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": " SELECT s.SchoolName, s.Street, s.StreetAbr, s.City, s.Zip, s.State\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE ABS(f.Enrollment (K-12) - f.Enrollment (Ages 5-17)) > 30;\t----- bird -----\tcalifornia_schools",
    "443": " SELECT s.SchoolName\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE f.`Percent (%) Eligible FRPM (K-12)` > 0.1\nAND sc.`NumGE1500` >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": " SELECT s.FundingType\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Riverside' AND ss.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "445": " SELECT s.SchoolName, s.Street, s.City, s.State, s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Monterey'\nAND f.FRPMCount (Ages 5-17) > 800;\t----- bird -----\tcalifornia_schools",
    "446": " SELECT s.School, s.Phone AS CommunicationNumber, ss.AvgScrWrite\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.OpenDate > '1991-01-01' AND (s.ClosedDate < '2000-01-01' OR s.ClosedDate IS NULL)\nORDER BY ss.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "447": " SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.FundingType = 'Locally Funded'\nAND (f.Enrollment (K-12) - f.Enrollment (Ages 5-17)) > (\n    SELECT AVG(f2.Enrollment (K-12) - f2.Enrollment (Ages 5-17))\n    FROM frpm f2\n    JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n    WHERE s2.FundingType = 'Locally Funded'\n);\t----- bird -----\tcalifornia_schools",
    "448": " SELECT s.CDSCode, (frpm.FreeMealCount (K-12) / frpm.Enrollment (K-12)) AS EligibleFreeRate\nFROM schools s\nJOIN frpm ON s.CDSCode = frpm.CDSCode\nORDER BY frpm.Enrollment (K-12) DESC\nLIMIT 2 OFFSET 8;\t----- bird -----\tcalifornia_schools",
    "449": " SELECT s.CDSCode, (frpm.FRPMCount(K-12) / frpm.Enrollment(K-12)) AS EligibleFreeOrReducedPriceMealRate\nFROM schools s\nJOIN frpm ON s.CDSCode = frpm.CDSCode\nWHERE s.Charter = 66\nORDER BY frpm.FRPMCount(K-12) DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": " SELECT \n    s.Street, \n    s.City, \n    s.Zip, \n    s.State\nFROM \n    schools s\nJOIN \n    satscores sc ON s.CDSCode = sc.cds\nORDER BY \n    (sc.NumGE1500 / sc.NumTstTakr) ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": " SELECT CONCAT(AdmFName1, ' ', AdmLName1) AS AdminFullName\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "452": " SELECT AVG(NumTstTakr) AS AvgTestTakers\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.OpenDate >= '1980-01-01' AND schools.OpenDate <= '1980-12-31' AND schools.OpenDate IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "453": " SELECT s.Phone\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.District Name = 'Fresno Unified'\nORDER BY ss.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": " SELECT s.sname\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE sc.AvgScrRead IS NOT NULL\nAND s.Virtual = 'F'\nAND s.CDSCode IN (\n  SELECT s2.CDSCode\n  FROM schools s2\n  JOIN satscores sc2 ON s2.CDSCode = sc2.cds\n  WHERE sc2.AvgScrRead IS NOT NULL\n  AND s2.Virtual = 'F'\n  ORDER BY sc2.AvgScrRead DESC\n  LIMIT 5\n)\nGROUP BY s.CDSCode\nORDER BY sc.AvgScrRead DESC;\t----- bird -----\tcalifornia_schools",
    "455": " SELECT s.sname, AVG(ss.AvgScrWrite) AS AvgWritingScore\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.AdmFName1 = 'Ricci Ulrich'\nGROUP BY s.sname;\t----- bird -----\tcalifornia_schools",
    "456": " SELECT s.cds, s.enroll12\nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nWHERE s.rtype = 'State Special Schools' AND s.enroll12 IS NOT NULL\nORDER BY s.enroll12 DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": " SELECT COUNT(DISTINCT schools.CDSCode) / 12 AS MonthlyAverageSchoolsOpened\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE frpm.CountyName = 'Alameda'\nAND schools.StatusType = 'Elementary School District'\nAND YEAR(schools.OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": " SELECT \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 54) / \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 52) AS ratio;\t----- bird -----\tcalifornia_schools",
    "459": " SELECT s.SchoolName, s.Street\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nORDER BY sc.AvgScrMath DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": " SELECT COUNT(*)\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Los Angeles'\nAND schools.Charter = 0\nAND frpm.`Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": " SELECT COUNT(*)\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.StatusType = 'SSS'\nAND schools.County = 'Fremont'\nAND frpm.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "462": " SELECT s.SchoolName, (frpm.FRPMCount (Ages 5-17) / frpm.Enrollment (Ages 5-17)) * 100 AS Percent_Eligible_FRPM_Ages_5_17\nFROM schools s\nJOIN frpm ON s.CDSCode = frpm.CDSCode\nWHERE s.County = 'Los Angeles' AND s.GSoffered = 'K-9' AND s.StatusType = 'Open' AND s.LastUpdate = (SELECT MAX(LastUpdate) FROM schools WHERE CDSCode = s.CDSCode);\t----- bird -----\tcalifornia_schools",
    "463": " SELECT COUNT(*) AS VirtualSchools\nFROM schools\nWHERE State = 'CA' AND (City = 'San Diego' OR City = 'Santa Barbara') AND Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "464": " SELECT gs.GSoffered\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nJOIN frpm f ON s.CDSCode = f.CDSCode\nORDER BY s.Longitude DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": " SELECT \n    COUNT(DISTINCT schools.City) AS NumberOfCities,\n    COUNT(DISTINCT schools.CDSCode) AS NumberOfSchools\nFROM \n    schools\nJOIN \n    frpm ON schools.CDSCode = frpm.CDSCode\nWHERE \n    schools.Magnet = 1 AND \n    schools.GSserved = 'K-8' AND \n    frpm.NSLP_Provision_Status = 'Multiple Provision Types';\t----- bird -----\tcalifornia_schools",
    "466": " SELECT f.DistrictCode, (frpm.FreeMealCount(K-12) / frpm.Enrollment(K-12)) * 100 AS Percent_Eligible_Free_K12\nFROM schools s\nJOIN frpm ON s.CDSCode = frpm.CDSCode\nWHERE s.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": " SELECT `AdmEmail1`, `AdmEmail2`, `AdmEmail3`\nFROM schools\nWHERE `County` = 'San Bernardino'\nAND `City` = 'San Bernardino'\nAND `StatusType` = 'Public'\nAND `SOC` = 62\nAND `DOC` = 54\nAND `OpenDate` BETWEEN '2009-01-01' AND '2010-12-31';\t----- bird -----\tcalifornia_schools",
    "468": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A3 = 'POPLATEK PO OBRATU' AND account.frequency = 'issuance after transaction';\t----- bird -----\tfinancial",
    "469": " SELECT COUNT(DISTINCT district_id)\nFROM district\nJOIN client ON district.district_id = client.district_id\nWHERE client.gender = 'F' AND district.A11 BETWEEN 6000 AND 10000;\t----- bird -----\tfinancial",
    "470": " SELECT COUNT(DISTINCT client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'M'\nAND A3 = 'North Bohemia'\nAND A11 > 8000;\t----- bird -----\tfinancial",
    "471": " SELECT account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nWHERE gender = 'F'\nORDER BY birth_date ASC\nLIMIT 1;\n\nSELECT (MAX(A11) - MIN(A11)) AS gap\nFROM district;\t----- bird -----\tfinancial",
    "472": " SELECT account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nORDER BY birth_date DESC, A11 DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "473": " SELECT account_id, MIN(amount) AS lowest_approved_amount\nFROM loan\nWHERE YEAR(date) = 1997 AND status = 'approved'\nGROUP BY account_id\nHAVING EXISTS (\n    SELECT 1\n    FROM trans\n    WHERE trans.account_id = loan.account_id\n    AND type = 'POPLATEK TYDNE'\n);\t----- bird -----\tfinancial",
    "474": " SELECT account_id, MAX(amount) AS highest_approved_amount\nFROM loan\nWHERE duration > 12 AND YEAR(date) = 1993\nGROUP BY account_id\nORDER BY highest_approved_amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN client ON account.district_id = client.district_id\nWHERE client.gender = 'F'\nAND client.birth_date < '1950-01-01'\nAND account.district_id = (SELECT district_id FROM district WHERE A2 = 'Sokolov');\t----- bird -----\tfinancial",
    "476": " SELECT district.A2\nFROM client\nJOIN account ON client.client_id = account.client_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": " SELECT \n    (COUNT(DISTINCT CASE WHEN gender = 'M' THEN client_id END) / COUNT(DISTINCT client_id)) * 100 AS male_percentage\nFROM \n    client\nJOIN \n    district ON client.district_id = district.district_id\nWHERE \n    district.A3 = 'south Bohemia'\n    AND district.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia');\t----- bird -----\tfinancial",
    "478": " SELECT \n    (\n        (\n            (\n                (\n                    (\n                        (\n                            (\n                                (\n                                    (\n                                        (\n                                            (\n                                                (\n                                                    (\n                                                        (\n                                                            (\n                                                                (\n                                                                    (\n                                                                        (\n                                                                            (\n                                                                                (\n                                                                                    (\n                                                                                        (\n                                                                                            (\n                                                                                                (\n                                                                                                    (\n                                                                                                        (\n                                                                                                            (\n                                                                                                                (\n                                                                                                                    (\n                                                                                                                        (\n                                                                                                                            (\n                                                                                                                                (\n                                                                                                                                    (\n                                                                                                                                        (\n                                                                                                                                            (\n                                                                                                                                                (\n                                                                                                                                                    (\n                                                                                                                                                        (\n                                                                                                                                                            (\n                                                                                                                                                                (\n                                                                                                                                                                    (\n                                                                                                                                                                        (\n                                                                                                                                                                            (\n                                                                                                                                                                                (\n                                                                                                                                                                                    (\n                                                                                                                                                                                        (\n                                                                                                                                                                                            (\n                                                                                                                                                                                                (\n                                                                                                                                                                                                    (\n                                                                                                                                                                                                        (\n                                                                                                                                                                                                            (\n                                                                                                                                                                                                                (\n                                                                                                                                                                                                                    (\n                                                                                                                                                                                                                \t----- bird -----\tfinancial",
    "479": " SELECT \n    (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 AS percentage_paid_no_issue\nFROM \n    loan l;\t----- bird -----\tfinancial",
    "480": " SELECT \n    (SUM(CASE WHEN l.amount < 100000 AND l.status = 'C' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_running_no_issue\nFROM \n    loan l;\t----- bird -----\tfinancial",
    "481": " SELECT \n    d.district_id,\n    ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM \n    district d\nJOIN \n    account a ON d.district_id = a.district_id\nJOIN \n    loan l ON a.account_id = l.account_id\nWHERE \n    l.status = 'D';\t----- bird -----\tfinancial",
    "482": " SELECT district.district_id, COUNT(client.client_id) AS female_account_holders\nFROM district\nJOIN client ON district.district_id = client.district_id\nWHERE client.gender = 'F'\nGROUP BY district.district_id\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": " SELECT COUNT(DISTINCT loan.loan_id)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE loan.amount >= 250000\nAND account.frequency = 'POPLATEK MESICNE'\nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "484": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = '1';\t----- bird -----\tfinancial",
    "485": " SELECT COUNT(DISTINCT client_id)\nFROM client\nWHERE gender = 'M'\nAND district_id = (\n  SELECT district_id\n  FROM (\n    SELECT district_id, COUNT(*) AS crime_count\n    FROM client\n    WHERE A15 = 1995\n    GROUP BY district_id\n    ORDER BY crime_count DESC\n    LIMIT 2\n  ) AS subquery\n  ORDER BY crime_count DESC\n  LIMIT 1\n);\t----- bird -----\tfinancial",
    "486": " SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = '1';\t----- bird -----\tfinancial",
    "488": " SELECT COUNT(DISTINCT client_id)\nFROM client\nWHERE gender = 'M'\nAND district_id = (\n  SELECT district_id\n  FROM (\n    SELECT district_id, COUNT(*) AS crime_count\n    FROM client\n    WHERE A15 = 1995\n    GROUP BY district_id\n    ORDER BY crime_count DESC\n    LIMIT 2\n  ) AS subquery\n  ORDER BY crime_count DESC\n  LIMIT 1\n);\t----- bird -----\tfinancial",
    "489": " SELECT account_id\nFROM trans\nWHERE type = 'VYBER KARTOU'\nAND YEAR(date) = 1998\nAND amount < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND YEAR(date) = 1998);\t----- bird -----\tfinancial",
    "490": " SELECT account.type\nFROM account\nJOIN client ON account.district_id = client.district_id\nJOIN district ON account.district_id = district.district_id\nWHERE account.type != 'OWNER'\nAND (SELECT AVG(A11) FROM district) BETWEEN 8000 AND 9000;\t----- bird -----\tfinancial",
    "491": " SELECT AVG(A15) AS average_crimes\nFROM district\nWHERE A15 > 4000\nAND district_id IN (\n    SELECT DISTINCT district_id\n    FROM account\n    WHERE YEAR(date) >= 1997\n);\t----- bird -----\tfinancial",
    "492": " SELECT t.date, t.amount, t.balance, t.k_symbol\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nWHERE c.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": " SELECT \n    (COUNT(DISTINCT client.client_id) / (SELECT COUNT(DISTINCT client.client_id) FROM client JOIN account ON client.client_id = account.client_id JOIN district ON account.district_id = district.district_id WHERE district.A11 > 10000)) * 100 AS percentage_women\nFROM \n    client\nJOIN \n    account ON client.client_id = account.client_id\nJOIN \n    district ON account.district_id = district.district_id\nWHERE \n    client.gender = 'F' AND district.A11 > 10000;\t----- bird -----\tfinancial",
    "494": " SELECT \n    (SUM(CASE WHEN YEAR(date) = 1997 THEN amount ELSE 0 END) - SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END)) / SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END) * 100 AS growth_rate\nFROM \n    loan\nJOIN \n    client ON loan.account_id = client.client_id\nWHERE \n    client.gender = 'M';\t----- bird -----\tfinancial",
    "495": " SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit\nFROM trans\nWHERE account_id = 3 AND type = 'debit' AND k_symbol = '3539';\t----- bird -----\tfinancial",
    "496": " SELECT \n    (COUNT(DISTINCT client_id) / (SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'M' AND client_id IN (SELECT client_id FROM disp WHERE type = 'POPLATEK TYDNE'))) * 100 AS percentage_male_clients_weekly_statements;\t----- bird -----\tfinancial",
    "497": " SELECT account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, client.A11 ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "498": " SELECT AVG(loan.amount) AS average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN trans ON account.account_id = trans.account_id\nWHERE loan.status = 'C' AND trans.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": " SELECT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ct ON d.disp_id = ct.disp_id\nWHERE ct.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial"
}