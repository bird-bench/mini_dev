{
    "0": " SELECT \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS EUR_CZK_Ratio;\t----- bird -----\tdebit_card_specializing",
    "1": " SELECT c.Segment, SUM(ym.Consumption) AS TotalConsumption\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'LAM' AND SUBSTR(ym.Date, 1, 4) = '2012'\nGROUP BY c.Segment\nORDER BY TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": " SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth\nWHERE Date BETWEEN '201301' AND '201312'\nAND Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "3": " SELECT \n    SUM(CASE WHEN Currency = 'CZK' THEN Consumption ELSE 0 END) AS CZK_Consumption,\n    SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) AS EUR_Consumption,\n    SUM(CASE WHEN Currency = 'CZK' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) AS Consumption_Difference\nFROM \n    customers\nJOIN \n    transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE \n    strftime('%Y', Date) = '2012'\nGROUP BY \n    Currency;\t----- bird -----\tdebit_card_specializing",
    "4": " SELECT Date, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nGROUP BY Date\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": " SELECT Date, MAX(Consumption) AS PeakConsumption\nFROM yearmonth\nWHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\nAND Date BETWEEN '201301' AND '201312'\nGROUP BY Date\nORDER BY PeakConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": " SELECT\n    (\n        SELECT AVG(Consumption)\n        FROM yearmonth\n        WHERE Date BETWEEN '201301' AND '201312'\n        AND CustomerID IN (\n            SELECT CustomerID\n            FROM customers\n            WHERE Currency = 'CZK'\n            AND Segment = 'SME'\n            ORDER BY Consumption\n            LIMIT 1\n        )\n    ) - (\n        SELECT AVG(Consumption)\n        FROM yearmonth\n        WHERE Date BETWEEN '201301' AND '201312'\n        AND CustomerID IN (\n            SELECT CustomerID\n            FROM customers\n            WHERE Currency = 'CZK'\n            AND Segment = 'LAM'\n            ORDER BY Consumption\n            LIMIT 1\n        )\n    ) AS SME_LAM_diff,\n    (\n        SELECT AVG(Consumption)\n        FROM yearmonth\n        WHERE Date BETWEEN '201301' AND '201312'\n        AND CustomerID IN (\n            SELECT CustomerID\n            FROM customers\n            WHERE Currency = 'CZK'\n            AND Segment = 'LAM'\n            ORDER BY Consumption\n            LIMIT 1\n        )\n    ) - (\n        SELECT AVG(Consumption)\n        FROM yearmonth\n        WHERE Date BETWEEN '201301' AND '201312'\n        AND CustomerID IN (\n            SELECT CustomerID\n            FROM customers\n            WHERE Currency = 'CZK'\n            AND Segment = 'KAM'\n            ORDER BY Consumption\n            LIMIT 1\n        )\n    ) AS LAM_KAM_diff,\n    (\n        SELECT AVG(Consumption)\n        FROM yearmonth\n        WHERE Date BETWEEN '201301' AND '201312'\n        AND CustomerID IN (\n            SELECT CustomerID\n            FROM customers\n            WHERE Currency = 'CZK'\n            AND Segment = 'KAM'\n            ORDER BY Consumption\n            LIMIT 1\n        )\n    ) - (\n\t----- bird -----\tdebit_card_specializing",
    "7": " SELECT Segment, \n       ROUND(((SUM(CASE WHEN strftime('%Y', Date) = '2013' THEN Consumption ELSE 0 END) - \n               SUM(CASE WHEN strftime('%Y', Date) = '2012' THEN Consumption ELSE 0 END)) / \n               SUM(CASE WHEN strftime('%Y', Date) = '2013' THEN Consumption ELSE 0 END)) * 100), 2) AS PercentageIncrease\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Segment IN ('SME', 'LAM', 'KAM')\nGROUP BY Segment\nORDER BY PercentageIncrease DESC;\t----- bird -----\tdebit_card_specializing",
    "8": " SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\nAND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": " SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS more_discount_gasstations_CZE_than_SVK;\t----- bird -----\tdebit_card_specializing",
    "10": " SELECT\n    (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Currency = 'CZK') -\n    (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Currency = 'EUR') AS Difference;\t----- bird -----\tdebit_card_specializing",
    "11": " SELECT \n    (\n        SELECT COUNT(DISTINCT CustomerID) \n        FROM transactions_1k \n        WHERE CustomerID IN (\n            SELECT CustomerID \n            FROM customers \n            WHERE Segment = 'LAM'\n        ) \n        AND Amount > 46.73\n    ) * 100.0 / (\n        SELECT COUNT(DISTINCT CustomerID) \n        FROM customers \n        WHERE Segment = 'LAM'\n    ) AS Percentage_LAM_Customers_Consumed_More_Than_46_73;\t----- bird -----\tdebit_card_specializing",
    "12": " SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE Date LIKE '201202%')) AS percentage\nFROM \n    yearmonth\nWHERE \n    Date LIKE '201202%' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "13": " SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "14": " SELECT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE ym.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "15": " SELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE t.Date LIKE '201306%';\t----- bird -----\tdebit_card_specializing",
    "16": " SELECT COUNT(DISTINCT CustomerID)\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'EUR'\nAND Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": " SELECT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": " SELECT Date, Time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "19": " SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE'\nAND transactions_1k.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": " SELECT Currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE Date = '2012-08-24' AND Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": " SELECT Segment\nFROM customers\nWHERE CustomerID IN (\n    SELECT CustomerID\n    FROM transactions_1k\n    WHERE Date = '2012-08-23' AND Time = '21:20:00'\n);\t----- bird -----\tdebit_card_specializing",
    "22": " SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-26'\nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\nAND gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "23": " SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": " SELECT \n    (COUNT(DISTINCT t.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25')) AS PercentageEUR\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nWHERE \n    t.Date = '2012-08-25' AND c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "25": " SELECT \n    (SELECT Consumption FROM yearmonth WHERE Date = '2012-08-25' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Amount = 634.8 AND Date = '2012-08-25')) AS consumption_2012,\n    (SELECT Consumption FROM yearmonth WHERE Date = '2013-08-25' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Amount = 634.8 AND Date = '2012-08-25')) AS consumption_2013,\n    ((consumption_2012 - consumption_2013) / consumption_2012) AS decrease_rate;\t----- bird -----\tdebit_card_specializing",
    "26": " SELECT \n    (SELECT COUNT(*) FROM customers WHERE Segment = 'premium' AND Currency = 'SVK') * 100.0 / \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'SVK') AS percentage_premium_in_svk;\t----- bird -----\tdebit_card_specializing",
    "27": " SELECT SUM(t.Amount) AS TotalAmountSpent\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.CustomerID = 38508;\n\nSELECT SUM(t.Amount) AS January2012AmountSpent\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.CustomerID = 38508 AND t.Date LIKE '201201%';\t----- bird -----\tdebit_card_specializing",
    "28": " SELECT \n    c.CustomerID,\n    c.Currency,\n    SUM(t.Amount * t.Price) AS TotalSpent,\n    (SUM(t.Price * t.Amount) / SUM(t.Amount)) AS AvgPricePerItem\nFROM \n    customers c\nJOIN \n    transactions_1k t ON c.CustomerID = t.CustomerID\nGROUP BY \n    c.CustomerID\nORDER BY \n    TotalSpent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": " SELECT t.CustomerID, ym.Date, ym.Consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID AND ym.Date = '201208'\nWHERE t.ProductID = 5\nAND (t.Price / t.Amount) > 29.00;\t----- bird -----\tdebit_card_specializing",
    "30": " SELECT major_name FROM major WHERE major_name = 'Angela Sanders';\t----- bird -----\tstudent_club",
    "31": " SELECT COUNT(*)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE event.event_name = 'Women''s Soccer' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": " SELECT COUNT(DISTINCT event_id)\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE event.type = 'Meeting'\nGROUP BY event_id\nHAVING COUNT(DISTINCT attendance.link_to_member) > 10;\t----- bird -----\tstudent_club",
    "33": " SELECT event_name\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE event.type != 'fundraiser'\nGROUP BY event.event_id\nHAVING COUNT(attendance.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "34": " SELECT SUM(amount) FROM income WHERE source = 'funds received' AND position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": " SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'IL';\t----- bird -----\tstudent_club",
    "36": " SELECT expense.expense_id, expense.approved\nFROM expense\nJOIN attendance ON expense.link_to_member = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08' AND expense.approved = 'True';\t----- bird -----\tstudent_club",
    "37": " SELECT AVG(expense.cost) AS average_cost\nFROM expense\nJOIN attendance ON expense.link_to_member = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND (strftime('%m', expense.expense_date) = '09' OR strftime('%m', expense.expense_date) = '10');\t----- bird -----\tstudent_club",
    "38": " SELECT SUM(CASE WHEN YEAR(event_date) = 2019 THEN spent ELSE 0 END) - SUM(CASE WHEN YEAR(event_date) = 2020 THEN spent ELSE 0 END) AS difference_spent\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.type = 'Student_Club';\t----- bird -----\tstudent_club",
    "39": " SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": " SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": " SELECT event_status\nFROM event\nJOIN expense ON event.event_id = expense.link_to_event\nWHERE expense.expense_description = 'Post Cards, Posters'\nAND expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": " SELECT major_name FROM major WHERE major_name = 'Brent Thomason';\t----- bird -----\tstudent_club",
    "43": " SELECT COUNT(*)\nFROM member\nWHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business')\nAND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": " SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "45": " SELECT date_received\nFROM income\nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues';\t----- bird -----\tstudent_club",
    "46": " SELECT COUNT(*)\nFROM (\n    SELECT\n        (SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN amount ELSE 0 END) / NULLIF(SUM(CASE WHEN event_name = 'October Meeting' THEN amount ELSE 0 END), 0)) AS ratio\n    FROM budget\n    WHERE category = 'Advertisement'\n) AS subquery\nWHERE ratio > 1;\t----- bird -----\tstudent_club",
    "47": " SELECT SUM(expense.cost) AS total_pizza_cost\nFROM expense\nWHERE expense.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": " SELECT COUNT(DISTINCT city) FROM zip_code WHERE state = 'Virginia' AND county = 'Orange';\t----- bird -----\tstudent_club",
    "49": " SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": " SELECT COUNT(*)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": " SELECT event_name, MAX(spent / amount) AS spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nGROUP BY event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": " SELECT MAX(spent) AS highest_budget_spend FROM budget;\t----- bird -----\tstudent_club",
    "54": " SELECT SUM(spent) AS total_food_spent\nFROM budget\nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": " SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": " SELECT member.first_name, member.last_name\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN budget ON attendance.link_to_event = budget.link_to_event\nWHERE budget.event_status = 'Yearly Kickoff'\nAND budget.link_to_member = member.member_id;\t----- bird -----\tstudent_club",
    "57": " SELECT event_name, MIN(cost) AS lowest_cost\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nGROUP BY event_name\nORDER BY lowest_cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": " SELECT (SUM(cost) FILTER (WHERE event_name = 'Yearly Kickoff') / SUM(cost)) * 100 AS percentage_cost_yearly_kickoff;\t----- bird -----\tstudent_club",
    "59": " SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": " SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": " SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": " SELECT EXISTS(\n    SELECT 1\n    FROM attendance\n    JOIN event ON attendance.link_to_event = event.event_id\n    JOIN member ON attendance.link_to_member = member.member_id\n    WHERE event.event_name = 'Women''s Soccer'\n    AND member.first_name = 'Maya'\n    AND member.last_name = 'Mclean'\n);\t----- bird -----\tstudent_club",
    "63": " SELECT expense.cost\nFROM expense\nJOIN event ON expense.link_to_budget = budget.budget_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": " SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed' AND budget.remaining < 0\nORDER BY budget.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": " SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN attendance ON expense.link_to_member = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense_description;\t----- bird -----\tstudent_club",
    "66": " SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker')\nGROUP BY category\nORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": " SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": " SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "69": " SELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison');\t----- bird -----\tstudent_club",
    "70": " SELECT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": " SELECT m.last_name, m.department, m.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": " SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0;\t----- bird -----\tstudent_club",
    "73": " SELECT ROUND((COUNT(CASE WHEN amount = 50 THEN 1 END) * 100.0) / COUNT(*), 2) AS percentage\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE t_shirt_size = 'Medium' AND position = 'Member';\t----- bird -----\tstudent_club",
    "74": " SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": " SELECT m.first_name, m.last_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nJOIN (\n    SELECT AVG(cost) AS avg_cost\n    FROM expense\n) AS avg_expense ON e.cost > avg_expense.avg_cost;\t----- bird -----\tstudent_club",
    "76": " SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": " SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "78": " SELECT \n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS InPatientMale,\n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS OutPatientMale,\n    (SELECT (CAST(((SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS REAL) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-')) * 100) - 100 AS DeviationPercentage\n;\t----- bird -----\tthrombosis_prediction",
    "79": " SELECT (CAST(COUNT(CASE WHEN SEX = 'F' AND Birthday > '1930' THEN 1 END) AS REAL) / CAST(COUNT(CASE WHEN SEX = 'F' THEN 1 END) AS REAL)) * 100 AS percentage_female_born_after_1930 FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "80": " SELECT \n    (SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SLE' AND KCT = '+') AS Outpatient,\n    (SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SLE' AND KCT = '-') AS Inpatient,\n    (SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SLE' AND KCT = '+') / (SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SLE' AND KCT = '-') AS Ratio\n;\t----- bird -----\tthrombosis_prediction",
    "81": " SELECT Diagnosis, Date FROM Laboratory WHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": " SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": " SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": " SELECT Patient.ID, Patient.SEX, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": " SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND YEAR(Description) = 1997 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": " SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'\nAND Thrombosis = 1\nAND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "87": " SELECT Symptoms, Diagnosis\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Birthday = (SELECT MAX(Birthday) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "88": " SELECT Laboratory.Date AS 'Lab Work Date',\n       (SUBTRACT(year(`First Date`), year(Patient.Birthday))) AS 'Age at Arrival'\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Diagnosis = 'SJS'\nORDER BY Patient.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": " SELECT \n    (SELECT COUNT(*) FROM Patient WHERE UA <= '8.0' AND SEX = 'M') AS Male_Abnormal_UA,\n    (SELECT COUNT(*) FROM Patient WHERE UA <= '6.5' AND SEX = 'F') AS Female_Abnormal_UA,\n    (SELECT CAST(Male_Abnormal_UA AS REAL) / Female_Abnormal_UA) AS Ratio\nFROM \n    (SELECT \n        (SELECT COUNT(*) FROM Patient WHERE UA <= '8.0' AND SEX = 'M') AS Male_Abnormal_UA,\n        (SELECT COUNT(*) FROM Patient WHERE UA <= '6.5' AND SEX = 'F') AS Female_Abnormal_UA\n    ) AS Subquery;\t----- bird -----\tthrombosis_prediction",
    "90": " SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE YEAR(Examination.`Examination Date`) BETWEEN 1990 AND 1993\nAND YEAR(Patient.Birthday) < 1990;\t----- bird -----\tthrombosis_prediction",
    "91": " SELECT\n    (strftime('%Y', 'now') - strftime('%Y', `Examination Date`)) AS Age,\n    Diagnosis\nFROM\n    Examination\nWHERE\n    HGB = (SELECT MAX(HGB) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "92": " SELECT `aCL IgM`\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE'\nAND Patient.Description = '1994-02-19'\nAND Examination.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": " SELECT ((SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` END) - SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO` END)) / SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` END)) * 100 AS Decrease_Rate\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": " SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\nAND Examination.GPT > 30\nAND Examination.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": " SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Thrombosis = 2\nAND `ANA Pattern` = 'S'\nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-'\nAND l.Date LIKE '1991-10%'\nAND l.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": " SELECT AVG(Examination.ALB)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.SEX = 'F' AND Examination.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": " SELECT COUNT(*) FROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": " SELECT ROUND((SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) / COUNT(*)) * 100, 2) AS percentage\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": " SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM Patient\n        WHERE ID = 57266\n    )\n    AND EXISTS (\n        SELECT 1\n        FROM Laboratory\n        WHERE ID = 57266\n        AND Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = 57266)\n        AND (SEX = 'M' AND UA > 8.0 OR SEX = 'F' AND UA > 6.5)\n    )\n    THEN 'Yes'\n    ELSE 'No'\nEND AS IsUricAcidNormal;\t----- bird -----\tthrombosis_prediction",
    "101": " SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": " SELECT p.Birthday, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": " SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": " SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Patient.ID) AS Patient_IDs\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.`T-BIL` >= 2.0\nGROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": " SELECT AVG(YEAR(NOW()) - YEAR(Birthday)) AS average_age\nFROM Patient\nWHERE SEX = 'M' AND `T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.Birthday BETWEEN '1936-01-01' AND '1956-12-31'\nAND Patient.SEX = 'M'\nAND Examination.`aCL IgG` > 250;\t----- bird -----\tthrombosis_prediction",
    "108": " SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": " SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": " SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Diagnosis = 'SLE' AND Examination.HGB BETWEEN 10 AND 17\nORDER BY Patient.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": " SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (SELECT COUNT(Laboratory.ID) FROM Laboratory WHERE Laboratory.ID = Patient.ID) > 2\nAND (SELECT HCT FROM Laboratory WHERE Laboratory.ID = Patient.ID) >= 52;\t----- bird -----\tthrombosis_prediction",
    "112": " SELECT\n    (SELECT COUNT(*) FROM Examination WHERE PLT < 100) AS LowerThanNormalRange,\n    (SELECT COUNT(*) FROM Examination WHERE PLT > 400) AS HigherThanNormalRange;\t----- bird -----\tthrombosis_prediction",
    "113": " SELECT p.ID, p.SEX, p.Birthday, e.ID AS ExaminationID, e.`Examination Date`, e.PLT\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON e.ID = l.ID\nWHERE YEAR(l.Date) = 1984\nAND (YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday)) < 50\nAND e.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": " SELECT \n    ROUND((SUM(CASE WHEN SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END) / CAST(SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END) AS REAL)) * 100, 2) AS percentage_female_abnormal_PT\nFROM \n    Examination\nJOIN \n    Patient ON Examination.ID = Patient.ID\nWHERE \n    (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": " SELECT COUNT(*)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE p.SEX = 'M'\nAND e.WBC > 3.5 AND e.WBC < 9.0\nAND (e.FG <= 150 OR e.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.`aCL IgG` >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": " SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE `aCL IgG` BETWEEN 900 AND 2000\nAND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": " SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE IGA > 80 AND IGA < 500 AND YEAR(`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": " SELECT Diagnosis, COUNT(Diagnosis) AS Diagnosis_Count\nFROM Examination\nWHERE `aCL IgM` <= 40 OR `aCL IgM` >= 400\nGROUP BY Diagnosis\nORDER BY Diagnosis_Count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": " SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRP = '+' AND Laboratory.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": " SELECT COUNT(*)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP = '-' AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": " SELECT COUNT(*)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.`ANA Pattern` = 'negative' AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.`ANA Pattern` = 'negative'\nAND Patient.SEX = 'F'\nAND Examination.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": " SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.`aCL IgG` IN('-', '+-')\nAND Examination.`aCL IgM` IN('-', '+-')\nAND Examination.`ANA Pattern` IN('-', '+-')\nAND Examination.`aCL IgA` IN('-', '+-')\nAND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": " SELECT MIN(Birthday) AS YoungestBirthday\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE GOT >= 60\n);\t----- bird -----\tthrombosis_prediction",
    "127": " SELECT COUNT(*)\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Laboratory.CPK < 250 AND (Laboratory.KCT = '+' OR Laboratory.RVVT = '+' OR Laboratory.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": " SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.country_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.id\nORDER BY SUM(home_team_goal + away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": " SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE Match.league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\nAND Match.season = '2009/2010'\nGROUP BY Team.team_long_name\nORDER BY SUM(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 ELSE 0 END) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": " SELECT Team.team_api_id, MAX(Team_Attributes.buildUpPlaySpeed) AS buildUpPlaySpeed\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nGROUP BY Team.team_api_id\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": " SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": " SELECT Player.player_name, (strftime('%Y', 'now') - CAST(Player.birthday AS INTEGER)) AS age\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.sprint_speed >= 97\nAND Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "133": " SELECT League.name, COUNT(*) AS matches_played\nFROM Match\nJOIN League ON Match.league_id = League.id\nGROUP BY League.name\nORDER BY matches_played DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": " SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": " SELECT Team.team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE strftime('%Y', Team_Attributes.date) = '2012'\nAND Team_Attributes.buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE buildUpPlayPassing IS NOT NULL\n    AND strftime('%Y', date) = '2012'\n);\t----- bird -----\teuropean_football_2",
    "136": " SELECT \n    (SUM(CASE WHEN preferred_foot = 'left' AND YEAR(date) BETWEEN 1987 AND 1992 THEN 1 ELSE 0 END) * 100) / COUNT(player_fifa_api_id) AS percentage_left_foot_players_1987_1992\nFROM \n    Player_Attributes;\t----- bird -----\teuropean_football_2",
    "137": " SELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes\nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "138": " SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) AS avg_heading_accuracy\nFROM Player\nJOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": " SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.country_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(home_team_goal) > AVG(away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": " SELECT p.player_name\nFROM Player p\nWHERE substr(p.birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": " SELECT overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id\nWHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": " SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nWHERE country_id = (SELECT id FROM Country WHERE name = 'Poland')\nAND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": " SELECT\n    MAX(overall_rating) AS highest_finishing_rate,\n    MAX(height) AS highest_height,\n    MIN(height) AS shortest_height\nFROM\n    Player\nJOIN\n    Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE\n    Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\n    AND Player.height = (SELECT MAX(height) FROM Player)\n    OR Player.height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "144": " SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player t1\nJOIN Player_Attributes t2 ON t1.player_api_id = t2.player_api_id\nWHERE t1.height > 170\nAND strftime('%Y', t2.date) >= '2010' AND strftime('%Y', t2.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": " SELECT \n    (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_name = 'Abdou Diallo') - \n    (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_name = 'Aaron Appindangoye') AS difference_in_avg_ball_control;\t----- bird -----\teuropean_football_2",
    "146": " SELECT\n    Player.player_name,\n    Player.birthday\nFROM\n    Player\nWHERE\n    Player.player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')\nORDER BY\n    Player.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": " SELECT Player.player_name, MAX(Player.height) AS tallest_height\nFROM Player\nORDER BY Player.height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": " SELECT COUNT(*)\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.preferred_foot = 'left' AND pa.attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": " SELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": " SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": " SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND SUBSTR(date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": " SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2008/2009'\nGROUP BY League.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": " SELECT \n    (\n        (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - \n        (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')\n    ) / \n    (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": " SELECT AVG(T1.overall_rating)\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id\nWHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": " SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score, chanceCreationPassingClass\nFROM Team_Attributes\nWHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'Ajax');\t----- bird -----\teuropean_football_2",
    "156": " SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": " SELECT `overall_rating`\nFROM `Player_Attributes`\nJOIN `Player` ON `Player_Attributes`.`player_fifa_api_id` = `Player`.`player_fifa_api_id`\nWHERE `player_name` = 'Aaron Mooy' AND `date` LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": " SELECT `attacking_work_rate`\nFROM \"Player_Attributes\"\nJOIN Player ON \"Player_Attributes\".player_fifa_api_id = Player.player_fifa_api_id\nWHERE `player_name` = 'Francesco Migliore' AND `date` LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": " SELECT `date`\nFROM `Player_Attributes`\nWHERE `player_name` = 'Kevin Constant'\nORDER BY `crossing` DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": " SELECT buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id\nWHERE team_long_name = 'FC Lorient' AND date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": " SELECT Team_Attributes.defenceAggressionClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id\nWHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": " SELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id\nWHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": " SELECT \n    (((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12')) * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "164": " SELECT Player.player_name\nFROM Player\nORDER BY height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": " SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id\nWHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "166": " SELECT p.`player_name`\nFROM `Player` p\nJOIN `Player_Attributes` pa ON p.`player_api_id` = pa.`player_api_id`\nWHERE pa.`attacking_work_rate` = 'high';\t----- bird -----\teuropean_football_2",
    "167": " SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": " SELECT COUNT(*)\nFROM Player\nWHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": " SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS jumping_score_difference;\t----- bird -----\teuropean_football_2",
    "170": " SELECT p.id\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND pa.preferred_foot = 'right'\nORDER BY p.id\nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "171": " SELECT COUNT(*)\nFROM Player_Attributes\nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes)\nAND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": " SELECT home_team_goal, away_team_goal\nFROM Match\nWHERE date = '2008-09-24' AND league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League');\t----- bird -----\teuropean_football_2",
    "173": " SELECT Team_Attributes.buildUpPlaySpeedClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": " SELECT Player.player_name, Player_Attributes.finishing, Player_Attributes.curve\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": " SELECT League.name, COUNT(Match.id) AS games_count\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY games_count DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": " SELECT Team.team_long_name\nFROM Team\nJOIN Match ON Team.team_api_id = Match.away_team_api_id\nGROUP BY Team.team_long_name\nORDER BY MAX(Match.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": " SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id\nORDER BY Player_Attributes.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": " SELECT (\n    SELECT COUNT(*)\n    FROM Player\n    WHERE height < 180 AND overall_rating > 70\n) * 100 / (\n    SELECT COUNT(*)\n    FROM Player\n) AS percentage_under_180_strength_over_70;\t----- bird -----\teuropean_football_2",
    "179": " SELECT driverRef FROM drivers WHERE driverId IN (SELECT driverId FROM qualifying WHERE raceId = 20 AND q1 IS NOT NULL);\t----- bird -----\tformula_1",
    "180": " SELECT drivers.surname\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE races.raceId = 19 AND qualifying.q2 = (\n    SELECT MIN(qualifying.q2)\n    FROM qualifying\n    WHERE qualifying.raceId = 19\n);\t----- bird -----\tformula_1",
    "181": " SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "182": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": " SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": " SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceId = 354;\t----- bird -----\tformula_1",
    "185": " SELECT drivers.number\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nWHERE qualifying.raceId = 903\nAND qualifying.q3 LIKE '00:01:54%'\nLIMIT 1;\t----- bird -----\tformula_1",
    "186": " SELECT COUNT(*) FROM races r\nJOIN drivers d ON r.raceId = d.driverId\nWHERE r.name = 'Bahrain Grand Prix' AND r.year = 2007 AND d.time IS NULL;\t----- bird -----\tformula_1",
    "187": " SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE races.raceId = 592 AND drivers.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": " SELECT drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE races.raceId = 161 AND lapTimes.time LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "189": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": " SELECT constructors.url\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nJOIN races ON constructorResults.raceId = races.raceId\nWHERE races.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": " SELECT d.code\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nWHERE r.raceId = 45 AND q.q3 LIKE '0:01:33';\t----- bird -----\tformula_1",
    "192": " SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "193": " SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE races.raceId = 872\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": " SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN lapTimes ON results.driverId = lapTimes.driverId\nWHERE lapTimes.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM lapTimes)\nLIMIT 1;\t----- bird -----\tformula_1",
    "195": " SELECT ((SELECT fastestLapSpeed FROM results WHERE raceId = 853) - (SELECT fastestLapSpeed FROM results WHERE raceId = 854)) / (SELECT fastestLapSpeed FROM results WHERE raceId = 853) * 100 AS percentage_faster;\t----- bird -----\tformula_1",
    "196": " SELECT\n    drivers.driverId,\n    drivers.forename,\n    drivers.surname,\n    COUNT(results.driverId) AS completedRaces,\n    (SELECT COUNT(*) FROM races WHERE date = '1983-07-16') AS totalRaces,\n    (CAST(COUNT(results.driverId) AS REAL) / (SELECT COUNT(*) FROM races WHERE date = '1983-07-16')) * 100 AS completionRate\nFROM\n    drivers\nJOIN\n    results ON drivers.driverId = results.driverId\nJOIN\n    races ON results.raceId = races.raceId\nWHERE\n    races.date = '1983-07-16'\nGROUP BY\n    drivers.driverId, drivers.forename, drivers.surname;\t----- bird -----\tformula_1",
    "197": " SELECT name FROM races WHERE year = (SELECT MIN(year) FROM races) AND month = (SELECT MIN(month(date)) FROM races WHERE year = (SELECT MIN(year) FROM races));\t----- bird -----\tformula_1",
    "198": " SELECT drivers.forename || ' ' || drivers.surname AS full_name, MAX(constructorResults.points) AS max_points\nFROM drivers\nJOIN constructorResults ON drivers.driverId = constructorResults.driverId\nGROUP BY drivers.driverId\nORDER BY max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": " SELECT drivers.forename, drivers.surname, races.name, MIN(lapTimes.milliseconds) AS best_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nGROUP BY drivers.forename, drivers.surname, races.name\nORDER BY best_lap_time ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "200": " SELECT AVG(milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "201": " SELECT \n    (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage\nFROM \n    races r\nJOIN \n    driverStandings ds ON r.raceId = ds.raceId\nJOIN \n    drivers d ON ds.driverId = d.driverId\nWHERE \n    d.surname = 'Hamilton' AND ds.position > 1 AND r.year >= 2010;\t----- bird -----\tformula_1",
    "202": " SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) AS max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": " SELECT drivers.name, (YEAR(CURRENT_TIMESTAMP) - YEAR(drivers.dob)) AS age\nFROM drivers\nWHERE drivers.nationality = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": " SELECT races.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.year = 2005 AND MONTH(races.date) = 9;\t----- bird -----\tformula_1",
    "205": " SELECT races.name\nFROM races\nJOIN drivers ON drivers.driverId = races.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND races.position < 20;\t----- bird -----\tformula_1",
    "206": " SELECT races.year, races.name\nFROM races\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY lapTimes.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "207": " SELECT races.name, constructorResults.points\nFROM races\nJOIN constructorResults ON races.raceId = constructorResults.raceId\nJOIN drivers ON constructorResults.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": " SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')) AS percentage FROM races WHERE country = 'Germany' AND name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": " SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": " SELECT circuits.circuitRef FROM circuits WHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": " SELECT country FROM drivers ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "212": " SELECT drivers.driverRef\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND driverStandings.position = 1;\t----- bird -----\tformula_1",
    "213": " SELECT races.name, drivers.forename, drivers.surname\nFROM races\nJOIN driverStandings ON races.raceId = driverStandings.raceId\nJOIN drivers ON driverStandings.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY driverStandings.position\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": " SELECT MAX(fastestLapSpeed) AS fastestLapSpeed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "215": " SELECT drivers.forename, drivers.surname, driverStandings.positionOrder AS final_rank\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008;\t----- bird -----\tformula_1",
    "216": " SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) AND driverId = (SELECT driverId FROM driverStandings WHERE raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) AND position = 2);\t----- bird -----\tformula_1",
    "217": " SELECT COUNT(DISTINCT driverId)\nFROM races\nJOIN drivers ON races.driverId = drivers.driverId\nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND drivers.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": " SELECT \n    ((SELECT time FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') - \n    (SELECT time FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) AND driverId = (SELECT driverId FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100) / \n    (SELECT time FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) AND driverId = (SELECT driverId FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) AS percentage_faster;\t----- bird -----\tformula_1",
    "219": " SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": " SELECT MAX(constructorStandings.points) AS max_points\nFROM constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "221": " SELECT c.name\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "222": " SELECT COUNT(DISTINCT constructors.constructorId)\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nJOIN races ON constructorResults.raceId = races.raceId\nWHERE constructors.nationality = 'Japanese'\nAND races.year IN (\n    SELECT year\n    FROM races\n    GROUP BY year\n    HAVING COUNT(raceId) = 2\n)\nGROUP BY constructors.constructorId\nHAVING SUM(constructorResults.points) = 0;\t----- bird -----\tformula_1",
    "223": " SELECT\n    (COUNT(DISTINCT driverId) FILTER (WHERE nationality = 'Japanese' AND year BETWEEN 2007 AND 2009 AND time IS NOT NULL) * 100.0) /\n    (COUNT(DISTINCT driverId) FILTER (WHERE year BETWEEN 2007 AND 2009)) AS completion_percentage\nFROM\n    drivers\nJOIN\n    races ON drivers.driverId = races.driverId\nWHERE\n    races.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": " SELECT\n    s.year,\n    AVG(strftime('%s', r.time)) AS avg_time_seconds\nFROM\n    races r\nJOIN\n    results res ON r.raceId = res.raceId\nJOIN\n    seasons s ON r.year = s.year\nWHERE\n    res.position = 1 AND\n    s.year < 1975\nGROUP BY\n    s.year;\t----- bird -----\tformula_1",
    "225": " SELECT MAX(lap) AS fastestLapNumber\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009 AND results.position = 1;\t----- bird -----\tformula_1",
    "226": " SELECT AVG(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "227": " SELECT \n    (SELECT COUNT(DISTINCT driverId) \n     FROM drivers \n     WHERE dob < 1985 AND driverId IN (SELECT driverId FROM lapTimes WHERE laps > 50)) \n    * 100.0 / \n    (SELECT COUNT(DISTINCT driverId) \n     FROM drivers \n     WHERE year(dob) BETWEEN 2000 AND 2005) AS percentage;\t----- bird -----\tformula_1",
    "228": " SELECT COUNT(DISTINCT driverId)\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nWHERE drivers.nationality = 'French' AND lapTimes.time < '02:00.00';\t----- bird -----\tformula_1",
    "229": " SELECT * FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "230": " SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers d\nORDER BY d.dob DESC\nLIMIT 3;\n\nSELECT COUNT(*)\nFROM drivers d\nWHERE d.dob = (SELECT MAX(dob) FROM drivers) AND d.nationality = 'Netherlandic';\t----- bird -----\tformula_1",
    "231": " SELECT drivers.name\nFROM drivers\nWHERE drivers.nationality = 'German'\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "232": " SELECT drivers.driverId, drivers.code\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.dob = 1971 AND results.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": " SELECT COUNT(*)\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN status s ON res.statusId = s.statusId\nWHERE r.raceId BETWEEN 50 AND 100\nAND s.status = 'disqualified';\t----- bird -----\tformula_1",
    "234": " SELECT circuits.name, circuits.location, circuits.lat, circuits.lng, COUNT(*) AS times_held\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE circuits.country = 'Austria'\nGROUP BY circuits.circuitId;\t----- bird -----\tformula_1",
    "235": " SELECT drivers.name, races.date, races.time\nFROM drivers\nJOIN races ON drivers.driverId = races.driverId\nWHERE drivers.dob = (\n    SELECT MIN(drivers.dob)\n    FROM drivers\n    JOIN races ON drivers.driverId = races.driverId\n)\nAND races.date = (\n    SELECT MIN(races.date)\n    FROM races\n    JOIN drivers ON races.driverId = drivers.driverId\n    WHERE drivers.dob = (\n        SELECT MIN(drivers.dob)\n        FROM drivers\n        JOIN races ON drivers.driverId = races.driverId\n    )\n);\t----- bird -----\tformula_1",
    "236": " SELECT drivers.forename, drivers.surname, AVG(CAST(pitStops.duration AS REAL)) AS avg_duration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' AND year(drivers.dob) BETWEEN 1980 AND 1985\nGROUP BY drivers.driverId\nORDER BY avg_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": " SELECT drivers.forename, drivers.surname, results.time\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1;\t----- bird -----\tformula_1",
    "238": " SELECT constructors.constructorRef, constructors.url\nFROM constructors\nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nJOIN races ON constructorStandings.raceId = races.raceId\nWHERE races.name = '2009 Singapore Grand Prix'\nAND constructorStandings.position = 1;\t----- bird -----\tformula_1",
    "239": " SELECT sp.power_name\nFROM superpower sp\nJOIN hero_power hp ON sp.id = hp.power_id\nJOIN superhero sh ON hp.hero_id = sh.id\nWHERE sh.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": " SELECT c.name, c.nationality, SUM(cr.points) AS total_points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.name = 'Monaco Grand Prix'\nAND r.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorId\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": " SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE qualifying.q3 = 1\nAND races.name = 'Marina Bay Street Circuit'\nAND races.year = 2008;\t----- bird -----\tformula_1",
    "242": " SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS race_name\nFROM drivers d\nJOIN races r ON d.driverId = (\n    SELECT driverId\n    FROM drivers\n    ORDER BY dob ASC\n    LIMIT 1\n)\nJOIN races r2 ON d.driverId = r2.driverId\nORDER BY r2.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": " SELECT COUNT(*)\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix'\nAND results.statusId = (SELECT statusId FROM status WHERE status = 'Accident')\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "244": " SELECT d.forename || ' ' || d.surname AS full_name\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE lt.time = (SELECT MIN(time) FROM lapTimes)\nORDER BY lt.time\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": " SELECT circuits.name, MIN(lapTimes.time) AS lap_record\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name;\t----- bird -----\tformula_1",
    "246": " SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": " SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Blue'\nAND hero_power.power_id = (SELECT id FROM superpower WHERE power_name = 'Agility');\t----- bird -----\tsuperhero",
    "248": " SELECT superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id AND colour.colour = 'Blue'\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id AND hair_colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": " SELECT s.superhero_name, s.height_cm\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": " SELECT superhero.superhero_name, colour.colour, COUNT(superhero.id) AS popularity\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY superhero.superhero_name, colour.colour\nORDER BY popularity DESC, superhero.superhero_name;\t----- bird -----\tsuperhero",
    "251": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": " SELECT publisher_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": " SELECT COUNT(*)\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "254": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": " SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": " SELECT superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": " SELECT superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": " SELECT COUNT(*)\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": " SELECT \n    ROUND((SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) / COUNT(*), 2) * 100 AS percentage_bad_alignment,\n    (SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_comics_bad_alignment\nFROM superhero;\t----- bird -----\tsuperhero",
    "260": " SELECT \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference_in_superheroes;\t----- bird -----\tsuperhero",
    "261": " SELECT publisher_id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": " SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": " SELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "264": " SELECT superpower.power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nJOIN superhero ON hero_power.hero_id = superhero.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male';\t----- bird -----\tsuperhero",
    "265": " SELECT superhero_name\nFROM superhero\nWHERE height_cm BETWEEN 170 AND 190\nAND eye_colour_id = (SELECT id FROM colour WHERE colour = 'No Colour');\t----- bird -----\tsuperhero",
    "266": " SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.hair_colour_id = colour.id\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.height_cm = 185 AND race.race = 'human';\t----- bird -----\tsuperhero",
    "267": " SELECT \n    ROUND((COUNT(DISTINCT superhero.id) * 100.0) / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180), 2) AS percentage_marvel_comics\nFROM \n    superhero\nJOIN \n    publisher ON superhero.publisher_id = publisher.id\nWHERE \n    superhero.height_cm BETWEEN 150 AND 180\n    AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "268": " SELECT superhero_name\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')\nAND weight_kg > (SELECT MULTIPLY(AVG(weight_kg), 0.79) FROM superhero);\t----- bird -----\tsuperhero",
    "269": " SELECT hero_power.power_name\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.id = 1;\t----- bird -----\tsuperhero",
    "270": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "271": " SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": " SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": " SELECT c.colour AS eyes, hc.colour AS hair, sc.colour AS skin_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN colour hc ON s.hair_colour_id = hc.id\nJOIN colour sc ON s.skin_colour_id = sc.id\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": " SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.eye_colour_id = s.hair_colour_id\nAND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "275": " SELECT \n    ROUND((SUM(CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') THEN 1 ELSE 0 END) / \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) * 100, 2) AS percentage_blue_female_superheroes;\t----- bird -----\tsuperhero",
    "276": " SELECT COUNT(*) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "277": " SELECT superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": " SELECT superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id AND superhero.hair_colour_id = colour.id\nWHERE colour.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": " SELECT superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": " SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nAND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "281": " SELECT ROUND((SUM(CASE WHEN gender = 'Female' AND publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 END)) * 100, 2) AS percentage_female_heroes_marvel;\t----- bird -----\tsuperhero",
    "282": " SELECT (\n    SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky'\n) - (\n    SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler'\n);\t----- bird -----\tsuperhero",
    "283": " SELECT superhero.superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "284": " SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": " SELECT superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": " SELECT a.attribute_name, h.attribute_value\nFROM hero_attribute a\nJOIN superhero h ON a.hero_id = h.id\nWHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": " SELECT superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id AND colour.colour = 'Blue'\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id AND hair_colour.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": " SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": " SELECT ROUND((SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) / CAST(COUNT(*) AS REAL)) * 100, 2) AS percentage_blue_eyes\nFROM superhero;\t----- bird -----\tsuperhero",
    "290": " SELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) AS ratio;\t----- bird -----\tsuperhero",
    "291": " SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": " SELECT\n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7) -\n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1) AS difference;\t----- bird -----\tsuperhero",
    "293": " SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": " SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": " SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": " SELECT\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS DC_count,\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS Marvel_count,\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference;\t----- bird -----\tsuperhero",
    "297": " SELECT u.DisplayName, u.Reputation\nFROM users u\nWHERE u.DisplayName IN ('Harlan', 'Jarrod Dixon')\nORDER BY u.Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": " SELECT DisplayName\nFROM users\nWHERE strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "299": " SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": " SELECT DisplayName FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Title = 'Eliciting priors from experts');\t----- bird -----\tcodebase_community",
    "301": " SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "302": " SELECT UserDisplayName\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": " SELECT COUNT(*)\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": " SELECT p.Body\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": " SELECT AVG(p.Score) AS AverageScore\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": " SELECT \n    (SELECT COUNT(*) FROM posts WHERE Score > 5 AND OwnerUserId IN (SELECT Id FROM users WHERE Age > 65)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE Score > 5) AS percentage_elder_user_ownership;\t----- bird -----\tcodebase_community",
    "307": " SELECT p.FavoriteCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nJOIN users u ON c.UserId = u.Id\nWHERE u.Id = 3025 AND c.CreationDate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "308": " SELECT CASE\n    WHEN p.ClosedDate IS NOT NULL THEN 'Yes'\n    ELSE 'No'\nEND AS IsWellFinished\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nJOIN users u ON c.UserId = u.Id\nWHERE u.Id = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": " SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": " SELECT UserDisplayName FROM users WHERE Id = 6347;\t----- bird -----\tcodebase_community",
    "311": " SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS post_to_vote_ratio;\t----- bird -----\tcodebase_community",
    "312": " SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": " SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": " SELECT u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": " SELECT u.DisplayName, u.Reputation\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": " SELECT u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": " SELECT c.Text\nFROM comments c\nJOIN postHistory ph ON c.PostId = ph.PostId\nJOIN posts p ON ph.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": " SELECT u.DisplayName\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nJOIN posts p ON v.PostId = p.Id\nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": " SELECT p.Title, c.Text, AVG(p.ViewCount) AS AvgViewCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nJOIN postLinks pl ON p.Id = pl.PostId\nJOIN tags t ON pl.RelatedPostId = t.ExcerptPostId\nWHERE t.TagName = 'humor'\nGROUP BY p.Title, c.Text;\t----- bird -----\tcodebase_community",
    "320": " SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name > 5;\t----- bird -----\tcodebase_community",
    "321": " SELECT u.Id, u.DisplayName\nFROM users u\nJOIN postHistory ph ON u.Id = ph.UserId\nJOIN posts p ON ph.PostId = p.Id\nWHERE p.ViewCount >= 1000\nGROUP BY u.Id, u.DisplayName\nHAVING COUNT(DISTINCT ph.Id) = 1;\t----- bird -----\tcodebase_community",
    "322": " SELECT \n    ((CAST(SUM(CASE WHEN Year(Date) = 2010 THEN 1 ELSE 0 END) AS FLOAT) / CAST(COUNT(*) AS FLOAT)) - \n    (CAST(SUM(CASE WHEN Year(Date) = 2011 THEN 1 ELSE 0 END) AS FLOAT) / CAST(COUNT(*) AS FLOAT))) * 100 AS PercentageDifference\nFROM badges\nWHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": " SELECT AVG(UpVotes) AS AverageUpVotes, AVG(Age) AS AverageAge\nFROM users\nWHERE Id IN (\n    SELECT UserId\n    FROM posts\n    GROUP BY UserId\n    HAVING COUNT(Id) > 10\n);\t----- bird -----\tcodebase_community",
    "324": " SELECT \n    (SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010) / \n    (SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2011) AS vote_ratio;\t----- bird -----\tcodebase_community",
    "325": " SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": " SELECT\n    DisplayName,\n    MAX(SUM(ViewCount)) AS Popularity\nFROM\n    posts\nJOIN\n    users ON posts.OwnerUserId = users.Id\nWHERE\n    DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder'\nGROUP BY\n    DisplayName\nORDER BY\n    Popularity DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": " SELECT t.TagName\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nJOIN comments c ON p.Id = c.PostId\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Mark Meckes' AND c.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": " SELECT (\n    SELECT COUNT(*)\n    FROM posts\n    JOIN postHistory ON posts.Id = postHistory.PostId\n    JOIN tags ON postHistory.PostId = tags.ExcerptPostId\n    WHERE tags.TagName = 'r'\n) * 100.0 / (\n    SELECT COUNT(*)\n    FROM posts\n    JOIN postHistory ON posts.Id = postHistory.PostId\n    JOIN users ON postHistory.UserId = users.Id\n    WHERE users.DisplayName = 'Community'\n) AS percentage;\t----- bird -----\tcodebase_community",
    "329": " SELECT \n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Mornington') - \n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Amos') AS ViewCountDifference;\t----- bird -----\tcodebase_community",
    "330": " SELECT AVG(MonthlyLinks) AS AverageMonthlyLinks\nFROM (\n    SELECT strftime('%Y-%m', CreationDate) AS Month, COUNT(*) AS MonthlyLinks\n    FROM postLinks\n    JOIN posts ON postLinks.PostId = posts.Id\n    WHERE strftime('%Y', CreationDate) = '2010'\n    AND posts.AnswerCount <= 2\n    GROUP BY Month\n) AS MonthlyLinksData;\t----- bird -----\tcodebase_community",
    "331": " SELECT MIN(CreationDate) AS FirstVoteDate\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": " SELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": " SELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nJOIN postLinks pl ON p.Id = pl.PostId\nJOIN tags t ON pl.RelatedPostId = t.ExcerptPostId\nWHERE u.Location = 'United Kingdom'\nAND t.TagName = 'Favorite'\nAND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": " SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": " SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY p.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": " SELECT \n    (SELECT COUNT(*) FROM posts WHERE YEAR(CreationDate) = 2011 AND OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 1000)) * 100.0 / COUNT(*) AS Percentage;\t----- bird -----\tcodebase_community",
    "337": " SELECT ViewCount, DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": " SELECT COUNT(*)\nFROM comments\nWHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "339": " SELECT c.Text, u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": " SELECT \n    (SELECT COUNT(*) FROM posts WHERE UserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1) AND Score > 50) * 100.0 / (SELECT COUNT(*) FROM posts WHERE UserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)) AS PercentageWithScoreAbove50;\t----- bird -----\tcodebase_community",
    "341": " SELECT tags.ExcerptPostId, tags.WikiPostId\nFROM tags\nWHERE tags.TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": " SELECT u.Reputation, v.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nJOIN votes v ON u.Id = v.UserId\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": " SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": " SELECT COUNT(*)\nFROM comments\nWHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) AND Score = 0;\t----- bird -----\tcodebase_community",
    "345": " SELECT \n    (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM comments WHERE Score BETWEEN 5 AND 10) AS percentage\nFROM \n    comments\nWHERE \n    Score BETWEEN 5 AND 10\n    AND UpVotes = 0;\t----- bird -----\tcodebase_community",
    "346": " SELECT cards.id, cards.name, cards.cardKingdomFoilId, cards.cardKingdomId\nFROM cards\nWHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": " SELECT c.id, c.name, c.borderColor\nFROM cards c\nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid\nLEFT JOIN legalities l ON c.uuid = l.uuid\nLEFT JOIN sets s ON c.setCode = s.code\nWHERE c.borderColor IS NULL\nAND c.cardKingdomFoilId IS NULL\nAND c.cardKingdomId IS NOT NULL\nAND l.status = 'legal'\nAND s.isFoilOnly = 0\nAND s.isNonFoilOnly = 0\nAND s.isOnlineOnly = 0;\t----- bird -----\tcard_games",
    "348": " SELECT cards.name, cards.rarity\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND sets.name = 'Gladiator';\t----- bird -----\tcard_games",
    "349": " SELECT l.status\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE c.type = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": " SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.power = '*' OR c.power IS NULL\nAND l.format = 'commander'\nAND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": " SELECT c.id, r.text\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele' AND c.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "352": " SELECT cards.name, cards.artist, COUNT(rulings.uuid) AS ruling_count, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.uuid\nORDER BY ruling_count DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": " SELECT (\n    SELECT COUNT(*)\n    FROM foreign_data\n    WHERE language = 'Chinese Simplified'\n) * 100.0 / (\n    SELECT COUNT(*)\n    FROM foreign_data\n) AS percentage_chinese_simplified;\t----- bird -----\tcard_games",
    "354": " SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": " SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": " SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nWHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": " SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless')) AS percentage_borderless_cards;\t----- bird -----\tcard_games",
    "358": " SELECT (\n    SELECT COUNT(*) FROM cards WHERE language = 'French' AND isStorySpotlight = 1\n) * 100.0 / (\n    SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1\n) AS percentage_french_story_spotlight;\t----- bird -----\tcard_games",
    "359": " SELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": " SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": " SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": " SELECT c.name, c.asciiName, c.colors, fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE c.originalType = 'Artifact' AND c.colors LIKE '%B%' AND fd.language != 'English'\t----- bird -----\tcard_games",
    "363": " SELECT cards.manaCost\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.layout = 'normal'\nAND cards.frameVersion = '2003'\nAND cards.borderColor = 'black'\nAND cards.availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": " SELECT \n    (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) AS percentage_story_spotlight_no_text_box,\n    cards.id\nFROM \n    cards\nWHERE \n    isStorySpotlight = 1 AND isTextless = 0\nORDER BY \n    cards.id;\t----- bird -----\tcard_games",
    "365": " SELECT COUNT(DISTINCT setCode)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.block = 'Commander'\nAND set_translations.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": " SELECT DISTINCT subtypes FROM cards;\t----- bird -----\tcard_games",
    "367": " SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": " SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'premodern'\nAND cards.side IS NULL\nAND cards.text LIKE '%This is a triggered mana ability.%';\t----- bird -----\tcard_games",
    "369": " SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.type = 'Creature'\nAND cards.layout = 'normal'\nAND cards.borderColor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\nAND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "370": " SELECT language FROM set_translations WHERE setCode = 'RAVNICA';\t----- bird -----\tcard_games",
    "371": " SELECT ROUND((COUNT(CASE WHEN format = 'commander' AND status = 'legal' AND hasContentWarning = 0 THEN 1 END) / COUNT(CASE WHEN format = 'commander' AND status = 'legal' THEN 1 END)) * 100, 2) AS percentage_without_content_warning;\t----- bird -----\tcard_games",
    "372": " SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*')) AS percentage_french_cards_without_power\nFROM cards\nWHERE power IS NULL OR power = '*'\nAND EXISTS (SELECT 1 FROM foreign_data WHERE cards.uuid = foreign_data.uuid AND foreign_data.language = 'French');\t----- bird -----\tcard_games",
    "373": " SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": " SELECT (COUNT(*) - COUNT(CASE WHEN layout = 'normal' AND isTextless = 1 THEN 1 END)) * 100.0 / COUNT(*) AS proportion_without_text_box_normal_layout FROM cards;\t----- bird -----\tcard_games",
    "375": " SELECT DISTINCT language\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "376": " SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": " SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "378": " SELECT setCode FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "379": " SELECT EXISTS(\n    SELECT 1\n    FROM cards\n    JOIN set_translations ON cards.setCode = set_translations.setCode\n    WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Korean'\n);\t----- bird -----\tcard_games",
    "380": " SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": " SELECT translation FROM set_translations\nWHERE setCode = 'Eighth Edition' AND language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": " SELECT EXISTS(\n    SELECT 1\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\n);\t----- bird -----\tcard_games",
    "383": " SELECT COUNT(DISTINCT setCode)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": " SELECT EXISTS(\n    SELECT 1\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE cards.name = 'Adarkar Valkyrie' AND sets.isForeignOnly = 1\n);\t----- bird -----\tcard_games",
    "385": " SELECT COUNT(DISTINCT s.id)\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian' AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": " SELECT DISTINCT cards.artist\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": " SELECT COUNT(*)\nFROM cards\nWHERE setCode = 'Coldsnap'\nAND convertedManaCost > 5\nAND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "388": " SELECT flavorText\nFROM foreign_data\nWHERE name = 'Ancestor''s Chosen' AND language = 'Italian';\t----- bird -----\tcard_games",
    "389": " SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN set_translations st ON c.setCode = st.setCode\nJOIN sets s ON st.setCode = s.code\nWHERE s.name = 'Coldsnap' AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "390": " SELECT cards.name, cards.asciiName\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.name = 'Coldsnap'\nAND set_translations.language = 'Italian'\nORDER BY cards.convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "391": " SELECT (SUM(CASE WHEN cards.convertedManaCost = 7 AND cards.setCode = 'Coldsnap' THEN 1 ELSE 0 END) / SUM(CASE WHEN cards.setCode = 'Coldsnap' THEN 1 ELSE 0 END)) * 100 AS percentage;\t----- bird -----\tcard_games",
    "392": " SELECT (\n    SELECT COUNT(*)\n    FROM cards\n    WHERE cardKingdomFoilId IS NOT NULL\n    AND cardKingdomId IS NOT NULL\n    AND name = 'Coldsnap'\n) * 100.0 / (\n    SELECT COUNT(*)\n    FROM cards\n    WHERE name = 'Coldsnap'\n) AS percentage_incredibly_powerful_cards;\t----- bird -----\tcard_games",
    "393": " SELECT format, COUNT(*) AS banned_count\nFROM legalities\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY banned_count DESC\nLIMIT 1;\n\nSELECT c.name\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned'\nAND l.format = (\n    SELECT format\n    FROM (\n        SELECT format, COUNT(*) AS banned_count\n        FROM legalities\n        WHERE status = 'Banned'\n        GROUP BY format\n        ORDER BY banned_count DESC\n        LIMIT 1\n    ) AS subquery\n);\t----- bird -----\tcard_games",
    "394": " SELECT cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1 AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "395": " SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "396": " SELECT s.name\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Korean'\nAND NOT EXISTS (\n    SELECT 1\n    FROM set_translations st2\n    WHERE st2.setCode = s.code\n    AND st2.language LIKE '%Japanese%'\n);\t----- bird -----\tcard_games",
    "397": " SELECT cards.frameVersion AS frame_styles, cards.artist, cards.status\nFROM cards\nWHERE cards.artist = 'Allen Williams' OR cards.status = 'Banned';\t----- bird -----\tcard_games",
    "398": " SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": " SELECT AVG(oxygen_count) AS avg_oxygen_atoms\nFROM (\n  SELECT COUNT(a.element = 'o') AS oxygen_count\n  FROM atom a\n  JOIN connected c ON a.atom_id = c.atom_id\n  JOIN bond b ON c.bond_id = b.bond_id\n  WHERE b.bond_type = '-'\n  GROUP BY a.molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "400": " SELECT AVG(carcinogenic_count) AS average_carcinogenic_single_bonded\nFROM (\n  SELECT molecule_id, COUNT(bond_id) AS carcinogenic_count\n  FROM bond\n  JOIN molecule ON bond.molecule_id = molecule.molecule_id\n  WHERE bond_type = '-' AND molecule.label = '+'\n  GROUP BY molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "401": " SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "402": " SELECT (\n  SELECT COUNT(*)\n  FROM atom\n  JOIN bond ON atom.molecule_id = bond.molecule_id\n  WHERE bond.bond_type = '=' AND atom.element = 'c'\n) / (\n  SELECT COUNT(*)\n  FROM atom\n  JOIN bond ON atom.molecule_id = bond.molecule_id\n  WHERE bond.bond_type = '='\n) AS percentage_of_carbon_in_double_bond_molecules;\t----- bird -----\ttoxicology",
    "403": " SELECT a1.element AS element1, a2.element AS element2\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": " SELECT a1.element AS element1, a2.element AS element2\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": " SELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'h'\nGROUP BY m.label\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": " SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": " SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM connected WHERE atom_id = 'TR004_8' AND atom_id2 = 'TR004_20') AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id = 'TR004_8' AND atom_id2 = 'TR004_20');\t----- bird -----\ttoxicology",
    "408": " SELECT COUNT(DISTINCT a1.atom_id) + COUNT(DISTINCT a2.atom_id)\nFROM atom a1\nJOIN bond b ON a1.atom_id = b.atom_id\nJOIN atom a2 ON b.atom_id2 = a2.atom_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE a1.element = 'i' AND a2.element = 's' AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": " SELECT \n  (1 - (\n    SELECT \n      DIVIDE(\n        SUM(\n          CASE \n            WHEN molecule.label = '+' AND atom.element = 'f' THEN 1 \n            ELSE 0 \n          END\n        ) * 100\n      ) / \n      SUM(\n        CASE \n          WHEN molecule.label = '+' THEN 1 \n          ELSE 0 \n        END\n      )\n    )\n  ) AS percentage_non_fluorine_carcinogenic\nFROM \n  molecule\nWHERE \n  molecule.label = '+';\t----- bird -----\ttoxicology",
    "410": " SELECT \n  (SELECT COUNT(*) FROM molecule WHERE label = '+') AS carcinogenic_molecules,\n  (SELECT COUNT(*) FROM molecule WHERE label = '+') * 100 / (SELECT COUNT(*) FROM molecule) AS carcinogenic_percentage\nFROM molecule\nWHERE EXISTS (\n  SELECT 1 FROM bond WHERE bond_type = '#' AND molecule_id = molecule.molecule_id\n);\t----- bird -----\ttoxicology",
    "411": " SELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR000'\nORDER BY a.element ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": " SELECT ROUND((SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(bond_id)) * 100, 5) AS percentage\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": " SELECT ROUND(CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(molecule_id) * 100, 3) AS percentage_carcinogenic) AS percentage_carcinogenic FROM molecule;\t----- bird -----\ttoxicology",
    "414": " SELECT ROUND(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(atom_id) * 100, 4) AS hydrogen_percentage\nFROM atom\nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": " SELECT molecule.label, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": " SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1;\n\nSELECT molecule.label, molecule.carcinogenic\nFROM molecule\nWHERE molecule.molecule_id = 'TR010';\t----- bird -----\ttoxicology",
    "417": " SELECT molecule_id\nFROM molecule\nWHERE molecule_id IN (\n  SELECT molecule_id\n  FROM bond\n  WHERE bond_type = '-'\n)\nAND label = '-'\nORDER BY molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": " SELECT COUNT(*) FROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE molecule_id = 'TR009' AND (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": " SELECT b.bond_type, a1.atom_id, a2.atom_id\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": " SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": " SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": " SELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+';\t----- bird -----\ttoxicology",
    "423": " SELECT b.bond_id\nFROM bond b\nJOIN atom a1 ON b.molecule_id = a1.molecule_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id\nWHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "424": " SELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '='\nGROUP BY m.molecule_id\nORDER BY COUNT(b.bond_id) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": " SELECT AVG(bond_count) AS average_bonds\nFROM (\n  SELECT COUNT(bond_id) AS bond_count\n  FROM connected\n  JOIN atom ON atom.atom_id = connected.atom_id\n  WHERE element = 'i'\n  GROUP BY atom_id\n) AS iodine_bonds;\t----- bird -----\ttoxicology",
    "426": " SELECT DISTINCT a.element\nFROM atom a\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.atom_id IS NULL;\t----- bird -----\ttoxicology",
    "427": " SELECT a1.atom_id, a2.atom_id\nFROM atom a1\nJOIN bond b ON a1.atom_id = b.atom_id\nJOIN atom a2 ON b.atom_id2 = a2.atom_id\nJOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": " SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": " SELECT a1.element AS element1, a2.element AS element2\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": " SELECT ROUND(SUM(CASE WHEN bond_type = '-' AND label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN bond_type = '-' THEN 1 END), 5) AS proportion_carcinogenic_single_bonds_percentage\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id;\t----- bird -----\ttoxicology",
    "431": " SELECT COUNT(DISTINCT a1.atom_id)\nFROM atom a1\nJOIN bond b ON a1.atom_id = b.atom_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nJOIN atom a2 ON a1.atom_id = a2.atom_id\nJOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2\nWHERE b.bond_type = '#'\nAND (a1.element = 'p' OR a2.element = 'br');\t----- bird -----\ttoxicology",
    "432": " SELECT \n    (SUM(CASE WHEN bond_type = '-' AND element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT atom_id)) * 100 AS chlorine_percentage\nFROM \n    atom\nJOIN \n    connected ON atom.atom_id = connected.atom_id\nJOIN \n    bond ON connected.bond_id = bond.bond_id;\t----- bird -----\ttoxicology",
    "433": " SELECT a.element AS element1, b.element AS element2\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN atom b ON c.atom_id2 = b.atom_id\nJOIN bond bd ON c.bond_id = bd.bond_id\nWHERE bd.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": " SELECT (SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END) / COUNT(molecule_id)) * 100 AS percentage\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "435": " SELECT COUNT(DISTINCT atom.element) AS toxic_elements_count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label LIKE '%+%' AND substr(atom.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "436": " SELECT \n  (SELECT DIVIDE(SUM(element = 'h'), COUNT(element)) \n   FROM atom \n   WHERE molecule_id = 'TR006') AS ratio,\n  CASE \n    WHEN (SELECT DIVIDE(SUM(element = 'h'), COUNT(element)) \n          FROM atom \n          WHERE molecule_id = 'TR006') > 0 THEN '+'\n    ELSE '-'\n  END AS label;\t----- bird -----\ttoxicology",
    "437": " SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5 AND m.label = '-';\t----- bird -----\ttoxicology",
    "438": " SELECT COUNT(*)\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.rtype = 'SAT'\nAND satscores.AvgScrMath > 400\nAND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": " SELECT frpm.CDSCode\nFROM frpm\nWHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "440": " SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS HighestEligibleFreeRate\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE (NumGE1500 / NumTstTakr) > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": " SELECT s.CDSCode, s.CharterNum\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.rtype = 'Writing' AND ss.AvgScrWrite > 499\nORDER BY ss.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": " SELECT SchoolName, Street, StreetAbr, City, Zip, State\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE ABS(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": " SELECT frpm.SchoolName\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE frpm.`Percent (%) Eligible Free (K-12)` > 0.1\nAND satscores.AvgScrRead >= 1500\nAND satscores.AvgScrMath >= 1500\nAND satscores.AvgScrWrite >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": " SELECT s.FundingType\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE s.County = 'Riverside' AND sc.rtype = 'SAT' AND sc.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "445": " SELECT SchoolName, `School Name`, `County Name`, `District Name`, `School Name`, `City`, `Zip`, `State`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `County Name` = 'Monterey'\nAND `School Type` = 'High School'\nAND `Enrollment (Ages 15-17)` > 800\nAND `Free Meal Count (Ages 15-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "446": " SELECT s.School, \n       AVG(ss.AvgScrWrite) AS AvgWritingScore, \n       s.Phone AS CommunicationNumber\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.OpenDate > '1991-01-01' AND (s.ClosedDate < '2000-01-01' OR s.ClosedDate IS NULL)\nGROUP BY s.School, s.Phone;\t----- bird -----\tcalifornia_schools",
    "447": " SELECT s.SchoolName, s.DOC\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.FundingType = 'Locally Funded'\nAND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (\n    SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n    FROM frpm f2\n    JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n    WHERE s2.FundingType = 'Locally Funded'\n);\t----- bird -----\tcalifornia_schools",
    "448": " SELECT frpm.SchoolName, (frpm.`Free Meal Count (K-12`) / frpm.`Enrollment (K-12)`) AS EligibleFreeRate\nFROM frpm\nORDER BY frpm.`Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 8;\t----- bird -----\tcalifornia_schools",
    "449": " SELECT SchoolName, (FRPMCount(K-12) / Enrollment(K-12)) AS EligibleFreeRate\nFROM frpm\nWHERE CharterSchool(Y/N) = 1 AND CharterSchoolNumber = 66\nORDER BY FRPMCount(K-12) DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": " SELECT Street, City, Zip, State\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nORDER BY (NumGE1500 / NumTstTakr) ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": " SELECT AdmFName1 || ' ' || AdmLName1 AS AdminFullName\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.NumGE1500 = (\n    SELECT MAX(satscores.NumGE1500)\n    FROM satscores\n);\t----- bird -----\tcalifornia_schools",
    "452": " SELECT AVG(satscores.NumTstTakr) AS AverageTestTakers\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.OpenDate >= '1980-01-01' AND schools.ClosedDate <= '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": " SELECT Schools.Phone\nFROM Schools\nJOIN satscores ON Schools.CDSCode = satscores.cds\nWHERE satscores.rtype = 'Reading' AND Schools.District = 'Fresno Unified'\nORDER BY satscores.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": " SELECT s.SchoolName\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.rtype = 'Reading'\nAND s.Virtual = 'F'\nAND s.SchoolName IN (\n    SELECT s2.SchoolName\n    FROM schools s2\n    JOIN satscores ss2 ON s2.CDSCode = ss2.cds\n    WHERE ss2.rtype = 'Reading'\n    AND s2.Virtual = 'F'\n    AND s2.County = s.County\n    ORDER BY ss2.AvgScrRead DESC\n    LIMIT 5\n);\t----- bird -----\tcalifornia_schools",
    "455": " SELECT s.School, AVG(ss.AvgScrWrite) AS AvgWritingScore\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.AdmFName1 = 'Ricci Ulrich' OR s.AdmFName2 = 'Ricci Ulrich' OR s.AdmFName3 = 'Ricci Ulrich'\nGROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "456": " SELECT frpm.SchoolName, MAX(frpm.`Enrollment (K-12)`) AS MaxEnrollment\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.DOC = 31\nGROUP BY frpm.SchoolName\nORDER BY MaxEnrollment DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": " SELECT COUNT(DISTINCT School) / 12 AS MonthlyAverageSchoolsOpened\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `County Code` = 'Alameda'\nAND `Academic Year` = '1980';\t----- bird -----\tcalifornia_schools",
    "458": " SELECT \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 54) AS UnifiedSchools,\n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 52) AS ElementarySchools,\n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 54) / (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 52) AS Ratio\n;\t----- bird -----\tcalifornia_schools",
    "459": " SELECT SchoolName, Street, City, Zip, State\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.rtype = 'Math'\nORDER BY AvgScrMath DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": " SELECT COUNT(*)\nFROM frpm\nWHERE `Charter School (Y/N)` = 0\nAND `County Name` = 'Los Angeles'\nAND `Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": " SELECT COUNT(*)\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.StatusType = 'SSS'\nAND schools.County = 'Fremont'\nAND frpm.`Academic Year` = '2014-2015'\nAND frpm.`Enrollment (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "462": " SELECT SchoolName, `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM frpm\nWHERE `County Name` = 'Los Angeles' AND `Low Grade` = 'K' AND `High Grade` = '9';\t----- bird -----\tcalifornia_schools",
    "463": " SELECT County, COUNT(*) AS NumberOfSchools\nFROM frpm\nWHERE County IN ('San Diego', 'Santa Barbara') AND CharterSchool = 1\nGROUP BY County\nORDER BY NumberOfSchools DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": " SELECT `Low Grade`, `High Grade`\nFROM frpm\nWHERE CDSCode = (\n    SELECT CDSCode\n    FROM schools\n    ORDER BY Longitude DESC\n    LIMIT 1\n);\t----- bird -----\tcalifornia_schools",
    "465": " SELECT\n    COUNT(*) AS SchoolsOfferingMagnetK8,\n    COUNT(DISTINCT City) AS CitiesOfferingK8,\n    City,\n    COUNT(*) AS SchoolsPerCity\nFROM\n    frpm\nJOIN\n    satscores ON frpm.CDSCode = satscores.cds\nWHERE\n    Magnet = 1\n    AND LowGrade = 'K'\n    AND HighGrade = '8'\n    AND `Educational Option Type` = 'K-8'\n    AND `NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY\n    City\nORDER BY\n    SchoolsPerCity DESC;\t----- bird -----\tcalifornia_schools",
    "466": " SELECT `District Code`, `Percent (%) Eligible Free (K-12)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": " SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino'\nAND City = 'San Bernardino'\nAND School = 'San Bernardino City Unified'\nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\nAND DOC = '54'\nAND SOC = '62';\t----- bird -----\tcalifornia_schools",
    "468": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A3 = 'POPLATEK PO OBRATU' AND account.frequency = 'issuance after transaction';\t----- bird -----\tfinancial",
    "469": " SELECT COUNT(DISTINCT district_id)\nFROM district\nJOIN client ON district.district_id = client.district_id\nJOIN account ON client.client_id = disp.client_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE client.gender = 'F'\nAND loan.amount / loan.duration = (SELECT AVG(loan.amount / loan.duration)\n                                     FROM loan\n                                     JOIN client ON loan.account_id = client.client_id\n                                     WHERE client.gender = 'F')\nAND loan.amount / loan.duration > 6000\nAND loan.amount / loan.duration < 10000;\t----- bird -----\tfinancial",
    "470": " SELECT COUNT(DISTINCT client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'M'\nAND A3 = 'North Bohemia'\nAND A11 > 8000;\t----- bird -----\tfinancial",
    "471": " SELECT account_id\nFROM client\nWHERE gender = 'F'\nORDER BY birth_date ASC\nLIMIT 1;\n\nWITH female_clients AS (\n  SELECT c.client_id, c.district_id\n  FROM client c\n  WHERE c.gender = 'F'\n),\n\naverage_salaries AS (\n  SELECT d.district_id, AVG(d.A11) AS avg_salary\n  FROM district d\n  GROUP BY d.district_id\n),\n\nlowest_avg_salary AS (\n  SELECT MIN(avg_salary) AS min_avg_salary\n  FROM average_salaries\n),\n\nhighest_avg_salary AS (\n  SELECT MAX(avg_salary) AS max_avg_salary\n  FROM average_salaries\n),\n\ngap AS (\n  SELECT (max_avg_salary - min_avg_salary) AS gap\n  FROM highest_avg_salary, lowest_avg_salary\n)\n\nSELECT c.client_id, c.district_id, a.account_id\nFROM client c\nJOIN account a ON c.client_id = a.client_id\nJOIN female_clients fc ON c.client_id = fc.client_id\nJOIN average_salaries as ON fc.district_id = as.district_id\nJOIN lowest_avg_salary las ON as.avg_salary = las.min_avg_salary\nJOIN highest_avg_salary has ON has.avg_salary = has.max_avg_salary\nJOIN gap ON 1=1\nORDER BY c.birth_date ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "472": " SELECT account_id\nFROM client\nORDER BY birth_date DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "473": " SELECT account_id, MIN(amount) AS lowest_approved_amount\nFROM loan\nWHERE date BETWEEN '1997-01-01' AND '1997-12-31'\nAND status = 'approved'\nAND frequency = 'POPLATEK TYDNE'\nGROUP BY account_id\nORDER BY lowest_approved_amount ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "474": " SELECT account_id, MAX(amount) AS highest_approved_amount\nFROM loan\nWHERE duration > 12 AND account_id IN (\n    SELECT account_id\n    FROM account\n    WHERE date LIKE '1993%'\n)\nGROUP BY account_id\nORDER BY highest_approved_amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": " SELECT COUNT(DISTINCT client_id)\nFROM client\nWHERE gender = 'F'\nAND birth_date < '1950-01-01'\nAND district_id = (SELECT district_id FROM district WHERE A2 = 'Sokolov');\t----- bird -----\tfinancial",
    "476": " SELECT district_id FROM client WHERE gender = 'F' AND birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": " SELECT \n    (COUNT(CASE WHEN gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients\nFROM \n    client\nJOIN \n    district ON client.district_id = district.district_id\nWHERE \n    district.A3 = 'south Bohemia'\n    AND district.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia');\t----- bird -----\tfinancial",
    "478": " SELECT \n    (\n        (\n            (\n                SELECT balance \n                FROM account \n                WHERE account_id = (\n                    SELECT account_id \n                    FROM loan \n                    WHERE date = '1993-07-05'\n                )\n            ) - (\n                SELECT balance \n                FROM account \n                WHERE account_id = (\n                    SELECT account_id \n                    FROM loan \n                    WHERE date = '1993-03-22'\n                )\n            )\n        ) / (\n            SELECT balance \n            FROM account \n            WHERE account_id = (\n                SELECT account_id \n                FROM loan \n                WHERE date = '1993-03-22'\n            )\n        )\n    ) * 100\n    AS increase_rate;\t----- bird -----\tfinancial",
    "479": " SELECT \n    (SUM(CASE WHEN loan.status = 'A' THEN loan.amount ELSE 0 END) / SUM(loan.amount)) * 100 AS percentage_fully_paid_no_issue\nFROM \n    loan;\t----- bird -----\tfinancial",
    "480": " SELECT \n    (SUM(CASE WHEN status = 'C' AND amount < 100000 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_running_no_issue\nFROM loan;\t----- bird -----\tfinancial",
    "481": " SELECT d.district_id, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'D'\nGROUP BY d.district_id;\t----- bird -----\tfinancial",
    "482": " SELECT district.district_id, COUNT(client.client_id) AS female_account_holders\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nGROUP BY district.district_id\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": " SELECT COUNT(DISTINCT loan.loan_id)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE account.frequency = 'POPLATEK MESICNE'\nAND loan.amount >= 250000\nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "484": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN district ON disp.district_id = district.district_id\nWHERE district.A2 = '1';\t----- bird -----\tfinancial",
    "485": " SELECT COUNT(DISTINCT client_id)\nFROM client\nWHERE gender = 'M'\nAND district_id IN (\n    SELECT district_id\n    FROM (\n        SELECT district_id, COUNT(*) AS crime_count\n        FROM trans\n        WHERE date BETWEEN '1995-01-01' AND '1995-12-31'\n        GROUP BY district_id\n        ORDER BY crime_count DESC\n        LIMIT 2\n    ) AS subquery\n);\t----- bird -----\tfinancial",
    "486": " SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\nAND t.date LIKE '1996-01%'\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": " SELECT COUNT(DISTINCT account_id)\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN district ON disp.district_id = district.district_id\nWHERE district.A2 = '1';\t----- bird -----\tfinancial",
    "488": " SELECT COUNT(DISTINCT client_id)\nFROM client\nWHERE gender = 'M'\nAND district_id IN (\n    SELECT district_id\n    FROM (\n        SELECT district_id, COUNT(*) AS crime_count\n        FROM trans\n        WHERE date BETWEEN '1995-01-01' AND '1995-12-31'\n        GROUP BY district_id\n        ORDER BY crime_count DESC\n        LIMIT 2\n    ) AS subquery\n);\t----- bird -----\tfinancial",
    "489": " SELECT account_id\nFROM trans\nWHERE date BETWEEN '1998-01-01' AND '1998-12-31'\nAND type = 'VYBER KARTOU'\nGROUP BY account_id\nHAVING AVG(amount) < (SELECT AVG(amount) FROM trans WHERE date BETWEEN '1998-01-01' AND '1998-12-31' AND type = 'VYBER KARTOU');\t----- bird -----\tfinancial",
    "490": " SELECT account.type\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN client ON account.district_id = client.district_id\nWHERE account.type != 'OWNER'\nAND (SELECT AVG(client.gender = 'male' AND client.birth_date BETWEEN '1950-01-01' AND '1960-12-31') FROM client) > 8000\nAND (SELECT AVG(client.gender = 'male' AND client.birth_date BETWEEN '1950-01-01' AND '1960-12-31') FROM client) <= 9000;\t----- bird -----\tfinancial",
    "491": " SELECT AVG(district.A15)\nFROM district\nJOIN account ON district.district_id = account.district_id\nWHERE district.A15 > 4000\nAND account.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "492": " SELECT trans.date, trans.amount, trans.balance\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN client ON account.client_id = client.client_id\nWHERE client.client_id = 3356 AND trans.type = 'VYBER';\t----- bird -----\tfinancial",
    "493": " SELECT \n    (COUNT(DISTINCT client.client_id) * 100.0 / (SELECT COUNT(DISTINCT client.client_id) FROM client JOIN account ON client.client_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A11 > 10000)) AS percentage_women\nFROM \n    client\nJOIN \n    account ON client.client_id = account.account_id\nJOIN \n    district ON account.district_id = district.district_id\nWHERE \n    client.gender = 'F' AND district.A11 > 10000;\t----- bird -----\tfinancial",
    "494": " SELECT \n    (SUM(CASE WHEN YEAR(date) = 1997 THEN amount ELSE 0 END) - SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END)) / SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END) * 100 AS growth_rate\nFROM \n    loan\nJOIN \n    client ON loan.account_id = client.client_id\nWHERE \n    client.gender = 'M';\t----- bird -----\tfinancial",
    "495": " SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit\nFROM account\nJOIN trans ON account.account_id = trans.account_id\nWHERE account.account_id = 3\nAND trans.type = 'statement_request'\nAND trans.operation = 'debit';\t----- bird -----\tfinancial",
    "496": " SELECT \n    (COUNT(CASE WHEN gender = 'M' AND frequency = 'weekly' THEN 1 END) * 100.0 / COUNT(CASE WHEN frequency = 'weekly' THEN 1 END)) AS percentage_male_clients_weekly_statements\nFROM \n    client;\t----- bird -----\tfinancial",
    "497": " SELECT account_id\nFROM client\nJOIN account ON client.client_id = account.account_id\nWHERE gender = 'F'\nORDER BY birth_date ASC, (SELECT A11 FROM district WHERE district_id = client.district_id) ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "498": " SELECT AVG(loan.amount) AS average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE account.status = 'C' AND account.status = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": " SELECT client_id, (strftime('%Y', 'now') - strftime('%Y', birth_date)) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial"
}