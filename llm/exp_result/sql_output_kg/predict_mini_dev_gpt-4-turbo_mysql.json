{
    "0": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio_EUR_to_CZK\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) AS LeastConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Segment = 'LAM' AND SUBSTRING(Date, 1, 4) = '2012'\nGROUP BY CustomerID\nORDER BY LeastConsumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND SUBSTRING(Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) AS CZK_Consumption,\nSUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS EUR_Consumption,\n(SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END)) AS Difference\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE LEFT(ym.Date, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT YEAR(`Date`) AS `Year`, SUM(`Consumption`) AS `TotalConsumption`\nFROM `yearmonth` AS ym\nJOIN `customers` AS c ON ym.`CustomerID` = c.`CustomerID`\nWHERE c.`Currency` = 'CZK'\nGROUP BY `Year`\nORDER BY `TotalConsumption` DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT MAX(`Consumption`) AS `PeakConsumption`, SUBSTRING(`Date`, 5, 2) AS `Month`\nFROM `yearmonth` \nJOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID`\nWHERE `customers`.`Segment` = 'SME' AND SUBSTRING(`Date`, 1, 4) = '2013'\nGROUP BY `Month`\nORDER BY `PeakConsumption` DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\nAND Date >= '201308'\nAND Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT COUNT(*) AS `MoreDiscountGasStationsCZE`\nFROM gasstations\nWHERE `Country` = 'CZE' AND `Segment` = 'Discount'\nUNION ALL\nSELECT \n-COUNT(*) AS `MoreDiscountGasStationsSVK`\nFROM gasstations\nWHERE `Country` = 'SVK' AND `Segment` = 'Discount'\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT COUNT(DISTINCT CustomerID) AS TotalSMEsCZK\nFROM customers\nWHERE Segment = 'SME' AND Currency = 'CZK'\nUNION ALL\nSELECT \nCOUNT(DISTINCT CustomerID) AS TotalSMEsEUR\nFROM customers\nWHERE Segment = 'SME' AND Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth \nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Segment = 'LAM' AND Consumption > 46.73) / \n(SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'LAM') * 100 AS PercentageLAMMoreThan46_73\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT COUNT(*) AS TotalCustomers\nFROM yearmonth\nWHERE Date = '201202' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(`Consumption`) AS `HighestMonthlyConsumption`\nFROM `yearmonth`\nWHERE SUBSTRING(`Date`, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description\nFROM products\nJOIN transactions_1k ON products.ProductID = transactions_1k.ProductID\nWHERE YEAR(transactions_1k.Date) = 2013 AND MONTH(transactions_1k.Date) = 9\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE YEAR(t.Date) = 2013 AND MONTH(t.Date) = 6\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT c.CustomerID)\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT `Time`\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) AS transactions_after_2012\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT Currency FROM customers \nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID \nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT Segment FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00')\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) AS NumberOfTransactions\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-26'\nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\nAND gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT Country\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Price = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT COUNT(DISTINCT c.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25') * 100 AS Percentage\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE c.Currency = 'EUR' AND t.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \t----- bird -----\tdebit_card_specializing",
    "26": "SELECT COUNT(*) AS total_count,\nSUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS premium_count,\n(SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS premium_percentage\nFROM gasstations\nWHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Price * Amount) AS TotalSpent\nFROM transactions_1k\nWHERE CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT CustomerID, Currency, AVG(Price/Amount) AS AvgPricePerItem\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nGROUP BY CustomerID, Currency\nORDER BY SUM(Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT yearmonth.CustomerID, yearmonth.Date, yearmonth.Consumption\nFROM yearmonth\nJOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.ProductID = 5\nAND (transactions_1k.Price / transactions_1k.Amount) > 29.00\nAND yearmonth.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major_name FROM major \nJOIN member ON major.major_id = member.link_to_major \nWHERE first_name = 'Angela' AND last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(member.member_id) AS medium_tshirt_count\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women's Soccer'\nAND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT e.event_id) AS meeting_count\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT event_name\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nGROUP BY event.event_id\nHAVING COUNT(attendance.link_to_member) > 20 AND event.type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS funds_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.expense_description, expense.approved\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen'\nAND (SUBSTRING(e.expense_date, 6, 2) = '09' OR SUBSTRING(e.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT (SUM(CASE WHEN YEAR(event_date) = 2019 THEN spent ELSE 0 END) - SUM(CASE WHEN YEAR(event_date) = 2020 THEN spent ELSE 0 END)) AS difference_spent\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters'\nAND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major_name FROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE first_name = 'Brent' AND last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) AS medium_tshirt_business_major\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received FROM income \nJOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT DIVIDE(\n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')),\n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))\n) AS times_more\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.link_to_member) AS number_of_attendees\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "51": "SELECT first_name, last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name, MAX(budget.spent / budget.amount) AS spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nGROUP BY event.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_for_food\nFROM budget\nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name\nFROM member\nJOIN budget ON member.member_id = budget.link_to_member\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name \nFROM event \nJOIN expense ON event.event_id = expense.link_to_event \nORDER BY expense.cost ASC \nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT (SELECT SUM(cost) FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')) / (SELECT SUM(cost) FROM expense) * 100 AS percentage_cost_for_yearly_kickoff\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) FROM member \nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS (\n  SELECT 1\n  FROM attendance a\n  JOIN member m ON a.link_to_member = m.member_id\n  JOIN event e ON a.link_to_event = e.event_id\n  WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women\\'s Soccer'\n)\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN event ON expense.link_to_budget = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed' AND budget.remaining < 0\nORDER BY budget.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN event ON expense.link_to_budget = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT b.category, SUM(b.amount) AS amount_budgeted\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'April Speaker'\nGROUP BY b.category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE first_name = 'Sacha' AND last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT category FROM budget \nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT (SELECT COUNT(*) FROM income \nJOIN member ON income.link_to_member = member.member_id\nWHERE member.t_shirt_size = 'Medium' AND income.amount = 50) / \n(SELECT COUNT(*) FROM member WHERE member.t_shirt_size = 'Medium') * 100 AS percentage\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' \nAND status = 'Closed' \nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, m.phone AS contact_number\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nHAVING AVG(e.cost) > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS in_patient_males,\n(SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS outpatient_males\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (\n    SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) > 1930 AND SEX = 'F'\n) AS BornAfter1930AndFemale,\n(\n    SELECT COUNT(*) FROM Patient WHERE SEX = 'F'\n) AS TotalFemales\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT (\n    SELECT COUNT(ID) \n    FROM Patient \n    WHERE Diagnosis = 'SLE' AND Admission = '-'\n) AS outpatient_count,\n(\n    SELECT COUNT(ID) \n    FROM Patient \n    WHERE Diagnosis = 'SLE' AND Admission = '+'\n) AS inpatient_count\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Diagnosis FROM Patient WHERE ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) FROM Patient\nWHERE SEX = 'F' AND YEAR(Description) = 1997 AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Examination.Thrombosis = 1 \nAND Patient.SEX = 'F' \nAND YEAR(Examination.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Examination.`Symptoms`, Examination.`Diagnosis`\nFROM Examination\nJOIN Patient ON Examination.`ID` = Patient.`ID`\nORDER BY Patient.`Birthday` DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MIN(Laboratory.Date) AS Oldest_SJS_Patient_Lab_Date, \nYEAR(Patient.`First Date`) - YEAR(Patient.Birthday) AS Initial_Age\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT (SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.UA <= 8.0) AS MaleAbnormalUA,\n(SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.UA <= 6.5) AS FemaleAbnormalUA\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE YEAR(Patient.Birthday) > YEAR(CURDATE()) - 18 \nAND YEAR(Examination.`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT YEAR(`Examination Date`) - YEAR(Birthday) AS Age, `Diagnosis`\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM`\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND Examination.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 0 END) - SUM(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END)) / SUM(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 0 END) AS `DecreaseRate`\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT ID \nFROM Laboratory \nWHERE Date BETWEEN '1987-07-06' AND '1996-01-31' \nAND GPT > 30 \nAND ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) AS `Number of Patients`\nFROM Examination\nWHERE `Thrombosis` = 2\nAND `ANA Pattern` = 'S'\nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB) \nFROM Laboratory \nJOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Patient.SEX = 'F' \nAND Laboratory.PLT > 400 \nAND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA' AND SEX = 'F') / \n(SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA') * 100 AS Percentage_Women\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT `Patient`.`SEX`, `Laboratory`.`UA`\nFROM `Patient`\nJOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID`\nWHERE `Patient`.`ID` = 57266\nAND ((`Patient`.`SEX` = 'M' AND `Laboratory`.`UA` > 8.0) OR (`Patient`.`SEX` = 'F' AND `Laboratory`.`UA` > 6.5))\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT `Patient`.`SEX`, COUNT(`Patient`.`ID`) AS `Total_Patients`\nFROM `Patient`\nJOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID`\nWHERE `Laboratory`.`T-BIL` >= 2.0\nGROUP BY `Patient`.`SEX`\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) AS Average_Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'M' AND `T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.TG >= 200 \nAND TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND YEAR(Patient.Birthday) BETWEEN 1936 AND 1956\nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) AS age, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT ID, SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Diagnosis = 'SLE' AND HGB > 10 AND HGB < 17\nORDER BY Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.HCT >= 52\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT COUNT(*) AS `LowerThanNormalRange` FROM Laboratory WHERE PLT < 100 UNION ALL SELECT COUNT(*) AS `HigherThanNormalRange` FROM Laboratory WHERE PLT > 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.PLT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(Laboratory.Date) = 1984\nAND TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) < 50\nAND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) > 55 AND Laboratory.PT >= 14 AND Patient.SEX = 'F') \n/\n(SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) > 55 AND Laboratory.PT >= 14) * 100 AS Percentage_Female_Abnormal_PT\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*) AS `Abnormal_Fibrinogen_Count`\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0\nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 \nAND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.IGA >= 80 AND Laboratory.IGA <= 500 \nAND YEAR(Patient.`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Laboratory\nJOIN Examination ON Laboratory.ID = Examination.ID\nWHERE IGM <= 40 OR IGM >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) FROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Description IS NULL AND Laboratory.CRP = '+'\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CRE >= 1.5 \nAND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP IN ('-', '+-')\nAND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) FROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (Laboratory.SM = '-' OR Laboratory.SM = '0') AND Examination.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination \nON Patient.ID = Examination.ID \nWHERE Patient.SEX = 'F' \nAND Examination.Symptoms IS NULL \nAND Examination.SC170 IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND Laboratory.CENTROMEA IN('-', '+-') \nAND Laboratory.SSB IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(Birthday) AS YoungestBirthdate\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT Patient.ID) AS PatientsWithNormalCPKAndPositiveCoagulation\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Laboratory.CPK < 250\nAND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT name FROM League \nJOIN Match ON League.id = Match.league_id \nWHERE season = '2015/2016' \nGROUP BY League.id \nORDER BY SUM(home_team_goal + away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League'\nAND Match.season = '2009/2010'\nAND Match.away_team_goal > Match.home_team_goal\nGROUP BY Match.away_team_api_id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_api_id, team_long_name, buildUpPlaySpeed\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT name \nFROM League \nJOIN Match ON League.id = Match.league_id \nWHERE season = '2015/2016' AND home_team_goal = away_team_goal \nGROUP BY League.id \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT YEAR(CURDATE()) - YEAR(birthday) AS age\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE sprint_speed >= 97\nAND YEAR(date) >= 2013\nAND YEAR(date) <= 2015\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name AS league_name, COUNT(m.id) AS total_matches\nFROM League l\nJOIN Match m ON l.id = m.league_id\nGROUP BY l.id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE strftime('%Y', date) = '2012'\nAND buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL\n)\t----- bird -----\teuropean_football_2",
    "136": "SELECT ROUND(\n    (\n        (\n            SELECT COUNT(*) \n            FROM Player \n            JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \n            WHERE Player_Attributes.preferred_foot = 'left' \n            AND YEAR(Player.birthday) BETWEEN 1987 AND 1992\n        ) \n        / \n        (\n            SELECT COUNT(*) \n            FROM Player \n            WHERE YEAR(birthday) BETWEEN 1987 AND 1992\n        )\n    ) * 100, 2\n) AS percentage_left_foot_preferred\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE height > 180\nGROUP BY Player.player_api_id\nORDER BY AVG(heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.id\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name, birthday\nFROM Player\nWHERE substr(birthday, 1, 7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_name, AVG(finishing) AS average_finishing_rate\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE height = (SELECT MAX(height) FROM Player)\n   OR height = (SELECT MIN(height) FROM Player)\nGROUP BY player_name\nORDER BY average_finishing_rate DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player t1\nJOIN Player_Attributes t2 ON t1.id = t2.player_api_id\nWHERE t1.height > 170\nAND strftime('%Y', t2.date) >= '2010'\nAND strftime('%Y', t2.date) <= '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) - \n(SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END)) AS difference_of_avg_ball_control\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday \nFROM Player \nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')\nORDER BY birthday ASC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, MAX(height) AS tallest_height\nFROM Player\nGROUP BY player_name\nORDER BY tallest_height DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id) \nFROM Player_Attributes \nWHERE strftime('%Y', birthday) < '1986' \nAND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE volleys > 70 AND dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS num_matches\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League'\nAND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT name FROM League WHERE id = (SELECT league_id FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY COUNT(*) DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "153": "SELECT (\n    (SELECT overall_rating FROM Player_Attributes \n     JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n     WHERE Player.player_name = 'Ariel Borysiuk') \n    - \n    (SELECT overall_rating FROM Player_Attributes \n     JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n     WHERE Player.player_name = 'Paulin Puel')\n) \n/\n(SELECT overall_rating FROM Player_Attributes \n JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n WHERE Player.player_name = 'Paulin Puel') \n* 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing_score, ta.chanceCreationPassingClass AS classification\nFROM Team t\nJOIN Team_Attributes ta ON t.id = ta.team_api_id\nWHERE t.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE overall_rating = 77 \nAND date LIKE '2016-06-23%' \nORDER BY birthday ASC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating FROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT date \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.player_name = 'Kevin Constant' \nAND Player_Attributes.crossing = (\n    SELECT MAX(crossing) \n    FROM Player_Attributes \n    JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n    WHERE Player.player_name = 'Kevin Constant'\n)\nORDER BY date ASC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT defenceAggressionClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Hannover 96'\nAND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.player_name = 'Marko Arnautovic' \nAND SUBSTR(Player_Attributes.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT (\n    (SELECT overall_rating FROM Player_Attributes \n     JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n     WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') \n    -\n    (SELECT overall_rating FROM Player_Attributes \n     JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n     WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')\n) \n/\n(SELECT overall_rating FROM Player_Attributes \n JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n WHERE player_name = 'Landon Donovan' AND date = '2013-07-12')\n* 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS jumping_difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND preferred_foot = 'right'\nORDER BY player_api_id\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT finishing, curve\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT league.name, COUNT(match.id) AS total_games\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.id\nORDER BY total_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nJOIN Match ON Team.team_api_id = Match.away_team_api_id \nORDER BY Match.away_team_goal DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "178": "SELECT (SELECT COUNT(*) FROM Player \nJOIN Player_Attributes ON Player.id = Player_Attributes.player_api_id \nWHERE height < 180 AND overall_rating > 70) / \n(SELECT COUNT(*) FROM Player) * 100 AS percentage\t----- bird -----\teuropean_football_2",
    "179": "SELECT driverRef \nFROM drivers \nJOIN qualifying ON drivers.driverId = qualifying.driverId \nWHERE qualifying.raceId = 20 \nORDER BY qualifying.q1 DESC \nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nWHERE qualifying.raceId = 19 AND qualifying.q2 = (\n    SELECT MIN(q2)\n    FROM qualifying\n    WHERE raceId = 19\n)\t----- bird -----\tformula_1",
    "181": "SELECT name FROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT lat, lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix')\t----- bird -----\tformula_1",
    "184": "SELECT q1 FROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE raceId = 354 AND CONCAT(drivers.forename, ' ', drivers.surname) = 'Bruno Senna'\t----- bird -----\tformula_1",
    "185": "SELECT number FROM qualifying WHERE raceId = 903 AND q3 LIKE '1:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS drivers_not_finished\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE lapTimes.raceId = 161 AND lapTimes.time = '1:27'\t----- bird -----\tformula_1",
    "189": "SELECT location, lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Malaysian Grand Prix')\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nWHERE constructorResults.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nWHERE qualifying.raceId = 45 AND qualifying.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 872 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nORDER BY results.fastestLapSpeed DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT ((SELECT fastestLapSpeed FROM results \n  JOIN drivers ON results.driverId = drivers.driverId \n  WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND results.raceId = 853) - \n (SELECT fastestLapSpeed FROM results \n  JOIN drivers ON results.driverId = drivers.driverId \n  WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND results.raceId = 854)) \n  / \n (SELECT fastestLapSpeed FROM results \n  JOIN drivers ON results.driverId = drivers.driverId \n  WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND results.raceId = 853) * 100 AS percentage_faster\t----- bird -----\tformula_1",
    "196": "SELECT COUNT(driverId) AS TotalDrivers,\nSUM(CASE WHEN time IS NOT NULL THEN 1 ELSE 0 END) AS CompletedDrivers,\n(SUM(CASE WHEN time IS NOT NULL THEN 1 ELSE 0 END) / COUNT(driverId)) * 100 AS CompletionRate\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races WHERE year = (SELECT MIN(year) FROM races) AND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races WHERE year = (SELECT MIN(year) FROM races))\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, MAX(driverStandings.points) AS points\nFROM driverStandings\nJOIN drivers ON driverStandings.driverId = drivers.driverId\nGROUP BY driverStandings.driverId\nORDER BY points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(lapTimes.milliseconds) AS BestLapTime, drivers.forename, drivers.surname, races.name\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE lapTimes.milliseconds IS NOT NULL\nGROUP BY lapTimes.raceId, lapTimes.driverId\nORDER BY BestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix'\nAND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT (SELECT COUNT(*) FROM results \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE drivers.surname = 'Hamilton' AND results.position != 1 AND races.year >= 2010) \n/\n(SELECT COUNT(*) FROM results \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE drivers.surname = 'Hamilton' AND races.year >= 2010) AS percentage\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) AS max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY SUM(driverStandings.wins) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\nGROUP BY driverId\nORDER BY age ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM races\nJOIN drivers ON drivers.driverId = results.driverId\nJOIN results ON results.raceId = races.raceId\nWHERE CONCAT(drivers.forename, ' ', drivers.surname) = 'Alex Yoong'\nAND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.milliseconds ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name AS race_name, results.points AS points\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT (SELECT COUNT(*) FROM races \nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany' AND races.name = 'European Grand Prix') AS races_in_germany,\n(SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix') AS total_european_gp\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT country FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT driverRef\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE CONCAT(drivers.forename, ' ', drivers.surname) = 'Lewis Hamilton' AND results.rank = (\n    SELECT MIN(results.rank)\n    FROM results\n    JOIN drivers ON results.driverId = drivers.driverId\n    WHERE CONCAT(drivers.forename, ' ', drivers.surname) = 'Lewis Hamilton' AND results.rank IS NOT NULL\n)\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) AS FastestLapSpeed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT positionOrder\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Chinese Grand Prix'\nAND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT time FROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Chinese Grand Prix' \nAND races.year = 2008 \nAND results.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverId) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT \t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) \nFROM constructorResults \nJOIN constructors ON constructorResults.constructorId = constructors.constructorId \nWHERE nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nWHERE constructorResults.raceId = 291 AND constructorResults.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorId) \nFROM constructors c \nJOIN constructorResults cr ON c.constructorId = cr.constructorId \nJOIN races r ON cr.raceId = r.raceId \nWHERE c.nationality = 'Japanese' AND cr.points = 0 \nGROUP BY c.constructorId \nHAVING COUNT(r.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT (\n    SELECT COUNT(DISTINCT r.driverId) \n    FROM results r\n    JOIN drivers d ON r.driverId = d.driverId\n    JOIN races ra ON r.raceId = ra.raceId\n    WHERE d.nationality = 'Japanese'\n    AND ra.year BETWEEN 2007 AND 2009\n    AND r.time IS NOT NULL\n) AS completed_races,\n(\n    SELECT COUNT(DISTINCT r.driverId) \n    FROM results r\n    JOIN drivers d ON r.driverId = d.driverId\n    JOIN races ra ON r.raceId = ra.raceId\n    WHERE d.nationality = 'Japanese'\n    AND ra.year BETWEEN 2007 AND 2009\n) AS total_races\t----- bird -----\tformula_1",
    "224": "SELECT YEAR(r.date) AS `Year`, AVG(TIME_TO_SEC(r.time)) AS `AverageChampionTimeInSeconds`\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE r.position = 1 AND ra.year < 1975 AND r.time IS NOT NULL\nGROUP BY YEAR(ra.date)\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN driverStandings ON results.raceId = driverStandings.raceId AND results.driverId = driverStandings.driverId\nWHERE races.year = 2009 AND driverStandings.position = 1\nORDER BY races.round DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(fastestLapSpeed AS DECIMAL(10,3))) AS avg_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT (\n    (SELECT COUNT(DISTINCT d.driverId) \n     FROM drivers d\n     JOIN results r ON d.driverId = r.driverId\n     WHERE YEAR(d.dob) < 1985 AND r.laps > 50) / \n    (SELECT COUNT(DISTINCT driverId) \n     FROM results\n     WHERE YEAR(date) BETWEEN 2000 AND 2005)\n) * 100 AS percentage\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId) \nFROM drivers d \nJOIN lapTimes lt ON d.driverId = lt.driverId \nWHERE d.nationality = 'French' \nAND TIME_TO_SEC(lt.time) < 120\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT code FROM drivers \nORDER BY dob DESC \nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE YEAR(drivers.dob) = 1971 AND results.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS 'Disqualified Finishers'\nFROM results\nWHERE raceId BETWEEN 50 AND 100\nAND statusId = 2\nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(circuitId) AS times_held, location, lat, lng\nFROM circuits\nWHERE country = 'Austria'\nGROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "235": "SELECT year, races.name, races.date, races.time\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT drivers.driverId, CONCAT(drivers.forename, ' ', drivers.surname) AS FullName, AVG(TIME_TO_SEC(pitStops.duration)) AS AvgPitStopDuration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German'\nAND YEAR(drivers.dob) BETWEEN 1980 AND 1985\nGROUP BY drivers.driverId\nORDER BY AvgPitStopDuration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.year = 2008 AND races.name = 'Canadian Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN constructors ON results.constructorId = constructors.constructorId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY results.positionOrder ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructor.name, constructor.nationality, SUM(constructorResults.points) AS total_points\nFROM constructorResults\nJOIN races ON constructorResults.raceId = races.raceId\nJOIN constructors AS constructor ON constructorResults.constructorId = constructor.constructorId\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructorResults.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname\nFROM qualifying\nJOIN races ON qualifying.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE races.year = 2008\nAND circuits.name = 'Marina Bay Street Circuit'\nAND qualifying.position = 1\nAND races.round = 3\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename, drivers.surname, drivers.nationality, races.name\nFROM drivers\nJOIN races ON races.raceId = (\n    SELECT raceId\n    FROM results\n    WHERE driverId = (\n        SELECT driverId\n        FROM drivers\n        ORDER BY dob DESC\n        LIMIT 1\n    )\n    ORDER BY date ASC\n    LIMIT 1\n)\nWHERE drivers.driverId = (\n    SELECT driverId\n    FROM drivers\n    ORDER BY dob DESC\n    LIMIT 1\n)\t----- bird -----\tformula_1",
    "243": "SELECT MAX(accidents) AS highest_accidents\nFROM (\n    SELECT driverId, COUNT(*) AS accidents\n    FROM results\n    WHERE raceId IN (\n        SELECT raceId\n        FROM races\n        WHERE name = 'Canadian Grand Prix'\n    ) AND statusId = 3\n    GROUP BY driverId\n) AS accident_counts\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nORDER BY lt.time ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT c.name AS circuit_name, r.name AS race_name, d.forename, d.surname, l.time AS lap_record\nFROM lapTimes l\nJOIN races r ON l.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON l.driverId = d.driverId\nWHERE c.country = 'Italy'\nORDER BY l.time ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' \nAND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) AS superheroes_with_agility\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE eye_colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher_name \nFROM publisher \nJOIN superhero ON publisher.id = superhero.publisher_id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE attribute.attribute_name = 'Speed' \nORDER BY hero_attribute.attribute_value ASC \nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) AS gold_eyed_marvel_superheroes\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE eye_colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT superhero.id) AS female_superheroes_with_strength_100\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE gender.gender = 'Female'\nAND attribute.attribute_name = 'Strength'\nAND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT (SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) AS total_bad_heroes,\n(SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_bad_heroes\t----- bird -----\tsuperhero",
    "260": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - \n(SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference_in_superheroes_published\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT superpower.power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nJOIN superhero ON hero_power.hero_id = superhero.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185 AND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT ROUND(\n    (\n        (\n            SELECT COUNT(*) \n            FROM superhero \n            JOIN publisher ON superhero.publisher_id = publisher.id \n            WHERE publisher.publisher_name = 'Marvel Comics' \n            AND superhero.height_cm BETWEEN 150 AND 180\n        ) \n        / \n        (\n            SELECT COUNT(*) \n            FROM superhero \n            WHERE superhero.height_cm BETWEEN 150 AND 180\n        )\n    ) * 100, 2) AS percentage_marvel_comics\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nAND superhero.weight_kg > (\n    SELECT 0.79 * AVG(weight_kg)\n    FROM superhero\n)\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_id) AS num_heroes_with_stealth\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE attribute.attribute_name = 'durability' AND publisher.publisher_name = 'Dark Horse Comics'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT colour.eye_colour AS eyes, colour.hair_colour AS hair, colour.skin_colour AS skin\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE eye_colour.id = hair_colour.id AND hair_colour.id = skin_colour.id\t----- bird -----\tsuperhero",
    "275": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN colour ON superhero.skin_colour_id = colour.id \n        JOIN gender ON superhero.gender_id = gender.id \n        WHERE colour.colour = 'Blue' AND gender.gender = 'Female'\n    ) \n    / \n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN gender ON superhero.gender_id = gender.id \n        WHERE gender.gender = 'Female'\n    ) \n    * 100, \n    2\n) AS percentage_blue_female_superheroes\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS power_count\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT height_cm \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT hero_id) \nFROM hero_attribute \nWHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') \nAND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "281": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN gender ON superhero.gender_id = gender.id \n        JOIN publisher ON superhero.publisher_id = publisher.id \n        WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'\n    ) \n    / \n    (\n        SELECT COUNT(*) \n        FROM superhero \n        JOIN publisher ON superhero.publisher_id = publisher.id \n        WHERE publisher.publisher_name = 'Marvel Comics'\n    ) \n    * 100, \n    2\n) AS percent_female_marvel\t----- bird -----\tsuperhero",
    "282": "SELECT (SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky') - \n(SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7) / (SELECT COUNT(*) FROM superhero) * 100 AS percentage_blue_eyes\t----- bird -----\tsuperhero",
    "290": "SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) AS ratio\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour AS eye_colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT COUNT(*) AS difference\nFROM superhero AS T1\nLEFT JOIN colour AS T2 ON T1.eye_colour_id = T2.id\nWHERE (T1.weight_kg IS NULL OR T1.weight_kg = 0)\nAND (T2.colour = 'Blue' OR T2.colour IS NULL)\nGROUP BY T2.colour\nHAVING T2.colour = 'Blue' - T2.colour IS NULL\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) FROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - \n(SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon') \nORDER BY Reputation DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT OwnerDisplayName FROM posts WHERE Title = \"Eliciting priors from experts\"\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Age > 65 AND posts.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.Body\nFROM tags\nJOIN posts ON tags.ExcerptPostId = posts.Id\nWHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS AverageScore\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT COUNT(*) FROM posts WHERE Score > 5 AND OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) / (SELECT COUNT(*) FROM posts WHERE Score > 5) * 100\t----- bird -----\tcodebase_community",
    "307": "SELECT FavoriteCount FROM posts WHERE Id = (SELECT PostId FROM comments WHERE UserId = 3025 AND CreationDate = '2014-04-23 20:29:39')\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE \n    WHEN p.ClosedDate IS NULL THEN 'No'\n    ELSE 'Yes'\nEND AS IsPostWellFinished\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853\nAND c.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT (SELECT COUNT(p.Id) FROM posts p WHERE p.OwnerUserId = 24) / (SELECT COUNT(v.Id) FROM votes v WHERE v.UserId = 24) AS PostToVoteRatio\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM comments WHERE Text = 'thank you user93!')\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text\nFROM comments\nJOIN postHistory ON comments.PostId = postHistory.PostId\nJOIN posts ON postHistory.PostId = posts.Id\nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND postHistory.UserId = comments.UserId\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName\nFROM users\nJOIN votes ON users.Id = votes.UserId\nJOIN posts ON votes.PostId = posts.Id\nWHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) AS AverageViewCount\nFROM posts p\nJOIN tags t ON p.Tags LIKE CONCAT('%<', t.TagName, '>%')\nJOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = 'humor'\nGROUP BY p.Id, p.Title, c.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT users.Id, users.DisplayName\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nJOIN postHistory ON posts.Id = postHistory.PostId\nGROUP BY users.Id, users.DisplayName\nHAVING COUNT(DISTINCT postHistory.PostId) = 1 AND SUM(posts.ViewCount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT (\n    (\n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND YEAR(Date) = 2010) / \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student')\n    ) * 100\n    -\n    (\n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND YEAR(Date) = 2011) / \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student')\n    ) * 100\n) AS PercentageDifference\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS AverageUpVotes, AVG(u.Age) AS AverageAge\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nGROUP BY u.Id\nHAVING COUNT(p.Id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT (\n    SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2010\n) AS Votes2010,\n(\n    SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2011\n) AS Votes2011\t----- bird -----\tcodebase_community",
    "325": "SELECT posts.Id\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'slashnick'\nORDER BY posts.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, MAX(SUM(ViewCount)) AS MaxViewCount\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY DisplayName\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.TagName\nFROM tags\nJOIN posts ON posts.Id = tags.ExcerptPostId\nJOIN users ON users.Id = posts.OwnerUserId\nWHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (\n    SELECT COUNT(p.Id) \n    FROM posts p \n    JOIN users u ON p.OwnerUserId = u.Id \n    JOIN tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%')\n    WHERE u.DisplayName = 'Community' AND t.TagName = 'r'\n) AS r_posts_by_community,\n(\n    SELECT COUNT(p.Id) \n    FROM posts p \n    JOIN users u ON p.OwnerUserId = u.Id \n    WHERE u.DisplayName = 'Community'\n) AS total_posts_by_community\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(p.ViewCount) AS MorningtonViews\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Mornington'\nUNION\nSELECT \nSUM(p.ViewCount) AS AmosViews\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Amos'\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(links_per_month) AS average_monthly_links\nFROM (\n    SELECT COUNT(pl.Id) AS links_per_month\n    FROM postLinks pl\n    JOIN posts p ON pl.PostId = p.Id\n    WHERE YEAR(pl.CreationDate) = 2010 AND p.AnswerCount <= 2\n    GROUP BY MONTH(pl.CreationDate)\n) AS monthly_links\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) AS FirstVoteDate\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE users.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT DisplayName FROM users\nWHERE Id = (\n    SELECT UserId FROM badges\n    WHERE Name = 'Autobiographer'\n    ORDER BY Date ASC\n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) AS UsersWithFavoritePosts\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.Id, posts.Title\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky'\nORDER BY posts.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY p.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT (SELECT COUNT(*) FROM posts \nJOIN users ON posts.OwnerUserId = users.Id\nWHERE YEAR(users.CreationDate) = 2011 AND users.Reputation > 1000) / \n(SELECT COUNT(*) FROM posts) * 100 AS Percentage\t----- bird -----\tcodebase_community",
    "337": "SELECT ViewCount, DisplayName\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Body LIKE '%Computer Game Datasets%'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, comments.UserDisplayName\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.Title = 'Analysing wind data with R'\nORDER BY comments.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT (SELECT COUNT(*) FROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Reputation = (SELECT MAX(Reputation) FROM users) AND posts.Score > 50) \n/\n(SELECT COUNT(*) FROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Reputation = (SELECT MAX(Reputation) FROM users)) AS PercentageAbove50Score\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes\nFROM users\nJOIN comments ON users.Id = comments.UserId\nWHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.ViewCount BETWEEN 100 AND 150\nORDER BY comments.Score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nJOIN posts ON comments.PostId = posts.Id \nWHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT (SELECT COUNT(DISTINCT c.UserId) FROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Score BETWEEN 5 AND 10 AND u.UpVotes = 0) / \n(SELECT COUNT(DISTINCT c.UserId) FROM comments c\nWHERE c.Score BETWEEN 5 AND 10) * 100 AS PercentageOfUsersWithZeroUpVotes\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards\nWHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT * FROM cards \nWHERE borderColor = 'borderless' \nAND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT cards.name, cards.setcode, legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power = '*' OR cards.power IS NULL)\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hasContentWarning\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.uuid\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified') / (SELECT COUNT(*) FROM foreign_data) * 100 AS percentage_chinese_simplified\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format, legalities.status\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT (SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless') / (SELECT COUNT(*) FROM cards) * 100 AS borderless_percentage\t----- bird -----\tcard_games",
    "358": "SELECT (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'French')) / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100 AS percentage_french_story_spotlight\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.id, c.name, fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originalType = 'Artifact' AND c.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) FROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE set_translations.language = 'Portuguese (Brasil)' AND sets.block = 'Commander'\t----- bird -----\tcard_games",
    "366": "SELECT type FROM foreign_data WHERE language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nJOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE foreign_data.language = 'French'\nAND cards.type = 'Creature'\nAND cards.layout = 'normal'\nAND cards.borderColor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT (SELECT COUNT(*) FROM cards \nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'commander' AND legalities.status = 'legal' AND cards.hasContentWarning = 0) \n/\n(SELECT COUNT(*) FROM cards \nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'commander' AND legalities.status = 'legal') * 100 AS percentage_no_content_warning\t----- bird -----\tcard_games",
    "372": "SELECT (SELECT COUNT(*) FROM cards \nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE (cards.power IS NULL OR cards.power = '*') AND foreign_data.language = 'French') \n/\n(SELECT COUNT(*) FROM cards WHERE cards.power IS NULL OR cards.power = '*') * 100 AS percentage_french_no_power\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT (SELECT COUNT(*) FROM cards WHERE isTextless = 1 AND layout = 'normal') / (SELECT COUNT(*) FROM cards WHERE isTextless = 1) * 100 AS proportion_no_text_box_normal_layout\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT foreign_data.language\nFROM foreign_data\nJOIN sets ON foreign_data.uuid = sets.code\nWHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper')\t----- bird -----\tcard_games",
    "378": "SELECT translation FROM set_translations \nWHERE language = 'Italian' \nAND setCode = (SELECT setCode FROM cards WHERE name = 'Ancestor''s Chosen')\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS (\n  SELECT 1\n  FROM cards c\n  JOIN foreign_data fd ON c.uuid = fd.uuid\n  WHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Korean'\n)\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards \nJOIN sets ON cards.setCode = sets.code \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE set_translations.translation = 'Hauptset Zehnte Edition' \nAND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') AND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT EXISTS (\n    SELECT 1\n    FROM cards c\n    JOIN sets s ON c.setCode = s.mtgoCode\n    WHERE c.name = 'Angel of Mercy'\n    AND s.mtgoCode IS NOT NULL\n)\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "384": "SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE set_translations.language = 'Italian' \nAND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist FROM cards \nWHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') \nAND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) AS UnknownPowerCount\nFROM cards\nWHERE convertedManaCost > 5\nAND setCode = 'CSP'\nAND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND rulings.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT fd.name AS ItalianName\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.setCode = 'CSP' AND fd.language = 'Italian' AND c.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    WHERE setCode = 'CSP'\n)\t----- bird -----\tcard_games",
    "391": "SELECT (SELECT COUNT(*) FROM cards WHERE convertedManaCost = 7 AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) / (SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) * 100 AS percentage\t----- bird -----\tcard_games",
    "392": "SELECT (SELECT COUNT(*) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND setCode = 'CSP') / (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP') * 100 AS percentage_incredibly_powerful FROM dual\t----- bird -----\tcard_games",
    "393": "SELECT legalities.format, cards.name\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE legalities.status = 'Banned'\nGROUP BY legalities.format\nORDER BY COUNT(legalities.status) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Korean'\nAND sets.code NOT IN (\n    SELECT setCode\n    FROM set_translations\n    WHERE language LIKE '%Japanese%'\n)\t----- bird -----\tcard_games",
    "397": "SELECT frameVersion, name\nFROM cards\nWHERE artist = 'Allen Williams'\nAND id IN (\n    SELECT id\n    FROM legalities\n    WHERE status = 'Banned'\n)\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(bond_type) AS frequency\nFROM bond\nGROUP BY bond_type\nORDER BY frequency DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN a.element = 'O' THEN 1 ELSE 0 END) AS avg_oxygen_atoms\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bond_count) AS average_single_bonded_carcinogenic\nFROM (\n    SELECT m.molecule_id, COUNT(b.bond_id) AS single_bond_count\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    WHERE m.label = '+' AND b.bond_type = '-'\n    GROUP BY m.molecule_id\n) AS single_bonded_carcinogenic\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT (SELECT COUNT(*) FROM atom \nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element = 'c' AND bond.bond_type = '=')\n/\n(SELECT COUNT(*) FROM atom \nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '=') AS carbon_percentage\t----- bird -----\ttoxicology",
    "403": "SELECT element \nFROM atom \nWHERE atom_id IN \n    (SELECT atom_id \n     FROM connected \n     WHERE bond_id = 'TR004_8_9'\n     UNION \n     SELECT atom_id2 \n     FROM connected \n     WHERE bond_id = 'TR004_8_9')\t----- bird -----\ttoxicology",
    "404": "SELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'h'\n)\nGROUP BY label\nORDER BY COUNT(label) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(element) AS element_count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY element_count ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20')\n   OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id) AS total_atoms\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE (atom.element = 'i' OR atom.element = 's') AND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT \t----- bird -----\ttoxicology",
    "410": "SELECT COUNT(DISTINCT molecule.molecule_id) AS total_carcinogenic_molecules,\nSUM(CASE WHEN bond.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR000' \nORDER BY element ASC \nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM bond \n        WHERE bond_type = '=' AND molecule_id = 'TR008'\n    ) / \n    (\n        SELECT COUNT(*) \n        FROM bond \n        WHERE molecule_id = 'TR008'\n    ) * 100, \n    5\n) AS percentage_double_bonds\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM molecule \n        WHERE label = '+'\n    ) / \n    (\n        SELECT COUNT(*) \n        FROM molecule\n    ) * 100,\n    3\n) AS percentage_carcinogenic\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(\n    (\n        SELECT COUNT(*) \n        FROM atom \n        WHERE element = 'h' AND molecule_id = 'TR206'\n    ) \n    / \n    (\n        SELECT COUNT(*) \n        FROM atom \n        WHERE molecule_id = 'TR206'\n    ) \n    * 100, \n    4\n) AS hydrogen_percentage\t----- bird -----\ttoxicology",
    "415": "SELECT element, label \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label = '-' AND b.bond_type = '-'\nGROUP BY m.molecule_id\nORDER BY m.molecule_id ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT bond_id) \nFROM connected \nWHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') \nAND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, atom.atom_id, connected.atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON atom.atom_id = connected.atom_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connection_count\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT element FROM atom WHERE molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE a1.element = 'p' AND a2.element = 'n'\nUNION\nSELECT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id2 = a1.atom_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id = a2.atom_id\nWHERE a1.element = 'p' AND a2.element = 'n'\t----- bird -----\ttoxicology",
    "424": "SELECT \t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT atom.atom_id, COUNT(connected.bond_id) AS bond_count\n    FROM atom\n    LEFT JOIN connected ON atom.atom_id = connected.atom_id\n    WHERE atom.element = 'i'\n    GROUP BY atom.atom_id\n) AS bond_counts\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT element FROM atom \nWHERE atom_id IN (\n    SELECT atom_id FROM connected \n    WHERE bond_id = 'TR144_8_19'\n    UNION\n    SELECT atom_id2 FROM connected \n    WHERE bond_id = 'TR144_8_19'\n)\t----- bird -----\ttoxicology",
    "429": "SELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(\n    (\n        SELECT COUNT(DISTINCT b.bond_id) \n        FROM bond b\n        JOIN molecule m ON b.molecule_id = m.molecule_id\n        WHERE b.bond_type = '-' AND m.label = '+'\n    ) * 100.0 / \n    (\n        SELECT COUNT(bond_id) \n        FROM bond \n        WHERE bond_type = '-'\n    ), \n    5\n) AS proportion_carcinogenic\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(a.atom_id) * 100 AS percentage\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT element FROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nWHERE connected.bond_id = 'TR001_10_11'\nUNION\nSELECT element FROM atom \nJOIN connected ON atom.atom_id = connected.atom_id2 \nWHERE connected.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT COUNT(*) AS total_chlorine_atoms\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE element = 'cl' AND label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\nAND SUBSTR(atom.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT (\n    SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) / COUNT(a.element)\n) AS hydrogen_ratio,\nm.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.molecule_id = 'TR006'\nGROUP BY m.label\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE satscores.AvgScrMath > 400 \nAND schools.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) AS HighestEligibleFreeRate\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.school, s.CharterNum, s.AvgScrWrite\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrWrite > 499\nORDER BY s.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT `School Name`, `Street`, `City`, `Zip`, `State`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.schoolName, f.`Percent (%) Eligible Free (K-12)`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores sat ON s.CDSCode = sat.cds\nWHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND sat.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE s.County = 'Riverside' AND sat.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT School.Name, School.Street, School.City, School.State, School.Zip\nFROM schools AS School\nJOIN frpm AS FRPM ON School.CDSCode = FRPM.CDSCode\nWHERE School.County = 'Monterey'\nAND School.HighGrade = '12'\nAND (FRPM.`Free Meal Count (Ages 5-17)` + FRPM.`FRPM Count (Ages 5-17)`) > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.sname, s.AvgScrWrite, sc.Phone\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE (sc.OpenDate > '1991-01-01' OR sc.ClosedDate < '2000-12-31') AND s.AvgScrWrite IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Charter Funding Type` = 'Locally funded'\nAND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n     FROM frpm f2\n     JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n     WHERE f2.`Charter Funding Type` = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, \n`Enrollment (K-12)`, \n`Free Meal Count (K-12)`, \n(`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS `Eligible Free Rate`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 9, 2\t----- bird -----\tcalifornia_schools",
    "449": "SELECT `School Name`, \n`FRPM Count (K-12)` / `Enrollment (K-12)` AS `Eligible_FRPM_Rate`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.SOC = '66' AND `Enrollment (K-12)` > 0\nORDER BY `FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.Street, schools.City, schools.Zip, schools.State\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.AdmFName1, s.AdmLName1, s.AdmFName2, s.AdmLName2, s.AdmFName3, s.AdmLName3\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nORDER BY ss.NumGE1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr) AS AvgNumTestTakers\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Fresno'\nAND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT Phone FROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE satscores.dname = 'Fresno Unified' \nORDER BY satscores.AvgScrRead ASC \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School, s.County\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'F'\nORDER BY s.County, ss.AvgScrRead DESC\nPARTITION BY s.County\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.sname, AVG(s.AvgScrWrite) AS AvgWritingScore\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nWHERE sch.AdmFName1 = 'Ricci' AND sch.AdmLName1 = 'Ulrich'\nGROUP BY s.sname\t----- bird -----\tcalifornia_schools",
    "456": "SELECT `School`, `Enrollment (K-12)`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE DOC = '31'\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS MonthlyAvg\nFROM schools\nWHERE County = 'Alameda'\nAND DOC = '52'\nAND YEAR(OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT (\n    SELECT COUNT(*) \n    FROM schools \n    WHERE DOC = '54' AND County = 'Orange'\n) AS UnifiedSchools,\n(\n    SELECT COUNT(*) \n    FROM schools \n    WHERE DOC = '52' AND County = 'Orange'\n) AS ElementarySchools\t----- bird -----\tcalifornia_schools",
    "459": "SELECT sname, Street\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) AS `Total Non-Chartered Schools`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Charter = 0\nAND s.County = 'Los Angeles'\nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `frpm`.`Enrollment (Ages 5-17)`\nFROM `frpm`\nJOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode`\nWHERE `schools`.`EdOpsCode` = 'SSS'\nAND `frpm`.`Academic Year` = '2014-2015'\nAND `schools`.`City` = 'Fremont'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.School, frpm.`Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Los Angeles'\nAND schools.GSserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT COUNT(*) AS `Total Virtual Schools`, `County`\nFROM schools\nWHERE `Virtual` = 'F' AND (`County` = 'San Diego' OR `County` = 'Santa Barbara')\nGROUP BY `County`\nORDER BY `Total Virtual Schools` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(DISTINCT s.City) AS NumberOfCities, s.City, COUNT(s.School) AS NumberOfSchools\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\nAND s.GSserved = 'K-8'\nAND f.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY s.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT `District Code`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) * 100 AS `Percent (%) Eligible Free (K-12)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino'\nAND City = 'San Bernardino City Unified'\nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\nAND (SOC = '62' OR DOC = '54')\nAND StatusType = 'Public'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nWHERE district.A3 = 'East Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(client.client_id) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' \nAND district.A3 = 'North Bohemia' \nAND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id, MIN(district.A11) AS Lowest_Average_Salary, MAX(district.A11) - MIN(district.A11) AS Salary_Gap\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nGROUP BY account.account_id\nORDER BY client.birth_date DESC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nJOIN district ON client.district_id = district.district_id\nORDER BY client.birth_date DESC, district.A11 DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id, loan.amount, account.frequency\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.date LIKE '1997%' AND loan.status = 'A' AND account.frequency = 'POPLATEK TYDNE'\nORDER BY loan.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id, loan.amount, account.date\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND YEAR(account.date) = 1993\nORDER BY loan.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.client_id) AS female_customers_born_before_1950_in_Sokolov\nFROM client\nJOIN account ON client.district_id = account.district_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nAND client.birth_date < '1950-01-01'\nAND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT district.A2\nFROM client\nJOIN account ON client.district_id = account.district_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT (SELECT COUNT(client.client_id) FROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A3 = 'south Bohemia' AND client.gender = 'M') / \n(SELECT COUNT(client.client_id) FROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A3 = 'south Bohemia') * 100 AS percentage_male_clients\nFROM district\nWHERE district.A4 = (SELECT MAX(district.A4) FROM district WHERE district.A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT (\n    (SELECT balance FROM trans WHERE account_id = (\n        SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' LIMIT 1\n    ) AND date = '1998-12-27' LIMIT 1)\n    -\n    (SELECT balance FROM trans WHERE account_id = (\n        SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' LIMIT 1\n    ) AND date = '1993-03-22' LIMIT 1)\n) / \n(SELECT balance FROM trans WHERE account_id = (\n    SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' LIMIT 1\n) AND date = '1993-03-22' LIMIT 1) * 100 AS increase_rate\t----- bird -----\tfinancial",
    "479": "SELECT SUM(amount) AS total_paid_loans\nFROM loan\nWHERE status = 'A'\t----- bird -----\tfinancial",
    "480": "SELECT ROUND(\n    (\n        SUM(CASE WHEN loan.amount < 100000 AND loan.status = 'C' THEN 1 ELSE 0 END) / \n        SUM(CASE WHEN loan.amount < 100000 THEN 1 ELSE 0 END)\n    ) * 100, 2\n) AS percentage_running_no_issue\nFROM loan\t----- bird -----\tfinancial",
    "481": "SELECT d.A2 AS district, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT A2, COUNT(client.client_id) AS female_count\nFROM district\nJOIN client ON district.district_id = client.district_id\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nWHERE client.gender = 'F'\nGROUP BY district.district_id\nORDER BY female_count DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(loan.loan_id) AS total_approved_loans\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND loan.amount >= 250000\nAND loan.status = 'A'\nAND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.A1 = 'Branch location 1' AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15) FROM district WHERE A15 < (SELECT MAX(A15) FROM district)\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT A2 AS district_name, SUM(amount) AS total_withdrawals\nFROM trans\nJOIN district ON trans.account_id = district.district_id\nWHERE type = 'VYDAJ' AND date LIKE '1996-01%' AND operation != 'CREDIT_CARD'\nGROUP BY district_name\nORDER BY total_withdrawals DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nWHERE district.A2 = 'Branch location 1'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15) FROM district\n    WHERE A15 < (SELECT MAX(A15) FROM district)\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT client.client_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nJOIN trans ON disp.account_id = trans.account_id\nWHERE trans.operation = 'VYBER KARTOU'\nAND YEAR(trans.date) = 1998\nAND trans.amount < (SELECT AVG(amount) FROM trans WHERE trans.operation = 'VYBER KARTOU' AND YEAR(trans.date) = 1998)\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT disp.type, district.A11 AS average_income\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE disp.type != 'OWNER'\nAND district.A11 > 8000\nAND district.A11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) AS average_crimes_1995\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000 AND YEAR(a.date) >= 1997\t----- bird -----\tfinancial",
    "492": "SELECT trans.*\nFROM trans\nJOIN disp ON trans.account_id = disp.account_id\nWHERE disp.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client \nJOIN account ON client.district_id = account.district_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.A11 > 10000) AS percentage_women\nFROM client \nJOIN account ON client.district_id = account.district_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.A11 > 10000 AND client.gender = 'F'\t----- bird -----\tfinancial",
    "494": "SELECT ((SUM(CASE WHEN YEAR(l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) / SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) * 100 AS growth_rate\nFROM loan l\nJOIN disp d ON l.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT frequency FROM account WHERE account_id = 3\t----- bird -----\tfinancial",
    "496": "SELECT (SELECT COUNT(client.client_id) FROM client\nJOIN account ON client.district_id = account.district_id\nWHERE client.gender = 'M' AND account.frequency = 'POPLATEK TYDNE') * 100.0 /\n(SELECT COUNT(client.client_id) FROM client\nJOIN account ON client.district_id = account.district_id\nWHERE account.frequency = 'POPLATEK TYDNE') AS percentage_male_clients_weekly_statements\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date DESC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount) AS average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.status IN ('C', 'D') AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, TIMESTAMPDIFF(YEAR, client.birth_date, CURDATE()) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}