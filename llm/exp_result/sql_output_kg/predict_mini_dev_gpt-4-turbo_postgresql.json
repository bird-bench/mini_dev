{
    "0": "SELECT (SELECT COUNT(*) FROM customers WHERE currency = 'EUR')::FLOAT / \n(SELECT COUNT(*) FROM customers WHERE currency = 'CZK') AS ratio_eur_czk\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customerid, MIN(consumption) AS least_consumption\nFROM yearmonth\nWHERE date BETWEEN '201201' AND '201212'\nGROUP BY customerid\nORDER BY least_consumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(consumption) / 12 AS average_monthly_consumption\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE customers.segment = 'SME'\nAND SUBSTRING(date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT SUM(CASE WHEN c.currency = 'CZK' THEN ym.consumption ELSE 0 END) AS czk_consumption,\nSUM(CASE WHEN c.currency = 'EUR' THEN ym.consumption ELSE 0 END) AS eur_consumption,\n(SUM(CASE WHEN c.currency = 'CZK' THEN ym.consumption ELSE 0 END) - SUM(CASE WHEN c.currency = 'EUR' THEN ym.consumption ELSE 0 END)) AS consumption_difference\nFROM yearmonth ym\nJOIN customers c ON ym.customerid = c.customerid\nWHERE SUBSTRING(ym.date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTRING(yearmonth.date, 1, 4) AS year,\nSUM(yearmonth.consumption) AS total_consumption\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE customers.currency = 'CZK'\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT date, MAX(consumption) AS peak_consumption\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE segment = 'SME' AND SUBSTRING(date, 1, 4) = '2013'\nGROUP BY date\nORDER BY peak_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(consumption) AS total_consumption\nFROM yearmonth\nWHERE customerid = 6\nAND SUBSTRING(date, 1, 6) BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE country = 'CZE' AND segment = 'discount') -\n(SELECT COUNT(*) FROM gasstations WHERE country = 'SVK' AND segment = 'discount') AS more_discount_gas_stations\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT COUNT(DISTINCT customerid) AS total_smes_czk\nFROM customers\nWHERE segment = 'SME' AND currency = 'CZK'\nUNION ALL\nSELECT \nCOUNT(DISTINCT customerid) AS total_smes_eur\nFROM customers\nWHERE segment = 'SME' AND currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT ROUND(\n    (\n        CAST(\n            COUNT(DISTINCT CASE WHEN y.consumption > 46.73 THEN y.customerid END) AS FLOAT\n        ) / \n        CAST(\n            COUNT(DISTINCT y.customerid) AS FLOAT\n        )\n    ) * 100, 2\n) AS percentage\nFROM yearmonth y\nJOIN customers c ON y.customerid = c.customerid\nWHERE c.segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(consumption) AS highest_monthly_consumption\nFROM yearmonth\nWHERE SUBSTRING(date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.description\nFROM products\nJOIN transactions_1k ON products.productid = transactions_1k.productid\nWHERE EXTRACT(YEAR FROM transactions_1k.date) = 2013 AND EXTRACT(MONTH FROM transactions_1k.date) = 9\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.country\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE EXTRACT(YEAR FROM t.date) = 2013 AND EXTRACT(MONTH FROM t.date) = 6\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT customerid)\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE customers.currency = 'EUR' AND yearmonth.consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nJOIN products ON transactions_1k.productid = products.productid\nWHERE gasstations.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT t.time\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE g.chainid = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) FROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE gasstations.country = 'CZE' AND transactions_1k.date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT currency FROM customers\nJOIN transactions_1k ON customers.customerid = transactions_1k.customerid\nWHERE transactions_1k.date = '2012-08-24' AND transactions_1k.time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT segment FROM customers WHERE customerid IN (\n    SELECT customerid FROM transactions_1k WHERE date = '2012-08-23' AND time = '21:20:00'\n)\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) AS transactions_count\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE transactions_1k.date = '2012-08-26'\nAND transactions_1k.time BETWEEN '08:00:00' AND '09:00:00'\nAND gasstations.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT country\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nJOIN customers ON transactions_1k.customerid = customers.customerid\nWHERE transactions_1k.price = 548.4 AND transactions_1k.date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT COUNT(DISTINCT customerid) FILTER (WHERE currency = 'EUR' AND date = '2012-08-25')::FLOAT / COUNT(DISTINCT customerid) FILTER (WHERE date = '2012-08-25') AS percentage_eur_customers\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nWHERE date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \t----- bird -----\tdebit_card_specializing",
    "26": "SELECT COUNT(*) FILTER (WHERE segment = 'premium') * 100.0 / COUNT(*) AS premium_percentage\nFROM gasstations\nWHERE country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t.amount * t.price) AS total_spent,\nSUM(CASE WHEN ym.date = '201201' THEN t.amount * t.price ELSE 0 END) AS spent_in_jan_2012\nFROM transactions_1k t\nJOIN yearmonth ym ON t.customerid = ym.customerid AND t.date = TO_DATE(ym.date, 'YYYYMM')\nWHERE t.customerid = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT customerid, currency, SUM(price) AS total_spent, (SUM(price) / SUM(amount)) AS avg_price_per_item\nFROM transactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nGROUP BY customerid, currency\nORDER BY total_spent DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT customerid, consumption\nFROM yearmonth\nWHERE customerid IN (\n    SELECT customerid\n    FROM transactions_1k\n    WHERE productid = 5 AND (price / amount) > 29.00\n) AND date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE first_name = 'Angela' AND last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(member.member_id) AS medium_tshirt_count\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women's Soccer'\nAND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT e.event_id)\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT event_name\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nGROUP BY event.event_id, event.event_name\nHAVING COUNT(attendance.link_to_member) > 20 AND event.type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS funds_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT first_name || ' ' || last_name AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.expense_description, expense.approved\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen'\nAND (EXTRACT(MONTH FROM e.expense_date::date) = 9 OR EXTRACT(MONTH FROM e.expense_date::date) = 10)\t----- bird -----\tstudent_club",
    "38": "SELECT (SUM(CASE WHEN EXTRACT(YEAR FROM event_date::DATE) = 2019 THEN spent ELSE 0 END) - \n SUM(CASE WHEN EXTRACT(YEAR FROM event_date::DATE) = 2020 THEN spent ELSE 0 END)) AS difference\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters'\nAND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE first_name = 'Brent' AND last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT DIVIDE(\n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')),\n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting'))\n) AS budget_ratio\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major_name\nFROM major\nJOIN member ON major.major_id = member.link_to_major\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT member.member_id) AS attendees_count\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT first_name, last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name, MAX(budget.spent / budget.amount) AS spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nGROUP BY event.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_for_food\nFROM budget\nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT first_name || ' ' || last_name AS full_name\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nGROUP BY member.member_id, first_name, last_name\nHAVING COUNT(attendance.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT first_name || ' ' || last_name AS full_name\nFROM member\nJOIN budget ON member.member_id = budget.link_to_event\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nORDER BY expense.cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT (SELECT SUM(cost) FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')) / (SELECT SUM(cost) FROM expense) * 100 AS percentage_cost_for_yearly_kickoff\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) FROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS (\n    SELECT 1\n    FROM attendance a\n    JOIN member m ON a.link_to_member = m.member_id\n    JOIN event e ON a.link_to_event = e.event_id\n    WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer'\n)\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN event ON expense.link_to_budget = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed' AND budget.remaining < 0\nORDER BY budget.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN event ON expense.link_to_budget = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT first_name || ' ' || last_name AS full_name, SUM(cost) AS total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY first_name, last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE first_name = 'Sacha' AND last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event.type\nFROM event\nWHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT COUNT(*) FILTER (WHERE i.amount = 50) * 100.0 / COUNT(*) AS percentage\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT first_name || ' ' || last_name AS full_name, phone AS contact_number\nFROM member\nWHERE member_id IN (\n    SELECT link_to_member\n    FROM expense\n    GROUP BY link_to_member\n    HAVING AVG(cost) < (\n        SELECT AVG(cost)\n        FROM expense\n    )\n)\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT COUNT(ID) AS total_inpatient_male,\n(SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS total_outpatient_male\nFROM Patient\nWHERE SEX = 'M' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (CAST(COUNT(*) FILTER (WHERE EXTRACT(YEAR FROM Birthday) > 1930 AND Sex = 'F') AS FLOAT) / COUNT(*) FILTER (WHERE Sex = 'F')) * 100 AS percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(\n    (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') \n    AS FLOAT\n) \n/\nCAST(\n    (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') \n    AS FLOAT\n) AS outpatient_to_inpatient_ratio\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT disease\nFROM Examination\nWHERE patient_id = '30609'\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.patient_id, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.test_name = 'LDH' AND Laboratory.result > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, EXTRACT(YEAR FROM age(current_timestamp, Patient.Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.Examination_ID\nWHERE Laboratory.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.sex, Examination.diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient_id\nWHERE Examination.thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nWHERE Patient.Sex = 'F'\nAND YEAR(Examination.Description) = 1997\nAND Examination.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nWHERE Examination.thrombosis = '1'\nAND Patient.sex = 'F'\nAND EXTRACT(YEAR FROM Examination.date) = 1997\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT symptoms, diagnosis\nFROM Examination\nJOIN Patient ON Examination.patient_id = Patient.id\nORDER BY Patient.birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MAX(Laboratory.completion_date) AS \"Oldest SJS Patient Lab Completion Date\",\nYEAR(Examination.first_date) - YEAR(Patient.birthday) AS \"Age at Initial Arrival\"\nFROM Laboratory\nJOIN Examination ON Laboratory.examination_id = Examination.id\nJOIN Patient ON Examination.patient_id = Patient.id\nWHERE Examination.diagnosis = 'SJS'\nGROUP BY Patient.id\nORDER BY Patient.birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(CASE WHEN UA <= 8.0 AND SEX = 'M' THEN 1 ELSE 0 END) AS FLOAT) / \nCAST(SUM(CASE WHEN UA <= 6.5 AND SEX = 'F' THEN 1 ELSE 0 END) AS FLOAT) AS ratio\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.exam_id = Laboratory.exam_id\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.Patient_ID)\nFROM Patient\nJOIN Examination ON Patient.Patient_ID = Examination.Patient_ID\nWHERE EXTRACT(YEAR FROM Patient.Birthday) > (EXTRACT(YEAR FROM CURRENT_DATE) - 18)\nAND EXTRACT(YEAR FROM Examination.Examination_Date) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT EXTRACT(YEAR FROM age(Examination.\"Examination Date\", Patient.\"Birthday\")) AS \"Patient Age\",\nExamination.\"Diagnosis\"\nFROM Patient\nJOIN Examination ON Patient.\"Patient ID\" = Examination.\"Patient ID\"\nJOIN Laboratory ON Examination.\"Examination ID\" = Laboratory.\"Examination ID\"\nWHERE Laboratory.\"HGB\" IS NOT NULL\nORDER BY Laboratory.\"HGB\" DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Laboratory.aCL_IgM\nFROM Laboratory\nJOIN Examination ON Laboratory.Examination_ID = Examination.ID\nJOIN Patient ON Examination.Patient_ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE'\nAND Patient.Description = '1994-02-19'\nAND Examination.Examination_Date = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END) AS DecreaseRate\nFROM Laboratory\nJOIN Patient ON Laboratory.PatientID = Patient.PatientID\nWHERE Patient.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Examination.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.exam_id = l.exam_id\nWHERE e.Thrombosis = 2\nAND e.ANA = 'S'\nAND l.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.*\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.T-BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Patient.patient_id = Laboratory.patient_id\nWHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.Patient_ID = Examination.Patient_ID\nWHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (DIVIDE(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END), COUNT(*)) * 100) AS percentage_women\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nWHERE YEAR(BIRTHDAY) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n    WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n    WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n    ELSE 'No'\nEND AS uric_acid_normal_range\nFROM Laboratory\nWHERE patient_number = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.Examination_ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.name, Examination.diagnosis, Patient.date_of_birth\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.test_name = 'ALT glutamic pylvic transaminase' AND Laboratory.result > 60\nORDER BY Patient.date_of_birth ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT id, sex, birthday\nFROM Patient\nJOIN Laboratory ON Patient.id = Laboratory.patient_id\nWHERE Laboratory.urea_nitrogen = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT sex, STRING_AGG(DISTINCT patient_id::text, ', ') AS patient_list\nFROM Examination\nJOIN Patient ON Examination.patient_id = Patient.id\nWHERE t_bil >= 2.0\nGROUP BY sex\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(EXTRACT(YEAR FROM AGE(birthday))) AS average_age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient_id\nJOIN Laboratory ON Examination.ID = Laboratory.examination_id\nWHERE sex = 'M' AND \"T-CHO\" >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.triglyceride_level >= 200\nAND EXTRACT(YEAR FROM age(current_timestamp, Patient.birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE YEAR(Patient.birthday) BETWEEN '1936' AND '1956'\nAND Patient.sex = 'M'\nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.sex, EXTRACT(YEAR FROM age(Patient.Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Examination.ID = Laboratory.Examination_ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.T_CHO < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, \nEXTRACT(YEAR FROM age(current_timestamp, Patient.Birthday)) AS Age,\nExamination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient_ID\nJOIN Laboratory ON Patient.ID = Laboratory.Patient_ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.Sex\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Diagnosis = 'SLE' AND HGB > 10 AND HGB < 17\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT P.ID, EXTRACT(YEAR FROM age(P.Birthday)) AS Age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.Patient_ID\nWHERE L.HCT >= 52\nGROUP BY P.ID, P.Birthday\nHAVING COUNT(L.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT COUNT(*) AS lower_than_normal,\n       (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS higher_than_normal\nFROM Laboratory\nWHERE PLT < 100\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.*, Laboratory.PLT\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE YEAR(Examination.Date) = 1984\nAND (EXTRACT(YEAR FROM age(current_timestamp, Patient.Birthday))) < 50\nAND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT ROUND(\n    (\n        CAST(\n            COUNT(*) FILTER (WHERE Laboratory.PT >= 14 AND Patient.Sex = 'F') \n            AS FLOAT\n        ) \n        / \n        COUNT(*) FILTER (WHERE Laboratory.PT >= 14)\n    ) * 100, 2\n) AS Percentage_Female_Abnormal_PT\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE EXTRACT(YEAR FROM AGE(CURRENT_DATE, Patient.Birthday)) > 55\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE p.Sex = 'M'\nAND l.WBC > 3.5 AND l.WBC < 9.0\nAND (l.FG <= 150 OR l.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT Patient.patient_id)\nFROM Patient\nJOIN Laboratory ON Patient.patient_id = Laboratory.patient_id\nWHERE Laboratory.ig_g >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.patient_id = l.patient_id\nWHERE l.IGG > 900 AND l.IGG < 2000 AND p.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*) \nFROM Patient \nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500\nAND YEAR(Patient.first_date) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Examination\nJOIN Laboratory ON Examination.PatientID = Laboratory.PatientID\nWHERE Laboratory.IGM <= 40 OR Laboratory.IGM >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.CRP = '+'\nAND Examination.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.patient_id = Laboratory.patient_id\nWHERE Laboratory.creatinine_level >= 1.5\nAND (EXTRACT(YEAR FROM AGE(CURRENT_DATE, Patient.birthday))) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.patient_id)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nWHERE Examination.RNP IN ('-', '+-')\nAND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nWHERE (e.SM = '-' OR e.SM = '0') AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.PatientID)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE Laboratory.SC170 IN ('negative', '0')\nAND Patient.Sex = 'F'\nAND Examination.symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.CENTROMEA IN('-', '+-')\nAND Laboratory.SSB IN('-', '+-')\nAND Patient.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(birthday) \nFROM Patient \nJOIN Examination ON Patient.id = Examination.patient_id \nJOIN Laboratory ON Examination.id = Laboratory.examination_id \nWHERE Laboratory.got >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE e.creatinine_phosphokinase < 250\nAND (l.KCT = '+' OR l.RVVT = '+' OR l.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT league.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League'\nAND Match.season = '2009/2010'\nAND Match.away_team_goal > Match.home_team_goal\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed\nFROM Team_Attributes\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT league.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal\nGROUP BY league.name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT EXTRACT(YEAR FROM age(CURRENT_DATE, p.birthday)) AS age\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE pa.sprint_speed >= 97\nAND EXTRACT(YEAR FROM pa.date) BETWEEN 2013 AND 2015\t----- bird -----\teuropean_football_2",
    "133": "SELECT league.name AS league_name, COUNT(match.id) AS total_matches\nFROM League AS league\nJOIN Match AS match ON league.id = match.league_id\nGROUP BY league.id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name\nFROM Team\nJOIN Team_Attributes\nON Team.team_api_id = Team_Attributes.team_api_id\nWHERE strftime('%Y', Team_Attributes.date) = '2012'\nAND Team_Attributes.buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE buildUpPlayPassing IS NOT NULL\n    AND strftime('%Y', date) = '2012'\n)\t----- bird -----\teuropean_football_2",
    "136": "SELECT ROUND(\n    (\n        CAST(\n            COUNT(*) AS DECIMAL\n        ) / \n        (\n            SELECT COUNT(*)\n            FROM Player\n            WHERE YEAR(birthday) BETWEEN 1987 AND 1992\n        ) * 100\n    ), 2\n) AS percentage_left_foot\nFROM Player\nWHERE preferred_foot = 'left'\nAND YEAR(birthday) BETWEEN 1987 AND 1992\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name\nFROM Player\nWHERE substr(birthday, 1, 7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas'\nAND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN Team ON Match.home_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_id, AVG(finishing) AS avg_finishing_rate\nFROM Player_Attributes\nWHERE player_id IN (\n    SELECT player_id FROM Player WHERE height = (SELECT MAX(height) FROM Player)\n    UNION\n    SELECT player_id FROM Player WHERE height = (SELECT MIN(height) FROM Player)\n)\nGROUP BY player_id\nORDER BY avg_finishing_rate DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE strftime('%Y', pa.date) >= '2010' AND strftime('%Y', pa.date) <= '2015'\nAND p.height > 170\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) \n- \n(SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END))\nAS difference_of_average_ball_control\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT CASE \n  WHEN (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') > (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada')\n  THEN 'Abdelaziz Barrada'\n  ELSE 'Aaron Lennon'\nEND AS older_player\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_id, height FROM Player_Attributes ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*)\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.preferred_foot = 'left'\nAND Player_Attributes.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_id)\nFROM Player\nWHERE strftime('%Y', birthday) < '1986'\nAND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League'\nAND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT league_name \nFROM League \nJOIN Match ON League.id = Match.league_id \nWHERE season = '2008/2009' \nGROUP BY league_name \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT (\n  (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - \n  (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')\n) / \n(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing_score,\n       ta.chanceCreationPassingClass AS classification\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday ASC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT date\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Kevin Constant'\nORDER BY Player_Attributes.crossing DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT defence_aggression_class\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Hannover 96'\nAND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT avg(overall_rating) \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_id = Player.player_id \nWHERE player_name = 'Marko Arnautovic' \nAND date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT (DIVIDE(SUBTRACT(\n    (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12'),\n    (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')\n), \n(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12')) * 100) AS percentage_difference\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player_Attributes.height_rank = 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT team_short_name\nFROM Team\nJOIN Team_Attributes\nON Team.team_api_id = Team_Attributes.team_api_id\nWHERE chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_id = 6) - \n(SELECT jumping FROM Player_Attributes WHERE player_id = 23) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_id\nFROM Player_Attributes\nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND preferred_foot = 'right'\nORDER BY player_id\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player p\nJOIN Player_Attributes pa ON p.player_id = pa.player_id\nWHERE pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes)\nAND pa.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.date LIKE '2008-09-24%'\nAND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT team_attributes.buildUpPlaySpeedClass\nFROM team\nJOIN team_attributes ON team.team_api_id = team_attributes.team_api_id\nWHERE team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT finishing, curve\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE weight = (\n        SELECT MAX(weight)\n        FROM Player\n    )\n)\t----- bird -----\teuropean_football_2",
    "175": "SELECT name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE season = '2015/2016'\nGROUP BY League.name\nORDER BY COUNT(Match.id) DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nJOIN Match ON Team.team_api_id = Match.away_team_api_id \nGROUP BY team_long_name \nORDER BY SUM(away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nORDER BY Player_Attributes.overall_rating DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT (COUNT(*) FILTER (WHERE height < 180 AND overall_rating > 70) * 100.0) / COUNT(*) AS percentage\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\t----- bird -----\teuropean_football_2",
    "179": "SELECT driverref\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nWHERE qualifying.raceid = 20\nORDER BY qualifying.q1 DESC\nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nWHERE qualifying.raceid = 19 AND qualifying.q2 = (\n    SELECT MIN(q2)\n    FROM qualifying\n    WHERE raceid = 19\n)\t----- bird -----\tformula_1",
    "181": "SELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitid = c.circuitid\nWHERE c.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT lat, lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1 FROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nWHERE raceid = 354 AND drivers.forename = 'Bruno' AND drivers.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT drivers.number\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nWHERE qualifying.raceid = 903 AND qualifying.q3 LIKE '1:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS drivers_not_finished\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE results.raceid = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverid = lapTimes.driverid\nWHERE lapTimes.time LIKE '1:27%' AND lapTimes.raceid = 161\t----- bird -----\tformula_1",
    "189": "SELECT location, lat, lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT url\nFROM constructors\nWHERE constructorid = (\n    SELECT constructorid\n    FROM constructorResults\n    WHERE raceid = 9\n    ORDER BY points DESC\n    LIMIT 1\n)\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nWHERE qualifying.raceid = 45 AND qualifying.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceid = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE results.raceid = 872 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nORDER BY results.fastestlapspeed DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT (\n    (SELECT fastestlapspeed FROM results WHERE raceid = 853 AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')::numeric\n    -\n    (SELECT fastestlapspeed FROM results WHERE raceid = 854 AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')::numeric)\n) / (SELECT fastestlapspeed FROM results WHERE raceid = 853 AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')::numeric) * 100.0 AS percentage_faster\t----- bird -----\tformula_1",
    "196": "SELECT COUNT(driverid) FILTER (WHERE time IS NOT NULL) * 100.0 / COUNT(driverid) AS completion_rate\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races\nWHERE EXTRACT(YEAR FROM date) = (SELECT MIN(EXTRACT(YEAR FROM date)) FROM races)\nAND EXTRACT(MONTH FROM date) = (SELECT MIN(EXTRACT(MONTH FROM date)) FROM races WHERE EXTRACT(YEAR FROM date) = (SELECT MIN(EXTRACT(YEAR FROM date)) FROM races))\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, MAX(results.points) AS max_points\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nGROUP BY drivers.driverid\nORDER BY max_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(results.milliseconds) AS best_lap_time, \ndrivers.forename || ' ' || drivers.surname AS driver_name, \nraces.name AS race_name\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nGROUP BY driver_name, race_name\nORDER BY best_lap_time ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverid = drivers.driverid\nJOIN races ON lapTimes.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix'\nAND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT (\n    SELECT COUNT(*)::FLOAT\n    FROM results\n    JOIN drivers ON results.driverid = drivers.driverid\n    JOIN races ON results.raceid = races.raceid\n    WHERE drivers.surname = 'Hamilton' AND results.position != 1 AND races.year >= 2010\n) / (\n    SELECT COUNT(*)\n    FROM results\n    JOIN drivers ON results.driverid = drivers.driverid\n    JOIN races ON results.raceid = races.raceid\n    WHERE drivers.surname = 'Hamilton' AND races.year >= 2010\n) AS percentage_not_first\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, drivers.nationality, MAX(results.points) AS max_points\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE results.position = 1\nGROUP BY drivers.driverid\nORDER BY COUNT(results.resultid) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\nGROUP BY forename, surname, dob\nORDER BY age ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE EXTRACT(MONTH FROM races.date) = 9 AND EXTRACT(YEAR FROM races.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM races\nJOIN results ON races.raceid = results.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name AS race_name, races.year AS race_year\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.milliseconds ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name AS race_name, results.points AS points\nFROM races\nJOIN results ON races.raceid = results.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.year = (SELECT MIN(year) FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton')\t----- bird -----\tformula_1",
    "208": "SELECT (COUNT(*) FILTER (WHERE country = 'Germany' AND name = 'European Grand Prix') * 100.0) / COUNT(*) FILTER (WHERE name = 'European Grand Prix')\nFROM races\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitref FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT country\nFROM drivers\nORDER BY dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverref\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionorder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestlapspeed) AS fastest_lap_speed\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT positionorder\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.name = 'Chinese Grand Prix'\nAND races.year = 2008\nAND drivers.forename = 'Lewis'\nAND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "216": "SELECT time FROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.rank = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT r.driverid)\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nWHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT (\n    (CAST(results.time AS INTERVAL) - MIN(CAST(results.time AS INTERVAL))) / MIN(CAST(results.time AS INTERVAL)) * 100\n) AS percentage_faster\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL\nGROUP BY results.resultid\nORDER BY CAST(results.time AS INTERVAL)\nLIMIT 1\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(results.points) AS max_points\nFROM results\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nJOIN results ON constructors.constructorid = results.constructorid\nWHERE results.raceid = 291 AND results.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorid) \nFROM constructors c \nJOIN constructorResults cr ON c.constructorid = cr.constructorid \nJOIN races r ON cr.raceid = r.raceid \nWHERE c.nationality = 'Japanese' AND cr.points = 0\nGROUP BY c.constructorid\nHAVING COUNT(r.raceid) = 2\t----- bird -----\tformula_1",
    "223": "SELECT ROUND(\n    (\n        CAST(\n            COUNT(DISTINCT r.driverid) FILTER (WHERE r.time IS NOT NULL) \n            AS FLOAT\n        ) \n        / \n        CAST(\n            COUNT(DISTINCT r.driverid) \n            AS FLOAT\n        )\n    ) * 100, 2) AS race_completion_percentage\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nJOIN drivers d ON r.driverid = d.driverid\nWHERE ra.year BETWEEN 2007 AND 2009\nAND d.nationality = 'Japanese'\t----- bird -----\tformula_1",
    "224": "SELECT year, AVG(milliseconds) / 1000 AS average_time_seconds\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE position = 1 AND year < 1975 AND milliseconds IS NOT NULL\nGROUP BY year\t----- bird -----\tformula_1",
    "225": "SELECT fastestlap\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.year = 2009 AND results.position = 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(fastestlapspeed AS FLOAT))\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT (\n    CAST(\n        COUNT(DISTINCT d.driverid) FILTER (WHERE EXTRACT(YEAR FROM d.dob) < 1985 AND r.laps > 50) AS FLOAT\n    ) / \n    COUNT(DISTINCT d.driverid) FILTER (WHERE EXTRACT(YEAR FROM r.date) BETWEEN 2000 AND 2005) \n) * 100 AS percentage\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE EXTRACT(YEAR FROM r.date) BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverid)\nFROM drivers d\nJOIN lapTimes l ON d.driverid = l.driverid\nWHERE d.nationality = 'French'\nAND l.time < '02:00.00'\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT code FROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverref FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverid, drivers.code\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE EXTRACT(YEAR FROM drivers.dob) = 1971 AND results.fastestlaptime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nJOIN status ON results.statusid = status.statusid\nWHERE results.raceid BETWEEN 50 AND 100\nAND status.status = 'disqualified'\nAND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT drivers.forename, drivers.surname, races.year, races.name, races.date, races.time\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nJOIN races ON qualifying.raceid = races.raceid\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nAND races.date = (SELECT MIN(date) FROM races WHERE races.year = (SELECT year FROM races JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)))\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT drivers.driverid, drivers.forename, drivers.surname, AVG(pitStops.duration) AS avg_pitstop_duration\nFROM drivers\nJOIN pitStops ON drivers.driverid = pitStops.driverid\nWHERE drivers.nationality = 'German'\nAND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY drivers.driverid\nORDER BY avg_pitstop_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorref, constructors.url\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY results.positionorder ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructor.name, constructor.nationality, SUM(results.points) AS total_points\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructors.constructorid\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM qualifying q\nJOIN races r ON q.raceid = r.raceid\nJOIN circuits c ON r.circuitid = c.circuitid\nJOIN drivers d ON q.driverid = d.driverid\nWHERE r.year = 2008\nAND c.name = 'Marina Bay Street Circuit'\nAND r.round = 3\nAND q.position = 1\t----- bird -----\tformula_1",
    "242": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS race_name\nFROM drivers d\nJOIN races r ON r.year = (SELECT MIN(year) FROM races WHERE raceid IN (SELECT raceid FROM results WHERE driverid = d.driverid))\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "243": "SELECT MAX(accidents) AS max_accidents\nFROM (\n    SELECT driverid, COUNT(*) AS accidents\n    FROM results\n    WHERE raceid IN (\n        SELECT raceid\n        FROM races\n        WHERE name = 'Canadian Grand Prix'\n    ) AND statusid = 3\n    GROUP BY driverid\n) AS accident_counts\t----- bird -----\tformula_1",
    "244": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nORDER BY r.time ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name AS circuit_name, \nMIN(lapTimes.time) AS lap_record\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nJOIN lapTimes ON races.raceid = lapTimes.raceid\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' \nAND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) AS superheroes_with_blue_eyes_and_agility\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE eye_colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher_name\nFROM publisher\nJOIN superhero ON publisher.id = superhero.publisher_id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' \nAND attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \t----- bird -----\tsuperhero",
    "260": "SELECT (\n    SELECT COUNT(*) FROM superhero\n    JOIN publisher ON superhero.publisher_id = publisher.id\n    WHERE publisher.publisher_name = 'Marvel Comics'\n) AS marvel_count,\n(\n    SELECT COUNT(*) FROM superhero\n    JOIN publisher ON superhero.publisher_id = publisher.id\n    WHERE publisher.publisher_name = 'DC Comics'\n) AS dc_count\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) AS average_weight\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT superpower.power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nJOIN superhero ON hero_power.hero_id = superhero.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.hair_colour_id = colour.id\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.height_cm = 185 AND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT ROUND(\n    (CAST(COUNT(*) FILTER (WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS DECIMAL) / COUNT(*)) * 100,\n    2\n) AS percentage_marvel_comics\nFROM superhero\nWHERE height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nAND superhero.weight_kg > (\n    SELECT AVG(weight_kg) * 0.79\n    FROM superhero\n    WHERE weight_kg IS NOT NULL\n)\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_id) \nFROM hero_power \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE attribute.attribute_name = 'durability'\nAND publisher.publisher_name = 'Dark Horse Comics'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT colour.eye_colour AS \"Eye Colour\",\ncolour.hair_colour AS \"Hair Colour\",\ncolour.skin_colour AS \"Skin Colour\"\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE eye_colour.colour = hair_colour.colour AND hair_colour.colour = skin_colour.colour\t----- bird -----\tsuperhero",
    "275": "SELECT (SELECT COUNT(*) FROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE colour.colour = 'Blue' AND gender.gender = 'Female')::FLOAT\n/\n(SELECT COUNT(*) FROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female')::FLOAT\n* 100 AS percentage_blue_female_superheroes\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS power_count\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT hero_id) \nFROM hero_attribute \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = (\n    SELECT MAX(attribute_value) \n    FROM hero_attribute \n    JOIN attribute ON hero_attribute.attribute_id = attribute.id \n    WHERE attribute.attribute_name = 'Strength'\n)\t----- bird -----\tsuperhero",
    "281": "SELECT ROUND(\n    (\n        (\n            SELECT COUNT(*) \n            FROM superhero \n            JOIN gender ON superhero.gender_id = gender.id \n            JOIN publisher ON superhero.publisher_id = publisher.id \n            WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'\n        )::decimal / \n        (\n            SELECT COUNT(*) \n            FROM superhero \n            JOIN publisher ON superhero.publisher_id = publisher.id \n            WHERE publisher.publisher_name = 'Marvel Comics'\n        )\n    ) * 100, 2\n) AS percent_female_marvel\t----- bird -----\tsuperhero",
    "282": "SELECT (SUM(s.weight_kg) FILTER (WHERE s.full_name = 'Emil Blonsky') - SUM(s.weight_kg) FILTER (WHERE s.full_name = 'Charles Chandler')) AS weight_difference\nFROM superhero s\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height\nFROM superhero\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT superhero.superhero_name, attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT (CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero)) * 100 AS percentage\nFROM superhero\nWHERE eye_colour_id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) AS male_count,\n(SELECT COUNT(*) FROM superhero WHERE gender_id = 2) AS female_count\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour AS eye_colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT COUNT(*) FILTER (WHERE eye_colour_id = 7) - COUNT(*) FILTER (WHERE eye_colour_id = 1)\nFROM superhero\nWHERE weight_kg IS NULL OR weight_kg = 0\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - \n(SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT displayname, reputation\nFROM users\nWHERE displayname IN ('Harlan', 'Jarrod Dixon')\nORDER BY reputation DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT displayname FROM users WHERE EXTRACT(YEAR FROM creationdate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE lastaccessdate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT ownerdisplayname FROM posts WHERE title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE ownerdisplayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT u.displayname\nFROM posts p\nJOIN users u ON p.lasteditoruserid = u.id\nWHERE p.title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nJOIN users ON posts.owneruserid = users.id \nWHERE users.age > 65 AND posts.score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT body FROM posts WHERE id = (SELECT excerptpostid FROM tags WHERE tagname = 'bayesian')\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.score) AS average_score\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT (\n    COUNT(CASE WHEN u.age > 65 THEN 1 END)::FLOAT / COUNT(p.id)::FLOAT\n) * 100 AS percentage_elder_user_posts\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT favoritecount\nFROM posts\nJOIN comments ON posts.id = comments.postid\nWHERE comments.userid = 3025 AND comments.creationdate = '2014-04-23 20:29:39+00'\t----- bird -----\tcodebase_community",
    "308": "SELECT p.closeddate IS NOT NULL AS well_finished\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE c.userid = 23853\nAND c.creationdate = '2013-07-12 09:08:18+00'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE ownerdisplayname = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT users.displayname\nFROM votes\nJOIN users ON votes.userid = users.id\nWHERE votes.id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT (COUNT(p.id) / COUNT(v.id)) AS post_to_vote_ratio\nFROM posts p\nLEFT JOIN votes v ON p.id = v.postid\nWHERE p.owneruserid = 24 AND v.userid = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT viewcount FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT text FROM comments WHERE score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.displayname\nFROM comments\nJOIN users ON comments.userid = users.id\nWHERE comments.text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.displayname, users.reputation\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE posts.title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT lasteditordisplayname\nFROM posts\nWHERE title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.text\nFROM comments\nJOIN posts ON comments.postid = posts.id\nJOIN users ON comments.userid = users.id\nWHERE posts.title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND comments.userid IN (\n    SELECT lasteditoruserid\n    FROM posts\n    WHERE title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n)\t----- bird -----\tcodebase_community",
    "318": "SELECT users.displayname\nFROM users\nJOIN votes ON users.id = votes.userid\nJOIN posts ON votes.postid = posts.id\nWHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.title, c.text, AVG(p.viewcount) AS average_view_count\nFROM posts p\nJOIN tags t ON p.tags LIKE '%<humor>%'\nLEFT JOIN comments c ON p.id = c.postid\nGROUP BY p.title, c.text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT userid) \nFROM badges\nGROUP BY userid\nHAVING COUNT(name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT users.id, users.displayname\nFROM users\nJOIN posts ON users.id = posts.owneruserid\nJOIN postHistory ON posts.id = postHistory.postid\nGROUP BY users.id, users.displayname\nHAVING COUNT(DISTINCT postHistory.id) = 1 AND MAX(posts.viewcount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT (\n    (COUNT(*) FILTER (WHERE EXTRACT(YEAR FROM date) = 2010) * 100.0 / COUNT(*)) -\n    (COUNT(*) FILTER (WHERE EXTRACT(YEAR FROM date) = 2011) * 100.0 / COUNT(*))\n) AS percentage_difference\nFROM badges\nWHERE name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.upvotes) AS average_upvotes, AVG(u.age) AS average_age\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nGROUP BY u.id\nHAVING COUNT(p.id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT (\n    SELECT COUNT(*) FROM votes WHERE EXTRACT(YEAR FROM creationdate) = 2010\n) AS votes_2010,\n(\n    SELECT COUNT(*) FROM votes WHERE EXTRACT(YEAR FROM creationdate) = 2011\n) AS votes_2011\t----- bird -----\tcodebase_community",
    "325": "SELECT id FROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'slashnick'\nORDER BY posts.answercount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(SUM(viewcount)) AS max_views, ownerdisplayname\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY ownerdisplayname\nORDER BY max_views DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.tagname\nFROM tags\nJOIN posts ON posts.id = tags.excerptpostid OR posts.id = tags.wikipostid\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'Mark Meckes' AND posts.commentcount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (\n    SELECT COUNT(*) \n    FROM posts p\n    JOIN users u ON p.owneruserid = u.id\n    JOIN tags t ON p.tags LIKE CONCAT('%', t.tagname, '%')\n    WHERE u.displayname = 'Community' AND t.tagname = 'r'\n) AS r_posts_by_community,\n(\n    SELECT COUNT(*) \n    FROM posts p\n    JOIN users u ON p.owneruserid = u.id\n    WHERE u.displayname = 'Community'\n) AS total_posts_by_community\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(p.viewcount) FILTER (WHERE u.displayname = 'Mornington') - \nSUM(p.viewcount) FILTER (WHERE u.displayname = 'Amos') AS viewcount_difference\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(monthly_links) AS average_monthly_links\nFROM (\n    SELECT\n        EXTRACT(MONTH FROM p.creaiondate) AS month,\n        COUNT(pl.id) AS monthly_links\n    FROM\n        posts p\n    LEFT JOIN\n        postLinks pl ON p.id = pl.postid\n    WHERE\n        EXTRACT(YEAR FROM p.creaiondate) = 2010\n        AND p.answercount <= 2\n    GROUP BY\n        EXTRACT(MONTH FROM p.creaiondate)\n) AS monthly_data\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(creationdate) AS first_vote_date\nFROM votes\nJOIN users ON votes.userid = users.id\nWHERE users.displayname = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT u.displayname\nFROM badges b\nJOIN users u ON b.userid = u.id\nWHERE b.name = 'Autobiographer'\nORDER BY b.date ASC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.id) AS users_with_favorites\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nWHERE u.location = 'United Kingdom' AND p.favoritecount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.id, posts.title\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'Harvey Motulsky'\nORDER BY posts.viewcount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.id, posts.ownerdisplayname\nFROM posts\nWHERE posts.creaiondate BETWEEN '2010-01-01' AND '2010-12-31'\nORDER BY posts.favoritecount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT (COUNT(p.id) FILTER (WHERE EXTRACT(YEAR FROM u.creationdate) = 2011 AND u.reputation > 1000)::FLOAT / COUNT(p.id)::FLOAT) * 100 AS percentage\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\t----- bird -----\tcodebase_community",
    "337": "SELECT p.viewcount AS total_views, u.displayname AS last_posted_by\nFROM posts p\nJOIN users u ON p.lasteditoruserid = u.id\nWHERE p.title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) AS comment_count\nFROM comments\nJOIN posts ON comments.postid = posts.id\nWHERE posts.score = (SELECT MAX(score) FROM posts)\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.text, comments.userdisplayname\nFROM comments\nJOIN posts ON comments.postid = posts.id\nWHERE posts.title = 'Analysing wind data with R'\nORDER BY comments.creationdate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \t----- bird -----\tcodebase_community",
    "341": "SELECT `excerptpostid`, `wikipostid` FROM tags WHERE `tagname` = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.reputation, users.upvotes\nFROM users\nJOIN comments ON users.id = comments.userid\nWHERE comments.text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.text\nFROM comments\nJOIN posts ON comments.postid = posts.id\nWHERE posts.viewcount BETWEEN 100 AND 150\nORDER BY comments.score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nJOIN posts ON comments.postid = posts.id \nWHERE posts.commentcount = 1 AND comments.score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT (\n    SELECT COUNT(DISTINCT c.userid) * 100.0 / \n    (\n        SELECT COUNT(DISTINCT c.userid)\n        FROM comments c\n        JOIN users u ON c.userid = u.id\n        WHERE c.score BETWEEN 5 AND 10\n    )\n    FROM comments c\n    JOIN users u ON c.userid = u.id\n    WHERE c.score BETWEEN 5 AND 10 AND u.upvotes = 0\n) AS percentage_of_users_with_zero_upvotes\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards\nWHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT * FROM cards\nWHERE bordercolor = 'borderless' AND (cardkingdomfoilid IS NULL OR cardkingdomid IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT cards.name, cards.setcode, legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT c.uuid, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power IS NULL OR cards.power = '*')\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hascontentwarning\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.ispromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.name, cards.artist, cards.ispromo\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified')::FLOAT / (SELECT COUNT(*) FROM foreign_data)::FLOAT * 100 AS percentage_chinese_simplified\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT bordercolor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format, legalities.status\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT (CAST(COUNT(id) FILTER (WHERE bordercolor = 'borderless') AS FLOAT) / COUNT(id)) * 100 AS percentage_borderless\nFROM cards\t----- bird -----\tcard_games",
    "358": "SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'French'))::FLOAT / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)::FLOAT * 100 AS percentage_french_story_spotlight\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originaltype = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE dueldeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE legalities.status = 'Banned' \nAND cards.bordercolor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.uuid, c.name, fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originaltype = 'Artifact'\nAND c.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manacost FROM cards \nWHERE layout = 'normal' \nAND frameversion = '2003' \nAND bordercolor = 'black' \nAND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT id\nFROM cards\nWHERE isstoryspotlight = 1 AND istextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setcode \nWHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT foreign_data.type\nFROM foreign_data\nWHERE foreign_data.language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nJOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE foreign_data.language = 'French'\nAND cards.type = 'Creature'\nAND cards.layout = 'normal'\nAND cards.bordercolor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setcode\nWHERE sets.basesetsize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT (CAST(COUNT(*) FILTER (WHERE hascontentwarning = 0) AS FLOAT) / COUNT(*)) * 100 AS percentage\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'commander' AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT (SELECT COUNT(*) FROM cards \n JOIN foreign_data ON cards.uuid = foreign_data.uuid\n WHERE foreign_data.language = 'French' AND (cards.power IS NULL OR cards.power = '*'))::FLOAT\n/\n(SELECT COUNT(*) FROM cards WHERE cards.power IS NULL OR cards.power = '*')::FLOAT\n* 100 AS percentage_french_no_power\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT (CAST(COUNT(*) FILTER (WHERE istextless = 1 AND layout = 'normal') AS FLOAT) / COUNT(*) FILTER (WHERE istextless = 1)) * 100 AS proportion\nFROM cards\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT foreign_data.language\nFROM foreign_data\nJOIN sets ON foreign_data.uuid = sets.code\nWHERE sets.mcmname = 'Archenemy' AND sets.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedmanacost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper')\t----- bird -----\tcard_games",
    "378": "SELECT translation FROM set_translations\nJOIN sets ON set_translations.setcode = sets.code\nJOIN cards ON sets.code = cards.setcode\nWHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    JOIN foreign_data ON cards.uuid = foreign_data.uuid\n    WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean'\n)\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nJOIN sets ON cards.setcode = sets.code \nJOIN set_translations ON sets.code = set_translations.setcode \nWHERE set_translations.translation = 'Hauptset Zehnte Edition' \nAND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Eighth Edition') AND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    WHERE name = 'Angel of Mercy'\n    AND mtgocode IS NOT NULL\n)\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setcode \nWHERE sets.block = 'Ice Age' \nAND set_translations.language = 'Italian' \nAND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT isforeignonly FROM sets WHERE name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.id = set_translations.id \nWHERE set_translations.language = 'Italian' \nAND sets.basesetsize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist\nFROM cards\nWHERE setcode = (SELECT code FROM sets WHERE name = 'Coldsnap')\nAND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards \nJOIN sets ON cards.setcode = sets.code \nWHERE sets.name = 'Coldsnap' \nAND cards.convertedmanacost > 5 \nAND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT flavortext FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Coldsnap' AND rulings.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN sets s ON c.setcode = s.code\nWHERE s.name = 'Coldsnap'\nAND fd.language = 'Italian'\nAND c.convertedmanacost = (\n    SELECT MAX(convertedmanacost)\n    FROM cards\n    WHERE setcode = (SELECT code FROM sets WHERE name = 'Coldsnap')\n)\t----- bird -----\tcard_games",
    "391": "SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'CSP')::FLOAT / \n(SELECT COUNT(*) FROM cards WHERE setcode = 'CSP')::FLOAT * 100 AS percentage\t----- bird -----\tcard_games",
    "392": "SELECT (SELECT COUNT(*) FROM cards WHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL AND setcode = 'CSP')::FLOAT / \n(SELECT COUNT(*) FROM cards WHERE setcode = 'CSP') * 100 AS percentage_incredibly_powerful\t----- bird -----\tcard_games",
    "393": "SELECT format, array_agg(name) AS card_names\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY COUNT(status) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecrank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setcode\nWHERE set_translations.language = 'Korean'\nAND sets.code NOT IN (\n    SELECT setcode\n    FROM set_translations\n    WHERE language LIKE '%Japanese%'\n)\t----- bird -----\tcard_games",
    "397": "SELECT frameversion, name \nFROM cards \nWHERE artist = 'Allen Williams' \nAND EXISTS (\n    SELECT 1 \n    FROM legalities \n    WHERE legalities.uuid = cards.uuid \n    AND status = 'Banned'\n)\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(bond_type) AS frequency\nFROM bond\nGROUP BY bond_type\nORDER BY frequency DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN a.element = 'O' THEN 1 ELSE 0 END) AS avg_oxygen_atoms\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) AS average_single_bonded\nFROM (\n    SELECT m.molecule_id, COUNT(b.bond_id) AS single_bonded_count\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    WHERE m.label = '+' AND b.bond_type = '-'\n    GROUP BY m.molecule_id\n) AS single_bonded_carcinogenic_molecules\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT (SELECT COUNT(*) FROM atom \n WHERE element = 'c' AND molecule_id IN \n   (SELECT molecule_id FROM bond WHERE bond_type = '='))::FLOAT / \n(SELECT COUNT(*) FROM atom \n WHERE molecule_id IN \n   (SELECT molecule_id FROM bond WHERE bond_type = '=')) AS carbon_percentage\t----- bird -----\ttoxicology",
    "403": "SELECT element\nFROM atom\nWHERE atom_id IN (\n    SELECT atom_id\n    FROM connected\n    WHERE bond_id = 'TR004_8_9'\n    UNION\n    SELECT atom_id2\n    FROM connected\n    WHERE bond_id = 'TR004_8_9'\n)\t----- bird -----\ttoxicology",
    "404": "SELECT element\nFROM atom\nWHERE atom_id IN (\n    SELECT atom.atom_id\n    FROM atom\n    JOIN connected ON atom.atom_id = connected.atom_id\n    JOIN bond ON connected.bond_id = bond.bond_id\n    WHERE bond.bond_type = '='\n    UNION\n    SELECT atom.atom_id\n    FROM atom\n    JOIN connected ON atom.atom_id = connected.atom_id2\n    JOIN bond ON connected.bond_id = bond.bond_id\n    WHERE bond.bond_type = '='\n)\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE atom.element = 'h'\nGROUP BY label\nORDER BY COUNT(label) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(element) AS element_count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY element_count ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20')\n   OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE (atom.element = 'i' OR atom.element = 's')\nAND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT \t----- bird -----\ttoxicology",
    "410": "SELECT \t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(\n    (\n        CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS DECIMAL) / \n        CAST(COUNT(bond_id) AS DECIMAL)\n    ) * 100, \n    5\n) AS percentage_double_bonds\nFROM bond\nWHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(\n    (SELECT COUNT(*) FROM molecule WHERE label = '+')::DECIMAL / \n    (SELECT COUNT(*) FROM molecule) * 100, \n    3\n) AS carcinogenic_percentage\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(\n    (\n        CAST(\n            (SELECT COUNT(*) FROM atom WHERE element = 'h' AND molecule_id = 'TR206') \n            AS FLOAT\n        ) \n        / \n        CAST(\n            (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206') \n            AS FLOAT\n        )\n    ) * 100, 4\n) AS hydrogen_percentage\t----- bird -----\ttoxicology",
    "415": "SELECT label, element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label = '-' AND b.bond_type = '-'\nGROUP BY m.molecule_id\nORDER BY m.molecule_id ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT bond_id) \nFROM connected \nWHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') \nAND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, atom.element AS atom1_element, atom2.element AS atom2_element\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom AS atom ON connected.atom_id = atom.atom_id\nJOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT element FROM atom WHERE molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND molecule.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT bond.bond_id, bond.bond_type\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom AS atom1 ON connected.atom_id = atom1.atom_id\nJOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id\nWHERE (atom1.element = 'P' AND atom2.element = 'N') OR (atom1.element = 'N' AND atom2.element = 'P')\nAND bond.molecule_id = atom1.molecule_id\nAND bond.molecule_id = atom2.molecule_id\t----- bird -----\ttoxicology",
    "424": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id, m.label\nORDER BY COUNT(b.bond_id) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT atom.atom_id, COUNT(connected.bond_id) AS bond_count\n    FROM atom\n    LEFT JOIN connected ON atom.atom_id = connected.atom_id\n    WHERE atom.element = 'i'\n    GROUP BY atom.atom_id\n) AS bond_counts\t----- bird -----\ttoxicology",
    "426": "SELECT element\nFROM atom\nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\nAND atom_id NOT IN (SELECT atom_id2 FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(\n    (\n        SELECT COUNT(DISTINCT m.molecule_id) * 100.0\n        FROM molecule m\n        JOIN bond b ON m.molecule_id = b.molecule_id\n        WHERE b.bond_type = '-' AND m.label = '+'\n    ) / \n    (\n        SELECT COUNT(DISTINCT b.bond_id)\n        FROM bond b\n        WHERE b.bond_type = '-'\n    ), \n    5\n) AS carcinogenic_single_bond_proportion\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT (SELECT COUNT(*) FROM atom \n JOIN bond ON atom.molecule_id = bond.molecule_id\n WHERE bond.bond_type = '-' AND atom.element = 'cl')::FLOAT / \n(SELECT COUNT(*) FROM atom \n JOIN bond ON atom.molecule_id = bond.molecule_id\n WHERE bond.bond_type = '-') * 100 AS percentage_chlorine_in_single_bonds\t----- bird -----\ttoxicology",
    "433": "SELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE connected.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT COUNT(*) FILTER (WHERE element = 'cl') * 100.0 / COUNT(*) AS percentage\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT element\nFROM atom\nWHERE atom_id IN (\n    SELECT atom_id\n    FROM atom\n    WHERE substr(atom_id, 7, 1) = '4'\n    AND molecule_id IN (\n        SELECT molecule_id\n        FROM molecule\n        WHERE label = '+'\n    )\n)\t----- bird -----\ttoxicology",
    "436": "SELECT (\n    CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(element)\n) AS hydrogen_ratio,\nm.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.molecule_id = 'TR006'\nGROUP BY m.label\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE satscores.avgscrmath > 400 AND schools.virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT cdscode\nFROM frpm\nWHERE (\"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\") > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) AS highest_eligible_free_rate\nFROM frpm\nJOIN satscores ON frpm.cdscode = satscores.cds\nWHERE (`numge1500`::FLOAT / `numtsttakr`::FLOAT) > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.school, s.charternum, sc.avgscrwrite\nFROM satscores sc\nJOIN schools s ON sc.cds = s.cdscode\nWHERE sc.avgscrwrite > 499\nORDER BY sc.avgscrwrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.school, schools.street, schools.streetabr, schools.city, schools.zip, schools.state\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE (frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\") > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.school_name, s.district_name, s.county_name\nFROM satscores s\nJOIN frpm f ON s.cds = f.cdscode\nWHERE (f.\"Free Meal Count (K-12)\" / f.\"Enrollment (K-12)\") > 0.1\nAND s.numge1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.school, schools.fundingtype\nFROM schools\nJOIN satscores ON schools.cdscode = satscores.cds\nWHERE schools.county = 'Riverside' AND satscores.avgscrmath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.school, schools.street, schools.city, schools.state, schools.zip\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.county = 'Monterey'\nAND frpm.`High Grade` = '12'\nAND (frpm.`Free Meal Count (Ages 5-17)` + frpm.`FRPM Count (Ages 5-17)`) > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.sname, s.avgscrwrite, sc.phone\nFROM satscores s\nJOIN schools sc ON s.cds = sc.cdscode\nWHERE (sc.opendate > '1991-01-01' OR sc.closeddate < '2000-12-31')\nAND s.avgscrwrite IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.school, s.doc\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE f.`Charter Funding Type` = 'Locally funded'\nAND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n     FROM frpm f2\n     JOIN schools s2 ON f2.cdscode = s2.cdscode\n     WHERE f2.`Charter Funding Type` = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`,\n       `Enrollment (K-12)`,\n       `Free Meal Count (K-12)`,\n       (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS `Eligible Free Rate`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \"School Name\", \"FRPM Count (K-12)\" / \"Enrollment (K-12)\" AS \"Eligible FRPM Rate\"\nFROM frpm\nWHERE \"soc\" = '66' AND \"gsoffered\" LIKE '%1-12%'\nORDER BY \"FRPM Count (K-12)\" DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.street, s.city, s.zip, s.state\nFROM satscores sa\nJOIN schools s ON sa.cds = s.cdscode\nWHERE sa.numtsttakr > 0\nORDER BY (sa.numge1500::FLOAT / sa.numtsttakr) ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.adminfname1 || ' ' || s.admlname1 AS Admin1FullName,\n       s.adminfname2 || ' ' || s.admlname2 AS Admin2FullName,\n       s.adminfname3 || ' ' || s.admlname3 AS Admin3FullName\nFROM satscores AS sat\nJOIN schools AS s ON sat.cds = s.cdscode\nORDER BY sat.numge1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.numtsttakr) AS average_num_test_takers\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE schools.county = 'Fresno'\nAND schools.opendate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE satscores.dname = 'Fresno Unified'\nORDER BY satscores.avgscrread ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT school,\n       county,\n       avgscrread\nFROM (\n    SELECT s.school,\n           s.county,\n           sc.avgscrread,\n           RANK() OVER (PARTITION BY s.county ORDER BY sc.avgscrread DESC) as rank\n    FROM schools s\n    JOIN satscores sc ON s.cdscode = sc.cds\n    WHERE s.virtual = 'F'\n) ranked_schools\nWHERE rank <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.sname AS School_Name, \n       satscores.avgscrwrite AS Average_Writing_Score\nFROM satscores\nJOIN schools s ON satscores.cds = s.cdscode\nWHERE s.admfname1 = 'Ricci' AND s.admlname1 = 'Ulrich'\nORDER BY s.sname\t----- bird -----\tcalifornia_schools",
    "456": "SELECT school, enrollment\nFROM schools\nWHERE doc = '31' AND gsoffered = 'K-12'\nORDER BY enrollment DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS monthly_average\nFROM schools\nWHERE county = 'Alameda'\nAND doc = '52'\nAND EXTRACT(YEAR FROM opendate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT (\n    SELECT COUNT(*) \n    FROM schools \n    WHERE doc = '54' AND county = 'Orange'\n) AS unified_count,\n(\n    SELECT COUNT(*) \n    FROM schools \n    WHERE doc = '52' AND county = 'Orange'\n) AS elementary_count\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.school, s.street\nFROM satscores sat\nJOIN schools s ON sat.cds = s.cdscode\nORDER BY sat.avgscrmath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.charter = 0\nAND f.`County Name` = 'Los Angeles'\nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.cdscode = schools.cdscode\nWHERE `Academic Year` = '2014-2015'\nAND schools.city = 'Fremont'\nAND schools.edopscode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.school, frpm.`Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE schools.county = 'Los Angeles'\nAND schools.gsserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT COUNT(*) AS num_virtual_schools, county\nFROM schools\nWHERE virtual = 'F' AND (county = 'San Diego' OR county = 'Santa Barbara')\nGROUP BY county\nORDER BY num_virtual_schools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT `gsoffered`\nFROM schools\nORDER BY ABS(longitude) DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT city, COUNT(*) AS num_schools\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE magnet = 1\nAND gsserved = 'K-8'\nAND \"NSLP Provision Status\" = 'Multiple Provision Types'\nGROUP BY city\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.\"District Code\",\n       (frpm.\"Free Meal Count (K-12)\" / frpm.\"Enrollment (K-12)\") * 100 AS \"Percent (%) Eligible Free (K-12)\"\nFROM frpm\nJOIN schools ON frpm.cdscode = schools.cdscode\nWHERE schools.admfname1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT admemail1, admemail2, admemail3\nFROM schools\nWHERE county = 'San Bernardino'\nAND city = 'San Bernardino City Unified'\nAND opendate BETWEEN '2009-01-01' AND '2010-12-31'\nAND (soc = '62' OR doc = '54')\nAND statustype = 'Public'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.frequency = 'POPLATEK PO OBRATU' AND d.a3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id)\nFROM district\nWHERE a11 > 6000 AND a11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(client.client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M'\nAND district.a3 = 'North Bohemia'\nAND district.a11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id, MIN(district.a11) AS lowest_avg_salary, MAX(district.a11) - MIN(district.a11) AS salary_gap\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nGROUP BY account.account_id\nORDER BY client.birth_date DESC, district.a11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nJOIN district ON client.district_id = district.district_id\nORDER BY client.birth_date DESC, district.a11 DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id, loan.amount, account.frequency\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.date >= '1997-01-01' AND loan.date <= '1997-12-31'\nAND loan.status = 'A' \t----- bird -----\tfinancial",
    "474": "SELECT account.account_id, loan.amount, account.date\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND EXTRACT(YEAR FROM account.date) = 1993\nORDER BY loan.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.client_id)\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nAND client.birth_date < '1950-01-01'\nAND district.a2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT district.a2 AS district_name\nFROM client\nJOIN account ON client.district_id = account.district_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT \t----- bird -----\tfinancial",
    "478": "SELECT \t----- bird -----\tfinancial",
    "479": "SELECT SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount) * 100 AS percentage_fully_paid_no_issue\nFROM loan l\t----- bird -----\tfinancial",
    "480": "SELECT COUNT(*) FILTER (WHERE status = 'C' AND amount < 100000) * 100.0 / COUNT(*) FILTER (WHERE amount < 100000) AS percentage_running_no_issue\nFROM loan\t----- bird -----\tfinancial",
    "481": "SELECT d.a2 AS district_name, \n((d.a13 - d.a12) / d.a12 * 100) AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.a2 AS district_name,\nCOUNT(DISTINCT c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.a2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(loan.loan_id) AS total_approved_loans\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.amount >= 250000\nAND loan.status = 'A' \t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE account.district_id = 1 AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) AS male_clients_count\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.a15 = (\n    SELECT MAX(a15) FROM district\n    WHERE a15 < (SELECT MAX(a15) FROM district)\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT d.a2 AS district_name,\nSUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\nAND t.date LIKE '1996-01%'\nGROUP BY d.a2\nORDER BY total_withdrawals DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE account.district_id = 1 AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.a15 = (\n    SELECT MAX(a15) FROM district\n    WHERE a15 < (SELECT MAX(a15) FROM district)\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN card ON disp.disp_id = card.disp_id\nJOIN trans ON account.account_id = trans.account_id\nWHERE trans.operation = 'VYBER KARTOU'\nAND EXTRACT(YEAR FROM trans.date) = 1998\nAND trans.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND EXTRACT(YEAR FROM date) = 1998)\nGROUP BY account.account_id\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT d.a11 AS average_income, dp.type AS account_type\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN disp dp ON a.account_id = dp.account_id\nWHERE dp.type != 'OWNER'\nAND d.a11 > 8000\nAND d.a11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.a15) AS average_crimes_1995\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.a15 > 4000\nAND EXTRACT(YEAR FROM a.date) >= 1997\nGROUP BY d.a3\t----- bird -----\tfinancial",
    "492": "SELECT trans.*\nFROM trans\nJOIN disp ON trans.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT COUNT(*) FILTER (WHERE gender = 'F') * 100.0 / COUNT(*) AS percentage_women\nFROM client\nJOIN account ON client.district_id = account.district_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.a11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT (\n    (SELECT SUM(amount) FROM loan\n    JOIN disp ON loan.account_id = disp.account_id\n    JOIN client ON disp.client_id = client.client_id\n    WHERE client.gender = 'M' AND EXTRACT(YEAR FROM loan.date) = 1997)\n    -\n    (SELECT SUM(amount) FROM loan\n    JOIN disp ON loan.account_id = disp.account_id\n    JOIN client ON disp.client_id = client.client_id\n    WHERE client.gender = 'M' AND EXTRACT(YEAR FROM loan.date) = 1996)\n) / \n(SELECT SUM(amount) FROM loan\nJOIN disp ON loan.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.gender = 'M' AND EXTRACT(YEAR FROM loan.date) = 1996) * 100.0 AS growth_rate\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS statement_frequency\nFROM trans\nWHERE account_id = 3 AND k_symbol = 'statement'\t----- bird -----\tfinancial",
    "496": "SELECT (\n    COUNT(DISTINCT client.client_id) FILTER (WHERE client.gender = 'M')::FLOAT /\n    COUNT(DISTINCT client.client_id)::FLOAT\n) * 100 AS percentage_male_clients_weekly_statements\nFROM client\nJOIN account ON client.district_id = account.district_id\nWHERE account.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date DESC, district.a11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount) AS average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.status IN ('C', 'D') AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, EXTRACT(YEAR FROM AGE(client.birth_date)) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}