{
    "0": "SELECT\n    SUM(Currency = 'EUR') / SUM(Currency = 'CZK') AS ratio\nFROM\n    customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, Consumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Segment = 'LAM' AND LEFT(Date, 4) = '2012'\nORDER BY Consumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n    SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) AS CZK_Consumption,\n    SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS EUR_Consumption,\n    (SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) - \n     SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END)) AS Difference\nFROM\n    yearmonth ym\nJOIN\n    customers c ON ym.CustomerID = c.CustomerID\nWHERE\n    ym.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT ym.Date, SUM(ym.Consumption) AS TotalConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'CZK' AND LENGTH(ym.Date) >= 4\nGROUP BY SUBSTRING(ym.Date, 1, 4)\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT ym.Date, MAX(ym.Consumption) AS PeakConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' AND ym.Date BETWEEN '201301' AND '201312'\nGROUP BY ym.Date\nORDER BY PeakConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n  SME.avg_consumption - LAM.avg_consumption AS 'SME-LAM',\n  LAM.avg_consumption - KAM.avg_consumption AS 'LAM-KAM',\n  KAM.avg_consumption - SME.avg_consumption AS 'KAM-SME'\nFROM\n  (SELECT SUM(Consumption) / COUNT(CustomerID) AS avg_consumption\n   FROM yearmonth AS ym\n   JOIN customers AS c ON ym.CustomerID = c.CustomerID\n   WHERE c.Segment = 'SME' AND c.Currency = 'CZK' AND ym.Date LIKE '2013%') AS SME,\n  (SELECT SUM(Consumption) / COUNT(CustomerID) AS avg_consumption\n   FROM yearmonth AS ym\n   JOIN customers AS c ON ym.CustomerID = c.CustomerID\n   WHERE c.Segment = 'LAM' AND c.Currency = 'CZK' AND ym.Date LIKE '2013%') AS LAM,\n  (SELECT SUM(Consumption) / COUNT(CustomerID) AS avg_consumption\n   FROM yearmonth AS ym\n   JOIN customers AS c ON ym.CustomerID = c.CustomerID\n   WHERE c.Segment = 'KAM' AND c.Currency = 'CZK' AND ym.Date LIKE '2013%') AS KAM\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    ym2013.Segment,\n    ((ym2013.Consumption - ym2012.Consumption) / ym2013.Consumption) * 100 AS PercentageIncrease\nFROM\n    (SELECT \n        c.Segment,\n        SUM(ym.Consumption) AS Consumption\n    FROM\n        yearmonth ym\n    INNER JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE\n        c.Currency = 'EUR' AND LEFT(ym.Date, 4) = '2013'\n    GROUP BY c.Segment) ym2013\nINNER JOIN\n    (SELECT \n        c.Segment,\n        SUM(ym.Consumption) AS Consumption\n    FROM\n        yearmonth ym\n    INNER JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE\n        c.Currency = 'EUR' AND LEFT(ym.Date, 4) = '2012'\n    GROUP BY c.Segment) ym2012 ON ym2013.Segment = ym2012.Segment\nWHERE\n    ym2013.Segment IN ('SME', 'LAM', 'KAM')\nORDER BY PercentageIncrease DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\nAND Date >= '201308'\nAND Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') -\n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS MoreDiscountGasStationsCZEvsSVK\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n    SUM(CASE WHEN c.Currency = 'CZK' THEN 1 ELSE 0 END) AS TotalCZK,\n    SUM(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END) AS TotalEUR,\n    (SUM(CASE WHEN c.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END)) AS Difference\nFROM\n    customers c\nWHERE\n    c.Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT\n    (COUNT(DISTINCT CASE WHEN ym.Consumption > 46.73 THEN ym.CustomerID END) / COUNT(DISTINCT c.CustomerID)) * 100 AS PercentageOfLAMCustomers\nFROM\n    yearmonth ym\nJOIN\n    customers c ON ym.CustomerID = c.CustomerID\nWHERE\n    c.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT\n    (COUNT(DISTINCT ym.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date LIKE '201202%')) * 100 AS PercentageOfCustomers\nFROM\n    yearmonth ym\nWHERE\n    ym.Date LIKE '201202%'\n    AND ym.Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nWHERE y.Date LIKE '201309%' AND t.Date BETWEEN '2013-09-01' AND '2013-09-30'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE YEAR(t.Date) = 2013 AND MONTH(t.Date) = 6\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT ym.CustomerID)\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT DATE(transactions_1k.Date) AS TransactionDate\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k \nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) AS transactions_in_CZE\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-26'\nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\nAND gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Price = 548.4 AND t.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT\n    (COUNT(DISTINCT c.CustomerID) / (SELECT COUNT(*) FROM customers) * 100) AS percentage_of_customers_using_EUR\nFROM\n    customers c\nJOIN\n    transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE\n    c.Currency = 'EUR'\n    AND t.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n    (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate\nFROM\n    (SELECT \n        SUM(Price) AS consumption_2012\n    FROM\n        transactions_1k\n    WHERE\n        Date = '2012-08-25'\n            AND CustomerID = (SELECT \n                CustomerID\n            FROM\n                transactions_1k\n            WHERE\n                Date = '2012-08-25'\n                    AND Price = 634.8)) AS t1\n        CROSS JOIN\n    (SELECT \n        Consumption AS consumption_2013\n    FROM\n        yearmonth\n    WHERE\n        Date = '2013'\n            AND CustomerID = (SELECT \n                CustomerID\n            FROM\n                transactions_1k\n            WHERE\n                Date = '2012-08-25'\n                    AND Price = 634.8)) AS t2\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT\n    (SUM(CASE WHEN g.Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS premium_percentage\nFROM\n    customers c\nJOIN\n    gasstations g ON c.CustomerID = g.GasStationID\nWHERE\n    g.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT\n  SUM(t.Amount * t.Price) AS TotalSpent,\n  SUM(CASE WHEN DATE_FORMAT(t.Date, '%Y%m') = '201201' THEN t.Amount * t.Price ELSE 0 END) AS January2012Spent\nFROM\n  transactions_1k t\nWHERE\n  t.CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    t.CustomerID,\n    c.Currency,\n    SUM(t.Price) AS TotalSpent,\n    (SUM(t.Price) / SUM(t.Amount)) AS AvgPricePerItem\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nGROUP BY \n    t.CustomerID\nORDER BY \n    TotalSpent DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.CustomerID, ym.Consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE t.ProductID = 5\nAND t.Price / t.Amount > 29.00\nAND ym.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.major_name\nFROM major m\nJOIN member mb ON m.major_id = mb.link_to_major\nWHERE mb.first_name = 'Angela' AND mb.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) AS medium_tshirt_count\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women's Soccer'\nAND m.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT e.event_id) AS meeting_count\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type != 'fundraiser'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS funds_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.expense_id, expense.approved\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen'\nAND (SUBSTRING(e.expense_date, 6, 2) = '09' OR SUBSTRING(e.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT\n    (SELECT SUM(spent) FROM budget WHERE YEAR(event_date) = 2019) -\n    (SELECT SUM(spent) FROM budget WHERE YEAR(event_date) = 2020) AS difference_in_spent\nFROM\n    budget\nJOIN\n    event ON budget.link_to_event = event.event_id\nLIMIT 1\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT e.status\nFROM expense ex\nJOIN budget b ON ex.link_to_budget = b.budget_id\nJOIN event e ON b.link_to_event = e.event_id\nWHERE ex.expense_description = 'Post Cards, Posters'\nAND ex.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name\nFROM major m\nJOIN member mb ON m.major_id = mb.link_to_major\nWHERE mb.first_name = 'Brent' AND mb.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT m.major_name\nFROM member AS mem\nJOIN major AS m ON mem.link_to_major = m.major_id\nWHERE mem.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT \n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')) / \n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting')) AS times_more\nFROM \n    dual\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.link_to_member) AS members_attended\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "51": "SELECT first_name, last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name, MAX(b.spent / b.amount) AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nGROUP BY e.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_for_food FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS student_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name, MIN(ex.cost) AS lowest_cost\nFROM event e\nJOIN expense ex ON e.event_id = ex.link_to_budget\nGROUP BY e.event_name\nORDER BY lowest_cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT\n  (SELECT SUM(cost)\n   FROM expense\n   INNER JOIN event ON expense.link_to_budget = event.event_id\n   WHERE event.event_name = 'Yearly Kickoff') / SUM(cost) * 100 AS percentage\nFROM expense\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) as total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) AS number_of_members_with_physics_teaching\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS (\n    SELECT 1\n    FROM attendance a\n    JOIN member m ON a.link_to_member = m.member_id\n    JOIN event e ON a.link_to_event = e.event_id\n    WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women\\'s Soccer'\n) AS attended\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost \nFROM expense e \nJOIN event ev ON e.link_to_budget = ev.event_id \nWHERE e.expense_description = 'Posters' AND ev.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) AS total_value\nFROM expense\nJOIN event ON expense.link_to_member = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense.expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT b.category, SUM(b.amount) AS amount_budgeted\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'April Speaker'\nGROUP BY b.category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id\t----- bird -----\tstudent_club",
    "69": "SELECT expense.expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT e.type\nFROM event e\nWHERE e.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, mj.department, mj.college\nFROM member m\nJOIN major mj ON m.link_to_major = mj.major_id\nWHERE mj.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT\n    (COUNT(DISTINCT income.income_id) / COUNT(DISTINCT member.member_id)) * 100 AS percentage\nFROM\n    member\nLEFT JOIN\n    income ON member.member_id = income.link_to_member\nWHERE\n    member.t_shirt_size = 'Medium'\n    AND member.position = 'Member'\n    AND income.amount = 50\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game'\nAND status = 'Closed'\nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name, m.last_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id, m.first_name, m.last_name, m.phone\nHAVING MIN(e.cost) > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT\n  SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS InPatientCount,\n  SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS OutPatientCount,\n  ABS(\n    (SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END))\n    /\n    GREATEST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END), SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END))\n  ) * 100 AS DeviationPercentage\nFROM Patient\nWHERE SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT\n    (COUNT(CASE WHEN YEAR(Birthday) > 1930 THEN 1 END) / COUNT(*)) * 100 AS percentage\nFROM\n    Patient\nWHERE\n    SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT\n    SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS OutpatientCount,\n    SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS InpatientCount,\n    SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) / SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS OutpatientToInpatientRatio\nFROM Patient\nWHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.SEX, p.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND YEAR(Description) = 1997 \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT p.ID) AS FemalePatientsWithSeriousThrombosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.SEX = 'F'\nAND e.`Thrombosis` = 1\nAND YEAR(e.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT p.ID, e.Symptoms, e.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.Birthday = (SELECT MAX(Birthday) FROM Patient)\nAND e.Symptoms IS NOT NULL\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT L.Date, YEAR(P.`First Date`) - YEAR(P.Birthday) AS AgeAtFirstDate\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Diagnosis = 'SJS'\nORDER BY P.Birthday DESC, L.Date DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT\n    SUM(CASE WHEN P.SEX = 'M' AND L.UA <= 8.0 THEN 1 ELSE 0 END) AS MaleAbnormalUA,\n    SUM(CASE WHEN P.SEX = 'F' AND L.UA <= 6.5 THEN 1 ELSE 0 END) AS FemaleAbnormalUA,\n    (SUM(CASE WHEN P.SEX = 'M' AND L.UA <= 8.0 THEN 1 ELSE 0 END) / SUM(CASE WHEN P.SEX = 'F' AND L.UA <= 6.5 THEN 1 ELSE 0 END)) AS MaleToFemaleRatio\nFROM\n    Patient P\nJOIN\n    Laboratory L ON P.ID = L.ID\nWHERE\n    (P.SEX = 'M' AND L.UA <= 8.0) OR (P.SEX = 'F' AND L.UA <= 6.5)\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.ID) AS UnderagePatientsExamined\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE YEAR(Patient.Birthday) > (1993 - 18)\nAND YEAR(Examination.`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    TIMESTAMPDIFF(YEAR, p.Birthday, e.`Examination Date`) AS Age,\n    e.Diagnosis\nFROM \n    Examination e\nJOIN \n    Patient p ON e.ID = p.ID\nJOIN \n    Laboratory l ON e.ID = l.ID\nWHERE \n    l.HGB = (SELECT MAX(HGB) FROM Laboratory)\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT e.`aCL IgM`\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.Diagnosis = 'SLE' AND p.Description = '1994-02-19' AND e.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT\n  (SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) -\n  SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) AS `DecreaseRate`\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT COUNT(DISTINCT Laboratory.ID) AS NumberOfPatients\nFROM Laboratory\nJOIN Examination ON Laboratory.ID = Examination.ID\nWHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Examination \nWHERE `Thrombosis` = 2 \nAND `ANA Pattern` = 'S' \nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Examination) * 1.2\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-'\nAND l.Date LIKE '1991-10%'\nAND l.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(Laboratory.ALB) AS average_albumin_level\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nJOIN Examination ON Laboratory.ID = Examination.ID\nWHERE Patient.SEX = 'F'\nAND Laboratory.PLT > 400\nAND Examination.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT\n    (COUNT(CASE WHEN SEX = 'F' THEN 1 END) / COUNT(*)) * 100 AS percentage_women\nFROM\n    Patient\nWHERE\n    YEAR(Birthday) = 1980 AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT \n    CASE \n        WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n        WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n        ELSE 'No'\n    END AS `Is_Uric_Acid_Normal`\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT p.SEX, COUNT(*) AS TotalPatients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.`T-BIL` >= 2.0\nGROUP BY p.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Birthday)) AS AverageAge\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'M' AND `T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.TG >= 200 AND YEAR(CURDATE()) - YEAR(p.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND YEAR(Patient.Birthday) BETWEEN 1936 AND 1956 \nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.ID, p.SEX, TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GLU >= 180 AND l.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, TIMESTAMPDIFF(YEAR, p.Birthday, CURRENT_DATE) AS age, p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.SEX\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SLE' AND l.HGB > 10 AND l.HGB < 17\nORDER BY p.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, TIMESTAMPDIFF(YEAR, p.Birthday, CURRENT_DATE) AS age\nFROM Patient p\nJOIN (\n    SELECT ID\n    FROM Laboratory\n    WHERE HCT >= 52\n    GROUP BY ID\n    HAVING COUNT(ID) >= 2\n) AS lab_exceeds ON p.ID = lab_exceeds.ID\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT\n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS LowerThanNormal,\n  SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS HigherThanNormal\nFROM Laboratory\nWHERE PLT <= 100 OR PLT >= 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.ID, p.Birthday, l.PLT\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(l.Date) = 1984\nAND YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) < 50\nAND l.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT\n  (SUM(CASE WHEN P.SEX = 'F' AND L.PT >= 14 THEN 1 ELSE 0 END) / SUM(CASE WHEN L.PT >= 14 THEN 1 ELSE 0 END)) * 100 AS PercentageOfFemalesWithAbnormalPT\nFROM\n  Patient P\nJOIN\n  Laboratory L ON P.ID = L.ID\nWHERE\n  YEAR(CURRENT_DATE) - YEAR(P.Birthday) > 55\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT p.ID) AS MalePatientsWithAbnormalFG\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\nAND l.WBC > 3.5 AND l.WBC < 9.0\nAND (l.FG <= 150 OR l.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) AS PatientsWithHighIgG\nFROM Laboratory\nWHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Laboratory\nJOIN Examination ON Laboratory.ID = Examination.ID\nWHERE Laboratory.IGG >= 900 AND Laboratory.IGG <= 2000 AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.IGA >= 80 AND l.IGA <= 500 AND YEAR(p.`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE IGM <= 40 OR IGM >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) \nFROM Patient \nWHERE CRP = '+' AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.RNP IN ('-', '+-') AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Examination\nWHERE `SM` IN ('-', '+-') AND `Thrombosis` = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'F'\nAND Examination.Symptoms IS NULL\nAND Examination.`SC170` IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.CENTROMEA IN('-', '+-')\nAND Laboratory.SSB IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(Birthday) AS YoungestBirthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT p.ID) AS PatientsWithNormalCPK_PositiveCoagulation\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name AS league_name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.id\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010'\nGROUP BY Match.away_team_api_id\nHAVING SUM(Match.away_team_goal > Match.home_team_goal)\nORDER BY SUM(Match.away_team_goal > Match.home_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_api_id, buildUpPlaySpeed\nFROM Team_Attributes\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name AS league_name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016' AND m.home_team_goal = m.away_team_goal\nGROUP BY l.id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT player_name, (YEAR(CURDATE()) - YEAR(birthday)) AS age\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE sprint_speed >= 97\nAND YEAR(date) BETWEEN 2013 AND 2015\nAND birthday IS NOT NULL\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name, COUNT(m.id) AS total_matches\nFROM Match m\nJOIN League l ON m.league_id = l.id\nGROUP BY m.league_id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T.team_long_name\nFROM Team T\nJOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id\nWHERE TA.buildUpPlayPassing > (\n    SELECT AVG(TA2.buildUpPlayPassing)\n    FROM Team_Attributes TA2\n    WHERE TA2.buildUpPlayPassing IS NOT NULL AND strftime('%Y', TA2.date) = '2012'\n)\nAND strftime('%Y', TA.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT\n    (COUNT(CASE WHEN preferred_foot = 'left' THEN 1 END) / COUNT(*)) * 100 AS percentage_of_left_footed_players\nFROM\n    Player\nWHERE\n    preferred_foot = 'left'\n    AND YEAR(birthday) BETWEEN 1987 AND 1992\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(pa.long_shots) AS average_long_shots\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name, AVG(pa.heading_accuracy) as avg_heading_accuracy\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180\nGROUP BY p.player_api_id\nORDER BY avg_heading_accuracy DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2009/2010'\nGROUP BY L.id\nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT *\nFROM Player\nWHERE SUBSTR(birthday, 1, 7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011'\nORDER BY pa.date DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT \n    player_name,\n    AVG(finishing) as avg_finishing_rate\nFROM \n    Player\nJOIN \n    Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE \n    height = (SELECT MAX(height) FROM Player)\n    OR height = (SELECT MIN(height) FROM Player)\nGROUP BY \n    player_name\nORDER BY \n    avg_finishing_rate DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.height > 170\nAND strftime('%Y', pa.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT\n  (SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) -\n  (SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END)) AS avg_ball_control_difference\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT \n    CASE \n        WHEN a.birthday < b.birthday THEN 'Aaron Lennon'\n        WHEN a.birthday > b.birthday THEN 'Abdelaziz Barrada'\n        ELSE 'Both have the same birthday'\n    END AS older_player\nFROM Player a, Player b\nWHERE a.player_name = 'Aaron Lennon'\nAND b.player_name = 'Abdelaziz Barrada'\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id) \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.volleys > 70 AND pa.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS matches_in_april_2009\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2008/2009'\nGROUP BY l.name\nORDER BY COUNT(m.id) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT\n  (SELECT overall_rating\n   FROM Player_Attributes\n   JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\n   WHERE player_name = 'Ariel Borysiuk'\n   ORDER BY date DESC\n   LIMIT 1) -\n  (SELECT overall_rating\n   FROM Player_Attributes\n   JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\n   WHERE player_name = 'Paulin Puel'\n   ORDER BY date DESC\n   LIMIT 1) AS rating_difference,\n  ((SELECT overall_rating\n    FROM Player_Attributes\n    JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\n    WHERE player_name = 'Ariel Borysiuk'\n    ORDER BY date DESC\n    LIMIT 1) /\n   (SELECT overall_rating\n    FROM Player_Attributes\n    JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\n    WHERE player_name = 'Paulin Puel'\n    ORDER BY date DESC\n    LIMIT 1) - 1) * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing_score, ta.chanceCreationPassingClass AS classification\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE overall_rating = 77 AND date LIKE '2016-06-23%'\nORDER BY birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francesco Migliore' AND pa.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) AS first_highest_crossing_date\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Kevin Constant'\n)\nAND crossing = (\n    SELECT MAX(crossing)\n    FROM Player_Attributes\n    WHERE player_api_id = (\n        SELECT player_api_id\n        FROM Player\n        WHERE player_name = 'Kevin Constant'\n    )\n)\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT defenceAggressionClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Marko Arnautovic'\nAND SUBSTRING(pa.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    (landon.overall_rating - jordan.overall_rating) / landon.overall_rating * 100 AS percentage_difference\nFROM \n    Player_Attributes AS landon\nJOIN \n    Player AS p_landon ON landon.player_api_id = p_landon.player_api_id\nJOIN \n    Player_Attributes AS jordan ON landon.date = jordan.date\nJOIN \n    Player AS p_jordan ON jordan.player_api_id = p_jordan.player_api_id\nWHERE \n    p_landon.player_name = 'Landon Donovan'\n    AND p_jordan.player_name = 'Jordan Bowery'\n    AND landon.date = '2013-07-12' \n    AND jordan.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name\nFROM Player\nORDER BY height DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "166": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT\n  (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) -\n  (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23) AS jumping_difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND preferred_foot = 'right'\nORDER BY player_api_id ASC\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing AS finishing_rate, pa.curve AS curve_score\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.weight = (SELECT MAX(weight) FROM Player)\nORDER BY pa.date DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) AS total_games\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY total_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT t.team_long_name AS full_name\nFROM Team t\nJOIN Match m ON t.team_api_id = m.away_team_api_id\nGROUP BY t.team_long_name\nORDER BY SUM(m.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "178": "SELECT\n  (COUNT(CASE WHEN p.height < 180 AND pa.overall_rating > 70 THEN 1 END) / COUNT(p.id)) * 100 AS percentage\nFROM\n  Player p\nJOIN\n  Player_Attributes pa ON p.id = pa.player_api_id\nWHERE\n  pa.overall_rating IS NOT NULL\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 20 AND q.q1 IS NOT NULL\nORDER BY q.q1 DESC\nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 19 AND q.q2 IS NOT NULL\nORDER BY q.q2 ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 354 AND d.forename = 'Bruno' AND d.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT driverId, number\nFROM qualifying\nWHERE raceId = 903 AND q3 LIKE '1:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS drivers_not_finished\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.driverId, drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.raceId = 161 AND lt.time LIKE '1:27%'\n\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 45 AND q.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872 AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nORDER BY CAST(r.fastestLapSpeed AS DECIMAL(10,2)) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT \n    ((CAST(fastestLapSpeed853 AS DECIMAL(10, 2)) - CAST(fastestLapSpeed854 AS DECIMAL(10, 2))) / CAST(fastestLapSpeed853 AS DECIMAL(10, 2))) * 100 AS percentageFaster\nFROM\n    (SELECT \n        fastestLapSpeed AS fastestLapSpeed853\n    FROM\n        results\n    INNER JOIN drivers ON results.driverId = drivers.driverId\n    WHERE\n        drivers.forename = 'Paul'\n            AND drivers.surname = 'di Resta'\n            AND results.raceId = 853) AS Race853\nCROSS JOIN\n    (SELECT \n        fastestLapSpeed AS fastestLapSpeed854\n    FROM\n        results\n    INNER JOIN drivers ON results.driverId = drivers.driverId\n    WHERE\n        drivers.forename = 'Paul'\n            AND drivers.surname = 'di Resta'\n            AND results.raceId = 854) AS Race854\t----- bird -----\tformula_1",
    "196": "SELECT \n    COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) / COUNT(*) AS race_completion_rate\nFROM \n    races ra\nJOIN \n    results r ON ra.raceId = r.raceId\nWHERE \n    ra.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name\nFROM races\nWHERE year = (SELECT YEAR(MIN(date)) FROM races)\nAND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races WHERE YEAR(date) = (SELECT YEAR(MIN(date)) FROM races))\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, SUM(ds.points) AS total_points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(lt.milliseconds) AS best_lap_time, d.forename, d.surname, r.name AS race_name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE lt.milliseconds IS NOT NULL\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lt.milliseconds) AS average_lap_time\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND r.name = 'Malaysian Grand Prix'\nAND r.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(CASE WHEN r.position > 1 THEN 1 END) / COUNT(*)) * 100 AS percentage\nFROM \n    results r\nJOIN \n    drivers d ON r.driverId = d.driverId\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    d.surname = 'Hamilton' \n    AND ra.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, d.nationality, MAX(ds.points) AS max_points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nORDER BY SUM(ds.wins) DESC, MAX(ds.points) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age, CONCAT(forename, ' ', surname) AS name\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.*\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT r.name AS race, r.year AS year_of_race\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY res.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT r.year, r.name, dr.points\nFROM drivers d\nJOIN results dr ON d.driverId = dr.driverId\nJOIN races r ON dr.raceId = r.raceId\nJOIN seasons s ON r.year = s.year\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.year ASC, r.round ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT \n    (COUNT(*) / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')) * 100 AS percentage\nFROM races\nWHERE country = 'Germany' AND name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT d.nationality\nFROM drivers d\nORDER BY d.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nJOIN seasons s ON ra.year = s.year\nWHERE ra.name = 'Canadian Grand Prix' AND s.year = 2007 AND r.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT r.name AS race_name, r.date AS race_date\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank ASC, r.date DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) AS FastestLapSpeed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT r.positionOrder\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND ra.name = 'Chinese Grand Prix' AND ra.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT r.time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT drivers.driverId) AS participating_drivers\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((TIME_TO_SEC(TIMEDIFF(last_driver.time, champion.time)) / TIME_TO_SEC(last_driver.time)) * 100) AS percentage_faster\nFROM \n    (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND positionOrder = 1) AS champion,\n    (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL ORDER BY positionOrder DESC LIMIT 1) AS last_driver\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) AS maximum_points\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nWHERE c.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 291 AND constructorResults.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorId) AS JapaneseConstructorsWithZeroPointsInTwoRaces\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE c.nationality = 'Japanese' AND cr.points = 0\nGROUP BY c.constructorId\nHAVING COUNT(cr.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN r.driverId END) / COUNT(DISTINCT r.driverId)) * 100 AS race_completion_percentage\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nJOIN \n    drivers d ON r.driverId = d.driverId\nWHERE \n    d.nationality = 'Japanese'\n    AND ra.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT \n    r.year, \n    AVG(TIME_TO_SEC(r.time)) as average_champion_time_seconds\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nJOIN \n    driverStandings ds ON r.raceId = ds.raceId AND r.driverId = ds.driverId\nWHERE \n    r.position = 1 \n    AND r.time IS NOT NULL \n    AND ra.year < 1975 \n    AND ds.position = 1\nGROUP BY \n    r.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId AND races.raceId = driverStandings.raceId\nWHERE races.year = 2009 AND driverStandings.position = 1\nORDER BY races.date DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(fastestLapSpeed AS DECIMAL(10,2))) AS average_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(DISTINCT CASE WHEN YEAR(dob) < 1985 AND laps > 50 THEN driverId END) / COUNT(DISTINCT driverId)) * 100 AS percentage\nFROM \n    drivers\nJOIN \n    results ON drivers.driverId = results.driverId\nJOIN \n    races ON results.raceId = races.raceId\nWHERE \n    races.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId) AS FrenchDriversWithFastLap\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French'\nAND SUBSTRING_INDEX(lt.time, ':', 1) * 60 + SUBSTRING_INDEX(lt.time, ':', -1) < 120\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT d.code, COUNT(*) AS NetherlandicDriversAmongTop3\nFROM (\n    SELECT d.driverId, d.code, d.nationality\n    FROM drivers d\n    ORDER BY d.dob DESC\n    LIMIT 3\n) AS youngest_drivers\nLEFT JOIN (\n    SELECT driverId\n    FROM drivers\n    WHERE nationality = 'Dutch' OR nationality = 'Netherlandic'\n) AS netherlandic_drivers ON youngest_drivers.driverId = netherlandic_drivers.driverId\nCROSS JOIN (\n    SELECT COUNT(*) AS NetherlandicDriversAmongTop3\n    FROM (\n        SELECT d.driverId\n        FROM drivers d\n        WHERE d.nationality = 'Dutch' OR d.nationality = 'Netherlandic'\n        ORDER BY d.dob DESC\n        LIMIT 3\n    ) AS subquery\n) AS count_query\nGROUP BY youngest_drivers.driverId\nORDER BY youngest_drivers.driverId\t----- bird -----\tformula_1",
    "231": "SELECT drivers.driverRef\nFROM drivers\nWHERE drivers.nationality = 'German'\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE YEAR(d.dob) = 1971 AND r.fastestLapTime IS NOT NULL\nGROUP BY d.driverId, d.code\nHAVING COUNT(r.fastestLapTime) > 0\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nJOIN status ON results.statusId = status.statusId\nWHERE results.raceId BETWEEN 50 AND 100\nAND results.time IS NOT NULL\nAND status.status = 'Disqualified'\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(*) AS times_held, location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT \n    seasons.year, \n    drivers.forename, \n    drivers.surname, \n    races.name, \n    races.date, \n    races.time\nFROM \n    qualifying\nJOIN \n    races ON qualifying.raceId = races.raceId\nJOIN \n    drivers ON qualifying.driverId = drivers.driverId\nJOIN \n    seasons ON races.year = seasons.year\nWHERE \n    drivers.dob = (SELECT MAX(dob) FROM drivers)\nAND \n    races.date = (SELECT MIN(races.date) FROM races JOIN qualifying ON races.raceId = qualifying.raceId JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.dob = (SELECT MAX(dob) FROM drivers))\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname, AVG(ps.duration) AS avg_duration\nFROM drivers d\nJOIN pitStops ps ON d.driverId = ps.driverId\nWHERE d.nationality = 'German' AND YEAR(d.dob) BETWEEN 1980 AND 1985\nGROUP BY d.driverId\nORDER BY avg_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.year = 2008 AND races.name = 'Canadian Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN constructors ON results.constructorId = constructors.constructorId\nWHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nJOIN races r ON cr.raceId = r.raceId\nJOIN circuits ci ON r.circuitId = ci.circuitId\nWHERE r.year BETWEEN 1980 AND 2010\nAND ci.name LIKE '%Monaco%'\nGROUP BY cr.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008 AND c.name = 'Marina Bay Street Circuit' AND q.position = 1 AND r.round = 3\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, d.nationality, r.name AS race_name\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nAND r.date = (SELECT MIN(r.date) FROM races JOIN results ON races.raceId = results.raceId WHERE results.driverId = d.driverId)\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT driverId, COUNT(*) AS accident_count\nFROM results\nWHERE raceId IN (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix')\nAND statusId = 3\nGROUP BY driverId\nORDER BY accident_count DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nORDER BY lt.time ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name AS circuit_name, MIN(lapTimes.time) AS lap_record\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) AS superheroes_with_agility\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id AND eye_colour.colour = 'Blue'\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS colour_count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY colour_count DESC, colour.colour\t----- bird -----\tsuperhero",
    "251": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN publisher p ON sh.publisher_id = p.id\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM superhero AS sh\nJOIN hero_attribute AS ha ON sh.id = ha.hero_id\nJOIN attribute AS a ON ha.attribute_id = a.id\nJOIN publisher AS p ON sh.publisher_id = p.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) AS gold_eyed_superheroes\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero AS s\nJOIN race AS r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT s.id) AS female_superheroes_with_strength_100\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female'\nAND a.attribute_name = 'Strength'\nAND ha.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT\n    (COUNT(CASE WHEN a.alignment = 'Bad' THEN 1 END) / COUNT(*) * 100) AS percentage_bad_alignment,\n    COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_bad_alignment\nFROM\n    superhero s\nLEFT JOIN alignment a ON s.alignment_id = a.id\nLEFT JOIN publisher p ON s.publisher_id = p.id\t----- bird -----\tsuperhero",
    "260": "SELECT\n    (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Marvel Comics') -\n    (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'DC Comics') AS difference\nFROM\n    dual\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS superheroes_without_full_name\nFROM superhero\nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(sh.weight_kg) AS average_weight\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superpower sp\nJOIN hero_power hp ON sp.id = hp.power_id\nJOIN superhero sh ON hp.hero_id = sh.id\nJOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour AS hair_colour\nFROM superhero AS s\nJOIN race AS r ON s.race_id = r.id\nJOIN colour AS c ON s.hair_colour_id = c.id\nWHERE r.race = 'human' AND s.height_cm = 185\t----- bird -----\tsuperhero",
    "267": "SELECT\n  (COUNT(DISTINCT CASE WHEN p.publisher_name = 'Marvel Comics' THEN s.id END) / COUNT(s.id)) * 100 AS percentage_of_marvel_heroes\nFROM\n  superhero s\nJOIN\n  publisher p ON s.publisher_id = p.id\nWHERE\n  s.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender = 'Male' AND weight_kg > (\n    SELECT AVG(weight_kg) * 0.79\n    FROM superhero\n    WHERE weight_kg IS NOT NULL\n)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_power.hero_id) AS stealth_hero_count\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT sh.full_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON sh.publisher_id = p.id\nWHERE a.attribute_name = 'durability'\nAND p.publisher_name = 'Dark Horse Comics'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT \n    ec.colour AS eye_colour,\n    hc.colour AS hair_colour,\n    sc.colour AS skin_colour\nFROM \n    superhero sh\nJOIN \n    gender g ON sh.gender_id = g.id\nJOIN \n    publisher p ON sh.publisher_id = p.id\nJOIN \n    colour ec ON sh.eye_colour_id = ec.id\nJOIN \n    colour hc ON sh.hair_colour_id = hc.id\nJOIN \n    colour sc ON sh.skin_colour_id = sc.id\nWHERE \n    g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT sh.superhero_name, p.publisher_name\nFROM superhero sh\nJOIN publisher p ON sh.publisher_id = p.id\nWHERE sh.eye_colour_id = sh.hair_colour_id\nAND sh.hair_colour_id = sh.skin_colour_id\nAND sh.eye_colour_id IS NOT NULL\t----- bird -----\tsuperhero",
    "275": "SELECT\n  (COUNT(DISTINCT CASE WHEN c.colour = 'Blue' THEN sh.id END) / COUNT(DISTINCT sh.id)) * 100 AS percentage_of_blue_females\nFROM\n  superhero sh\nJOIN\n  gender g ON sh.gender_id = g.id\nJOIN\n  colour c ON sh.skin_colour_id = c.id\nWHERE\n  g.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS number_of_powers\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT ha.hero_id) AS strongest_heroes_count\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength' AND ha.attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'Strength'\n)\t----- bird -----\tsuperhero",
    "281": "SELECT\n  (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics')) AS percent_female_marvel\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM hero_attribute\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN superhero ON hero_attribute.hero_id = superhero.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT\n    (COUNT(*) / (SELECT COUNT(*) FROM superhero)) * 100 AS percentage_blue_eyes\nFROM\n    superhero\nWHERE\n    eye_colour_id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT\n    SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) / SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) AS ratio\nFROM\n    superhero AS s\nJOIN\n    gender AS g ON s.gender_id = g.id\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour AS eye_colour\nFROM superhero AS s\nJOIN colour AS c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT\n  (SUM(CASE WHEN s.eye_colour_id = blue_colour.id THEN 1 ELSE 0 END) -\n   SUM(CASE WHEN s.eye_colour_id = no_colour.id THEN 1 ELSE 0 END)) AS difference\nFROM\n  superhero s\nLEFT JOIN colour blue_colour ON s.eye_colour_id = blue_colour.id AND blue_colour.colour = 'blue'\nLEFT JOIN colour no_colour ON s.eye_colour_id = no_colour.id AND no_colour.colour = 'no color'\nWHERE\n  s.weight_kg = 0 OR s.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) AS green_skinned_villains\nFROM superhero\nJOIN colour AS skin ON superhero.skin_colour_id = skin.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE skin.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero AS s\nJOIN hero_power AS hp ON s.id = hp.hero_id\nJOIN superpower AS sp ON hp.power_id = sp.id\nJOIN gender AS g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) -\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT p.OwnerDisplayName\nFROM posts p\nWHERE p.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) AS NumberOfPosts\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 65 AND p.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nWHERE t.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS average_score\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT\n    (COUNT(DISTINCT CASE WHEN u.Age > 65 THEN p.Id END) / COUNT(DISTINCT p.Id)) * 100 AS PercentageElderUserPosts\nFROM\n    posts p\nJOIN\n    users u ON p.OwnerUserId = u.Id\nWHERE\n    p.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 3025\nAND c.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT\n    CASE\n        WHEN p.ClosedDate IS NULL THEN 'Yes'\n        ELSE 'No'\n    END AS WellFinished\nFROM\n    comments c\nJOIN\n    posts p ON c.PostId = p.Id\nWHERE\n    c.UserId = 23853\n    AND c.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS NumberOfPosts\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT \n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / \n    (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS times_posts_more_than_votes\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT DisplayName\nFROM users\nJOIN comments ON users.Id = comments.UserId\nWHERE Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT p.LastEditorDisplayName\nFROM posts p\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN postHistory ph ON p.Id = ph.PostId\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND ph.PostHistoryTypeId = 4 \t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nJOIN posts p ON v.PostId = p.Id\nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text AS Comment, AVG(p.ViewCount) AS AverageViewCount\nFROM posts p\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE p.Tags LIKE '%<humor>%'\nGROUP BY p.Id, p.Title, c.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) AS UsersWithMoreThan5Badges\nFROM badges\nGROUP BY UserId\nHAVING COUNT(Id) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT ph.UserId\nFROM postHistory ph\nJOIN posts p ON ph.PostId = p.Id\nGROUP BY ph.UserId, ph.PostId\nHAVING COUNT(ph.Id) = 1 AND MAX(p.ViewCount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT\n    ABS(\n        (COUNT(CASE WHEN YEAR(Date) = 2010 THEN 1 END) / COUNT(*) * 100) -\n        (COUNT(CASE WHEN YEAR(Date) = 2011 THEN 1 END) / COUNT(*) * 100)\n    ) AS percentage_difference\nFROM\n    badges\nWHERE\n    Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS average_up_votes, AVG(u.Age) AS average_age\nFROM users u\nJOIN (\n    SELECT OwnerUserId, COUNT(*) AS PostCount\n    FROM posts\n    GROUP BY OwnerUserId\n    HAVING COUNT(*) > 10\n) AS subquery ON u.Id = subquery.OwnerUserId\t----- bird -----\tcodebase_community",
    "324": "SELECT\n    (SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010) / \n    (SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2011) AS ratio\nFROM\n    dual\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id, p.AnswerCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, MAX(SumViewCount) AS MaxPopularity\nFROM (\n    SELECT u.DisplayName, SUM(p.ViewCount) AS SumViewCount\n    FROM posts p\n    JOIN users u ON p.OwnerUserId = u.Id\n    WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\n    GROUP BY u.DisplayName\n) AS Popularity\nORDER BY MaxPopularity DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT t.TagName\nFROM tags t\nJOIN posts p ON p.Tags LIKE CONCAT('%<', t.TagName, '>%')\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT\n  (SELECT COUNT(*) FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id INNER JOIN tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%') WHERE u.DisplayName = 'Community' AND t.TagName = 'r') / \n  (SELECT COUNT(*) FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Community') * 100 AS percentage\t----- bird -----\tcodebase_community",
    "329": "SELECT\n  (SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Mornington')) -\n  (SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Amos')) AS ViewCountDifference\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(MonthlyLinkCount) AS AverageMonthlyLinks\nFROM (\n    SELECT COUNT(pl.Id) AS MonthlyLinkCount\n    FROM postLinks AS pl\n    INNER JOIN posts AS p ON pl.PostId = p.Id\n    WHERE YEAR(pl.CreationDate) = 2010 AND p.AnswerCount <= 2\n    GROUP BY MONTH(pl.CreationDate)\n) AS MonthlyData\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) AS UsersWithFavoritePosts\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY p.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT\n    (COUNT(DISTINCT p.Id) / (SELECT COUNT(*) FROM posts WHERE YEAR(CreationDate) = 2011)) * 100 AS percentage\nFROM\n    posts p\nJOIN\n    users u ON p.OwnerUserId = u.Id\nWHERE\n    YEAR(p.CreationDate) = 2011\n    AND u.Reputation > 1000\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title LIKE '%Computer Game Datasets%'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) AS NumberOfComments\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    ORDER BY Score DESC\n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, u.DisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN users u ON c.UserId = u.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT\n    (COUNT(CASE WHEN p.Score > 50 THEN 1 END) / COUNT(*)) * 100 AS PercentageOfHighScorePosts\nFROM\n    posts p\nJOIN\n    users u ON p.OwnerUserId = u.Id\nWHERE\n    u.Id = (SELECT OwnerUserId FROM posts WHERE OwnerUserId IS NOT NULL GROUP BY OwnerUserId ORDER BY MAX(u.Reputation) DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "341": "SELECT `ExcerptPostId`, `WikiPostId` FROM tags WHERE `TagName` = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*)\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT\n    (COUNT(DISTINCT c.UserId) / total_users_with_score_5_to_10) * 100 AS percentage_of_users_with_0_upvotes\nFROM\n    comments c\nJOIN\n    users u ON c.UserId = u.Id\nJOIN\n    (SELECT COUNT(DISTINCT UserId) AS total_users_with_score_5_to_10\n     FROM comments\n     WHERE Score BETWEEN 5 AND 10) AS subquery\nWHERE\n    c.Score BETWEEN 5 AND 10\n    AND u.UpVotes = 0\t----- bird -----\tcodebase_community",
    "346": "SELECT *\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT *\nFROM cards\nWHERE borderColor = 'borderless'\nAND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT c.id, c.name, c.setCode, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic' AND l.status = 'Banned' AND l.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact'\nAND c.side IS NULL\nAND l.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\nAND l.format = 'commander'\nAND l.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hasContentWarning\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN (\n    SELECT uuid, COUNT(uuid) AS ruling_count\n    FROM rulings\n    GROUP BY uuid\n    ORDER BY ruling_count DESC\n    LIMIT 1\n) AS r ON c.uuid = r.uuid\t----- bird -----\tcard_games",
    "353": "SELECT\n    (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified') / COUNT(*) * 100 AS percentage_chinese_simplified\nFROM\n    cards\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "356": "SELECT l.format, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT\n    (COUNT(IF(borderColor = 'borderless', 1, NULL)) / COUNT(*)) * 100 AS percentage_of_borderless_cards\nFROM\n    cards\t----- bird -----\tcard_games",
    "358": "SELECT\n    (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND uuid IN (SELECT uuid FROM cards WHERE isStorySpotlight = 1)) / \n    (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100 AS percentage_french_story_spotlight\n\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = 'Summon - Angel' \nAND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) AS white_border_banned_cards\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.id, c.name, fd.language, fd.text\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originalType = 'Artifact' AND c.colors = 'B' AND fd.language IS NOT NULL\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT\n    COUNT(*) AS StorySpotlightWithoutTextBoxCount,\n    GROUP_CONCAT(id) AS StorySpotlightWithoutTextBoxIDs,\n    (COUNT(*) / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100) AS Percentage\nFROM\n    cards\nWHERE\n    isStorySpotlight = 1 AND isTextless = 1\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT s.code) AS NumberOfBrazilianPortugueseTranslatedSets\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Commander' AND st.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT fd.`type`\nFROM foreign_data fd\nWHERE fd.`language` = 'German'\nAND fd.`type` IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nJOIN rulings r ON c.uuid = r.uuid \nWHERE l.format = 'premodern' \nAND r.text = 'This is a triggered mana ability.' \nAND c.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'French'\nAND c.type LIKE '%Creature%'\nAND c.layout = 'normal'\nAND c.borderColor = 'black'\nAND c.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.baseSetSize = 180 AND s.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT\n    (COUNT(DISTINCT CASE WHEN c.hasContentWarning = 0 THEN c.id END) / COUNT(DISTINCT l.id)) * 100 AS percentage\nFROM\n    cards c\nJOIN\n    legalities l ON c.uuid = l.uuid\nWHERE\n    l.format = 'commander'\n    AND l.status = 'legal'\t----- bird -----\tcard_games",
    "372": "```sql\nSELECT\n  (COUNT(CASE WHEN fd.language = 'French' THEN 1 END) / COUNT(*)) * 100 AS percentage\nFROM\n  cards c\nLEFT JOIN\n  foreign_data fd ON c.uuid = fd.uuid\nWHERE\n  c.power IS NULL OR c.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT\n    (COUNT(IF(isTextless = 1 AND layout = 'normal', 1, NULL)) / COUNT(*)) * 100 AS proportion\nFROM\n    cards\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT fd.language\nFROM foreign_data fd\nJOIN sets s ON fd.uuid IN (SELECT uuid FROM cards WHERE setCode = s.code)\nWHERE s.mcmName = 'Archenemy' AND s.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT fd.language\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT \n    CASE \n        WHEN a.convertedManaCost > b.convertedManaCost THEN 'Serra Angel'\n        WHEN a.convertedManaCost < b.convertedManaCost THEN 'Shrine Keeper'\n        ELSE 'Both cards have the same converted mana cost'\n    END AS card_with_more_converted_mana_cost\nFROM \n    cards a, \n    cards b\nWHERE \n    a.name = 'Serra Angel' AND \n    b.name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN set_translations st ON s.code = st.setCode\nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(\n    SELECT 1\n    FROM cards\n    JOIN foreign_data ON cards.uuid = foreign_data.uuid\n    WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean'\n) as has_korean_version\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nJOIN sets ON cards.setCode = sets.code \nJOIN set_translations ON sets.id = set_translations.id \nWHERE set_translations.translation = 'Hauptset Zehnte Edition' \nAND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name, sets.mtgoCode\nFROM sets\nJOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Angel of Mercy'\nAND sets.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.code) AS italian_translation_count\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly\nFROM sets\nJOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards AS T1\nJOIN sets AS T2 ON T1.setCode = T2.code\nWHERE T1.convertedManaCost > 5\nAND T2.name = 'Coldsnap'\nAND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\nAND fd.language = 'Italian'\nAND c.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = 'CSP')\t----- bird -----\tcard_games",
    "391": "SELECT\n  (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage\nFROM\n  cards\nJOIN\n  sets ON cards.setCode = sets.code\nWHERE\n  sets.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT\n    (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_of_incredibly_powerful_cards\nFROM\n    cards\nWHERE\n    setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities AS l\nJOIN cards AS c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(l.status) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1 AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT c.name, GROUP_CONCAT(DISTINCT l.format) AS legal_formats\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nLEFT JOIN legalities l ON c.uuid = l.uuid AND l.status = 'Legal'\nWHERE s.name = 'Hour of Devastation'\nGROUP BY c.name\t----- bird -----\tcard_games",
    "396": "SELECT s.name\nFROM sets s\nJOIN set_translations st_jp ON s.code = st_jp.setCode\nJOIN set_translations st_kr ON s.code = st_kr.setCode\nWHERE st_jp.language NOT LIKE '%Japanese%'\nAND st_kr.language = 'Korean'\nGROUP BY s.name\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT c.frameVersion\nFROM cards c\nWHERE c.artist = 'Allen Williams'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS avg_oxygen_atoms\nFROM (\n    SELECT molecule_id, COUNT(*) AS oxygen_count\n    FROM atom\n    WHERE element = 'O' AND molecule_id IN (\n        SELECT molecule_id\n        FROM bond\n        WHERE bond_type = '-'\n    )\n    GROUP BY molecule_id\n) AS oxygen_counts\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) AS average_single_bonded\nFROM (\n    SELECT m.molecule_id, COUNT(b.bond_id) AS single_bonded_count\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    WHERE m.label = '+' AND b.bond_type = '-'\n    GROUP BY m.molecule_id\n) AS single_bonded_molecules\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT\n    (SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS carbon_percentage\nFROM\n    atom a\nJOIN\n    connected c ON a.atom_id = c.atom_id\nJOIN\n    bond b ON c.bond_id = b.bond_id\nWHERE\n    b.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT a.element\nFROM atom AS a\nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom AS a\nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond AS b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'h'\n)\nGROUP BY label\nORDER BY COUNT(label) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(element) AS element_count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY element_count ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id) AS total_atoms\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element IN ('i', 's')\nAND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT\n  (COUNT(DISTINCT m.molecule_id) - COUNT(DISTINCT m_with_f.molecule_id)) / COUNT(DISTINCT m.molecule_id) * 100 AS percentage_of_non_fluorine_carcinogenic\nFROM\n  molecule m\nLEFT JOIN\n  (SELECT DISTINCT\n    m.molecule_id\n  FROM\n    molecule m\n  JOIN\n    atom a ON m.molecule_id = a.molecule_id\n  WHERE\n    m.label = '+' AND\n    a.element = 'f') m_with_f ON m.molecule_id = m_with_f.molecule_id\nWHERE\n  m.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT \n    (SUM(CASE WHEN bond.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT\n    ROUND((SUM(bond_type = '=') / COUNT(bond_id)) * 100, 5) AS percentage\nFROM\n    bond\nWHERE\n    molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(*)) * 100, 3) AS percentage\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(\n    (SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(atom_id)) * 100, 4\n) AS percent\nFROM atom\nWHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT m.label, a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label = '-' AND b.bond_type = '-'\nORDER BY m.molecule_id\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) AS bond_count\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nWHERE a.molecule_id = 'TR009' AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS number_of_connections\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'p'\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'n'\nWHERE a1.molecule_id = b.molecule_id AND a2.molecule_id = b.molecule_id\t----- bird -----\ttoxicology",
    "424": "SELECT m.label LIKE '%+%' AS is_carcinogenic\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id AND b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY COUNT(b.bond_id) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT a.atom_id, COUNT(c.bond_id) AS bond_count\n    FROM atom AS a\n    LEFT JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n) AS subquery\t----- bird -----\ttoxicology",
    "426": "SELECT atom.element\nFROM atom\nLEFT JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.atom_id IS NULL AND connected.atom_id2 IS NULL\t----- bird -----\ttoxicology",
    "427": "SELECT a1.atom_id AS atom1_id, a2.atom_id AS atom2_id\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT a.element\nFROM atom AS a\nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond AS b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(\n    (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id), 5\n) AS proportion\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms_with_triple_bond\nFROM atom AS a\nJOIN molecule AS m ON a.molecule_id = m.molecule_id\nJOIN bond AS b ON m.molecule_id = b.molecule_id\nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT \n  (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT a.atom_id)) * 100 AS percent\nFROM \n  atom AS a\nJOIN \n  connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN \n  bond AS b ON c.bond_id = b.bond_id\nWHERE \n  b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a1.element AS element1, a2.element AS element2\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE c.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT \n  (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT m.molecule_id)) * 100 AS percentage\nFROM \n  molecule m\nJOIN \n  atom a ON m.molecule_id = a.molecule_id\nWHERE \n  m.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT a.element, COUNT(*) AS toxicology_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+'\nAND SUBSTR(a.atom_id, 7, 1) = '4'\nGROUP BY a.element\t----- bird -----\ttoxicology",
    "436": "SELECT \n    (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) / COUNT(a.element)) AS ratio,\n    m.label\nFROM \n    atom a\nJOIN \n    molecule m ON a.molecule_id = m.molecule_id\nWHERE \n    a.molecule_id = 'TR006'\nGROUP BY \n    a.molecule_id\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode\nFROM frpm\nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) AS HighestEligibleFreeRate\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE (NumGE1500 / NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.sname, s.CharterNum, satscores.AvgScrWrite\nFROM satscores\nJOIN schools s ON satscores.cds = s.CDSCode\nWHERE satscores.AvgScrWrite > 499 AND s.CharterNum IS NOT NULL\nORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.sname\nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1\nAND s.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.sname, sch.FundingType\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nWHERE s.AvgScrMath > 400\nAND sch.County = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, s.Street, s.City, s.State, s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Monterey'\nAND s.StatusType = 'Active'\nAND s.SOCType = 'High Schools'\nAND (f.`FRPM Count (Ages 5-17)` > 800 OR f.`Free Meal Count (Ages 5-17)` > 800)\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.sname AS SchoolName, satscores.AvgScrWrite AS AverageWritingScore, s.Phone AS CommunicationNumber\nFROM satscores\nJOIN schools s ON satscores.cds = s.CDSCode\nWHERE (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01') AND satscores.AvgScrWrite IS NOT NULL\nORDER BY s.sname\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Charter Funding Type` = 'Locally funded' AND\n      (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > \n      (SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n       FROM frpm f2\n       WHERE f2.`Charter Funding Type` = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, `Enrollment (K-12)`, `Free Meal Count (K-12)`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS `Eligible Free Rate`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 1 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \n    s.School,\n    f.`FRPM Count (K-12)` / f.`Enrollment (K-12)` AS Eligible_FRPM_Rate\nFROM \n    schools AS s\nJOIN \n    frpm AS f ON s.CDSCode = f.CDSCode\nWHERE \n    s.DOC = '66'\nORDER BY \n    f.`FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.School, s.Street, s.City, s.State, s.Zip\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE sat.NumTstTakr > 0\nORDER BY (sat.NumGE1500 / sat.NumTstTakr), s.LastUpdate DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.AdmFName1, s.AdmLName1, s.AdmFName2, s.AdmLName2, s.AdmFName3, s.AdmLName3\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nORDER BY sat.NumGE1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.NumTstTakr) AS average_num_test_takers\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE sc.County = 'Fresno' AND YEAR(sc.OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone\nFROM satscores AS s\nJOIN schools AS sch ON s.cds = sch.CDSCode\nWHERE sch.District = 'Fresno Unified'\nORDER BY s.AvgScrRead ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School, s.County\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE s.Virtual = 'F'\nAND (\n  SELECT COUNT(DISTINCT s2.School)\n  FROM satscores sat2\n  JOIN schools s2 ON sat2.cds = s2.CDSCode\n  WHERE s2.County = s.County\n  AND s2.Virtual = 'F'\n  AND (sat2.AvgScrRead > sat.AvgScrRead OR (sat2.AvgScrRead = sat.AvgScrRead AND sat2.cds < sat.cds))\n) < 5\nORDER BY s.County, sat.AvgScrRead DESC\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.sname AS SchoolName, AVG(s.AvgScrWrite) AS AverageWritingScore\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nWHERE (sch.AdmFName1 = 'Ricci' AND sch.AdmLName1 = 'Ulrich') \n   OR (sch.AdmFName2 = 'Ricci' AND sch.AdmLName2 = 'Ulrich') \n   OR (sch.AdmFName3 = 'Ricci' AND sch.AdmLName3 = 'Ulrich')\nGROUP BY s.sname\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.CDSCode, s.School, s.Enrollment\nFROM schools AS s\nJOIN frpm AS f ON s.CDSCode = f.CDSCode\nWHERE s.DOC = '31' AND s.GSoffered LIKE '%K-12%'\nORDER BY f.`Enrollment (K-12)` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS monthly_average\nFROM schools\nWHERE County = 'Alameda'\nAND DOC = '52'\nAND YEAR(OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    SUM(CASE WHEN s.DOC = '54' THEN 1 ELSE 0 END) AS UnifiedSchools,\n    SUM(CASE WHEN s.DOC = '52' THEN 1 ELSE 0 END) AS ElementarySchools,\n    SUM(CASE WHEN s.DOC = '54' THEN 1 ELSE 0 END) / SUM(CASE WHEN s.DOC = '52' THEN 1 ELSE 0 END) AS Ratio\nFROM schools s\nWHERE s.County = 'Orange'\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.sname, s.Street\nFROM satscores AS sat\nJOIN schools AS s ON sat.cds = s.CDSCode\nWHERE sat.AvgScrMath IS NOT NULL\nORDER BY sat.AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.Charter = 0 \nAND s.County = 'Los Angeles' \nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `Academic Year` = '2014-2015'\nAND `City` = 'Fremont'\nAND `EdOpsCode` = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, \n       (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) * 100 AS `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles'\nAND s.GSoffered LIKE 'K%'\nAND s.GSoffered LIKE '%9'\nAND f.`Enrollment (Ages 5-17)` > 0\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumberOfVirtualSchools\nFROM schools\nWHERE (County = 'San Diego' OR County = 'Santa Barbara') AND Virtual = 'F'\nGROUP BY County\nORDER BY NumberOfVirtualSchools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools WHERE ABS(Longitude) = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT City, COUNT(*) AS NumberOfSchools\nFROM schools\nWHERE Magnet = 1\nAND GSoffered LIKE '%K%'\nAND GSoffered LIKE '%8%'\nAND EXISTS (\n    SELECT 1\n    FROM frpm\n    WHERE schools.CDSCode = frpm.CDSCode\n    AND `NSLP Provision Status` = 'Multiple Provision Types'\n)\nGROUP BY City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    f.`District Code`,\n    (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) * 100 AS `Percent (%) Eligible Free (K-12)`\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE (s.AdmFName1 = 'Alusine' OR s.AdmFName2 = 'Alusine' OR s.AdmFName3 = 'Alusine')\nAND f.`Enrollment (K-12)` > 0\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino'\nAND City = 'San Bernardino City Unified'\nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\nAND (\n    (SOC = '62' AND DOCType = 'Public')\n    OR (DOC = '54' AND DOCType = 'Public')\n)\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id) \nFROM account a \nJOIN district d ON a.district_id = d.district_id \nWHERE a.frequency = 'POPLATEK PO OBRATU' AND d.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' \nAND district.A3 = 'North Bohemia' \nAND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id, MIN(d.A11) AS lowest_avg_salary, (MAX(d.A11) - MIN(d.A11)) AS salary_gap\nFROM account a\nJOIN disp dp ON a.account_id = dp.account_id\nJOIN client c ON dp.client_id = c.client_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F' AND dp.type = 'OWNER'\nGROUP BY a.account_id\nORDER BY c.birth_date DESC, d.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nORDER BY c.birth_date DESC, d.A11 DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount, a.frequency\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.date BETWEEN '1997-01-01' AND '1997-12-31'\nAND l.status IN ('A', 'B')\nAND a.frequency = 'POPLATEK TYDNE'\nORDER BY l.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, l.amount, a.date\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12 AND YEAR(a.date) = 1993\nORDER BY l.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT c.client_id) \nFROM client c \nJOIN district d ON c.district_id = d.district_id \nJOIN disp di ON c.client_id = di.client_id \nJOIN account a ON di.account_id = a.account_id \nWHERE c.gender = 'F' \nAND c.birth_date < '1950-01-01' \nAND d.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT d.A2\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN disp dp ON a.account_id = dp.account_id\nJOIN client c ON dp.client_id = c.client_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT\n    (COUNT(DISTINCT CASE WHEN c.gender = 'M' THEN c.client_id END) / COUNT(DISTINCT c.client_id)) * 100 AS percentage_of_male_clients\nFROM\n    district d\nJOIN\n    client c ON d.district_id = c.district_id\nWHERE\n    d.A3 = 'south Bohemia'\nAND\n    d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT\n  ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate\nFROM\n  loan l\nJOIN\n  account a ON l.account_id = a.account_id\nJOIN\n  trans t1 ON a.account_id = t1.account_id AND t1.date = '1993-03-22'\nJOIN\n  trans t2 ON a.account_id = t2.account_id AND t2.date = '1998-12-27'\nWHERE\n  l.date = '1993-07-05'\nORDER BY\n  l.date ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "479": "SELECT\n  (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 AS percentage_paid_no_issue\nFROM\n  loan l\t----- bird -----\tfinancial",
    "480": "SELECT\n  (SUM(CASE WHEN l.status = 'C' AND l.amount < 100000 THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 AS percentage_running_no_issue\nFROM\n  loan l\t----- bird -----\tfinancial",
    "481": "SELECT d.district_id, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.A2, COUNT(*) as female_count\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN disp dp ON a.account_id = dp.account_id\nJOIN client c ON dp.client_id = c.client_id AND dp.type = 'OWNER'\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_count DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT loan.loan_id) AS total_approved_loans\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.amount >= 250000\nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN loan ON account.account_id = loan.account_id \nJOIN district ON account.district_id = district.district_id \nWHERE loan.status IN ('C', 'D') AND district.district_id = 1\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15) FROM (\n        SELECT A15 FROM district\n        WHERE A15 < (SELECT MAX(A15) FROM district)\n    ) AS subquery\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\nAND t.date LIKE '1996-01%'\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.A1 = '1' AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15) FROM (\n        SELECT A15 FROM district\n        WHERE A15 < (SELECT MAX(A15) FROM district)\n    ) AS subquery\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT d.client_id\nFROM disp d\nJOIN trans t ON d.account_id = t.account_id\nWHERE d.type = 'OWNER'\nAND t.operation = 'VYBER KARTOU'\nAND YEAR(t.date) = 1998\nAND t.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND YEAR(date) = 1998)\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT d.A2, d.A11\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN disp dp ON a.account_id = dp.account_id\nWHERE dp.type != 'OWNER'\nAND d.A11 > 8000\nAND d.A11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) AS average_crimes\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000 AND YEAR(a.date) >= 1997\t----- bird -----\tfinancial",
    "492": "SELECT t.*\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE d.client_id = 3356 AND t.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT\n    (COUNT(DISTINCT client.client_id) / (SELECT COUNT(*) FROM client\n                                          JOIN account ON client.district_id = account.district_id\n                                          JOIN district ON account.district_id = district.district_id\n                                          WHERE district.A11 > 10000) * 100) AS percentage_women\nFROM\n    client\nJOIN\n    account ON client.district_id = account.district_id\nJOIN\n    district ON account.district_id = district.district_id\nWHERE\n    district.A11 > 10000 AND client.gender = 'F'\t----- bird -----\tfinancial",
    "494": "SELECT\n  ((SUM(CASE WHEN YEAR(l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) / SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) * 100 AS growth_rate\nFROM\n  loan l\nJOIN\n  account a ON l.account_id = a.account_id\nJOIN\n  disp d ON a.account_id = d.account_id\nJOIN\n  client c ON d.client_id = c.client_id\nWHERE\n  c.gender = 'M'\n  AND d.type = 'OWNER'\n  AND YEAR(l.date) IN (1996, 1997)\t----- bird -----\tfinancial",
    "495": "SELECT frequency FROM account WHERE account_id = 3\t----- bird -----\tfinancial",
    "496": "SELECT\n  (COUNT(DISTINCT male_clients.client_id) / COUNT(DISTINCT all_weekly_clients.client_id)) * 100 AS percentage_male_clients_weekly_statements\nFROM\n  (SELECT client_id FROM client WHERE gender = 'M') AS male_clients\nJOIN\n  disp ON male_clients.client_id = disp.client_id\nJOIN\n  account ON disp.account_id = account.account_id\nAND\n  account.frequency = 'POPLATEK TYDNE'\nJOIN\n  (SELECT client_id FROM disp JOIN account ON disp.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE') AS all_weekly_clients\nON\n  male_clients.client_id = all_weekly_clients.client_id\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dt ON c.district_id = dt.district_id\nWHERE c.gender = 'F' AND d.type = 'OWNER'\nORDER BY c.birth_date DESC, dt.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) AS average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE status IN ('C', 'D') AND frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER'\t----- bird -----\tfinancial"
}