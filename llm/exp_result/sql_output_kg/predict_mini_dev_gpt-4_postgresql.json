{
    "0": "SELECT\n    SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END)::FLOAT /\n    SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) AS ratio_eur_to_czk\nFROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customerid, MIN(consumption) AS min_consumption\nFROM yearmonth\nWHERE date LIKE '2012%' AND segment = 'LAM'\nGROUP BY customerid\nORDER BY min_consumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(consumption) / 12 AS average_monthly_consumption\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE customers.segment = 'SME' AND SUBSTRING(date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n  SUM(CASE WHEN c.currency = 'CZK' THEN ym.consumption ELSE 0 END) AS czk_consumption,\n  SUM(CASE WHEN c.currency = 'EUR' THEN ym.consumption ELSE 0 END) AS eur_consumption,\n  (SUM(CASE WHEN c.currency = 'CZK' THEN ym.consumption ELSE 0 END) - SUM(CASE WHEN c.currency = 'EUR' THEN ym.consumption ELSE 0 END)) AS consumption_difference\nFROM\n  yearmonth ym\nJOIN\n  customers c ON ym.customerid = c.customerid\nWHERE\n  LEFT(ym.date, 4) = '2012'\n\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT LEFT(y.date, 4) AS year, SUM(y.consumption) AS total_consumption\nFROM yearmonth y\nJOIN customers c ON y.customerid = c.customerid\nWHERE c.currency = 'CZK'\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT date, MAX(consumption) AS peak_consumption\nFROM yearmonth ym\nJOIN customers c ON ym.customerid = c.customerid\nWHERE c.segment = 'SME' AND date BETWEEN '201301' AND '201312'\nGROUP BY date\nORDER BY peak_consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n  SME.avg_consumption - LAM.avg_consumption AS \"SME-LAM\",\n  LAM.avg_consumption - KAM.avg_consumption AS \"LAM-KAM\",\n  KAM.avg_consumption - SME.avg_consumption AS \"KAM-SME\"\nFROM\n  (SELECT SUM(consumption) / COUNT(DISTINCT customerid) AS avg_consumption\n   FROM yearmonth\n   JOIN customers ON yearmonth.customerid = customers.customerid\n   WHERE customers.segment = 'SME'\n     AND customers.currency = 'CZK'\n     AND SUBSTRING(date, 1, 4) = '2013') AS SME,\n  (SELECT SUM(consumption) / COUNT(DISTINCT customerid) AS avg_consumption\n   FROM yearmonth\n   JOIN customers ON yearmonth.customerid = customers.customerid\n   WHERE customers.segment = 'LAM'\n     AND customers.currency = 'CZK'\n     AND SUBSTRING(date, 1, 4) = '2013') AS LAM,\n  (SELECT SUM(consumption) / COUNT(DISTINCT customerid) AS avg_consumption\n   FROM yearmonth\n   JOIN customers ON yearmonth.customerid = customers.customerid\n   WHERE customers.segment = 'KAM'\n     AND customers.currency = 'CZK'\n     AND SUBSTRING(date, 1, 4) = '2013') AS KAM\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT segment, \n       (SUM(CASE WHEN year = '2013' THEN consumption ELSE 0 END) - SUM(CASE WHEN year = '2012' THEN consumption ELSE 0 END)) AS increase_or_decrease,\n       (SUM(CASE WHEN year = '2013' THEN consumption ELSE 0 END) - SUM(CASE WHEN year = '2012' THEN consumption ELSE 0 END)) / SUM(CASE WHEN year = '2013' THEN consumption ELSE 0 END) * 100.0 AS percentage_increase\nFROM (\n    SELECT c.segment,\n           SUBSTRING(y.date, 1, 4) AS year,\n           y.consumption\n    FROM yearmonth y\n    JOIN customers c ON y.customerid = c.customerid\n    WHERE c.currency = 'EUR'\n) AS subquery\nGROUP BY segment\nORDER BY percentage_increase DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(consumption) AS total_consumption\nFROM yearmonth\nWHERE customerid = 6\nAND date >= '201308'\nAND date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n    (SELECT COUNT(*) FROM gasstations WHERE country = 'CZE' AND segment = 'discount') -\n    (SELECT COUNT(*) FROM gasstations WHERE country = 'SVK' AND segment = 'discount') AS more_discount_gas_stations_cze_svk\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n    SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) AS total_czk,\n    SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) AS total_eur,\n    (SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END)) AS more_smes_czk_than_eur\nFROM customers\nWHERE segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT\n    (COUNT(DISTINCT CASE WHEN y.consumption > 46.73 THEN y.customerid END) * 100.0) / NULLIF(COUNT(DISTINCT y.customerid), 0) AS percentage\nFROM\n    yearmonth y\nJOIN\n    customers c ON y.customerid = c.customerid\nWHERE\n    c.segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT\n    (COUNT(DISTINCT customerid) FILTER (WHERE consumption > 528.3) * 100.0) / COUNT(DISTINCT customerid) AS percentage\nFROM\n    yearmonth\nWHERE\n    date = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(consumption) AS highest_monthly_consumption\nFROM yearmonth\nWHERE SUBSTRING(date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.description\nFROM products p\nJOIN transactions_1k t ON p.productid = t.productid\nJOIN yearmonth ym ON t.customerid = ym.customerid\nWHERE SUBSTRING(ym.date FROM 1 FOR 6) = '201309' AND t.date BETWEEN '2013-09-01' AND '2013-09-30'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.country\nFROM gasstations g\nJOIN transactions_1k t ON g.gasstationid = t.gasstationid\nWHERE t.date BETWEEN '2013-06-01' AND '2013-06-30'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT ym.customerid)\nFROM yearmonth ym\nJOIN customers c ON ym.customerid = c.customerid\nWHERE c.currency = 'EUR' AND ym.consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.description\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nJOIN products p ON t.productid = p.productid\nWHERE g.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT t.time\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE g.chainid = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE gasstations.country = 'CZE' AND transactions_1k.date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.currency\nFROM transactions_1k t\nJOIN customers c ON t.customerid = c.customerid\nWHERE t.date = '2012-08-24' AND t.time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.segment\nFROM customers c\nJOIN transactions_1k t ON c.customerid = t.customerid\nWHERE t.date = '2012-08-23' AND t.time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nWHERE gasstations.country = 'CZE'\nAND transactions_1k.date = '2012-08-26'\nAND transactions_1k.time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT g.country\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE t.price = 548.4 AND t.date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT\n    (COUNT(DISTINCT c.customerid) * 100.0) / (SELECT COUNT(*) FROM customers) AS percentage\nFROM\n    customers c\nJOIN\n    transactions_1k t ON c.customerid = t.customerid\nWHERE\n    c.currency = 'EUR'\n    AND t.date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT\n    (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate\nFROM\n    (SELECT\n        ym2012.customerid,\n        ym2012.consumption AS consumption_2012,\n        ym2013.consumption AS consumption_2013\n     FROM\n        yearmonth AS ym2012\n     INNER JOIN\n        yearmonth AS ym2013 ON ym2012.customerid = ym2013.customerid\n     WHERE\n        ym2012.date LIKE '2012%' AND\n        ym2013.date LIKE '2013%' AND\n        ym2012.customerid = (SELECT\n                                t.customerid\n                              FROM\n                                transactions_1k AS t\n                              WHERE\n                                t.price = 634.8 AND\n                                t.date = '2012-08-25'\n                              LIMIT 1)\n    ) AS subquery\nWHERE\n    consumption_2012 IS NOT NULL AND\n    consumption_2013 IS NOT NULL\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT\n    (COUNT(CASE WHEN g.segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS premium_percentage\nFROM\n    gasstations g\nWHERE\n    g.country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT\n    SUM(t.amount * t.price) AS total_spent,\n    SUM(CASE WHEN TO_CHAR(t.date, 'YYYYMM') = '201201' THEN t.amount * t.price ELSE 0 END) AS spent_in_january_2012\nFROM\n    transactions_1k t\nWHERE\n    t.customerid = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT\n    t.customerid,\n    c.currency,\n    SUM(t.price) / SUM(t.amount) AS average_price_per_item\nFROM\n    transactions_1k t\nJOIN\n    customers c ON t.customerid = c.customerid\nGROUP BY\n    t.customerid,\n    c.currency\nORDER BY\n    SUM(t.price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT y.customerid, y.consumption\nFROM transactions_1k t\nJOIN yearmonth y ON t.customerid = y.customerid\nWHERE t.productid = 5\nAND t.price / t.amount > 29.00\nAND y.date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women's Soccer'\nAND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT e.event_id) AS meeting_count\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type = 'Meeting'\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type != 'fundraiser'\nGROUP BY e.event_id\nHAVING COUNT(DISTINCT a.link_to_member) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS funds_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.expense_id, expense.approved\nFROM expense\nJOIN event ON expense.link_to_budget = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE (m.first_name = 'Elijah' AND m.last_name = 'Allen')\nAND (SUBSTRING(e.expense_date, 6, 2) = '09' OR SUBSTRING(e.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT\n    (SELECT SUM(spent) FROM budget WHERE event_status = 'Student_Club' AND link_to_event IN (SELECT event_id FROM event WHERE SUBSTRING(event_date, 1, 4) = '2019')) -\n    (SELECT SUM(spent) FROM budget WHERE event_status = 'Student_Club' AND link_to_event IN (SELECT event_id FROM event WHERE SUBSTRING(event_date, 1, 4) = '2020')) AS difference_in_spent\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT e.status\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON b.budget_id = ex.link_to_budget\nWHERE ex.expense_description = 'Post Cards, Posters'\nAND ex.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name\nFROM major m\nJOIN member mb ON m.major_id = mb.link_to_major\nWHERE mb.first_name = 'Brent' AND mb.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT m.major_id, mj.department\nFROM member m\nJOIN major mj ON m.link_to_major = mj.major_id\nWHERE m.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT\n    (SELECT SUM(amount) FROM budget\n     JOIN event ON budget.link_to_event = event.event_id\n     WHERE event.event_name = 'Yearly Kickoff' AND budget.category = 'Advertisement')\n    /\n    (SELECT SUM(amount) FROM budget\n     JOIN event ON budget.link_to_event = event.event_id\n     WHERE event.event_name = 'October Meeting' AND budget.category = 'Advertisement') AS advertisement_budget_ratio\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.link_to_member) AS member_count\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT first_name, last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name, MAX(b.spent / b.amount) AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nGROUP BY e.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name, MIN(ex.cost) AS lowest_cost\nFROM event e\nJOIN expense ex ON e.event_id = ex.link_to_budget\nGROUP BY e.event_name\nORDER BY lowest_cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT\n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS yearly_kickoff_cost_percentage\nFROM\n    expense ex\nJOIN\n    event e ON ex.link_to_budget = e.event_id\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS (\n    SELECT 1\n    FROM attendance a\n    JOIN member m ON a.link_to_member = m.member_id\n    JOIN event e ON a.link_to_event = e.event_id\n    WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer'\n) as attended\t----- bird -----\tstudent_club",
    "63": "SELECT e.expense_description, e.cost\nFROM expense e\nJOIN event ev ON e.link_to_budget = ev.event_id\nWHERE e.expense_description = 'Posters' AND ev.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN event ON expense.link_to_budget = event.event_id\nWHERE approved = 'Yes' AND event_name = 'October Meeting'\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT b.category, SUM(b.amount) AS amount_budgeted\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'April Speaker'\nGROUP BY b.category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE first_name = 'Sacha' AND last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT e.type\nFROM event e\nWHERE e.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, mj.department, mj.college\nFROM member m\nJOIN major mj ON m.link_to_major = mj.major_id\nWHERE mj.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT\n    (COUNT(*) FILTER (WHERE i.amount = 50) * 100.0) / COUNT(m.member_id) AS percentage\nFROM\n    member m\nLEFT JOIN\n    income i ON m.member_id = i.link_to_member\nWHERE\n    m.t_shirt_size = 'Medium'\n    AND m.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game'\nAND status = 'Closed'\nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name, m.last_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id, m.first_name, m.last_name, m.phone\nHAVING MIN(e.cost) > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT\n  SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END) AS in_patient_males,\n  SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END) AS outpatient_males,\n  (SUM(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END))::float /\n  GREATEST(SUM(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END), 1) * 100 AS deviation_percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT\n  (COUNT(*) FILTER (WHERE YEAR(Birthday) > 1930 AND Sex = 'F') * 100.0) /\n  NULLIF(COUNT(*) FILTER (WHERE Sex = 'F'), 0) AS percentage_female_post_1930\nFROM\n  Patient\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT\n    SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END)::FLOAT /\n    NULLIF(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END), 0) AS outpatient_to_inpatient_ratio\nFROM\n    Patient\nWHERE\n    Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Examination.diagnosis, Laboratory.test_date\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Patient.id = Laboratory.patient_id\nWHERE Patient.id = '30609'\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.patient_id, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.examination_id = Laboratory.examination_id\nWHERE Laboratory.test_name = 'LDH' AND Laboratory.result > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, EXTRACT(YEAR FROM age(Patient.Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Laboratory.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.id, Patient.sex, Examination.diagnosis\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nWHERE Examination.thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE p.Sex = 'F'\nAND EXTRACT(YEAR FROM e.Description) = 1997\nAND e.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE e.Thrombosis = '1'\nAND e.ExaminationYear = 1997\nAND p.Sex = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT p.symptoms, e.diagnosis\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nWHERE p.symptoms IS NOT NULL\nORDER BY p.birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Completion_Date, EXTRACT(YEAR FROM Age(Examination.First_Date, Patient.Birthday)) AS Initial_Age_At_Hospital\nFROM Laboratory\nJOIN Examination ON Laboratory.Examination_Id = Examination.Examination_Id\nJOIN Patient ON Examination.Patient_Id = Patient.Patient_Id\nWHERE Examination.Diagnosis = 'SJS'\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT\n  SUM(CASE WHEN UA <= 8.0 AND SEX = 'M' THEN 1 ELSE 0 END)::FLOAT /\n  SUM(CASE WHEN UA <= 6.5 AND SEX = 'F' THEN 1 ELSE 0 END) AS male_to_female_abnormal_ua_ratio\nFROM\n  Patient\nJOIN\n  Laboratory ON Patient.patient_id = Laboratory.patient_id\nWHERE\n  (SEX = 'M' AND UA <= 8.0) OR (SEX = 'F' AND UA <= 6.5)\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.PatientID)\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nWHERE EXTRACT(YEAR FROM Patient.Birthday) > (EXTRACT(YEAR FROM Examination.ExaminationDate) - 18)\nAND EXTRACT(YEAR FROM Examination.ExaminationDate) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT\n    EXTRACT(YEAR FROM age(e.\"Examination Date\", p.Birthday)) AS Patient_Age,\n    e.Diagnosis\nFROM\n    Examination e\nJOIN\n    Patient p ON e.PatientID = p.PatientID\nJOIN\n    Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE\n    l.HGB IS NOT NULL\nORDER BY\n    l.HGB DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Laboratory.aCL_IgM\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Patient.Diagnosis = 'SLE'\nAND Patient.Description = '1994-02-19'\nAND Examination.Examination_Date = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT\n  (SUM(CASE WHEN e.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END) -\n   SUM(CASE WHEN e.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END)) AS decrease_rate\nFROM\n  Patient p\nJOIN\n  Examination e ON p.PatientID = e.PatientID\nJOIN\n  Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE\n  p.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.id\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Examination.date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.gpt > 30\nAND Laboratory.alb < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.exam_id = l.exam_id\nWHERE e.Thrombosis = 2\nAND e.ANA = 'S'\nAND l.`aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Laboratory) * 1.2\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT p.*\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE e.Admission = '-'\nAND l.Date LIKE '1991-10%'\nAND l.T-BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB)\nFROM Laboratory\nJOIN Examination ON Laboratory.ExamID = Examination.ExamID\nJOIN Patient ON Examination.PatientID = Patient.PatientID\nWHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(DISTINCT Patient.patient_id)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nWHERE Patient.sex = 'F' AND Examination.diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT\n  (COUNT(*) FILTER (WHERE SEX = 'F')::FLOAT / COUNT(*) * 100) AS percentage_women\nFROM\n  Patient\nJOIN\n  Examination ON Patient.id = Examination.patient_id\nWHERE\n  YEAR(BIRTHDAY) = 1980 AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT\n    CASE\n        WHEN P.SEX = 'M' AND L.UA > 8.0 THEN 'Yes'\n        WHEN P.SEX = 'F' AND L.UA > 6.5 THEN 'Yes'\n        ELSE 'No'\n    END AS UricAcidWithinNormalRange\nFROM\n    Patient P\nJOIN\n    Examination E ON P.PatientNumber = E.PatientNumber\nJOIN\n    Laboratory L ON E.ExaminationNumber = L.ExaminationNumber\nWHERE\n    P.PatientNumber = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT p.PatientID\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE p.SEX = 'M' AND l.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.name, Examination.diagnosis\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.test_name = 'ALT' AND Laboratory.value > 60\nORDER BY Patient.date_of_birth ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.id, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.urea_nitrogen = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT\n  p.sex,\n  STRING_AGG(DISTINCT p.id::text, ',') AS list\nFROM\n  Patient p\nJOIN\n  Examination e ON p.id = e.patient_id\nJOIN\n  Laboratory l ON e.id = l.examination_id\nWHERE\n  l.test_name = 'T-BIL' AND l.result >= 2.0\nGROUP BY\n  p.sex\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(EXTRACT(YEAR FROM AGE(NOW(), p.birthday))) AS average_age\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE p.sex = 'M' AND l.\"T-CHO\" >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.TG >= 200 AND EXTRACT(YEAR FROM AGE(p.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nWHERE Patient.sex = 'M' AND Patient.birthday BETWEEN '1936-01-01' AND '1956-12-31'\nAND Examination.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT\n    Patient.ID,\n    Patient.Sex,\n    EXTRACT(YEAR FROM AGE(CURRENT_TIMESTAMP, Patient.Birthday)) AS Age\nFROM\n    Patient\nJOIN\n    Examination ON Patient.ID = Examination.PatientID\nJOIN\n    Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE\n    Laboratory.GLU >= 180\n    AND Laboratory.\"T-CHO\" < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, EXTRACT(YEAR FROM age(Patient.Birthday)) AS Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.Sex\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID\nWHERE Examination.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT\n    p.ID,\n    EXTRACT(YEAR FROM age(p.Birthday)) AS age\nFROM\n    Patient p\nJOIN\n    Laboratory l ON p.ID = l.PatientID\nWHERE\n    l.HCT >= 52\nGROUP BY\n    p.ID, p.Birthday\nHAVING\n    COUNT(l.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT\n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS LowerThanNormal,\n  SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS HigherThanNormal,\n  SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS Comparison\nFROM Laboratory\nWHERE PLT <= 100 OR PLT >= 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.*\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE YEAR(e.Date) = 1984\nAND EXTRACT(YEAR FROM AGE(CURRENT_TIMESTAMP, p.Birthday)) < 50\nAND l.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT\n  (COUNT(CASE WHEN PT >= 14 AND Sex = 'F' THEN 1 END)::FLOAT / COUNT(CASE WHEN PT >= 14 THEN 1 END)) * 100 AS percentage_female_abnormal_PT\nFROM\n  Patient\nJOIN\n  Examination\nON\n  Patient.PatientID = Examination.PatientID\nWHERE\n  EXTRACT(YEAR FROM AGE(CURRENT_TIMESTAMP, Birthday)) > 55\nAND\n  PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT p.patient_id)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE p.Sex = 'M'\nAND l.WBC > 3.5 AND l.WBC < 9.0\nAND (l.FG <= 150 OR l.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT p.patient_id)\nFROM Patient p\nJOIN Laboratory l ON p.patient_id = l.patient_id\nWHERE l.test_name = 'Ig G' AND l.result >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.patient_id = l.patient_id\nWHERE l.IGG >= 900 AND l.IGG < 2000 AND p.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT p.patient_id)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.IGA >= 80 AND l.IGA < 500\nAND p.`First Date` >= '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Examination\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE IGM <= 40 OR IGM >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.CRP = '+'\nAND l.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.patient_id = l.patient_id\nWHERE l.creatinine_level >= 1.5 AND EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.patient_id)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nJOIN Laboratory ON Examination.exam_id = Laboratory.exam_id\nWHERE Laboratory.RNP IN ('-', '+-') AND Examination.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE (l.SM = '-' OR l.SM = '0') AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.test_name = 'anti-scl70'\nAND Laboratory.result IN ('negative', '0')\nAND Patient.sex = 'F'\nAND Patient.symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.id)\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.CENTROMEA IN('-', '+-')\nAND Laboratory.SSB IN('-', '+-')\nAND Patient.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(Patient.birthday) AS youngest_birthday\nFROM Patient\nJOIN Examination ON Patient.id = Examination.patient_id\nJOIN Laboratory ON Examination.id = Laboratory.examination_id\nWHERE Laboratory.test_name = 'GOT' AND Laboratory.result >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT p.patient_id)\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE l.creatinine_phosphokinase < 250\nAND (l.kct = '+' OR l.rvvt = '+' OR l.lac = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016'\nGROUP BY l.id\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name\nFROM Team AS T\nJOIN Match AS M ON T.team_api_id = M.away_team_api_id\nJOIN League AS L ON M.league_id = L.id\nWHERE L.name = 'Scotland Premier League' AND M.season = '2009/2010' AND M.away_team_goal > M.home_team_goal\nGROUP BY T.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed\nFROM Team_Attributes\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2015/2016' AND m.home_team_goal = m.away_team_goal\nGROUP BY l.id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT\n    Player.player_name,\n    EXTRACT(YEAR FROM AGE(CURRENT_DATE, Player.birthday)) AS age\nFROM\n    Player\nJOIN\n    Player_Attributes\nON\n    Player.player_id = Player_Attributes.player_id\nWHERE\n    Player_Attributes.sprint_speed >= 97\nAND\n    EXTRACT(YEAR FROM Player_Attributes.date) BETWEEN 2013 AND 2015\t----- bird -----\teuropean_football_2",
    "133": "SELECT league_id, COUNT(*) AS total_matches\nFROM Match\nGROUP BY league_id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE buildUpPlayPassing > (\n    SELECT SUM(buildUpPlayPassing) / COUNT(team_long_name)\n    FROM Team_Attributes\n    JOIN Team ON Team.team_api_id = Team_Attributes.team_api_id\n    WHERE buildUpPlayPassing IS NOT NULL\n    AND strftime('%Y', date) = '2012'\n)\nAND strftime('%Y', Team_Attributes.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT\n  (COUNT(*) FILTER (WHERE preferred_foot = 'left') * 100.0) / COUNT(*) AS percentage_left_footed\nFROM\n  Player\nWHERE\n  preferred_foot = 'left'\n  AND EXTRACT(YEAR FROM birthday) BETWEEN 1987 AND 1992\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_fifa_api_id\nWHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_fifa_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2009/2010'\nGROUP BY L.id\nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT *\nFROM Player\nWHERE EXTRACT(YEAR FROM birthday) = 1970 AND EXTRACT(MONTH FROM birthday) = 10\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas'\nAND strftime('%Y', pa.date) = '2011'\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN Team ON Match.home_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_id, AVG(finishing) AS avg_finishing_rate\nFROM Player_Attributes\nWHERE player_id IN (\n    SELECT id FROM Player WHERE height = (SELECT MAX(height) FROM Player),\n    SELECT id FROM Player WHERE height = (SELECT MIN(height) FROM Player)\n)\nGROUP BY player_id\nORDER BY avg_finishing_rate DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE p.height > 170\nAND strftime('%Y', pa.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT\n  (SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) -\n  (SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END)) AS avg_ball_control_difference\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT\n  CASE\n    WHEN p1.birthday > p2.birthday THEN 'Abdelaziz Barrada'\n    WHEN p1.birthday < p2.birthday THEN 'Aaron Lennon'\n    ELSE 'Both players have the same birthday'\n  END AS older_player\nFROM\n  Player p1,\n  Player p2\nWHERE\n  p1.name = 'Aaron Lennon'\n  AND p2.name = 'Abdelaziz Barrada'\t----- bird -----\teuropean_football_2",
    "147": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nORDER BY Player_Attributes.height DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*)\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.preferred_foot = 'left'\nAND Player_Attributes.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT Player.player_id)\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE strftime('%Y', Player.birthday) < '1986' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*)\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League' AND SUBSTR(m.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT league_name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE season = '2008/2009'\nGROUP BY league_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT\n  ((b.overall_rating - p.overall_rating) / p.overall_rating) * 100 AS percentage_difference\nFROM\n  Player_Attributes AS b,\n  Player_Attributes AS p\nWHERE\n  b.player_name = 'Ariel Borysiuk'\n  AND p.player_name = 'Paulin Puel'\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing_score, ta.chanceCreationPassingClass\nFROM Team t\nJOIN Team_Attributes ta ON t.id = ta.team_api_id\nWHERE t.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francesco Migliore' AND pa.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) AS first_highest_crossing_date\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE player_name = 'Kevin Constant' AND crossing = (\n    SELECT MAX(crossing)\n    FROM Player_Attributes\n    JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\n    WHERE player_name = 'Kevin Constant'\n)\t----- bird -----\teuropean_football_2",
    "160": "SELECT Team_Attributes.buildUpPlayPassingClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.defence_aggression_class\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Hannover 96' AND ta.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating)\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Marko Arnautovic'\nAND SUBSTRING(pa.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT\n  ((ld.overall_rating - jb.overall_rating) / ld.overall_rating) * 100 AS percentage_difference\nFROM\n  Player p_ld\nJOIN Player_Attributes pa_ld ON p_ld.id = pa_ld.player_id\nJOIN Player p_jb ON p_jb.player_name = 'Jordan Bowery'\nJOIN Player_Attributes pa_jb ON p_jb.id = pa_jb.player_id AND pa_ld.date = pa_jb.date\nWHERE\n  p_ld.player_name = 'Landon Donovan'\n  AND pa_ld.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player_Attributes.height_rank = 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player_Attributes.overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n)\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*)\nFROM Player\nWHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT\n  (SELECT jumping FROM Player_Attributes WHERE player_id = 6) -\n  (SELECT jumping FROM Player_Attributes WHERE player_id = 23) AS jumping_score_difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_id\nFROM Player_Attributes\nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND preferred_foot = 'right'\nORDER BY player_id\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*)\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes)\nAND pa.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT m.home_team_goal, m.away_team_goal\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler League'\nAND m.date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing AS finishing_rate, pa.curve AS curve_score\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_id = p.id\nWHERE p.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) AS num_games\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name\nFROM Team\nJOIN (\n    SELECT away_team_api_id, MAX(away_team_goal) AS max_goals\n    FROM Match\n    GROUP BY away_team_api_id\n    ORDER BY max_goals DESC\n    LIMIT 1\n) AS Subquery\nON Team.team_api_id = Subquery.away_team_api_id\t----- bird -----\teuropean_football_2",
    "177": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_id = Player_Attributes.player_id\nWHERE Player_Attributes.overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n)\t----- bird -----\teuropean_football_2",
    "178": "SELECT\n  (COUNT(*) FILTER (WHERE height < 180 AND overall_rating > 70)::FLOAT / COUNT(*) * 100) AS percentage\nFROM\n  Player_Attributes\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverref\nFROM drivers d\nJOIN qualifying q ON d.driverid = q.driverid\nWHERE q.raceid = 20 AND q.q1 IS NOT NULL\nORDER BY q.q1 DESC\nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT d.surname\nFROM qualifying q\nJOIN drivers d ON q.driverid = d.driverid\nWHERE q.raceid = 19 AND q.q2 IS NOT NULL\nORDER BY q.q2\nLIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverid = d.driverid\nWHERE q.raceid = 354 AND d.forename = 'Bruno' AND d.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT drivers.number\nFROM qualifying\nJOIN drivers ON qualifying.driverid = drivers.driverid\nWHERE qualifying.raceid = 903 AND qualifying.q3 LIKE '1:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.name = 'Bahrain Grand Prix' \nAND races.year = 2007 \nAND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT d.driverid, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE r.raceid = 592 AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverid = d.driverid\nWHERE lt.time LIKE '1:27%' AND lt.raceid = 161\t----- bird -----\tformula_1",
    "189": "SELECT circuits.location, circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructors c\nJOIN constructorResults cr ON c.constructorid = cr.constructorid\nJOIN races r ON cr.raceid = r.raceid\nWHERE r.round = 9\nORDER BY cr.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverid = d.driverid\nWHERE q.raceid = 45 AND q.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT s.url\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceid = 901\t----- bird -----\tformula_1",
    "193": "SELECT d.driverid, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE r.raceid = 872 AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nORDER BY CAST(r.fastestlapspeed AS FLOAT) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT\n    ((fastest853.fastestlapspeed - fastest854.fastestlapspeed) / fastest853.fastestlapspeed) * 100 AS percentage_faster\nFROM\n    (SELECT CAST(fastestlapspeed AS REAL) AS fastestlapspeed\n     FROM results\n     JOIN drivers ON results.driverid = drivers.driverid\n     WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND raceid = 853) AS fastest853,\n    (SELECT CAST(fastestlapspeed AS REAL) AS fastestlapspeed\n     FROM results\n     JOIN drivers ON results.driverid = drivers.driverid\n     WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND raceid = 854) AS fastest854\t----- bird -----\tformula_1",
    "196": "SELECT \n    COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END)::FLOAT / COUNT(*) AS completion_rate\nFROM \n    results r\nJOIN \n    races ra ON r.raceid = ra.raceid\nWHERE \n    ra.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name\nFROM races\nWHERE EXTRACT(YEAR FROM date) = (SELECT EXTRACT(YEAR FROM MIN(date)) FROM races)\n  AND EXTRACT(MONTH FROM date) = (SELECT EXTRACT(MONTH FROM MIN(date)) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, SUM(r.points) AS total_points\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nGROUP BY d.driverid\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(results.milliseconds) AS best_lap_time, drivers.forename, drivers.surname, races.name\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE results.milliseconds IS NOT NULL\nGROUP BY results.raceid, results.driverid\nORDER BY best_lap_time ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lt.milliseconds) AS average_lap_time\nFROM lapTimes lt\nJOIN drivers d ON lt.driverid = d.driverid\nJOIN races r ON lt.raceid = r.raceid\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND r.year = 2009 AND r.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "201": "SELECT\n    (COUNT(CASE WHEN r.position > 1 THEN 1 END)::FLOAT / COUNT(*)::FLOAT) * 100 AS percentage\nFROM\n    results r\nJOIN\n    races ra ON r.raceid = ra.raceid\nJOIN\n    drivers d ON r.driverid = d.driverid\nWHERE\n    d.surname = 'Hamilton'\n    AND ra.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, MAX(rs.points) AS max_points\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN (\n    SELECT driverid, COUNT(*) AS wins\n    FROM results\n    WHERE position = 1\n    GROUP BY driverid\n) win_counts ON d.driverid = win_counts.driverid\nJOIN (\n    SELECT driverid, AVG(points) AS avg_points\n    FROM results\n    GROUP BY driverid\n) avg_points ON d.driverid = avg_points.driverid\nORDER BY win_counts.wins DESC, avg_points.avg_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT r.name AS race_name, c.name AS circuit_name, c.location\nFROM races r\nJOIN circuits c ON r.circuitid = c.circuitid\nWHERE EXTRACT(MONTH FROM r.date) = 9 AND EXTRACT(YEAR FROM r.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT r.name AS race_name, r.date AS race_date\nFROM drivers d\nJOIN results res ON d.driverid = res.driverid\nJOIN races r ON res.raceid = r.raceid\nWHERE (d.forename || ' ' || d.surname) = 'Alex Yoong' AND res.grid < 20\t----- bird -----\tformula_1",
    "206": "SELECT r.name AS race_name, r.year AS race_year\nFROM results res\nJOIN races r ON res.raceid = r.raceid\nJOIN drivers d ON res.driverid = d.driverid\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY res.milliseconds ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT r.year, r.name, res.points\nFROM drivers d\nJOIN results res ON d.driverid = res.driverid\nJOIN races r ON res.raceid = r.raceid\nJOIN seasons s ON r.year = s.year\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.year = (SELECT MIN(year) FROM seasons)\nORDER BY r.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT\n    (COUNT(*) FILTER (WHERE country = 'Germany') * 100.0) / COUNT(*) AS percentage\nFROM\n    races\nWHERE\n    name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitref FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT country\nFROM drivers\nJOIN (\n    SELECT driverid, MIN(dob) as oldest_dob\n    FROM drivers\n) AS oldest_driver ON drivers.driverid = oldest_driver.driverid\nWHERE drivers.dob = oldest_driver.oldest_dob\t----- bird -----\tformula_1",
    "212": "SELECT d.driverref\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN races ra ON r.raceid = ra.raceid\nJOIN seasons s ON ra.year = s.year\nWHERE ra.name = 'Canadian Grand Prix' AND s.year = 2007 AND r.positionorder = 1\t----- bird -----\tformula_1",
    "213": "SELECT r.name AS race_name, r.date AS race_date\nFROM results res\nJOIN races r ON res.raceid = r.raceid\nJOIN drivers d ON res.driverid = d.driverid\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank ASC, r.date DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestlapspeed) AS fastest_lap_speed\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT rs.positionorder\nFROM results rs\nJOIN drivers d ON rs.driverid = d.driverid\nJOIN races r ON rs.raceid = r.raceid\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND r.name = 'Chinese Grand Prix' AND r.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT r.time\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nJOIN status s ON r.statusid = s.statusid\nWHERE ra.year = 2008\nAND ra.name = 'Chinese Grand Prix'\nAND r.rank = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT drivers.driverid)\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((EXTRACT(EPOCH FROM last_driver_time) - EXTRACT(EPOCH FROM champion_time)) / EXTRACT(EPOCH FROM last_driver_time)) * 100 AS percentage_faster\nFROM (\n    SELECT \n        MIN(results.time) FILTER (WHERE results.position = 1) AS champion_time,\n        MAX(results.time) FILTER (WHERE results.statusid IN (SELECT statusid FROM status WHERE status = 'Finished')) AS last_driver_time\n    FROM results\n    INNER JOIN races ON results.raceid = races.raceid\n    WHERE races.year = 2008 AND races.name = 'Australian Grand Prix'\n) AS race_times\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) AS maximum_points\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorid = c.constructorid\nWHERE c.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nJOIN constructorResults ON constructors.constructorid = constructorResults.constructorid\nJOIN results ON constructorResults.resultid = results.resultid\nWHERE results.raceid = 291 AND constructorResults.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorid)\nFROM constructors c\nJOIN constructorResults cr ON c.constructorid = cr.constructorid\nJOIN races r ON cr.raceid = r.raceid\nWHERE c.nationality = 'Japanese'\nAND cr.points = 0\nGROUP BY c.constructorid\nHAVING COUNT(r.raceid) = 2\t----- bird -----\tformula_1",
    "223": "SELECT\n  (COUNT(CASE WHEN r.time IS NOT NULL THEN d.driverid END) * 100.0) / COUNT(d.driverid) AS race_completion_percentage\nFROM\n  drivers d\nJOIN\n  results r ON d.driverid = r.driverid\nJOIN\n  races ra ON r.raceid = ra.raceid\nWHERE\n  d.nationality = 'Japanese'\n  AND ra.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT \n    r.year,\n    AVG(EXTRACT(EPOCH FROM TO_TIMESTAMP(r.time, 'HH24:MI:SS.MS'))) AS average_time_seconds\nFROM \n    results r\nJOIN \n    races ra ON r.raceid = ra.raceid\nWHERE \n    r.position = 1\n    AND ra.year < 1975\n    AND r.time IS NOT NULL\nGROUP BY \n    r.year\nORDER BY \n    r.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestlap\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN driverStandings ON results.raceid = driverStandings.raceid AND results.driverid = driverStandings.driverid\nWHERE races.year = 2009 AND driverStandings.position = 1\nORDER BY races.date DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(fastestlapspeed AS FLOAT)) AS average_fastest_lap_speed\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT\n    (COUNT(DISTINCT CASE WHEN EXTRACT(YEAR FROM dob) < 1985 AND laps > 50 THEN drivers.driverid END)::FLOAT /\n    COUNT(DISTINCT drivers.driverid)) * 100 AS percentage\nFROM\n    drivers\nJOIN\n    results ON drivers.driverid = results.driverid\nJOIN\n    races ON results.raceid = races.raceid\nWHERE\n    races.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT drivers.driverid)\nFROM drivers\nJOIN lapTimes ON drivers.driverid = lapTimes.driverid\nJOIN races ON lapTimes.raceid = races.raceid\nWHERE drivers.nationality = 'French'\nAND (SUBSTRING(lapTimes.time FROM 1 FOR 2)::INT * 60 + SUBSTRING(lapTimes.time FROM 4 FOR 2)::INT) < 120\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT d.code\nFROM drivers d\nORDER BY d.dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT drivers.driverref\nFROM drivers\nWHERE drivers.nationality = 'German'\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT d.driverid, d.code\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE EXTRACT(YEAR FROM d.dob) = 1971 AND r.fastestlaptime IS NOT NULL\nGROUP BY d.driverid, d.code\nHAVING MIN(r.fastestlaptime) = ALL (\n    SELECT MIN(r2.fastestlaptime)\n    FROM results r2\n    WHERE r2.fastestlaptime IS NOT NULL\n)\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*)\nFROM results\nJOIN status ON results.statusid = status.statusid\nWHERE results.raceid BETWEEN 50 AND 100\nAND results.time IS NOT NULL\nAND status.status = 'Disqualified'\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(*), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "235": "SELECT \n    seasons.year,\n    races.name,\n    races.date,\n    races.time\nFROM \n    drivers\nJOIN \n    qualifying ON drivers.driverid = qualifying.driverid\nJOIN \n    races ON qualifying.raceid = races.raceid\nJOIN \n    seasons ON races.year = seasons.year\nWHERE \n    drivers.dob = (SELECT MAX(dob) FROM drivers)\nAND \n    races.date = (SELECT MIN(date) FROM races WHERE races.year = seasons.year)\nORDER BY \n    races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname, AVG(ps.duration) as average_pitstop_duration\nFROM drivers d\nJOIN pitStops ps ON d.driverid = ps.driverid\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.driverid\nORDER BY average_pitstop_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT d.forename, d.surname, r.time\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nJOIN circuits c ON ra.circuitid = c.circuitid\nJOIN drivers d ON r.driverid = d.driverid\nWHERE ra.year = 2008 AND c.country = 'Canada' AND r.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorref, constructors.url\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(r.points) as total_points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorid = cr.constructorid\nJOIN results r ON cr.resultid = r.resultid\nJOIN races ra ON r.raceid = ra.raceid\nJOIN circuits ci ON ra.circuitid = ci.circuitid\nWHERE ci.name = 'Monaco Grand Prix'\nAND ra.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorid\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM qualifying q\nJOIN races r ON q.raceid = r.raceid\nJOIN circuits c ON r.circuitid = c.circuitid\nJOIN drivers d ON q.driverid = d.driverid\nWHERE r.year = 2008\nAND c.name = 'Marina Bay Street Circuit'\nAND r.round = 3\nAND q.position = 1\t----- bird -----\tformula_1",
    "242": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS first_race_name\nFROM drivers d\nJOIN results res ON d.driverid = res.driverid\nJOIN races r ON res.raceid = r.raceid\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nAND r.date = (SELECT MIN(date) FROM races WHERE races.raceid = res.raceid)\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT driverid, COUNT(*) AS accident_count\nFROM results\nWHERE raceid IN (SELECT raceid FROM races WHERE name = 'Canadian Grand Prix')\nAND statusid = 3\nGROUP BY driverid\nORDER BY accident_count DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE r.fastestlaptime IS NOT NULL\nORDER BY r.fastestlaptime\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name AS circuit_name, MIN(lapTimes.time) AS lap_record\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nJOIN lapTimes ON races.raceid = lapTimes.raceid\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) AS superheroes_with_agility\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE eye_colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT sh.superhero_name, sh.height_cm\nFROM superhero sh\nJOIN publisher p ON sh.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nORDER BY sh.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(*) AS colour_count\nFROM superhero AS s\nJOIN publisher AS p ON s.publisher_id = p.id\nJOIN colour AS c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY colour_count DESC, c.colour\t----- bird -----\tsuperhero",
    "251": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN publisher p ON sh.publisher_id = p.id\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name\nFROM superhero AS sh\nJOIN hero_attribute AS ha ON sh.id = ha.hero_id\nJOIN attribute AS a ON ha.attribute_id = a.id\nJOIN publisher AS p ON sh.publisher_id = p.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT r.race\nFROM superhero AS s\nJOIN race AS r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT s.id) AS female_superheroes_with_strength_100\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female'\nAND a.attribute_name = 'Strength'\nAND ha.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT\n    ROUND(\n        (COUNT(CASE WHEN a.alignment = 'Bad' THEN 1 END)::DECIMAL / COUNT(*) * 100),\n        2\n    ) AS percentage_bad_alignment,\n    COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_bad_alignment\nFROM\n    superhero s\nLEFT JOIN alignment a ON s.alignment_id = a.id\nLEFT JOIN publisher p ON s.publisher_id = p.id\t----- bird -----\tsuperhero",
    "260": "SELECT\n    (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Marvel Comics') AS marvel_count,\n    (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'DC Comics') AS dc_count,\n    ((SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Marvel Comics') -\n    (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'DC Comics')) AS difference\n\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(sh.weight_kg) AS average_weight\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour AS hair_colour\nFROM superhero AS s\nJOIN race AS r ON s.race_id = r.id\nJOIN colour AS c ON s.hair_colour_id = c.id\nWHERE r.race = 'human' AND s.height_cm = 185\t----- bird -----\tsuperhero",
    "267": "SELECT\n    (COUNT(*) FILTER (WHERE p.publisher_name = 'Marvel Comics') * 100.0) / COUNT(*) AS percentage_marvel\nFROM\n    superhero s\nJOIN\n    publisher p ON s.publisher_id = p.id\nWHERE\n    s.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'Male' AND sh.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero WHERE weight_kg IS NOT NULL)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_power.hero_id) AS stealth_hero_count\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT sh.full_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON sh.publisher_id = p.id\nWHERE a.attribute_name = 'durability'\nAND p.publisher_name = 'Dark Horse Comics'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT\n    ec.colour AS eye_colour,\n    hc.colour AS hair_colour,\n    sc.colour AS skin_colour\nFROM\n    superhero sh\nJOIN\n    gender g ON sh.gender_id = g.id\nJOIN\n    colour ec ON sh.eye_colour_id = ec.id\nJOIN\n    colour hc ON sh.hair_colour_id = hc.id\nJOIN\n    colour sc ON sh.skin_colour_id = sc.id\nJOIN\n    publisher p ON sh.publisher_id = p.id\nWHERE\n    g.gender = 'Female'\n    AND p.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT sh.superhero_name, p.publisher_name\nFROM superhero sh\nJOIN colour ec ON sh.eye_colour_id = ec.id\nJOIN colour hc ON sh.hair_colour_id = hc.id\nJOIN colour sc ON sh.skin_colour_id = sc.id\nJOIN publisher p ON sh.publisher_id = p.id\nWHERE sh.eye_colour_id = sh.hair_colour_id\nAND sh.hair_colour_id = sh.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT\n    (COUNT(DISTINCT CASE WHEN c.colour = 'Blue' THEN s.id END) * 100.0) / COUNT(s.id) AS percentage_blue_female_superheroes\nFROM\n    superhero s\nJOIN\n    gender g ON s.gender_id = g.id\nJOIN\n    colour c ON s.skin_colour_id = c.id\nWHERE\n    g.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS power_count\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT ha.hero_id) \nFROM hero_attribute ha \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Strength' AND ha.attribute_value = (\n    SELECT MAX(ha_inner.attribute_value) \n    FROM hero_attribute ha_inner \n    JOIN attribute a_inner ON ha_inner.attribute_id = a_inner.id \n    WHERE a_inner.attribute_name = 'Strength'\n)\t----- bird -----\tsuperhero",
    "281": "SELECT\n    (COUNT(*) FILTER (WHERE g.gender = 'Female') * 100.0) / COUNT(*) AS percent_female_marvel\nFROM\n    superhero sh\nJOIN\n    gender g ON sh.gender_id = g.id\nJOIN\n    publisher p ON sh.publisher_id = p.id\nWHERE\n    p.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT\n  (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') -\n  (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero sh\nJOIN hero_attribute ha ON sh.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE sh.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN colour eye ON sh.eye_colour_id = eye.id\nJOIN colour hair ON sh.hair_colour_id = hair.id\nWHERE eye.colour = 'Blue' AND hair.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT\n    (COUNT(*) FILTER (WHERE eye_colour_id = 7) * 100.0) / COUNT(*) AS percentage_blue_eyes\nFROM\n    superhero\t----- bird -----\tsuperhero",
    "290": "SELECT\n    SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END)::FLOAT /\n    NULLIF(SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END), 0) AS ratio\nFROM superhero\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour AS eye_colour\nFROM superhero AS s\nJOIN colour AS c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT\n  (SELECT COUNT(*)\n   FROM superhero\n   WHERE (weight_kg = 0 OR weight_kg IS NULL)\n     AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')) -\n  (SELECT COUNT(*)\n   FROM superhero\n   WHERE (weight_kg = 0 OR weight_kg IS NULL)\n     AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'no eye color')) AS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero AS sh\nJOIN colour AS c ON sh.skin_colour_id = c.id\nJOIN alignment AS a ON sh.alignment_id = a.id\nWHERE c.colour = 'Green' AND a.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT sh.superhero_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Wind Control'\nORDER BY sh.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero AS s\nJOIN hero_power AS hp ON s.id = hp.hero_id\nJOIN superpower AS sp ON hp.power_id = sp.id\nJOIN gender AS g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT\n    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS dc_heroes_count,\n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_heroes_count,\n    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) -\n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS difference\nFROM\n    superhero s\nJOIN\n    publisher p ON s.publisher_id = p.id\t----- bird -----\tsuperhero",
    "297": "SELECT displayname, reputation\nFROM users\nWHERE displayname IN ('Harlan', 'Jarrod Dixon')\nORDER BY reputation DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT displayname FROM users WHERE EXTRACT(YEAR FROM creationdate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE lastaccessdate > '2014-09-01T00:00:00+00'::TIMESTAMP WITH TIME ZONE\t----- bird -----\tcodebase_community",
    "300": "SELECT p.owneruserid, u.displayname AS owner\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*)\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT u.displayname\nFROM posts p\nJOIN users u ON p.lasteditoruserid = u.id\nWHERE p.title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.age > 65 AND p.score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT p.body\nFROM tags t\nJOIN posts p ON t.excerptpostid = p.id\nWHERE t.tagname = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.score) AS average_score\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT\n    (COUNT(DISTINCT CASE WHEN u.age > 65 THEN p.id END)::FLOAT / COUNT(p.id)) * 100 AS percentage_elder_user_owner\nFROM\n    posts p\nJOIN\n    users u ON p.owneruserid = u.id\nWHERE\n    p.score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT p.favoritecount\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE c.userid = 3025 AND c.creationdate = '2014-04-23 20:29:39+00'\t----- bird -----\tcodebase_community",
    "308": "SELECT\n    CASE\n        WHEN p.closeddate IS NULL THEN 'Yes'\n        ELSE 'No'\n    END AS well_finished\nFROM\n    comments c\nJOIN\n    posts p ON c.postid = p.id\nWHERE\n    c.userid = 23853\n    AND c.creationdate = '2013-07-12 09:08:18+00'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE users.displayname = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT users.displayname\nFROM votes\nJOIN users ON votes.userid = users.id\nWHERE votes.id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT\n    (COUNT(DISTINCT posts.id)::FLOAT / COUNT(DISTINCT votes.id)) AS times_posts_more_than_votes\nFROM\n    posts\nLEFT JOIN\n    votes ON posts.id = votes.postid AND votes.userid = 24\nWHERE\n    posts.owneruserid = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT viewcount FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT text FROM comments WHERE score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT u.displayname\nFROM comments c\nJOIN users u ON c.userid = u.id\nWHERE c.text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT u.displayname, u.reputation\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT p.lasteditordisplayname\nFROM posts p\nWHERE p.title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.text\nFROM comments c\nJOIN posts p ON c.postid = p.id\nJOIN posts edited ON edited.lasteditoruserid = c.userid\nWHERE edited.title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT u.displayname\nFROM votes v\nJOIN posts p ON v.postid = p.id\nJOIN users u ON v.userid = u.id\nWHERE v.bountyamount = 50 AND p.title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.title, c.text AS comment, AVG(p.viewcount) OVER () AS average_view_count\nFROM posts p\nLEFT JOIN comments c ON p.id = c.postid\nWHERE p.tags LIKE '%<humor>%'\nGROUP BY p.id, p.title, c.text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT userid) \nFROM (\n    SELECT userid \n    FROM badges \n    GROUP BY userid \n    HAVING COUNT(id) > 5\n) AS subquery\t----- bird -----\tcodebase_community",
    "321": "SELECT DISTINCT p.owneruserid\nFROM posts p\nJOIN postHistory ph ON p.id = ph.postid\nGROUP BY p.owneruserid, ph.postid\nHAVING COUNT(ph.postid) = 1 AND MAX(p.viewcount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT\n    (student_badges_2010 / total_badges_2010 - student_badges_2011 / total_badges_2011) * 100 AS percentage_difference\nFROM\n    (SELECT COUNT(*) AS student_badges_2010\n     FROM badges\n     WHERE name = 'Student' AND EXTRACT(YEAR FROM date) = 2010) AS sb2010,\n    (SELECT COUNT(*) AS total_badges_2010\n     FROM badges\n     WHERE EXTRACT(YEAR FROM date) = 2010) AS tb2010,\n    (SELECT COUNT(*) AS student_badges_2011\n     FROM badges\n     WHERE name = 'Student' AND EXTRACT(YEAR FROM date) = 2011) AS sb2011,\n    (SELECT COUNT(*) AS total_badges_2011\n     FROM badges\n     WHERE EXTRACT(YEAR FROM date) = 2011) AS tb2011\t----- bird -----\tcodebase_community",
    "323": "SELECT \n    AVG(u.upvotes) AS average_upvotes,\n    AVG(u.age) AS average_age\nFROM \n    users u\nJOIN \n    (SELECT \n        owneruserid, \n        COUNT(id) AS post_count\n     FROM \n        posts\n     GROUP BY \n        owneruserid\n     HAVING \n        COUNT(id) > 10) AS subq\nON \n    u.id = subq.owneruserid\t----- bird -----\tcodebase_community",
    "324": "SELECT\n    (COUNT(CASE WHEN EXTRACT(YEAR FROM creationdate) = 2010 THEN 1 END)::FLOAT /\n    COUNT(CASE WHEN EXTRACT(YEAR FROM creationdate) = 2011 THEN 1 END)) AS ratio\nFROM votes\t----- bird -----\tcodebase_community",
    "325": "SELECT p.id\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'slashnick'\nORDER BY p.answercount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT ownerdisplayname, MAX(sum_viewcount) AS max_popularity\nFROM (\n    SELECT ownerdisplayname, SUM(viewcount) AS sum_viewcount\n    FROM posts\n    WHERE ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder')\n    GROUP BY ownerdisplayname\n) AS subquery\nGROUP BY ownerdisplayname\nORDER BY max_popularity DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT t.tagname\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nJOIN tags t ON p.tags LIKE '%' || t.tagname || '%'\nWHERE u.displayname = 'Mark Meckes' AND p.commentcount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT\n    (COUNT(p.id) FILTER (WHERE t.tagname = 'r'))::FLOAT / NULLIF(COUNT(p.id) FILTER (WHERE u.displayname = 'Community'), 0) * 100 AS percentage\nFROM\n    posts p\nLEFT JOIN\n    users u ON p.owneruserid = u.id\nLEFT JOIN\n    unnest(string_to_array(p.tags, '><')) WITH ORDINALITY AS t(tagname, ord) ON t.tagname = 'r'\nWHERE\n    u.displayname = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT\n  (SELECT COALESCE(SUM(p.viewcount), 0)\n   FROM posts p\n   JOIN users u ON p.owneruserid = u.id\n   WHERE u.displayname = 'Mornington') -\n  (SELECT COALESCE(SUM(p.viewcount), 0)\n   FROM posts p\n   JOIN users u ON p.owneruserid = u.id\n   WHERE u.displayname = 'Amos') AS viewcount_difference\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(monthly_links_count) AS average_monthly_links\nFROM (\n    SELECT DATE_TRUNC('month', pl.creationdate) AS month, COUNT(pl.id) AS monthly_links_count\n    FROM postLinks pl\n    JOIN posts p ON pl.postid = p.id\n    WHERE EXTRACT(YEAR FROM pl.creationdate) = 2010 AND p.answercount <= 2\n    GROUP BY month\n) AS monthly_links\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.creationdate)\nFROM votes v\nJOIN users u ON v.userid = u.id\nWHERE u.displayname = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT u.displayname\nFROM badges b\nJOIN users u ON b.userid = u.id\nWHERE b.name = 'Autobiographer'\nORDER BY b.date ASC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.id) \nFROM users u \nJOIN posts p ON u.id = p.owneruserid \nWHERE u.location = 'United Kingdom' AND p.favoritecount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT p.id, p.title\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'Harvey Motulsky'\nORDER BY p.viewcount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT p.id, u.displayname\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE EXTRACT(YEAR FROM p.creaiondate) = 2010\nORDER BY p.favoritecount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT\n    (COUNT(DISTINCT p.id) FILTER (WHERE u.reputation > 1000 AND EXTRACT(YEAR FROM u.creationdate) = 2011)::FLOAT /\n    COUNT(DISTINCT p.id)::FLOAT) * 100 AS percentage\nFROM\n    posts p\nJOIN\n    users u ON p.owneruserid = u.id\t----- bird -----\tcodebase_community",
    "337": "SELECT p.viewcount, u.displayname\nFROM posts p\nJOIN users u ON p.lasteditoruserid = u.id\nWHERE p.title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE postid = (\n    SELECT id \n    FROM posts \n    ORDER BY score DESC \n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT c.text, u.displayname\nFROM comments c\nJOIN posts p ON c.postid = p.id\nJOIN users u ON c.userid = u.id\nWHERE p.title = 'Analysing wind data with R'\nORDER BY c.creationdate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT\n    (COUNT(CASE WHEN p.score > 50 THEN 1 END)::FLOAT / COUNT(p.id)) * 100 AS percentage\nFROM\n    posts p\nJOIN\n    users u ON p.owneruserid = u.id\nWHERE\n    u.reputation = (SELECT MAX(reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT `excerptpostid`, `wikipostid` FROM tags WHERE `tagname` = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT u.reputation, u.upvotes\nFROM users u\nJOIN comments c ON u.id = c.userid\nWHERE c.text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT c.text\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE p.viewcount BETWEEN 100 AND 150\nORDER BY c.score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*)\nFROM comments\nWHERE score = 0 AND postid IN (SELECT id FROM posts WHERE commentcount = 1)\t----- bird -----\tcodebase_community",
    "345": "SELECT\n    (COUNT(DISTINCT c.userid) FILTER (WHERE u.upvotes = 0) * 100.0) / NULLIF(COUNT(DISTINCT c.userid), 0) AS percentage\nFROM\n    comments c\nJOIN\n    users u ON c.userid = u.id\nWHERE\n    c.score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "346": "SELECT *\nFROM cards\nWHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT *\nFROM cards\nWHERE bordercolor = 'borderless'\n  AND (cardkingdomfoilid IS NULL OR cardkingdomid IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT c.name, c.setcode, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic' AND l.status = 'Banned' AND l.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact'\nAND c.side IS NULL\nAND l.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\nAND l.format = 'commander'\nAND l.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hascontentwarning\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.ispromo\nFROM cards c\nJOIN (\n    SELECT uuid, COUNT(uuid) AS ruling_count\n    FROM rulings\n    GROUP BY uuid\n    ORDER BY ruling_count DESC\n    LIMIT 1\n) r ON c.uuid = r.uuid\t----- bird -----\tcard_games",
    "353": "SELECT\n    (COUNT(foreign_data.id) FILTER (WHERE foreign_data.language = 'Chinese Simplified') * 100.0) / COUNT(cards.id) AS percentage\nFROM\n    cards\nLEFT JOIN\n    foreign_data ON cards.id = foreign_data.id\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT bordercolor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT l.format, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT\n    (COUNT(*) FILTER (WHERE bordercolor = 'borderless') * 100.0) / COUNT(*) AS percentage_borderless\nFROM\n    cards\t----- bird -----\tcard_games",
    "358": "SELECT\n    (COUNT(fd.id) FILTER (WHERE fd.language = 'French') * 100.0) / NULLIF(COUNT(c.id) FILTER (WHERE c.isstoryspotlight = 1), 0) AS percentage_french_story_spotlight\nFROM\n    cards c\nLEFT JOIN\n    foreign_data fd ON c.id = fd.id AND c.isstoryspotlight = 1 AND fd.language = 'French'\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)\nFROM cards\nWHERE originaltype = 'Summon - Angel'\nAND NOT subtypes LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE dueldeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned'\nAND cards.bordercolor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.id, c.name, fd.language, fd.name AS foreign_name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originaltype = 'Artifact'\nAND c.colors = 'B'\nAND fd.language IS NOT NULL\t----- bird -----\tcard_games",
    "363": "SELECT manacost\nFROM cards\nWHERE layout = 'normal'\nAND frameversion = '2003'\nAND bordercolor = 'black'\nAND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT\n    id,\n    (COUNT(*) FILTER (WHERE isstoryspotlight = 1 AND istextless = 0) * 100.0 / COUNT(*)) AS percentage\nFROM\n    cards\nGROUP BY\n    id\nHAVING\n    isstoryspotlight = 1 AND istextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*)\nFROM set_translations st\nJOIN sets s ON st.setcode = s.code\nWHERE st.language = 'Portuguese (Brasil)' AND s.block = 'Commander'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT fd.type\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'German' AND c.subtypes IS NOT NULL AND c.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*)\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN rulings r ON c.uuid = r.uuid\nWHERE l.format = 'premodern'\nAND r.text = 'This is a triggered mana ability.'\nAND c.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'French'\n  AND c.type LIKE '%Creature%'\n  AND c.layout = 'normal'\n  AND c.bordercolor = 'black'\n  AND c.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setcode\nWHERE s.basesetsize = 180 AND s.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT\n    (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0) / COUNT(*) AS percentage\nFROM\n    cards\nJOIN\n    legalities ON cards.id = legalities.id\nWHERE\n    legalities.format = 'commander'\n    AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT\n    (COUNT(*) FILTER (WHERE language = 'French') * 100.0) / COUNT(*) AS percentage\nFROM\n    foreign_data\nWHERE\n    (power IS NULL OR power = '*') AND language = 'French'\t----- bird -----\tcard_games",
    "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT\n  (COUNT(*) FILTER (WHERE isTextless = 1 AND layout = 'normal'))::FLOAT / COUNT(*) * 100 AS proportion\nFROM\n  cards\nWHERE\n  layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT fd.language\nFROM foreign_data fd\nJOIN sets s ON fd.uuid = s.code\nWHERE s.mcmname = 'Archenemy' AND s.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT\n    CASE\n        WHEN a.convertedmanacost > b.convertedmanacost THEN 'Serra Angel'\n        WHEN a.convertedmanacost < b.convertedmanacost THEN 'Shrine Keeper'\n        ELSE 'Both cards have the same converted mana cost'\n    END AS card_with_more_converted_mana_cost\nFROM\n    cards a,\n    cards b\nWHERE\n    a.name = 'Serra Angel'\n    AND b.name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM cards c\nJOIN set_translations st ON c.setcode = st.setcode\nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    JOIN foreign_data ON cards.uuid = foreign_data.uuid\n    WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean'\n) as has_korean_version\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation\nFROM sets\nJOIN set_translations ON sets.id = set_translations.id\nWHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name, sets.mtgocode\nFROM sets\nJOIN cards ON sets.code = cards.setcode\nWHERE cards.name = 'Angel of Mercy'\nAND sets.mtgocode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.id)\nFROM sets s\nJOIN set_translations st ON s.id = st.id\nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isforeignonly\nFROM sets\nJOIN cards ON sets.code = cards.setcode\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.id = set_translations.id \nWHERE set_translations.language = 'Italian' \nAND sets.basesetsize < 100\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT cards.artist\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.convertedmanacost > 5\nAND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavortext\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setcode = s.code\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setcode = s.code\nWHERE s.name = 'Coldsnap'\nAND fd.language = 'Italian'\nAND c.convertedmanacost = (\n    SELECT MAX(convertedmanacost)\n    FROM cards c2\n    JOIN sets s2 ON c2.setcode = s2.code\n    WHERE s2.name = 'Coldsnap'\n)\t----- bird -----\tcard_games",
    "391": "SELECT\n    (SUM(CASE WHEN c.convertedmanacost = 7 THEN 1 ELSE 0 END) * 100.0) / COUNT(c.*) AS percentage\nFROM\n    cards c\nJOIN\n    sets s ON c.uuid = s.id\nWHERE\n    s.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT\n    (COUNT(*) FILTER (WHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL) * 100.0) /\n    COUNT(*) FILTER (WHERE name = 'Coldsnap') AS percentage_incredibly_powerful\nFROM\n    cards\nWHERE\n    setcode = (SELECT code FROM sets WHERE name = 'Coldsnap')\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities AS l\nJOIN cards AS c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(l.status) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecrank = 1 AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN sets s ON c.id = s.id\nJOIN legalities l ON c.uuid = l.uuid\nWHERE s.name = 'Hour of Devastation' AND l.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT s.name\nFROM sets s\nJOIN set_translations st_jp ON s.code = st_jp.setcode AND st_jp.language LIKE '%Japanese%'\nJOIN set_translations st_kr ON s.code = st_kr.setcode AND st_kr.language = 'Korean'\nWHERE s.name NOT IN (\n    SELECT s.name\n    FROM sets s\n    JOIN set_translations st ON s.code = st.setcode\n    WHERE st.language LIKE '%Japanese%'\n)\nAND s.name IN (\n    SELECT s.name\n    FROM sets s\n    JOIN set_translations st ON s.code = st.setcode\n    WHERE st.language = 'Korean'\n)\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameversion FROM cards WHERE frameversion IS NOT NULL\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) FROM (\n    SELECT molecule_id, COUNT(*) as oxygen_count\n    FROM atom\n    WHERE element = 'O' AND molecule_id IN (\n        SELECT molecule_id\n        FROM bond\n        WHERE bond_type = '-'\n    )\n    GROUP BY molecule_id\n) AS oxygen_counts\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) AS average_single_bonded\nFROM (\n    SELECT m.molecule_id, COUNT(DISTINCT b.bond_id) AS single_bonded_count\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    WHERE m.label = '+' AND b.bond_type = '-'\n    GROUP BY m.molecule_id\n) AS carcinogenic_single_bonded_counts\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT\n    (SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END)::FLOAT / COUNT(a.atom_id)) * 100 AS carbon_percentage\nFROM\n    atom a\nJOIN\n    molecule m ON a.molecule_id = m.molecule_id\nJOIN\n    bond b ON m.molecule_id = b.molecule_id\nWHERE\n    b.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE element = 'H'\nGROUP BY label\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(element) AS element_count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY element_count ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element IN ('i', 's')\nAND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT\n  (COUNT(DISTINCT m.molecule_id) FILTER (WHERE f_count = 0) * 100.0) / NULLIF(COUNT(DISTINCT m.molecule_id), 0) AS percentage\nFROM\n  molecule m\nLEFT JOIN (\n  SELECT\n    a.molecule_id,\n    COUNT(DISTINCT a.atom_id) AS f_count\n  FROM\n    atom a\n  WHERE\n    a.element = 'F'\n  GROUP BY\n    a.molecule_id\n) AS fc ON m.molecule_id = fc.molecule_id\nWHERE\n  m.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT\n    (COUNT(DISTINCT CASE WHEN b.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT\n    ROUND(\n        (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END)::NUMERIC / COUNT(bond_id)) * 100,\n        5\n    ) AS percentage\nFROM\n    bond\nWHERE\n    molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(\n    (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END)::DECIMAL / COUNT(*)) * 100, 3\n) AS percentage\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT\n    ROUND(\n        (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END)::DECIMAL / COUNT(a.atom_id)) * 100,\n        4\n    ) AS percentage\nFROM\n    atom a\nWHERE\n    a.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT m.label, a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label = '-' AND b.bond_type = '-'\nORDER BY m.molecule_id\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) AS bond_count\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nWHERE a.molecule_id = 'TR009' AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connection_count\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'P'\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'N'\nWHERE a1.molecule_id = a2.molecule_id\t----- bird -----\ttoxicology",
    "424": "SELECT label = '+' AS is_carcinogenic\nFROM molecule\nJOIN (\n    SELECT molecule_id, COUNT(*) AS double_bond_count\n    FROM bond\n    WHERE bond_type = ' = '\n    GROUP BY molecule_id\n    ORDER BY double_bond_count DESC\n    LIMIT 1\n) AS most_double_bonds\nON molecule.molecule_id = most_double_bonds.molecule_id\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(iodine_bonds.bond_count) AS average_iodine_bonds\nFROM (\n    SELECT atom.atom_id, COUNT(connected.bond_id) AS bond_count\n    FROM atom\n    LEFT JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\n    WHERE atom.element = 'i'\n    GROUP BY atom.atom_id\n) AS iodine_bonds\t----- bird -----\ttoxicology",
    "426": "SELECT element\nFROM atom\nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\nAND atom_id NOT IN (SELECT atom_id2 FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT a.atom_id, a2.atom_id\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041' AND b.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(\n    (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id),\n    5\n) AS proportion\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT\n    (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT a.atom_id) AS percent\nFROM\n    atom a\nJOIN\n    connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN\n    bond b ON c.bond_id = b.bond_id\nWHERE\n    b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR001_10_11'\nGROUP BY a.element\t----- bird -----\ttoxicology",
    "434": "SELECT\n  (COUNT(DISTINCT CASE WHEN a.element = 'cl' THEN a.molecule_id END)::FLOAT / COUNT(DISTINCT m.molecule_id)) * 100 AS percentage\nFROM\n  molecule m\nJOIN\n  atom a ON m.molecule_id = a.molecule_id\nWHERE\n  m.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT a.element, COUNT(*) AS toxicology_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+'\nAND SUBSTR(a.atom_id, 7, 1) = '4'\nGROUP BY a.element\t----- bird -----\ttoxicology",
    "436": "SELECT\n    (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END)::FLOAT / COUNT(a.element)) AS ratio,\n    m.label\nFROM\n    atom a\nJOIN\n    molecule m ON a.molecule_id = m.molecule_id\nWHERE\n    a.molecule_id = 'TR006'\nGROUP BY\n    m.label\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE satscores.avgscrmath > 400 AND schools.virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT s.cdscode\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE (COALESCE(f.`Enrollment (K-12)`, 0) + COALESCE(f.`Enrollment (Ages 5-17)`, 0)) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(f.`Percent (%) Eligible Free (Ages 5-17)`) AS highest_eligible_free_rate\nFROM satscores s\nJOIN frpm f ON s.cds = f.cdscode\nWHERE s.numtsttakr > 0 AND (CAST(s.numge1500 AS REAL) / CAST(s.numtsttakr AS REAL)) > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.sname, s.charternum, sat.avgscrwrite\nFROM satscores sat\nJOIN schools s ON sat.cds = s.cdscode\nWHERE sat.avgscrwrite > 499\nORDER BY sat.avgscrwrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.school, s.street || ' ' || s.city || ' ' || s.zip AS full_address\nFROM frpm f\nJOIN schools s ON f.cdscode = s.cdscode\nWHERE (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.sname\nFROM satscores s\nJOIN frpm f ON s.cds = f.cdscode\nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1\nAND s.numge1500 >= 1\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.school, sc.fundingtype\nFROM satscores s\nJOIN schools sc ON s.cds = sc.cdscode\nWHERE s.avgscrmath > 400 AND sc.county = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.school, s.street, s.city, s.state, s.zip\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.county = 'Monterey'\nAND s.school LIKE '%High%'\nAND (f.`FRPM Count (Ages 5-17)` > 800 OR f.`Free Meal Count (Ages 5-17)` > 800)\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.sname, AVG(s.avgscrwrite) AS average_writing_score, sc.phone\nFROM satscores s\nJOIN schools sc ON s.cds = sc.cdscode\nWHERE (sc.opendate > '1991-01-01' OR sc.closeddate < '2000-01-01') AND s.avgscrwrite IS NOT NULL\nGROUP BY s.sname, sc.phone\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.school, s.doc\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE f.`Charter Funding Type` = 'Locally funded'\nAND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (\n    SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n    FROM frpm f2\n    WHERE f2.`Charter Funding Type` = 'Locally funded'\n)\t----- bird -----\tcalifornia_schools",
    "448": "SELECT\n    \"School Name\",\n    \"Enrollment (K-12)\",\n    \"Free Meal Count (K-12)\",\n    (\"Free Meal Count (K-12)\" / \"Enrollment (K-12)\") AS \"Eligible Free Rate\"\nFROM\n    frpm\nORDER BY\n    \"Enrollment (K-12)\" DESC\nLIMIT 1\nOFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \"School Name\",\n       \"FRPM Count (K-12)\" / \"Enrollment (K-12)\" AS \"Eligible FRPM Rate\"\nFROM frpm\nWHERE \"irc\" = 66\nORDER BY \"FRPM Count (K-12)\" DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.street, s.city, s.zip, s.state\nFROM satscores sat\nJOIN schools s ON sat.cds = s.cdscode\nWHERE sat.numtsttakr > 0\nORDER BY (sat.numge1500::FLOAT / sat.numtsttakr) ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.admfname1 || ' ' || s.admlname1 AS admin1_fullname,\n       s.admfname2 || ' ' || s.admlname2 AS admin2_fullname,\n       s.admfname3 || ' ' || s.admlname3 AS admin3_fullname\nFROM satscores sat\nJOIN schools s ON sat.cds = s.cdscode\nORDER BY sat.numge1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(s.numtsttakr) AS avg_num_test_takers\nFROM satscores s\nJOIN schools sch ON s.cds = sch.cdscode\nWHERE sch.county = 'Fresno'\nAND sch.opendate >= '1980-01-01'\nAND sch.opendate <= '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.phone\nFROM satscores s\nJOIN schools sch ON s.cds = sch.cdscode\nWHERE sch.district = 'Fresno Unified'\nORDER BY s.avgscrread ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.school, s.county, satscores.avgscrread\nFROM (\n    SELECT school, county, avgscrread,\n    ROW_NUMBER() OVER (PARTITION BY county ORDER BY avgscrread DESC) as rank\n    FROM satscores\n    JOIN schools s ON satscores.cds = s.cdscode\n    WHERE s.virtual = 'F'\n) as s\nWHERE s.rank <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.sname, AVG(s.avgscrwrite) AS average_writing_score\nFROM satscores s\nJOIN schools sch ON s.cds = sch.cdscode\nWHERE (sch.admfname1 = 'Ricci' AND sch.admlname1 = 'Ulrich') OR\n      (sch.admfname2 = 'Ricci' AND sch.admlname2 = 'Ulrich') OR\n      (sch.admfname3 = 'Ricci' AND sch.admlname3 = 'Ulrich')\nGROUP BY s.sname\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.school, s.enrollment_k_12\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.doc = '31' AND s.gsoffered LIKE '%K-12%'\nORDER BY s.enrollment_k_12 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS monthly_average\nFROM schools\nWHERE county = 'Alameda'\nAND doc = '52'\nAND EXTRACT(YEAR FROM opendate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT\n    SUM(CASE WHEN s.doc = '54' THEN 1 ELSE 0 END)::FLOAT / NULLIF(SUM(CASE WHEN s.doc = '52' THEN 1 ELSE 0 END), 0) AS ratio\nFROM\n    schools s\nWHERE\n    s.county = 'Orange County'\n    AND (s.doc = '52' OR s.doc = '54')\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.sname, s.street\nFROM satscores AS sat\nJOIN schools AS s ON sat.cds = s.cdscode\nORDER BY sat.avgscrmath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.county = 'Los Angeles'\nAND s.charter = 0\nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT \"Enrollment (Ages 5-17)\"\nFROM frpm\nJOIN schools ON frpm.cdscode = schools.cdscode\nWHERE \"Academic Year\" = '2014-2015'\nAND \"School Name\" = 'State Special School'\nAND city = 'Fremont'\nAND edopscode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.school, (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) * 100 AS percent_eligible_frpm\nFROM schools s\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.county = 'Los Angeles'\nAND s.gsoffered = 'KK-09'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT county, COUNT(*) AS num_virtual_schools\nFROM schools\nWHERE (county = 'San Diego' OR county = 'Santa Barbara') AND virtual = 'F'\nGROUP BY county\nORDER BY num_virtual_schools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT gsoffered FROM schools WHERE ABS(longitude) = (SELECT MAX(ABS(longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT city, COUNT(*) AS num_schools\nFROM schools\nJOIN frpm ON schools.cdscode = frpm.cdscode\nWHERE magnet = 1\nAND gsoffered = 'K-8'\nAND \"NSLP Provision Status\" = 'Multiple Provision Types'\nGROUP BY city\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    f.`District Code`,\n    (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) * 100 AS \"Percent (%) Eligible Free (K-12)\"\nFROM frpm f\nJOIN schools s ON f.cdscode = s.cdscode\nWHERE s.admfname1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT admemail1, admemail2, admemail3\nFROM schools\nWHERE county = 'San Bernardino'\n  AND city = 'San Bernardino City Unified'\n  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'\n  AND (\n    (soc = '62' AND soctype = 'Public')\n    OR (doc = '54' AND doctype = 'Public')\n  )\n  AND (admemail1 IS NOT NULL OR admemail2 IS NOT NULL OR admemail3 IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.frequency = 'POPLATEK PO OBRATU'\nAND d.a3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) \nFROM district \nWHERE a11 > 6000 AND a11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M'\nAND district.a3 = 'North Bohemia'\nAND district.a11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id, MIN(d.a11) AS lowest_avg_salary, MAX(d.a11) - MIN(d.a11) AS salary_gap\nFROM account a\nJOIN disp di ON a.account_id = di.account_id\nJOIN client c ON di.client_id = c.client_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F'\nGROUP BY a.account_id\nORDER BY c.birth_date DESC, d.a11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\nAND dis.a11 = (SELECT MAX(a11) FROM district)\nORDER BY a.account_id\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.date >= '1997-01-01' AND l.date < '1998-01-01'\nAND a.frequency = 'POPLATEK TYDNE'\nAND l.amount = (\n    SELECT MIN(l2.amount)\n    FROM loan l2\n    JOIN account a2 ON l2.account_id = a2.account_id\n    WHERE l2.date >= '1997-01-01' AND l2.date < '1998-01-01'\n    AND a2.frequency = 'POPLATEK TYDNE'\n)\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, l.amount, a.date\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12 AND EXTRACT(YEAR FROM a.date) = 1993\nORDER BY l.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT c.client_id)\nFROM client c\nJOIN account a ON c.district_id = a.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND d.a2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT d.a2 AS district_name\nFROM client c\nJOIN disp d ON c.district_id = d.district_id\nJOIN account a ON d.account_id = a.account_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT\n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END)::FLOAT / COUNT(c.client_id)) * 100 AS male_clients_percentage\nFROM\n    district d\nJOIN\n    client c ON d.district_id = c.district_id\nWHERE\n    d.a3 = 'south Bohemia'\nAND\n    d.a4 = (SELECT MAX(a4) FROM district WHERE a3 = 'south Bohemia')\n```\t----- bird -----\tfinancial",
    "478": "SELECT\n    ((final_balance.balance - initial_balance.balance) / initial_balance.balance) * 100 AS increase_rate\nFROM\n    (SELECT balance FROM trans WHERE account_id = first_loan_account.account_id AND date = '1998-12-27') AS final_balance,\n    (SELECT balance FROM trans WHERE account_id = first_loan_account.account_id AND date = '1993-3-22') AS initial_balance,\n    (SELECT account_id FROM loan WHERE date = '1993-7-5' ORDER BY loan_id ASC LIMIT 1) AS first_loan_account\t----- bird -----\tfinancial",
    "479": "SELECT\n    (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount) :: FLOAT) * 100 AS percentage_fully_paid\nFROM\n    loan l\t----- bird -----\tfinancial",
    "480": "SELECT\n  (COUNT(*) FILTER (WHERE l.status = 'C') / COUNT(*)) * 100 AS percentage_running_no_issue\nFROM loan l\nWHERE l.amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT d.district_id,\n       ((d.a13 - d.a12) / d.a12) * 100 AS unemployment_rate_increment\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.a2 AS district, COUNT(*) AS female_account_holders\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN disp dp ON a.account_id = dp.account_id\nJOIN client c ON dp.client_id = c.client_id\nWHERE c.gender = 'F' AND dp.type = 'OWNER'\nGROUP BY d.a2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT loan.loan_id) \nFROM loan \nJOIN account ON loan.account_id = account.account_id \nWHERE loan.amount >= 250000 \nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31' \nAND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status IN ('C', 'D') AND d.district_id = 1\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) AS male_clients_count\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'M' AND district.district_id = (\n    SELECT district_id\n    FROM district\n    ORDER BY a15 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "486": "SELECT d.a2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ'\nAND t.date >= '1996-01-01' AND t.date <= '1996-01-31'\nGROUP BY d.a2\nORDER BY total_withdrawals DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE d.district_id = 1 AND (l.status = 'C' OR l.status = 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'M' AND district.a15 = (\n    SELECT a15\n    FROM district\n    ORDER BY a15 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT d.client_id\nFROM disp d\nJOIN card c ON d.disp_id = c.disp_id\nJOIN trans t ON d.account_id = t.account_id\nWHERE t.operation = 'VYBER KARTOU'\nAND t.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND date >= '1998-01-01' AND date < '1999-01-01')\nAND t.date >= '1998-01-01'\nAND t.date < '1999-01-01'\nAND d.type = 'OWNER'\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT d.a11 AS average_income, dp.type AS account_type\nFROM disp dp\nJOIN account a ON dp.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE dp.type != 'OWNER'\nAND d.a11 > 8000\nAND d.a11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.a15) AS average_crimes_1995\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.a15 > 4000 AND EXTRACT(YEAR FROM a.date) >= 1997\t----- bird -----\tfinancial",
    "492": "SELECT t.trans_id, t.date, t.amount, t.balance\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE d.client_id = 3356 AND t.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT\n    (COUNT(DISTINCT female_clients.client_id)::FLOAT / COUNT(DISTINCT all_clients.client_id)::FLOAT) * 100 AS percentage_women\nFROM\n    account\nJOIN\n    district ON account.district_id = district.district_id\nJOIN\n    client AS all_clients ON account.district_id = all_clients.district_id\nLEFT JOIN\n    client AS female_clients ON all_clients.client_id = female_clients.client_id AND female_clients.gender = 'F'\nWHERE\n    district.a11 > 10000\n\t----- bird -----\tfinancial",
    "494": "SELECT\n    (SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1997 THEN l.amount ELSE 0 END) - \n     SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE 0 END)) / \n    SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE NULL END) * 100 AS growth_rate\nFROM\n    loan l\nJOIN\n    account a ON l.account_id = a.account_id\nJOIN\n    disp d ON a.account_id = d.account_id\nJOIN\n    client c ON d.client_id = c.client_id\nWHERE\n    c.gender = 'M'\n    AND d.type = 'OWNER'\n    AND EXTRACT(YEAR FROM l.date) IN (1996, 1997)\t----- bird -----\tfinancial",
    "495": "SELECT frequency FROM account WHERE account_id = 3\t----- bird -----\tfinancial",
    "496": "SELECT\n    (COUNT(DISTINCT male_clients.client_id)::FLOAT / COUNT(DISTINCT all_weekly_clients.client_id)::FLOAT) * 100 AS percentage_male_clients_weekly_statements\nFROM\n    client\nJOIN\n    account ON client.district_id = account.district_id\nJOIN\n    disp ON client.client_id = disp.client_id\nWHERE\n    account.frequency = 'POPLATEK TYDNE'\nAND\n    client.gender = 'M' AS male_clients\nJOIN\n    (SELECT\n        client.client_id\n    FROM\n        client\n    JOIN\n        account ON client.district_id = account.district_id\n    JOIN\n        disp ON client.client_id = disp.client_id\n    WHERE\n        account.frequency = 'POPLATEK TYDNE') AS all_weekly_clients ON male_clients.client_id = all_weekly_clients.client_id\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE c.gender = 'F'\nORDER BY c.birth_date ASC, dis.a11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.status IN ('C', 'D') AND a.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, EXTRACT(YEAR FROM AGE(c.birth_date)) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nJOIN loan l ON d.account_id = l.account_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER'\t----- bird -----\tfinancial"
}