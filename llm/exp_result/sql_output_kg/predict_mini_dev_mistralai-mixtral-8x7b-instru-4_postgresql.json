{
    "0": " SELECT \nCOUNT(CASE WHEN currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN currency = 'CZK' THEN 1 END) \nFROM \ncustomers;\t----- bird -----\tdebit_card_specializing",
    "1": " SELECT customerid, MIN(consumption)\nFROM yearmonth\nWHERE date BETWEEN '201201' AND '201212' AND segment = 'LAM'\nGROUP BY customerid;\t----- bird -----\tdebit_card_specializing",
    "2": " SELECT AVG(consumption/12)\nFROM yearmonth\nWHERE date BETWEEN '201301' AND '201312' AND segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "3": " SELECT\nsum(case when currency = 'CZK' then consumption else 0 end) - sum(case when currency = 'EUR' then consumption else 0 end) as difference_in_consumption\nFROM\n(SELECT\ncustomerid,\ncast(substring(date from 1 for 4) as integer) as year,\nsum(amount) / 100.0 as consumption\nFROM\ntransactions_1k\nJOIN customers ON transactions_1k.customerid = customers.customerid\nWHERE\ndate BETWEEN '201201' AND '201212' AND currency IN ('CZK', 'EUR')\nGROUP BY\n1, 2) subquery;\t----- bird -----\tdebit_card_specializing",
    "4": " SELECT EXTRACT(YEAR FROM date) as year, SUM(consumption) as total_consumption\nFROM (\n    SELECT customerid, date, amount/price as consumption\n    FROM transactions_1k\n    JOIN products ON transactions_1k.productid = products.productid\n    WHERE currency = 'CZK'\n) subquery\nJOIN yearmonth ON subquery.customerid = yearmonth.customerid AND subquery.date = yearmonth.date\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": " SELECT MAX(to_number(substring(date from 5 for 2), 'FM99')) as peak_month\nFROM yearmonth\nJOIN customers ON yearmonth.customerid = customers.customerid\nWHERE customers.segment = 'SME' AND substring(date from 1 for 4) = '2013'\nGROUP BY substring(date from 1 for 4);\t----- bird -----\tdebit_card_specializing",
    "6": " SELECT\nLAM_avg - SME_avg AS diff_SME_LAM,\nLAM_avg - KAM_avg AS diff_LAM_KAM,\nKAM_avg - SME_avg AS diff_KAM_SME\nFROM\n(SELECT AVG(consumption) AS SME_avg FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND currency = 'CZK') AS SME,\n(SELECT AVG(consumption) AS LAM_avg FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND currency = 'CZK') AS LAM,\n(SELECT AVG(consumption) AS KAM_avg FROM yearmonth WHERE date BETWEEN '201301' AND '201312' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND currency = 'CZK');\t----- bird -----\tdebit_card_specializing",
    "7": " SELECT\ns.segment,\n(t2013.total - t2012.total) / COALESCE(t2013.total, 1) * 100 AS percentage_increase\nFROM (\nSELECT segment FROM gasstations GROUP BY segment\n) s\nLEFT JOIN (\nSELECT gasstationid, SUM(amount) AS total FROM transactions_1k WHERE date >= '2013-01-01' AND date < '2014-01-01' GROUP BY gasstationid\n) t2013 ON s.segment = (\nSELECT segment FROM gasstations WHERE gasstationid = t2013.gasstationid\n)\nLEFT JOIN (\nSELECT gasstationid, SUM(amount) AS total FROM transactions_1k WHERE date >= '2012-01-01' AND date < '2013-01-01' GROUP BY gasstationid\n) t2012 ON s.segment = (\nSELECT segment FROM gasstations WHERE gasstationid = t2012.gasstationid\n)\nORDER BY percentage_increase DESC;\t----- bird -----\tdebit_card_specializing",
    "8": " SELECT SUM(consumption)\nFROM yearmonth\nWHERE customerid = 6 AND date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": " SELECT \n    COUNT(g1.gasstationid) - COUNT(g2.gasstationid) AS difference_in_discount_gas_stations\nFROM \n    gasstations g1\nJOIN \n    (\n        SELECT \n            gasstationid\n        FROM \n            gasstations\n        WHERE \n            country = 'CZE' AND segment = 'discount'\n\n        EXCEPT\n\n        SELECT \n            gasstationid\n        FROM \n            gasstations\n        WHERE \n            country = 'SVK' AND segment = 'discount'\n    ) g2\nON \n    g1.gasstationid = g2.gasstationid\nWHERE \n    g1.country = 'CZE' AND g1.segment = 'discount';\t----- bird -----\tdebit_card_specializing",
    "10": " SELECT COUNT(DISTINCT c1.customerid) AS num\\_sme\\_czk\nFROM customers c1\nJOIN transactions\\_1k t1 ON c1.customerid = t1.customerid\nWHERE c1.currency = 'CZK'\nAND t1.date BETWEEN '2020-01-01' AND '2020-12-31'\n\nEXCEPT\n\nSELECT COUNT(DISTINCT c2.customerid) AS num\\_sme\\_eur\nFROM customers c2\nJOIN transactions\\_1k t2 ON c2.customerid = t2.customerid\nWHERE c2.currency = 'EUR'\nAND t2.date BETWEEN '2020-01-01' AND '2020-12-31';\t----- bird -----\tdebit_card_specializing",
    "11": " SELECT\n    100.0 * COUNT(DISTINCT ym.customerid) FILTER (WHERE ym.consumption > 46.73) / COUNT(DISTINCT ym.customerid) AS percentage\nFROM\n    (SELECT\n        customerid, EXTRACT(YEAR FROM date) || '-' || EXTRACT(MONTH FROM date) AS date,\n            SUM(amount) AS consumption\n    FROM\n        transactions_1k\n    WHERE\n        segment = 'LAM'\n    GROUP BY 1, 2) ym;\t----- bird -----\tdebit_card_specializing",
    "12": " SELECT 100.0 * AVG(CASE WHEN consumption > 528.3 THEN 1.0 ELSE 0.0 END)\nFROM yearmonth\nWHERE date BETWEEN '201202' AND '201202'\nAND customerid IN (SELECT customerid FROM transactions_1k GROUP BY customerid HAVING COUNT(DISTINCT date) >= 1);\t----- bird -----\tdebit_card_specializing",
    "13": " SELECT customerid, MAX(consumption) as max\\_consumption\nFROM (\nSELECT customerid, \nCAST(SUBSTRING(date, 5, 2) AS INTEGER) as month,\nSUM(amount) / 100.0 as consumption\nFROM transactions_1k\nJOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid\nWHERE date LIKE '2012%'\nGROUP BY customerid, month) as subquery\nGROUP BY customerid;\t----- bird -----\tdebit_card_specializing",
    "14": " SELECT products.description\nFROM transactions_1k\nJOIN products ON transactions_1k.productid = products.productid\nJOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid\nWHERE datepart(month FROM to_date(yearmonth.date, 'YYYYMM')) = 9 AND datepart(year FROM to_date(yearmonth.date, 'YYYYMM')) = 2013;\t----- bird -----\tdebit_card_specializing",
    "15": " SELECT DISTINCT country\nFROM gasstations\nJOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid\nWHERE EXTRACT(YEAR FROM transactions_1k.date) = 2013 AND EXTRACT(MONTH FROM transactions_1k.date) = 6;\t----- bird -----\tdebit_card_specializing",
    "16": " SELECT COUNT(DISTINCT c.customerid)\nFROM customers c\nJOIN transactions\\_1k t ON c.customerid = t.customerid\nWHERE c.currency = 'EUR' AND t.amount/100 > 1000\nGROUP BY t.customerid, EXTRACT(YEAR FROM t.date), EXTRACT(MONTH FROM t.date)\nHAVING EXTRACT(YEAR FROM t.date) * 100 + EXTRACT(MONTH FROM t.date) = EXTRACT(YEAR FROM now()) * 100 + EXTRACT(MONTH FROM now());\t----- bird -----\tdebit_card_specializing",
    "17": " SELECT products.description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid\nJOIN products ON transactions_1k.productid = products.productid\nWHERE gasstations.country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": " SELECT time\nFROM transactions_1k\nWHERE gasstationid IN (\nSELECT gasstationid\nFROM gasstations\nWHERE chainid = 11);\t----- bird -----\tdebit_card_specializing",
    "19": " SELECT COUNT(*)\nFROM transactions_1k\nWHERE gasstationid IN (\n    SELECT gasstationid\n    FROM gasstations\n    WHERE country = 'CZE'\n) AND date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": " SELECT t.price as paid_amount, c.currency\nFROM transactions_1k t\nJOIN customers c ON t.customerid = c.customerid\nWHERE t.time = '16:25:00' AND t.date = '2012-08-24' ;\t----- bird -----\tdebit_card_specializing",
    "21": " SELECT segment\nFROM customers\nJOIN transactions_1k ON customers.customerid = transactions_1k.customerid\nWHERE transactions_1k.date = '2012-08-23' AND transactions_1k.time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": " SELECT COUNT(*)\nFROM transactions_1k\nWHERE date = '2012-08-26' AND time BETWEEN '08:00:00' AND '09:00:00' AND gasstationid IN (\n    SELECT gasstationid\n    FROM gasstations\n    WHERE country = 'CZE'\n);\t----- bird -----\tdebit_card_specializing",
    "23": " SELECT g.country\nFROM transactions_1k t\nJOIN customers c ON t.customerid = c.customerid\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE t.price = 548.4 AND t.date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "24": " SELECT \n100.0 * COUNT(c.customerid) FILTER (WHERE c.currency = 'EUR') / COUNT(DISTINCT c.customerid) \nFROM customers c \nJOIN transactions_1k t ON c.customerid = t.customerid \nWHERE t.date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": " SELECT \n(yearmonth_2013.consumption - coalesce(yearmonth_2012.consumption, 0)) / coalesce(yearmonth_2012.consumption, 1) as consumption_decrease_rate\nFROM \n(SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012-08-25' AND price = 634.8) AND date = '2012-08-25') as yearmonth_2012,\n(SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012-08-25' AND price = 634.8) AND date = '2013-08-25') as yearmonth_2013;\t----- bird -----\tdebit_card_specializing",
    "26": " SELECT\n\tROUND(SUM(CASE WHEN segment = 'premium' THEN consumption ELSE 0 END) * 100.0 / SUM(consumption), 2) AS percentage\nFROM (\n\tSELECT\n\t\ty.customerid,\n\t\tSUM(t.amount) FILTER (WHERE p.segment = 'premium') AS consumption\n\tFROM\n\t\ttransactions_1k t\n\tJOIN customers c ON t.customerid = c.customerid\n\tJOIN products p ON t.productid = p.productid\n\tJOIN yearmonth y ON t.customerid = y.customerid AND t.date = y.date\n\tWHERE\n\t\tc.country = 'SVK'\n\tGROUP BY\n\t\ty.customerid\n) subquery;\t----- bird -----\tdebit_card_specializing",
    "27": " SELECT SUM(amount) AS \"Total Amount Spent\"\nFROM transactions_1k\nWHERE customerid = 38508;\n\nSELECT SUM(amount) AS \"Amount Spent in January 2012\"\nFROM transactions_1k\nWHERE customerid = 38508 AND date = '201201';\t----- bird -----\tdebit_card_specializing",
    "28": " SELECT c.customerid, AVG(t.price/t.amount) AS avg\\_price, c.currency\nFROM customers c\nJOIN transactions\\_1k t ON c.customerid = t.customerid\nGROUP BY c.customerid, c.currency\nORDER BY AVG(t.price/t.amount) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": " SELECT ym.customerid, SUM(t.amount) as consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.customerid = ym.customerid\nJOIN products p ON t.productid = p.productid\nWHERE p.productid = 5 AND t.price/t.amount > 29.00 AND ym.date = '201208'\nGROUP BY ym.customerid;\t----- bird -----\tdebit_card_specializing",
    "30": " SELECT major_name\nFROM major\nJOIN member ON link_to_major = major_id\nWHERE CONCAT(first_name, ' ', last_name) = 'Angela Sanders';\t----- bird -----\tstudent_club",
    "31": " SELECT COUNT(DISTINCT m.member\\_id)\nFROM attendance a\nJOIN member m ON a.link\\_to\\_member = m.member\\_id\nJOIN event e ON a.link\\_to\\_event = e.event\\_id\nWHERE e.event\\_name = 'Women\\'s Soccer' AND m.t\\_shirt\\_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": " SELECT COUNT(\\*)\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE event.type = 'Meeting'\nGROUP BY event.event_id\nHAVING COUNT(\\*) > 10;\t----- bird -----\tstudent_club",
    "33": " SELECT DISTINCT event_name\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE type != 'Fundraiser' AND\nCOUNT(a.link_to_member) OVER (PARTITION BY a.link_to_event) > 20;\t----- bird -----\tstudent_club",
    "34": " SELECT SUM(income.amount)\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": " SELECT first_name || ' ' || last_name AS full\\_name\nFROM member\nJOIN zip\\_code ON member.zip = zip\\_code.zip\\_code\nWHERE state = 'Illinois' AND position = 'Student_Club';\t----- bird -----\tstudent_club",
    "36": " SELECT e.expense_id, e.approved\nFROM expense e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08' AND e.approved = 'True';\t----- bird -----\tstudent_club",
    "37": " SELECT AVG(cost)\nFROM expense\nJOIN member ON link_to_member = member_id\nWHERE first_name = 'Elijah' AND last_name = 'Allen' AND SUBSTRING(expense_date, 4, 2) IN (9, 10);\t----- bird -----\tstudent_club",
    "38": " SELECT\nSUM(CASE WHEN EXTRACT(YEAR FROM event_date) = 2019 THEN spent ELSE 0 END) -\nSUM(CASE WHEN EXTRACT(YEAR FROM event_date) = 2020 THEN spent ELSE 0 END)\nFROM budget\nJOIN event ON event.event_id = link_to_event\nWHERE type = 'Student_Club';\t----- bird -----\tstudent_club",
    "39": " SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": " SELECT phone\nFROM member\nWHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": " SELECT event_status\nFROM event\nJOIN expense ON event.event_id = expense.link_to_event\nWHERE expense_description = 'Post Cards, Posters' AND expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": " SELECT m.major_name\nFROM major m\nJOIN member mem ON mem.link_to_major = m.major_id\nWHERE CONCAT(mem.first_name, ' ', mem.last_name) = 'Brent Thomason';\t----- bird -----\tstudent_club",
    "43": " SELECT COUNT(*)\nFROM member\nWHERE link_to_major IN (\n    SELECT major_id\n    FROM major\n    WHERE major_name = 'Business'\n) AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": " SELECT DISTINCT department \nFROM major \nJOIN member ON link_to_major = major_id \nWHERE position = 'President';\t----- bird -----\tstudent_club",
    "45": " SELECT date_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE source = 'Dues' AND first_name = 'Connor' AND last_name = 'Hilton';\t----- bird -----\tstudent_club",
    "46": " SELECT\nCASE\nWHEN SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN amount ELSE 0 END) > SUM(CASE WHEN event_name = 'October Meeting' THEN amount ELSE 0 END) AND category = 'Advertisement' THEN 1\nELSE 0\nEND as more\\_than\\_october\nFROM budget;\t----- bird -----\tstudent_club",
    "47": " SELECT SUM(cost) as total_cost\nFROM expense\nWHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": " SELECT COUNT(DISTINCT city)\nFROM zip_code\nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": " SELECT major_name\nFROM major m\nJOIN member mem ON m.major_id = mem.link_to_major\nWHERE mem.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": " SELECT COUNT(*)\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "51": " SELECT first\\_name, last\\_name \nFROM member \nJOIN major ON member.link\\_to\\_major = major.major\\_id \nWHERE major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": " SELECT e.event\\_name, MAX(b.spent/b.amount) as spend\\_to\\_budget\\_ratio\nFROM event e\nJOIN budget b ON e.event\\_id = b.link\\_to\\_event\nWHERE e.status = 'Closed'\nGROUP BY e.event\\_name;\t----- bird -----\tstudent_club",
    "53": " SELECT MAX(b.spent)\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.status = 'approved';\t----- bird -----\tstudent_club",
    "54": " SELECT SUM(spent) as total_amount_for_food\nFROM budget\nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": " SELECT first\\_name, last\\_name\nFROM member\nJOIN attendance\nON member.member\\_id = attendance.link\\_to\\_member\nGROUP BY first\\_name, last\\_name\nHAVING COUNT(link\\_to\\_event) > 7;\t----- bird -----\tstudent_club",
    "56": " SELECT m.first\\_name, m.last\\_name\nFROM member m\nJOIN budget b ON m.member\\_id = b.link\\_to\\_member\nJOIN event e ON b.link\\_to\\_event = e.event\\_id\nWHERE e.event\\_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": " SELECT event_name, MIN(cost) as lowest_cost\nFROM expense\nJOIN event ON expense.link\\_to\\_event = event.event\\_id\nGROUP BY event\\_name;\t----- bird -----\tstudent_club",
    "58": " SELECT\nROUND(DIVIDE(SUM(cost) FILTER (WHERE event_name = 'Yearly Kickoff'), SUM(cost)) * 100, 2) AS percentage\nFROM expense;\t----- bird -----\tstudent_club",
    "59": " SELECT source as top_source_funds\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY SUM(amount) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": " SELECT COUNT(*)\nFROM member\nWHERE link_to_major IN (\nSELECT major_id FROM major WHERE major_name = 'Physics Teaching'\n);\t----- bird -----\tstudent_club",
    "61": " SELECT event_name \nFROM budget \nWHERE category = 'Advertisement' \nORDER BY spent DESC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": " SELECT COUNT(\\*)\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member\\_id\nJOIN event e ON a.link_to_event = e.event\\_id\nWHERE m.first\\_name = 'Maya' AND m.last\\_name = 'Mclean' AND e.event\\_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "63": " SELECT cost\nFROM expense\nWHERE expense_description = 'Posters' AND link_to_event = (\nSELECT event_id\nFROM event\nWHERE event_name = 'September Speaker'\n);\t----- bird -----\tstudent_club",
    "64": " SELECT event_name\nFROM event\nJOIN budget ON event.event_id = link_to_event\nWHERE status = 'Closed' AND remaining < 0\nORDER BY remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": " SELECT expense.expense_description, SUM(expense.cost) as total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'yes'\nGROUP BY expense.expense_description;\t----- bird -----\tstudent_club",
    "66": " SELECT category, SUM(amount) as amount_budgeted\nFROM budget\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker')\nGROUP BY category\nORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": " SELECT SUM(cost) as total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": " SELECT m.first\\_name || ' ' || m.last\\_name AS full\\_name, SUM(e.cost) AS total\\_cost\nFROM expense e\nJOIN member m ON e.link\\_to\\_member = m.member\\_id\nWHERE m.member\\_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member\\_id;\t----- bird -----\tstudent_club",
    "69": " SELECT expense_description\nFROM expense\nJOIN member ON link_to_member = member_id\nWHERE first_name = 'Sacha' AND last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": " SELECT DISTINCT type\nFROM event\nWHERE event_location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": " SELECT last\\_name\nFROM member\nJOIN major ON member.link\\_to\\_major = major.major\\_id\nWHERE major\\_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": " SELECT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nJOIN zip_code z ON e.location = z.zip_code\nWHERE z.city = 'MU' AND z.type = '215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": " SELECT ROUND(DIVIDE(COUNT(CASE WHEN t_shirt_size = 'Medium' AND position = 'Member' AND amount = 50 THEN 1 END), COUNT(member_id)) * 100, 2) AS percentage\nFROM member\nJOIN income ON member.member_id = income.link_to_member;\n```\t----- bird -----\tstudent_club",
    "74": " SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": " SELECT first\\_name, last\\_name, phone\nFROM member\nJOIN expense ON member.member\\_id = expense.link\\_to\\_member\nWHERE cost > (\nSELECT AVG(cost)\nFROM expense\n);\t----- bird -----\tstudent_club",
    "76": " SELECT m.first\\_name || ' ' || m.last\\_name AS full\\_name, e.expense\\_description, e.cost\nFROM expense e\nJOIN member m ON e.link\\_to\\_member = m.member\\_id\nWHERE e.expense\\_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": " SELECT \nm.first\\_name, m.last\\_name, i.amount \nFROM \nincome i \nJOIN member m ON i.link\\_to\\_member = m.member\\_id \nWHERE \ni.date\\_received = '9/9/2019'::date;\t----- bird -----\tstudent_club",
    "78": " SELECT \n  CASE \n    WHEN COUNT(CASE WHEN s.sex = 'M' AND e.admission = '+' THEN 1 END) > COUNT(CASE WHEN s.sex = 'M' AND e.admission = '-' THEN 1 END) THEN 'in-patient'\n    ELSE 'outpatient'\n  END AS more,\n  ABS(\n    ROUND(\n      100.0 * \n      (COUNT(CASE WHEN s.sex = 'M' AND e.admission = '+' THEN 1 END) - COUNT(CASE WHEN s.sex = 'M' AND e.admission = '-' THEN 1 END)) /\n      COUNT(CASE WHEN s.sex = 'M' THEN 1 END),\n    2\n    )\n  ) AS deviation_percentage\nFROM\n  patient s\n  JOIN examination e ON s.id = e.patient_id;\t----- bird -----\tthrombosis_prediction",
    "79": " SELECT\nROUND(DIVIDE(COUNT(p.ID) FILTER (WHERE EXTRACT(YEAR FROM p.Birthday) > 1930 AND p.Sex = 'F'), COUNT(p.ID) FILTER (WHERE p.Sex = 'F')) * 100, 2) AS percentage\nFROM\nPatient p;\n```\n\n```\t----- bird -----\tthrombosis_prediction",
    "80": " SELECT\nDIVIDE(\nCOUNT(ID) FILTER (WHERE Diagnosis = 'SLE' AND Admission = '-'),\nCOUNT(ID) FILTER (WHERE Diagnosis = 'SLE' AND Admission = '+'))\nAS \"Ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient\"\nFROM Examination;\t----- bird -----\tthrombosis_prediction",
    "81": " SELECT Diagnosis as Disease, TestDate\nFROM Laboratory\nJOIN Examination ON Laboratory.ExaminationID = Examination.ExaminationID\nJOIN Patient ON Examination.PatientID = Patient.PatientID\nWHERE Patient.PatientID = '30609';\t----- bird -----\tthrombosis_prediction",
    "82": " SELECT Patient.patient\\_id, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.patient\\_id = Examination.patient\\_id\nJOIN Laboratory ON Examination.examination\\_id = Laboratory.examination\\_id\nWHERE Laboratory.ldh > 500;\t----- bird -----\tthrombosis_prediction",
    "83": " SELECT Patient.ID, EXTRACT(YEAR FROM AGE(CURRENT_TIMESTAMP, Patient.Birthday)) as age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.PatientID\nWHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": " SELECT Patient.ID, Patient.sex, Examination.disease\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient\\_ID\nWHERE Examination.thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": " SELECT COUNT(\\*)\nFROM Patient\nWHERE Sex = 'F' AND Description = '1997' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": " SELECT COUNT(\\*)\nFROM Patient P\nJOIN Examination E ON P.patient\\_id = E.patient\\_id\nWHERE E.thrombosis = '1' AND P.sex = 'F' AND E.exam\\_year = 1997;\t----- bird -----\tthrombosis_prediction",
    "87": " SELECT symptoms_observed, diagnosis\nFROM (\n    SELECT symptoms_observed, diagnosis,\n    ROW_NUMBER() OVER (ORDER BY birthday DESC) as rn\n    FROM Patient p\n    JOIN Examination e ON p.patient\\_id = e.patient\\_id\n    JOIN Laboratory l ON e.examination\\_id = l.examination\\_id\n    WHERE symptoms_observed IS NOT NULL\n) sub\nWHERE rn = 1;\t----- bird -----\tthrombosis_prediction",
    "88": " SELECT MAX(l.\"First Date\"), p.Birthday FROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE p.Diagnosis = 'SJS'\nGROUP BY p.PatientID\nORDER BY MAX(l.\"First Date\") DESC, p.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": " SELECT DIVIDE(SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END), SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END)) AS ratio\nFROM (\n    SELECT P.SEX, L.UA\n    FROM Patient P\n    JOIN Examination E ON P.ID = E.PATIENT\\_ID\n    JOIN Laboratory L ON E.ID = L.EXAMINATION\\_ID\n) subquery\nWHERE UA <= 8.0 AND SEX = 'M' OR UA <= 6.5 AND SEX = 'F'\n```\n\n```\t----- bird -----\tthrombosis_prediction",
    "90": " SELECT COUNT(\\*)\nFROM Patient p\nJOIN Examination e ON p.Patient\\_ID = e.Patient\\_ID\nWHERE EXTRACT(YEAR FROM p.Birthday) < 18 AND EXTRACT(YEAR FROM e.Examination\\_Date) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "91": " SELECT SUBSTR(to_char(AGE(e.examination_date, p.birthday)), 1, 2) AS age, d.diagnosis\nFROM Examination e\nJOIN Patient p ON e.patient_id = p.patient_id\nJOIN Doctor d ON e.doctor_id = d.doctor_id\nJOIN (\nSELECT patient\\_id, MAX(hgb) AS max\\_hgb\nFROM Examination\nWHERE hgb IS NOT NULL\nGROUP BY patient\\_id\n) em ON e.patient\\_id = em.patient\\_id AND e.hgb = em.max\\_hgb\nORDER BY age DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": " SELECT p.PatientID\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE p.Diagnosis = 'SLE' AND e.Examination Date = '1993-11-12' AND l.aCL IgM = 'anti-Cardiolipin';\t----- bird -----\tthrombosis_prediction",
    "93": " SELECT\nEXTRACT(YEAR FROM Date) AS Year,\nEXTRACT(MONTH FROM Date) AS Month,\nAVG(CASE WHEN Birthday = '1959-02-18' AND EXTRACT(MONTH FROM Date) = 11 THEN T_CHO ELSE NULL END) -\nAVG(CASE WHEN Birthday = '1959-02-18' AND EXTRACT(MONTH FROM Date) = 12 THEN T_CHO ELSE NULL END) AS DecreaseRate\nFROM Examination\nWHERE Date BETWEEN '1981-11-01' AND '1981-12-31'\nGROUP BY Year, Month\nHAVING Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": " SELECT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.PatientID\nJOIN Laboratory l ON e.ID = l.ExaminationID\nWHERE e.ExamDate BETWEEN '1987-07-06' AND '1996-01-31' AND l.GPT > 30 AND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.patient\\_id = e.patient\\_id\nJOIN Laboratory l ON e.examination\\_id = l.examination\\_id\nWHERE thrombosis = 2\nAND ANA = 'S'\nAND AVG(`aCL IgM`) < l.aCL\\_IgM AND l.aCL\\_IgM < MULTIPLY(AVG(`aCL IgM`), 1.2);\t----- bird -----\tthrombosis_prediction",
    "96": " SELECT DISTINCT p.*\nFROM Patient p\nJOIN Examination e ON p.patient\\_id = e.patient\\_id\nJOIN Laboratory l ON e.examination\\_id = l.examination\\_id\nWHERE e.follow\\_up = '-'\nAND l.date LIKE '1991-10%'\nAND l.t\\_bil < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": " SELECT AVG(ALB) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.PatientID \nJOIN Laboratory ON Examination.ID = Laboratory.ExaminationID \nWHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": " SELECT COUNT(\\*)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient\\_ID\nWHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": " SELECT ROUND(100 * SUM(CASE WHEN YEAR(BIRTHDAY) = 1980 AND DIAGNOSIS = 'RA' AND SEX = 'F' THEN 1 ELSE 0 END) / COUNT(\\*), 2) AS percentage\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "100": " SELECT \n CASE \n WHEN p.patient\\_number = 57266 \n AND (e.result_value > 8.0 AND p.sex = 'M' OR e.result_value > 6.5 AND p.sex = 'F') \n THEN 'Within normal range' \n ELSE 'Not within normal range' \n END as uric\\_acid\\_result\nFROM Patient p\nJOIN Examination e ON p.patient\\_id = e.patient\\_id\nWHERE p.patient\\_number = 57266 AND e.test\\_name = 'Uric Acid';\t----- bird -----\tthrombosis_prediction",
    "101": " SELECT p.PATIENT_ID\nFROM Patient p\nJOIN Examination e ON p.PATIENT_ID = e.PATIENT_ID\nWHERE p.SEX = 'M' AND e.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": " SELECT Patient.patient\\_id, Patient.name, Examination.examination\\_date, Laboratory.ALT\nFROM Patient\nJOIN Examination ON Patient.patient\\_id = Examination.patient\\_id\nJOIN Laboratory ON Examination.examination\\_id = Laboratory.examination\\_id\nWHERE Laboratory.ALT > 60\nORDER BY Patient.birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": " SELECT Patient.ID, Patient.sex, Patient.birthday\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.patient\\_id\nWHERE Examination.urea\\_nitrogen = 29;\t----- bird -----\tthrombosis_prediction",
    "104": " SELECT p.sex,\nLISTAGG(DISTINCT e.patient_id, ',') WITHIN GROUP (ORDER BY e.patient_id) AS patients\nFROM Patient p\nJOIN Examination e ON p.id = e.patient_id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE l.t_bil > = 2.0\nGROUP BY p.sex;\t----- bird -----\tthrombosis_prediction",
    "105": " SELECT AVG(age) AS avg_age\nFROM (\n    SELECT DATE_PART('year', NOW() - birthday) - EXTRACT(YEAR FROM birthday) AS age\n    FROM Patient\n    WHERE sex = 'M' AND T_CHO >= 250\n) AS subquery;\t----- bird -----\tthrombosis_prediction",
    "106": " SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE e.TG >= 200 AND SUBTRACT(EXTRACT(YEAR FROM CURRENT_TIMESTAMP) FROM EXTRACT(YEAR FROM p.Birthday)) > 50;\n```\n\nThis query will join the `Patient` and `Examination` tables on the `PatientID` column, and then filter the results to only include patients whose triglyceride (TG) level is beyond the normal range (TG >= 200) and who are more than 50 years old. The `COUNT(DISTINCT p.PatientID)` function is used to count the number of unique patients that meet these criteria.\n```\t----- bird -----\tthrombosis_prediction",
    "107": " SELECT COUNT(DISTINCT p.patient\\_id)\nFROM Patient p\nJOIN Examination e ON p.patient\\_id = e.patient\\_id\nWHERE p.birthday BETWEEN '1936' AND '1956'\nAND p.sex = 'M'\nAND e.cpk >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": " SELECT Patient.ID, Patient.sex, EXTRACT(YEAR FROM CURRENT_Timestamp()) - EXTRACT(YEAR FROM Patient.Birthday) as age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.Patient\\_ID\nWHERE Examination.GLU >= 180 AND Examination.T\\_CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "109": " SELECT p.PatientID, p.age, e.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE e.RBC < 3.5;\n```\n\nThe SQL query above will return the patient's ID, age, and diagnosis for those who have lower red blood cell count (RBC < 3.5). The `Patient` table is joined with the `Examination` table using the `PatientID` as the common key. The `WHERE` clause filters the records where the RBC value is less than 3.5. The `age` is calculated by subtracting the birth year from the current year.\n```\t----- bird -----\tthrombosis_prediction",
    "110": " SELECT ID, Sex\nFROM Patient p\nJOIN Examination e ON p.ID = e.Patient\\_ID\nWHERE Diagnosis = 'SLE' AND HGB > 9 AND HGB < 18\nORDER BY Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": " SELECT p.ID, EXTRACT(YEAR FROM AGE(p.Birthday)) as age\nFROM Patient p\nJOIN Examination e ON p.ID = e.PatientID\nJOIN Laboratory l ON e.ID = l.ExaminationID\nWHERE COUNT(l.ID) > 2 AND l.HCT >= 52\nGROUP BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "112": " SELECT\nCOUNT(*) AS num\\_patients\nFROM (\nSELECT\nPatient.PatientID\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE Laboratory.PLT < 100\n) AS subquery\nWHERE num\\_patients > (\nSELECT\nCOUNT(*)\nFROM (\nSELECT\nPatient.PatientID\nFROM Patient\nJOIN Examination ON Patient.PatientID = Examination.PatientID\nJOIN Laboratory ON Examination.ExaminationID = Laboratory.ExaminationID\nWHERE Laboratory.PLT > 400\n) AS subquery\n);\t----- bird -----\tthrombosis_prediction",
    "113": " SELECT p.*\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE YEAR(l.Date) = 1984 AND SUBTRACT(EXTRACT(YEAR FROM current_timestamp), EXTRACT(YEAR FROM p.Birthday)) < 50 AND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": " SELECT ROUND(DIVIDE(SUM(CASE WHEN sex = 'F' AND PT >= 14 THEN 1 ELSE 0 END),\nSUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END)) * 100, 2) AS percentage\nFROM Patient p\nJOIN Examination e ON p.patient\\_id = e.patient\\_id\nJOIN Laboratory l ON e.examination\\_id = l.examination\\_id\nWHERE EXTRACT(YEAR FROM AGE(p.birthday)) > 55;\n```\n```\t----- bird -----\tthrombosis_prediction",
    "115": " SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE p.Sex = 'M' AND e.WBC BETWEEN 3.5 AND 9.0 AND (l.FG < 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": " SELECT DISTINCT p.patient\\_id\nFROM Patient p\nJOIN Examination e ON p.patient\\_id = e.patient\\_id\nJOIN Laboratory l ON e.examination\\_id = l.examination\\_id\nWHERE l.igg >= 2000;\n```\n\nThis query will return the distinct patient IDs of patients who have an Ig G level higher than or equal to 2000.\n```\t----- bird -----\tthrombosis_prediction",
    "117": " SELECT COUNT(\\*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.IGG BETWEEN 900 AND 2000 AND l.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": " SELECT COUNT(\\*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.PatientID\nWHERE IGA > 80 AND IGA < 500 AND YEAR(First Date) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": " SELECT Diagnosis\nFROM (\n    SELECT Diagnosis, COUNT(*) as count_diagnosis, IGM\n    FROM Laboratory\n    JOIN Examination ON Laboratory.ExaminationID = Examination.ExaminationID\n    WHERE IGM <= 40 OR IGM >= 400\n    GROUP BY Diagnosis, IGM\n) as subquery\nWHERE count_diagnosis = (\n    SELECT MAX(count_diagnosis)\n    FROM (\n        SELECT Diagnosis, COUNT(*) as count_diagnosis, IGM\n        FROM Laboratory\n        JOIN Examination ON Laboratory.ExaminationID = Examination.ExaminationID\n        WHERE IGM <= 40 OR IGM >= 400\n        GROUP BY Diagnosis, IGM\n    ) as subquery2\n);\t----- bird -----\tthrombosis_prediction",
    "120": " SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.CRP = '+'' AND l.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": " SELECT COUNT(\\*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE e.CreatinineLevel >= 1.5 AND EXTRACT(YEAR FROM AGE(p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": " SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE e.RNP IN ('-', '+-') AND e.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": " SELECT COUNT(\\*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE e.anti_SM IN ('-', '+-') AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": " SELECT COUNT(DISTINCT p.PatientId)\nFROM Patient p\nJOIN Examination e ON p.PatientId = e.PatientId\nWHERE e.anti_scl70 IN ('negative', '0') AND p.Sex = 'F' AND p.symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": " SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE e.AntiCentromere IN ('-', '+-')\nAND e.AntiSSB IN ('-', '+-')\nAND p.Sex = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": " SELECT MIN(birthday)\nFROM Patient\nWHERE patient\\_id IN (\nSELECT patient\\_id\nFROM Examination\nWHERE GOT >= 60);\t----- bird -----\tthrombosis_prediction",
    "127": " SELECT COUNT(\\*)\nFROM Patient p\nJOIN Examination e ON p.patient\\_id = e.patient\\_id\nJOIN Laboratory l ON e.examination\\_id = l.examination\\_id\nWHERE l.cpk < 250 AND (l.kct = '+' OR l.rvvt = '+' OR l.lac = '+');\t----- bird -----\tthrombosis_prediction",
    "128": " SELECT l.league\\_name\nFROM League l\nJOIN Match m ON l.league\\_id = m.league\\_id\nJOIN Team ht ON m.home\\_team\\_id = ht.team\\_id\nJOIN Team at ON m.away\\_team\\_id = at.team\\_id\nWHERE m.season = '2015/2016'\nGROUP BY l.league\\_name\nORDER BY SUM(ht.goals + at.goals) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": " SELECT Team.team\\_long\\_name\nFROM Team\nJOIN Match ON Team.team\\_api\\_id = Match.away\\_team\\_api\\_id\nJOIN League ON Match.league\\_api\\_id = League.league\\_api\\_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010'\nGROUP BY Team.team\\_long\\_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": " SELECT Team.name, Player_Attributes.buildUpPlaySpeed\nFROM Team\nJOIN Player_Attributes ON Team.id = Player_Attributes.teamId\nJOIN Team_Attributes ON Team.id = Team_Attributes.teamId\nWHERE Team_Attributes.overallRating >= (\nSELECT overallRating\nFROM Team_Attributes\nORDER BY overallRating DESC\nLIMIT 3 OFFSET 1)\nORDER BY Player_Attributes.buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": " SELECT l.league_name\nFROM League l\nJOIN Match m ON l.league_id = m.league_id\nWHERE m.season = '2015/2016' AND MAX(m.home_team_goal = m.away_team_goal) = (\n    SELECT MAX(SUM(m2.home_team_goal = m2.away_team_goal))\n    FROM Match m2\n    WHERE m2.season = '2015/2016'\n)\nGROUP BY l.league_name\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": " SELECT EXTRACT(YEAR FROM AGE(CURRENT_DATE, player.birthday)) AS age\nFROM Player\nJOIN Player\\_Attributes\nON Player.id = Player\\_Attributes.player\\_id\nWHERE Player\\_Attributes.sprint\\_speed >= 97 AND EXTRACT(YEAR FROM Player.birthday) BETWEEN 1996 AND 2003;\n```\n\n```\t----- bird -----\teuropean_football_2",
    "133": " SELECT l.league\\_name, COUNT(m.match\\_id) as total\\_matches\nFROM League l\nJOIN Match m ON l.league\\_id = m.league\\_id\nGROUP BY l.league\\_id\nORDER BY total\\_matches DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": " SELECT team\\_fifa\\_api\\_id \nFROM Team\\_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": " SELECT team_long_name \nFROM Team_Attributes \nWHERE buildUpPlayPassing > (SELECT DIVIDE(SUM(buildUpPlayPassing), COUNT(team_long_name)) FROM Team_Attributes WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL);\t----- bird -----\teuropean_football_2",
    "136": " SELECT \nDIVIDE(MULTIPLY(SUM(CASE WHEN preferred\\_foot = 'left' AND YEAR(birthday) BETWEEN 1987 AND 1992 THEN 1 ELSE 0 END), 100), COUNT(player\\_fifa\\_api\\_id)) \nFROM Player;\n```\t----- bird -----\teuropean_football_2",
    "137": " SELECT AVG(long_shots) AS average\\_long\\_shots\nFROM Player\\_Attributes\nWHERE player\\_fifa\\_api\\_id = (\nSELECT player\\_fifa\\_api\\_id\nFROM Player\nWHERE name = 'Ahmed Samir Farag'\n);\t----- bird -----\teuropean_football_2",
    "138": " SELECT\nP.name,\nAVG(PA.heading_accuracy) as avg_heading_accuracy\nFROM\nPlayer P\nJOIN\nPlayer_Attributes PA ON P.player_fifa_api_id = PA.player_fifa_api_id\nWHERE\nP.height > 180\nGROUP BY\nP.name\nORDER BY\navg_heading_accuracy DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": " SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": " SELECT * FROM Player\nWHERE substr(birthday,1,7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": " SELECT overall_rating\nFROM Player_Attributes\nWHERE player_name = 'Gabriel Tamas' AND strftime('%Y', year) = '2011';\t----- bird -----\teuropean_football_2",
    "142": " SELECT AVG(home\\_team\\_goal)\nFROM Match\nWHERE team1country = 'Poland' AND season = '2010/2011' AND team1isHome = 'true';\t----- bird -----\teuropean_football_2",
    "143": " SELECT MAX(AVG(finishing)) AS highest\\_average\\_finishing\\_rate\nFROM Player\\_Attributes\nWHERE height = (SELECT MIN(height) FROM Player WHERE height IS NOT NULL)\nOR height = (SELECT MAX(height) FROM Player WHERE height IS NOT NULL);\t----- bird -----\teuropean_football_2",
    "144": " SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player\\_id = p.id\nWHERE strftime('%Y', pa.date) >= '2010' AND strftime('%Y', pa.date) <= '2015' AND p.height > 170;\t----- bird -----\teuropean_football_2",
    "145": " SELECT \nAVG(ball_control) FILTER (WHERE player\\_name = 'Abdou Diallo') - \nAVG(ball_control) FILTER (WHERE player\\_name = 'Aaron Appindangoye') \nFROM Player\\_Attributes;\t----- bird -----\teuropean_football_2",
    "146": " SELECT \n CASE \n WHEN (SELECT EXTRACT(EPOCH FROM AGE(TO_DATE(birthday, 'YYYY-MM-DD') )) FROM Player WHERE name = 'Aaron Lennon') > \n (SELECT EXTRACT(EPOCH FROM AGE(TO_DATE(birthday, 'YYYY-MM-DD') )) FROM Player WHERE name = 'Abdelaziz Barrada') \n THEN 'Abdelaziz Barrada'\n ELSE 'Aaron Lennon'\n END\nFROM Player;\n```\t----- bird -----\teuropean_football_2",
    "147": " SELECT MAX(height) as tallest_player\nFROM Player_Attributes;\n```\n\nNote: The above query will return the height of the tallest player. If you want to return the player information, you can use the following query:\n\nSELECT p.name as tallest\\_player, pa.height\nFROM Player p\nJOIN Player\\_Attributes pa ON p.id = pa.player\\_id\nWHERE pa.height = (SELECT MAX(height) FROM Player\\_Attributes);\n```\t----- bird -----\teuropean_football_2",
    "148": " SELECT COUNT(\\*)\nFROM Player\nJOIN Player\\_Attributes ON Player.id = Player\\_Attributes.player\\_id\nWHERE preferred\\_foot = 'left' AND attacking\\_work\\_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": " SELECT COUNT(DISTINCT p.player_id)\nFROM Player p\nJOIN Player_Attributes pa ON p.player_id = pa.player_id\nWHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": " SELECT Player.name \nFROM Player \nJOIN Player\\_Attributes ON Player.id = Player\\_Attributes.player\\_id \nWHERE Player\\_Attributes.volley\\_score > 70 AND Player\\_Attributes.dribbling\\_score > 70;\t----- bird -----\teuropean_football_2",
    "151": " SELECT COUNT(\\*) \nFROM Match \nWHERE League.name = 'Belgium Jupiler League' \nAND SUBSTR(Match.date, 1, 7) = 'April, 2009';\t----- bird -----\teuropean_football_2",
    "152": " SELECT MAX(league\\_name)\nFROM League\nWHERE league\\_name IN (\nSELECT league\\_name\nFROM Match\nWHERE season = '2008/2009'\nGROUP BY league\\_name);\t----- bird -----\teuropean_football_2",
    "153": " SELECT\nROUND(100 * (\n(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') -\n(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')\n) /\n(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel'), 2)\nAS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": " SELECT AVG(PA.overall_rating)\nFROM Player P\nJOIN Player_Attributes PA ON P.player\\_id = PA.player\\_id\nWHERE P.player\\_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": " SELECT MAX(pa.chanceCreationPassing) as max\\_chance\\_creation,\nta.classification as chanceCreationPassingClass\nFROM Team t\nJOIN Team\\_Attributes ta ON t.id = ta.team\\_id\nJOIN Player p ON t.id = p.team\\_id\nJOIN Player\\_Attributes pa ON p.id = pa.player\\_id\nWHERE t.team\\_long\\_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": " SELECT p.name\nFROM Player p\nJOIN Player\\_Attributes pa ON p.id = pa.player\\_id\nWHERE pa.overall\\_rating = 77 AND p.birthday := (\nSELECT MAX(p2.birthday)\nFROM Player p2\nJOIN Player\\_Attributes pa2 ON p2.id = pa2.player\\_id\nWHERE pa2.overall\\_rating = 77\n)\nAND p.date\\_joined LIKE '2016-06-23%';\t----- bird -----\teuropean_football_2",
    "157": " SELECT overall_rating\nFROM Player_Attributes\nWHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": " SELECT pa.work\\_rate_attacking\nFROM Player\\_Attributes pa\nJOIN Player p ON pa.player\\_id = p.player\\_id\nWHERE p.player\\_name = 'Francesco Migliore' AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": " SELECT match\\_date\nFROM Match\nJOIN Player ON Match.player\\_id = Player.player\\_id\nJOIN Player\\_Attributes ON Player.player\\_id = Player\\_Attributes.player\\_id\nWHERE player\\_name = 'Kevin Constant' AND crossing = (\nSELECT MAX(crossing)\nFROM Player\\_Attributes\nWHERE player\\_name = 'Kevin Constant'\n);\t----- bird -----\teuropean_football_2",
    "160": " SELECT t.team\\_short\\_name, pa.passing\\_class\nFROM Team t\nJOIN Match m ON t.team\\_id = m.home\\_team\\_id\nJOIN Player p ON p.team\\_id = t.team\\_id\nJOIN Player\\_Attributes pa ON p.player\\_id = pa.player\\_id\nWHERE t.team\\_long\\_name = 'FC Lorient' AND m.match\\_date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": " SELECT team\\_attributes.defence\\_aggression\\_class\nFROM Team\nJOIN Team\\_Attributes ON Team.team\\_id = Team\\_Attributes.team\\_id\nWHERE Team.team\\_long\\_name = 'Hannover 96' AND Team\\_Attributes.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": " SELECT AVG(overall_rating)\nFROM Player_Attributes\nWHERE player_name = 'Marko Arnautovic' AND\nSUBSTRING(date FROM 1 FOR 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": " SELECT\nROUND(DIVIDE(SUBTRACT(player\\_attributes.overall\\_rating, \n(SELECT overall\\_rating FROM Player\\_Attributes \nWHERE player\\_name = 'Jordan Bowery' AND match\\_id = '2013/7/12')), \n(SELECT overall\\_rating FROM Player\\_Attributes \nWHERE player\\_name = 'Landon Donovan' AND match\\_id = '2013/7/12'))*100, 2) \nAS percentage\nFROM\nPlayer\\_Attributes\nWHERE\nplayer\\_name = 'Landon Donovan' AND match\\_id = '2013/7/12';\t----- bird -----\teuropean_football_2",
    "164": " SELECT Player.name \nFROM Player \nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id \nWHERE Player_Attributes.height = (SELECT MAX(height) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "165": " SELECT player_name \nFROM Player p \nJOIN Player_Attributes pa ON p.player\\_id = pa.player\\_id \nWHERE pa.overall_rating = (SELECT MAX(pa2.overall_rating) FROM Player_Attributes pa2);\t----- bird -----\teuropean_football_2",
    "166": " SELECT Player.name\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id\nWHERE Player_Attributes.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": " SELECT team_short_name \nFROM Team \nJOIN Player_Attributes ON Team.team_id = Player_Attributes.team_id \nWHERE chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": " SELECT COUNT(\\*)\nFROM Player\nJOIN Player\\_Attributes ON Player.player\\_id = Player\\_Attributes.player\\_id\nWHERE player\\_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": " SELECT\n(SELECT jumping FROM Player_Attributes WHERE player\\_id = 6) -\n(SELECT jumping FROM Player_Attributes WHERE player\\_id = 23)\nas difference;\t----- bird -----\teuropean_football_2",
    "170": " SELECT Player.player\\_id\nFROM Player\nJOIN Player\\_Attributes ON Player.player\\_id = Player\\_Attributes.player\\_id\nWHERE Player\\_Attributes.potential = (SELECT MIN(potential) FROM Player\\_Attributes) AND Player\\_Attributes.preferred\\_foot = 'right'\nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "171": " SELECT COUNT(\\*)\nFROM Player p\nJOIN Player\\_Attributes pa ON p.id = pa.player\\_id\nWHERE pa.crossing = (SELECT MAX(crossing) FROM Player\\_Attributes) AND pa.preferred\\_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": " SELECT home\\_team\\_goal, away\\_team\\_goal\nFROM Match\nWHERE match\\_date = '2008-09-24' AND league\\_id = (SELECT league\\_id FROM League WHERE name = 'Belgium Jupiler League')\nORDER BY match\\_id DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "173": " SELECT team\\_long\\_name, speed\\_class\nFROM Team\nJOIN Team\\_Attributes ON Team.team\\_id = Team\\_Attributes.team\\_id\nWHERE team\\_long\\_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": " SELECT finishing\\_rate, curve\\_score\nFROM Player\\_Attributes\nWHERE weight = (SELECT MAX(weight) FROM Player\\_Attributes);\n```\n\n```\t----- bird -----\teuropean_football_2",
    "175": " SELECT league.name\nFROM League, Match\nWHERE League.id = Match.league\\_id AND Match.season = '2015/2016'\nGROUP BY league.name\nORDER BY COUNT(Match.id) DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": " SELECT team_long_name \nFROM Team \nJOIN Match ON Team.team_api_id = Match.away_team_api_id\nJOIN (\nSELECT away_team_api_id, MAX(away_team_goal) as max_goal\nFROM Match\nGROUP BY away_team_api_id\n) as max_goal_team\nON Match.away_team_api_id = max_goal_team.away_team_api_id AND Match.away_team_goal = max_goal_team.max_goal;\t----- bird -----\teuropean_football_2",
    "177": " SELECT Player.name \nFROM Player \nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id \nWHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "178": " SELECT ROUND(DIVIDE(COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END), COUNT(id)) * 100, 2) AS percentage\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_id;\n```\n```\t----- bird -----\teuropean_football_2",
    "179": " SELECT drivers.driverref\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nWHERE qualifying.raceid = 20 AND qualifying.q1 IN (\n    SELECT q1\n    FROM qualifying\n    WHERE raceid = 20\n    GROUP BY q1\n    ORDER BY MAX(q1)\n    LIMIT 5\n) ;\t----- bird -----\tformula_1",
    "180": " SELECT surname\nFROM drivers\nWHERE driverid = (\n    SELECT driverid\n    FROM qualifying\n    WHERE raceid = 19 AND q2 IS NOT NULL\n    GROUP BY driverid\n    ORDER BY MIN(q2)\n    LIMIT 1\n) ;\t----- bird -----\tformula_1",
    "181": " SELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitid = c.circuitid\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": " SELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverid = drivers.driverid \nWHERE qualifying.raceid = 354 \nAND CONCAT(drivers.forename, ' ', drivers.surname) = 'Bruno Senna';\t----- bird -----\tformula_1",
    "185": " SELECT number\nFROM qualifying\nJOIN results ON qualifying.driverid = results.driverid AND qualifying.raceid = results.raceid\nWHERE raceid = 903 AND q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "186": " SELECT COUNT(\\*)\nFROM results\nWHERE raceid = (SELECT raceid FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2\t----- bird -----\tformula_1",
    "187": " SELECT drivers.driverid, drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nWHERE results.raceid = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": " SELECT url\nFROM drivers\nJOIN lapTimes ON drivers.driverid = lapTimes.driverid\nWHERE lapTimes.time LIKE '0:01:27%' AND raceid = 161;\t----- bird -----\tformula_1",
    "189": " SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitid = races.circuitid\nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": " SELECT url\nFROM constructors\nWHERE constructorid = (\nSELECT constructorid\nFROM constructorResults\nWHERE raceid = 9\nAND points = (\nSELECT MAX(points)\nFROM constructorResults\nWHERE raceid = 9\n)\n) ;\t----- bird -----\tformula_1",
    "191": " SELECT code\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nWHERE q3 LIKE '0:01:33%' AND qualifying.raceid = 45;\t----- bird -----\tformula_1",
    "192": " SELECT url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceid = 901;\t----- bird -----\tformula_1",
    "193": " SELECT drivers.driverid, drivers.forename, drivers.surname, MAX(drivers.dob) as MaxDOB\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.raceid = 872 AND results.time IS NOT NULL\nGROUP BY drivers.driverid, drivers.forename, drivers.surname\nORDER BY MaxDOB;\t----- bird -----\tformula_1",
    "194": " SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN (\n    SELECT raceid, MAX(fastestlapspeed) as max_fastestlapspeed\n    FROM results\n    GROUP BY raceid\n) as fastest_laps\nON results.raceid = fastest_laps.raceid AND results.fastestlapspeed = fastest_laps.max_fastestlapspeed\nWHERE results.fastestlap = 1;\t----- bird -----\tformula_1",
    "195": " SELECT\nROUND(100.0 * (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 8\t----- bird -----\tformula_1",
    "196": " SELECT \ndriverid, \nCOUNT(time) FILTER (WHERE time IS NOT NULL) AS races_completed, \nCOUNT(DISTINCT raceid) AS total_races,\nCOUNT(DISTINCT raceid) FILTER (WHERE time IS NOT NULL) / COUNT(DISTINCT raceid) AS completion_rate\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.date = '1983-07-16'\nGROUP BY driverid;\t----- bird -----\tformula_1",
    "197": " SELECT races.name\nFROM races\nJOIN seasons ON races.year = seasons.year\nWHERE seasons.year = (SELECT MIN(year) FROM seasons)\nAND EXTRACT(MONTH FROM races.date) = (SELECT EXTRACT(MONTH FROM MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "198": " SELECT\ndrivers.forename,\ndrivers.surname,\nMAX(results.points)\nFROM\nresults\nJOIN drivers ON results.driverid = drivers.driverid;\t----- bird -----\tformula_1",
    "199": " SELECT min(results.milliseconds) as BestLapTime, drivers.forename || ' ' || drivers.surname as Driver, races.name as Race\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nGROUP BY Driver, Race;\t----- bird -----\tformula_1",
    "200": " SELECT AVG(laps.milliseconds)\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN lapTimes ON results.resultid = lapTimes.resultid\nWHERE drivers.forename = 'Lewis'\nAND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix'\nAND races.year = 2\t----- bird -----\tformula_1",
    "201": " SELECT\n100.0 * COUNT(r.raceid) FILTER (WHERE d.surname = 'Hamilton' AND r.position > 1) /\nCOUNT(r.raceid) FILTER (WHERE d.surname = 'Hamilton') AS percentage\nFROM\nraces r\nJOIN results res ON r.raceid = res.raceid\nJOIN drivers d ON res.driverid = d.driverid\nWHERE\nr.year >= 2010 AND d.surname = 'Hamilton' AND res.position > 1;\t----- bird -----\tformula_1",
    "202": " SELECT\ndrivers.forename || ' ' || drivers.surname AS full\\_name,\ndrivers.nationality,\nMAX(results.points) AS max\\_points\nFROM\nresults\nJOIN\ndrivers ON results.driverid = drivers.driverid\nGROUP BY\ndrivers.driverid\nORDER BY\nmax\\_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "203": " SELECT d.driverid, d.forename, d.surname, YEAR(CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM d.dob) AS age\nFROM drivers d\nWHERE d.nationality = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": " SELECT\nr.name,\nc.name AS circuit\\_name,\nc.location\nFROM\nraces r\nJOIN circuits c ON r.circuitid = c.circuitid\nWHERE\nEXTRACT(MONTH FROM r.date) = 9 AND\nEXTRACT(YEAR FROM r.date) = 2005;\t----- bird -----\tformula_1",
    "205": " SELECT r.name, r.date, d.forename, d.surname, r.round\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nJOIN races race ON r.raceid = race.raceid\nWHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND r.position < 20;\n```\t----- bird -----\tformula_1",
    "206": " SELECT r.name, r.year\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nAND r.fastestlap = (\nSELECT MIN(milliseconds)\nFROM results\nWHERE driverid = r.driverid\n)\n;\t----- bird -----\tformula_1",
    "207": " SELECT r.name, r.points\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nJOIN seasons s ON r.raceid = s.year\nWHERE d.driverref = 'Lewis Hamilton'\nAND s.year = (SELECT MIN(year) FROM seasons);\t----- bird -----\tformula_1",
    "208": " SELECT \n100.0 * COUNT(races.raceid) FILTER (WHERE races.country = 'Germany' AND races.name = 'European Grand Prix') / COUNT(races.raceid) \nFROM races \nWHERE races.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": " SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": " SELECT circuitref as reference\\_name\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": " SELECT nationality\nFROM drivers\nWHERE dob = (\n SELECT MIN(dob)\n FROM drivers\n) ;\t----- bird -----\tformula_1",
    "212": " SELECT drivers.driverref\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Canadian Grand Prix' AND results.year = 2007 AND results.position = 1;\t----- bird -----\tformula_1",
    "213": " SELECT r.name, r.date, min(res.rank) as highest\\_rank\nFROM results res\nJOIN races r ON res.raceid = r.raceid\nJOIN drivers d ON res.driverid = d.driverid\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nGROUP BY r.name, r.date\nORDER BY highest\\_rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": " SELECT MAX(fastestlapspeed)\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.name = 'Spanish Grand Prix' AND results.raceid IN (\n    SELECT raceid\n    FROM races\n    WHERE year = 2009\n);\t----- bird -----\tformula_1",
    "215": " SELECT positionorder\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE results.raceid = (SELECT raceid FROM races WHERE name = 'Chinese Grand Prix' AND year = 2\t----- bird -----\tformula_1",
    "216": " SELECT results.time\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.position = 2 AND results.rank = 2;\t----- bird -----\tformula_1",
    "217": " SELECT COUNT(DISTINCT d.driverid)\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nJOIN races race ON r.raceid = race.raceid\nWHERE race.year = 2008 AND race.circuitid = (SELECT circuitid FROM circuits WHERE circuitref = 'China')\nAND r.time IS NOT NULL;\n```\t----- bird -----\tformula_1",
    "218": " SELECT\n(EXTRACT(EPOCH FROM t.last\\_driver\\_time) - EXTRACT(EPOCH FROM t.champion\\_time)) / EXTRACT(EPOCH FROM t.last\\_driver\\_time) * 100 AS percentage\\_faster\nFROM (\nSELECT\nr.time AS champion\\_time,\nMAX(r.time) FILTER (WHERE r.position = races.total) + r.time AS last\\_driver\\_time\nFROM\nraces\nJOIN (\nSELECT\nraceid,\nMIN(position) FILTER (WHERE driverid = (SELECT driverid FROM results WHERE position = 1 AND raceid = 20081)) AS champion\\_position,\ntime\nFROM\nresults\nWHERE\nraceid = 20081\nGROUP BY\nraceid, time\n) r ON races.raceid = r.raceid AND r.champion\\_position = races.total\nWHERE\nraces.year = 2008 AND races.round = 1\n) t;\t----- bird -----\tformula_1",
    "219": " SELECT COUNT(\\*)\nFROM circuits\nWHERE location = 'Melbourne' AND country = 'Australia';\n\n(Note: Based on the given external knowledge, the circuit is located in Melbourne, Australia. The query counts the number of circuits in Adelaide, Australia, but since there is no such circuit in the table, the query will return 0.)\t----- bird -----\tformula_1",
    "220": " SELECT MAX(results.points)\nFROM results\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "221": " SELECT name \nFROM constructors \nJOIN results \nON constructors.constructorid = results.constructorid \nWHERE raceid = 291 \nAND points = 0;\t----- bird -----\tformula_1",
    "222": " SELECT COUNT(DISTINCT c.constructorid)\nFROM constructors c\nJOIN results r ON c.constructorid = r.constructorid\nWHERE c.nationality = 'Japanese' AND r.points = 0 AND r.raceid IN (\n    SELECT r.raceid\n    FROM races r\n    GROUP BY r.raceid\n    HAVING COUNT(r.raceid) = 2\n);\t----- bird -----\tformula_1",
    "223": " SELECT\n    100.0 * COUNT(DISTINCT r.driverid) FILTER (WHERE r.time IS NOT NULL AND r.driverid IN (\n        SELECT d.driverid\n        FROM drivers d\n        WHERE d.nationality = 'Japan'\n    )) / COUNT(DISTINCT r.driverid) AS race_completion_percentage\nFROM\n    races r\nWHERE\n    r.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": " SELECT AVG(STRICT TIME_TO_SEC(time))/60 AS average_time_in_minutes\nFROM results r\nJOIN seasons s ON r.raceid = (SELECT raceid FROM races WHERE year < 1975 AND round = 1)\nWHERE position = 1 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "225": " SELECT fastestlap\nFROM results\nWHERE raceid IN (\nSELECT raceid\nFROM races\nWHERE year = 2009 AND positionorder = 1)\nORDER BY fastestlap DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "226": " SELECT AVG(fastestlapspeed)\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "227": " SELECT 100.0 * COUNT(d.driverid) / COUNT(d2.driverid) AS percentage\nFROM drivers d\nJOIN (\n    SELECT driverid\n    FROM results r\n    JOIN drivers d ON r.driverid = d.driverid\n    WHERE EXTRACT(YEAR FROM d.dob) < 1985 AND r.laps > 50 AND r.year BETWEEN 2000 AND 2005\n) d2 ON d.driverid = d2.driverid;\t----- bird -----\tformula_1",
    "228": " SELECT COUNT(*)\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nWHERE r.fastestlaptime < '02:00.00' AND d.nationality = 'French';\t----- bird -----\tformula_1",
    "229": " SELECT code\nFROM drivers\nWHERE nationality = 'America';\t----- bird -----\tformula_1",
    "230": " SELECT d.driverref as code,\nd.nationality,\nd.forename,\nd.surname,\nEXTRACT(YEAR FROM age(d.dob)) as age\nFROM drivers d\nJOIN (\nSELECT driverid\nFROM results\nWHERE position <= 3\n) res\nON d.driverid = res.driverid\nWHERE d.nationality = 'Netherlandic'\nORDER BY age\nLIMIT 3;\n;\t----- bird -----\tformula_1",
    "231": " SELECT drivers.driverref\nFROM drivers\nJOIN (\n    SELECT MIN(dob) AS oldest_birthdate\n    FROM drivers\n    WHERE nationality = 'German'\n) AS oldest_driver\nON drivers.dob = oldest_driver.oldest_birthdate\nWHERE drivers.nationality = 'German';\t----- bird -----\tformula_1",
    "232": " SELECT drivers.driverid, drivers.code\nFROM drivers\nJOIN results ON drivers.driverid = results.driverid\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nWHERE extract(YEAR FROM drivers.dob) = 1971 AND results.fastestlaptime IS NOT NULL\nORDER BY results.fastestlaptime;\n```\t----- bird -----\tformula_1",
    "233": " SELECT COUNT(r.resultid)\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nWHERE ra.raceid BETWEEN 50 AND 100\nAND r.time IS NULL\nAND r.statusid = 2;\t----- bird -----\tformula_1",
    "234": " SELECT circuitid, location, lat, lng\nFROM circuits\nWHERE country = 'Austria';\t----- bird -----\tformula_1",
    "235": " SELECT d.surname, d.forename, MIN(r.date) as first\\_race\\_date, r.time\nFROM drivers d\nJOIN results res ON d.driverid = res.driverid\nJOIN races r ON res.raceid = r.raceid\nJOIN (\nSELECT driverid, MIN(date) as min\\_date\nFROM results\nJOIN races ON results.raceid = races.raceid\nWHERE races.date < d.dob\nGROUP BY driverid\n) subq ON d.driverid = subq.driverid\nGROUP BY d.surname, d.forename, r.time\nORDER BY first\\_race\\_date, d.surname, d.forename\nLIMIT 1;\t----- bird -----\tformula_1",
    "236": " SELECT\ndrivers.forename, drivers.surname, AVG(pitStops.duration) as avg_duration\nFROM\ndrivers\nJOIN\nresults ON drivers.driverid = results.driverid\nJOIN\npitStops ON results.resultid = pitStops.resultid\nWHERE\ndrivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY\ndrivers.driverid\nORDER BY\navg_duration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": " SELECT r.name, r.date, d.forename, d.surname, rr.time\nFROM results rr\nJOIN results r ON rr.resultid = r.resultid\nJOIN races rce ON r.raceid = rce.raceid\nJOIN drivers d ON r.driverid = d.driverid\nWHERE rce.name = 'Canadian Grand Prix' AND rce.year = 2008 AND r.position = 1;\t----- bird -----\tformula_1",
    "238": " SELECT cr.constructorref, cr.url\nFROM circuits c\nJOIN races r ON c.circuitid = r.circuitid\nJOIN constructorResults cr ON r.raceid = cr.raceid\nJOIN constructors con ON cr.constructorid = con.constructorid\nJOIN results res ON cr.resultid = res.resultid\nJOIN drivers d ON res.driverid = d.driverid\nWHERE r.year = 2009 AND r.name = 'Singapore Grand Prix' AND res.position = 1\nGROUP BY cr.constructorid, cr.constructorref, cr.url\nLIMIT 1;\t----- bird -----\tformula_1",
    "239": " SELECT power\\_name\nFROM superpower\nJOIN hero\\_power ON superpower.id = hero\\_power.power\\_id\nJOIN superhero ON hero\\_power.hero\\_id = superhero.id\nWHERE superhero.superhero\\_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": " SELECT constructorid, SUM(points) as total_points, name, nationality\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN constructors ON results.constructorid = constructors.constructorid\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructorid, name, nationality\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": " SELECT drivers.forename || ' ' || drivers.surname AS full\\_name\nFROM drivers\nJOIN qualifying ON drivers.driverid = qualifying.driverid\nJOIN races ON qualifying.raceid = races.raceid\nJOIN circuits ON races.circuitid = circuits.circuitid\nWHERE races.year = 2008\nAND circuits.name = 'Marina Bay Street Circuit'\nAND qualifying.position = 1\nAND qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceid = races.raceid);\t----- bird -----\tformula_1",
    "242": " SELECT\nd.forename || ' ' || d.surname AS full\\_name,\nd.nationality,\nr.name AS first\\_race\nFROM drivers d\nJOIN results res ON d.driverid = res.driverid\nJOIN races r ON res.raceid = r.raceid\nJOIN (\nSELECT\ndriverid,\nMIN(date) AS first\\_race\\_date\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nGROUP BY driverid\n) sub ON d.driverid = sub.driverid AND res.date = sub.first\\_race\\_date\nORDER BY d.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": " SELECT MAX(accidents)\nFROM (\n    SELECT COUNT(results.resultid) AS accidents\n    FROM results\n    JOIN status ON results.statusid = status.statusid\n    WHERE status.status = '3' AND races.name = 'Canadian Grand Prix'\n    GROUP BY results.driverid\n) AS subquery;\t----- bird -----\tformula_1",
    "244": " SELECT\nd.forename || ' ' || d.surname AS full\\_name,\nMIN(r.time) AS shortest\\_lap\\_time\nFROM\nresults r\nJOIN\ndrivers d ON r.driverid = d.driverid\nGROUP BY\nd.driverid, d.forename, d.surname\nORDER BY\nshortest\\_lap\\_time\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": " SELECT c.circuitid, c.name, MIN(l.time) AS lap_record\nFROM circuits c\nJOIN races r ON c.circuitid = r.circuitid\nJOIN lapTimes l ON r.raceid = l.raceid\nWHERE c.country = 'Italy'\nGROUP BY c.circuitid, c.name;\t----- bird -----\tformula_1",
    "246": " SELECT COUNT(\\*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power\\_name = 'Super Strength' AND superhero.height\\_cm > 200;\t----- bird -----\tsuperhero",
    "247": " SELECT COUNT(\\*)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE colour.colour = 'Blue' AND superpower.power\\_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": " SELECT superhero.superhero\\_name\nFROM superhero\nJOIN colour AS eye\\_colour ON superhero.eye\\_colour\\_id = eye\\_colour.id\nJOIN colour AS hair\\_colour ON superhero.hair\\_colour\\_id = hair\\_colour.id\nWHERE eye\\_colour.colour = 'Blue' AND hair\\_colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": " SELECT superhero_name, height_cm\nFROM superhero\nWHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\nORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "250": " SELECT s.superhero\\_name, c.colour AS eye\\_color, COUNT(s.id) AS count\nFROM superhero s\nJOIN colour c ON s.eye\\_colour\\_id = c.id\nWHERE s.publisher\\_id = (SELECT id FROM publisher WHERE publisher\\_name = 'Marvel Comics')\nGROUP BY s.superhero\\_name, c.colour\nORDER BY count DESC;\t----- bird -----\tsuperhero",
    "251": " SELECT s.superhero\\_name\nFROM superhero s\nJOIN hero\\_power hp ON s.id = hp.hero\\_id\nJOIN superpower sp ON hp.power\\_id = sp.id\nJOIN publisher p ON s.publisher\\_id = p.id\nWHERE p.publisher\\_name = 'Marvel Comics' AND sp.power\\_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": " SELECT publisher_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE attribute_name = 'Speed'\nORDER BY attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": " SELECT COUNT(\\*)\nFROM superhero\nJOIN color ON superhero.eye_colour_id = color.id\nJOIN publisher ON superhero.publisher\\_id = publisher.id\nWHERE color.colour = 'Gold' AND publisher.publisher\\_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": " SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nWHERE attribute_name = 'Intelligence'\nORDER BY attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": " SELECT race\nFROM superhero\nWHERE superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": " SELECT DISTINCT s.superhero\\_name\nFROM superhero s\nJOIN hero\\_attribute ha ON s.id = ha.hero\\_id\nJOIN attribute a ON ha.attribute\\_id = a.id\nWHERE a.attribute\\_name = 'Durability' AND ha.attribute\\_value < 50;\t----- bird -----\tsuperhero",
    "257": " SELECT superhero.superhero\\_name\nFROM superhero\nJOIN hero\\_power ON superhero.id = hero\\_power.hero\\_id\nJOIN superpower ON hero\\_power.power\\_id = superpower.id\nWHERE superpower.power\\_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": " SELECT COUNT(\\*)\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nWHERE gender.gender = 'Female' AND hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": " SELECT\nROUND(100 * AVG(CASE WHEN alignment = 'Bad' THEN 1.0 ELSE 0.0 END)) AS pct_bad_superheroes,\nSUM(CASE WHEN publisher_name = 'Marvel Comics' AND alignment = 'Bad' THEN 1.0 ELSE 0.0 END) AS bad_marvel_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id;\n```\t----- bird -----\tsuperhero",
    "260": " SELECT\nSUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) as diff\nFROM superhero;\t----- bird -----\tsuperhero",
    "261": " SELECT id \nFROM publisher \nWHERE publisher\\_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": " SELECT COUNT(*)\nFROM superhero\nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": " SELECT AVG(superhero.weight_kg)\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": " SELECT sp.power\\_name\nFROM superhero sh\nJOIN gender g ON sh.gender\\_id = g.id\nJOIN hero\\_power hp ON sh.id = hp.hero\\_id\nJOIN superpower sp ON hp.power\\_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": " SELECT superhero_name \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE height_cm BETWEEN 170 AND 190 AND colour.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "266": " SELECT c.color\nFROM superhero s\nJOIN colour c ON c.id = s.hair\\_colour\\_id\nWHERE s.height\\_cm = 185 AND s.race = 'human';\t----- bird -----\tsuperhero",
    "267": " SELECT\nROUND(100.0 * COUNT(s.id) FILTER (WHERE p.publisher\\_name = 'Marvel Comics' AND s.height\\_cm BETWEEN 150 AND 180) / COUNT(s.id)) AS percentage\nFROM\nsuperhero s\nJOIN\npublisher p ON s.publisher\\_id = p.id;\t----- bird -----\tsuperhero",
    "268": " SELECT sh.superhero\\_name\nFROM superhero sh\nJOIN gender g ON sh.gender\\_id = g.id\nJOIN (\nSELECT AVG(weight\\_kg) * 0.79 as avg\\_weight\nFROM superhero\n) avg\\_weight\\_query\nON sh.weight\\_kg > avg\\_weight.avg\\_weight\nWHERE g.gender = 'Male';\t----- bird -----\tsuperhero",
    "269": " SELECT power\\_name\nFROM superpower\nJOIN hero\\_power ON superpower.id = hero\\_power.power\\_id\nWHERE hero\\_power.hero\\_id = 1;\t----- bird -----\tsuperhero",
    "270": " SELECT COUNT(*)\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "271": " SELECT full\\_name\nFROM superhero sh\nJOIN hero\\_attribute ha ON sh.id = ha.hero\\_id\nWHERE ha.attribute\\_name = 'strength'\nAND ha.attribute\\_value = (\nSELECT MAX(attribute\\_value)\nFROM hero\\_attribute\nWHERE attribute\\_name = 'strength'\n);\t----- bird -----\tsuperhero",
    "272": " SELECT s.superhero\\_name\nFROM superhero s\nJOIN hero\\_attribute ha ON s.id = ha.hero\\_id\nJOIN attribute a ON ha.attribute\\_id = a.id\nWHERE a.attribute\\_name = 'durability' AND s.publisher\\_id = (SELECT id FROM publisher WHERE publisher\\_name = 'Dark Horse Comics')\nORDER BY ha.attribute\\_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": " SELECT e.colour AS eyes_color, h.hair_colour_id AS hair_color, s.colour AS skin_color\nFROM superhero h\nJOIN gender g ON h.gender_id = g.id\nJOIN colour e ON h.eye_colour_id = e.id\nJOIN colour h ON h.hair_colour_id = h.id\nJOIN colour s ON h.skin_colour_id = s.id\nWHERE g.gender = 'Female' AND h.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "274": " SELECT s.superhero\\_name, s.publisher\\_id, c1.colour as eye\\_colour, c2.colour as hair\\_colour, c3.colour as skin\\_colour\nFROM superhero s\nJOIN colour c1 ON s.eye\\_colour\\_id = c1.id\nJOIN colour c2 ON s.hair\\_colour\\_id = c2.id\nJOIN colour c3 ON s.skin\\_colour\\_id = c3.id\nWHERE s.eye\\_colour\\_id = s.hair\\_colour\\_id AND s.hair\\_colour\\_id = s.skin\\_colour\\_id;\t----- bird -----\tsuperhero",
    "275": " SELECT\nROUND(100 * COUNT(s2.id) * 1.0 / COUNT(DISTINCT s1.id), 2) AS percentage\nFROM superhero s1\nJOIN superhero s2 ON s1.id = s2.id\nJOIN colour c ON s2.skin_colour_id = c.id\nJOIN gender g ON s1.gender_id = g.id\nWHERE c.colour = 'Blue' AND g.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": " SELECT COUNT(*)\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE hero_power.hero_id IN (\n    SELECT id\n    FROM superhero\n    WHERE superhero_name = 'Amazo'\n);\t----- bird -----\tsuperhero",
    "277": " SELECT height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": " SELECT superhero.superhero\\_name \nFROM superhero \nJOIN colour eye\\_color ON superhero.eye\\_colour\\_id = eye\\_color.id \nJOIN colour hair\\_color ON superhero.hair\\_colour\\_id = hair\\_color.id \nWHERE eye\\_color.colour = 'Black' AND hair\\_color.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": " SELECT superhero_name \nFROM superhero \nWHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "280": " SELECT COUNT(\\*)\nFROM hero_attribute\nWHERE attribute_name = 'Strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "281": " SELECT\nROUND(100 * SUM(CASE WHEN gender = 'Female' AND publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(*) FILTER (WHERE publisher_name = 'Marvel Comics')) AS percent\nFROM\nsuperhero;\t----- bird -----\tsuperhero",
    "282": " SELECT\n(SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky') -\n(SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler') as weight_difference;\n```\n\nThis query calculates the difference between the sum of weight_kg for all records with full_name 'Emil Blonsky' and the sum of weight_kg for all records with full_name 'Charles Chandler' in the superhero table.\n```\t----- bird -----\tsuperhero",
    "283": " SELECT AVG(height_cm) AS average_height\nFROM superhero;\t----- bird -----\tsuperhero",
    "284": " SELECT power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": " SELECT superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE ha.attribute_name = 'Speed'\nGROUP BY s.id, s.superhero_name\nORDER BY MAX(ha.attribute_value) DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": " SELECT a.attribute\\_name AS attribute, ha.attribute\\_value AS value\nFROM attribute\nJOIN hero\\_attribute ha ON a.id = ha.attribute\\_id\nJOIN superhero sh ON ha.hero\\_id = sh.id\nWHERE sh.superhero\\_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": " SELECT DISTINCT s.superhero\\_name\nFROM superhero s\nJOIN color c1 ON s.eye\\_colour\\_id = c1.id AND c1.colour = 'Blue'\nJOIN color c2 ON s.hair\\_colour\\_id = c2.id AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": " SELECT publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": " SELECT\n\t----- bird -----\tsuperhero",
    "290": " SELECT COUNT(*) FILTER (WHERE gender_id = 1) / COUNT(*) FILTER (WHERE gender_id = 2) AS ratio\nFROM superhero;\t----- bird -----\tsuperhero",
    "291": " SELECT colour.color\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": " SELECT\n\tCOUNT(*) - COALESCE(SUM(CASE WHEN t2.eye_colour_id = 1 THEN 1 ELSE 0 END), 0) AS difference\nFROM\n\tsuperhero t1\nLEFT JOIN\n\tcolour ON t1.eye_colour_id = colour.id\n\t\tAND colour.id IN (1, 7)\nLEFT JOIN\n\t(\n\t\tSELECT\n\t\t\tid,\n\t\t\theight_cm,\n\t\t\tweight_kg,\n\t\t\thair_colour_id,\n\t\t\teye_colour_id,\n\t\t\tskin_colour_id,\n\t\t\trace_id,\n\t\t\tpublisher_id,\n\t\t\talignment_id,\n\t\t\tgender_id\n\t\tFROM\n\t\t\tsuperhero\n\t\tWHERE\n\t\t\tweight_kg IS NOT NULL OR weight_kg <> 0\n\t) t2 ON t1.id = t2.id\nWHERE\n\tt2.id IS NULL;\t----- bird -----\tsuperhero",
    "293": " SELECT COUNT(\\*)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": " SELECT superhero_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Wind Control' \nORDER BY superhero_name;\t----- bird -----\tsuperhero",
    "295": " SELECT s.superhero\\_name, g.gender\nFROM superhero s\nJOIN gender g ON s.gender\\_id = g.id\nJOIN hero\\_power hp ON s.id = hp.hero\\_id\nJOIN superpower sp ON hp.power\\_id = sp.id\nWHERE sp.power\\_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": " SELECT\n\tSUM(publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) -\n\tSUM(publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\nFROM\n\tsuperhero;\t----- bird -----\tsuperhero",
    "297": " SELECT MAX(reputation) AS max_reputation\nFROM users\nWHERE displayname IN ('Harlan', 'Jarrod Dixon');\n```\t----- bird -----\tcodebase_community",
    "298": " SELECT displayname \nFROM users \nWHERE EXTRACT(YEAR FROM creationdate) = 2011;\t----- bird -----\tcodebase_community",
    "299": " SELECT COUNT(*)\nFROM users\nWHERE lastaccessdate > '2014-09-01' ;\t----- bird -----\tcodebase_community",
    "300": " SELECT displayname as owner\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": " SELECT COUNT(\\*)\nFROM posts\nWHERE owneruserid = (SELECT id FROM users WHERE displayname = 'csgillespie');\t----- bird -----\tcodebase_community",
    "302": " SELECT ownerdisplayname AS last_editor_display_name\nFROM posts p\nJOIN users u ON p.lasteditoruserid = u.id\nWHERE p.title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": " SELECT COUNT(\\*)\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.age > 65 AND p.score >= 20;\t----- bird -----\tcodebase_community",
    "304": " SELECT body\nFROM posts\nWHERE id IN (\n SELECT excerptpostid\n FROM tags\n WHERE tagname = 'bayesian'\n);\t----- bird -----\tcodebase_community",
    "305": " SELECT AVG(p.score) AS average\\_score\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": " SELECT 100.0 * COUNT(DISTINCT p.id) / (SELECT COUNT(DISTINCT id) FROM posts WHERE score > 5) as percentage\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.score > 5 AND u.age > 65;\t----- bird -----\tcodebase_community",
    "307": " SELECT favoritecount\nFROM posts\nWHERE id IN (\nSELECT postid\nFROM comments\nWHERE userid = 3025 AND creationdate = '2014-04-23 20:29:39'::timestamp with time zone\n);\t----- bird -----\tcodebase_community",
    "308": " SELECT p.id\nFROM posts p\nJOIN comments c ON p.id = c.postid\nJOIN users u ON c.userid = u.id\nWHERE u.id = 23853 AND c.creationdate = '2013-07-12 09:08:18.0' AND p.closeddate IS NULL;\t----- bird -----\tcodebase_community",
    "309": " SELECT COUNT(id) as post_count\nFROM posts\nWHERE ownerdisplayname = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": " SELECT displayname \nFROM users \nJOIN votes ON users.id = votes.userid \nWHERE votes.id = 6347;\t----- bird -----\tcodebase_community",
    "311": " SELECT COUNT(posts.id) / COUNT(votes.id) AS post_to_vote_ratio\nFROM posts, votes\nWHERE posts.owneruserid = 24 AND votes.userid = 24;\t----- bird -----\tcodebase_community",
    "312": " SELECT viewcount\nFROM posts\nWHERE id IN (\nSELECT id\nFROM posts\nWHERE title ILIKE 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\n)\n;\t----- bird -----\tcodebase_community",
    "313": " SELECT id, postid, score, text, creationdate, userid, userdisplayname\nFROM comments\nWHERE score = 17;\t----- bird -----\tcodebase_community",
    "314": " SELECT userdisplayname \nFROM comments \nWHERE id = (SELECT postid FROM comments WHERE text = 'thank you user93!');\t----- bird -----\tcodebase_community",
    "315": " SELECT u.displayname AS user, u.reputation\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE p.title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": " SELECT ownerdisplayname\nFROM posts\nWHERE title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": " Here is the PostgreSQL query to get all the comments left by users who edited the post with the title 'Why square the difference instead of taking the absolute value in standard deviation?':\n\nSELECT c.id, c.postid, c.score, c.text, c.creationdate, c.userid, c.userdisplayname\nFROM comments c\nJOIN posts p ON c.postid = p.id\nJOIN users u ON c.userid = u.id\nWHERE p.title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND c.postid IS NOT NULL;\n\nThis query joins the `comments`, `posts`, and `users` tables on the appropriate columns, and filters the results to only include comments on the post with the title 'Why square the difference instead of taking the absolute value in standard devination?', and where the `postid` is not null (to exclude any comments that may have been left on the post history or post links tables).\t----- bird -----\tcodebase_community",
    "318": " SELECT u.displayname\nFROM users u\nJOIN votes v ON u.id = v.userid\nJOIN posts p ON v.postid = p.id\nWHERE v.bountyamount = 50 AND p.title ILIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": " SELECT AVG(p.viewcount) AS avg\\_viewcount, h.title, c.text\nFROM posts p\nJOIN tags t ON t.id = p.posttypeid\nJOIN comments c ON c.postid = p.id\nJOIN users h ON h.id = p.owneruserid\nWHERE t.tagname = 'humor'\nGROUP BY h.title, c.text;\t----- bird -----\tcodebase_community",
    "320": " SELECT COUNT(DISTINCT u.id)\nFROM users u\nJOIN badges b ON u.id = b.userid\nGROUP BY u.id\nHAVING COUNT(b.name) > 5;\t----- bird -----\tcodebase_community",
    "321": " SELECT u.id, u.displayname\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nJOIN (\nSELECT postid, COUNT(*) as post_count\nFROM posthistory\nGROUP BY postid\nHAVING COUNT(*) = 1\n) ph ON p.id = ph.postid\nWHERE p.viewcount >= 1000;\t----- bird -----\tcodebase_community",
    "322": " SELECT\nROUND(100 * ( (SELECT COUNT(b1.name) FROM badges b1 JOIN posts p1 ON b1.userid = p1.owneruserid WHERE b1.name = 'Student' AND DATE_PART('year', p1.creationdate) = 2010) / (SELECT COUNT(DISTINCT userid) FROM posts WHERE DATE_PART('year', creationdate) = 2010) -\n(SELECT COUNT(b2.name) FROM badges b2 JOIN posts p2 ON b2.userid = p2.owneruserid WHERE b2.name = 'Student' AND DATE_PART('year', p2.creationdate) = 2011) / (SELECT COUNT(DISTINCT userid) FROM posts WHERE DATE_PART('year', creationdate) = 2011) ), 2) AS percentage_difference\nFROM badges\nJOIN posts ON badges.userid = posts.owneruserid\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "323": " SELECT\nAVG(u.upvotes) AS avg\\_upvotes,\nAVG(u.age) AS avg\\_age\nFROM\nusers u\nJOIN\n(\nSELECT\nowneruserid\nFROM\nposts\nGROUP BY\nowneruserid\nHAVING\nCOUNT(owneruserid) > 10\n) subq ON u.id = subq.owneruserid;\t----- bird -----\tcodebase_community",
    "324": " SELECT DIVIDE(COUNT(votes.id) FILTER (WHERE EXTRACT(YEAR FROM votes.creationdate) = 2010), COUNT(votes.id) FILTER (WHERE EXTRACT(YEAR FROM votes.creationdate) = 2011)) \nFROM votes;\t----- bird -----\tcodebase_community",
    "325": " SELECT p.id\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'slashnick'\nAND p.answercount = (\nSELECT MAX(answercount)\nFROM posts\n);\t----- bird -----\tcodebase_community",
    "326": " SELECT MAX(SUM(p.viewcount)) as popularity\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'Harvey Motulsky' OR u.displayname = 'Noah Snyder'\nGROUP BY u.displayname;\t----- bird -----\tcodebase_community",
    "327": " SELECT t.tagname\nFROM tags t\nJOIN posts p ON t.id = ANY(string\\_to\\_array(p.tags, ','))\nJOIN users u ON p.owneruserid = u.id\nJOIN comments c ON p.id = c.postid\nWHERE u.displayname = 'Mark Meckes' AND c.commentcount = 0\nGROUP BY t.tagname;\t----- bird -----\tcodebase_community",
    "328": " SELECT \n100.0 * COUNT(p.id) FILTER (WHERE t.tagname = 'r') / COUNT(p.id) FILTER (WHERE u.displayname = 'Community') AS percentage\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nJOIN tags t ON t.id = ANY(string_to_array(p.tags, ' '))\nWHERE u.displayname = 'Community';\t----- bird -----\tcodebase_community",
    "329": " SELECT \nSUM(p.viewcount) FILTER (WHERE u.displayname = 'Mornington') - \nSUM(p.viewcount) FILTER (WHERE u.displayname = 'Amos') \nFROM posts p \nJOIN users u ON p.owneruserid = u.id;\t----- bird -----\tcodebase_community",
    "330": " SELECT\nAVG(EXTRACT(MONTH FROM creationdate)) AS average_monthly_number\nFROM postlinks\nJOIN posts ON postlinks.postid = posts.id\nWHERE YEAR(creationdate) = 2010 AND posts.answercount <= 2;\n```\t----- bird -----\tcodebase_community",
    "331": " SELECT MIN(v.creationdate)\nFROM votes v\nJOIN users u ON v.userid = u.id\nWHERE u.displayname = 'chl';\t----- bird -----\tcodebase_community",
    "332": " SELECT u.displayname\nFROM users u\nJOIN badges b ON u.id = b.userid\nWHERE b.name = 'Autobiographer' AND b.date = (\n    SELECT MIN(date)\n    FROM badges\n    WHERE name = 'Autobiographer'\n);\t----- bird -----\tcodebase_community",
    "333": " SELECT COUNT(DISTINCT u.id)\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nWHERE u.location = 'United Kingdom' AND p.favoritecount >= 4;\t----- bird -----\tcodebase_community",
    "334": " SELECT id, title\nFROM posts\nWHERE ownerdisplayname = 'Harvey Motulsky' AND views = (SELECT MAX(views) FROM posts WHERE ownerdisplayname = 'Harvey Motulsky');\t----- bird -----\tcodebase_community",
    "335": " SELECT p.id, u.displayname\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE EXTRACT(YEAR FROM p.creationdate) = 2010\nORDER BY p.favoritecount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": " SELECT\n\t----- bird -----\tcodebase_community",
    "337": " SELECT SUM(views) AS total_views, u.displayname AS last_editor\nFROM posts p\nJOIN users u ON p.lasteditoruserid = u.id\nWHERE p.title ILIKE '%Computer Game Datasets%'\nGROUP BY u.displayname;\t----- bird -----\tcodebase_community",
    "338": " SELECT COUNT(\\*)\nFROM comments\nWHERE postid = (SELECT id FROM posts WHERE score = (SELECT MAX(score) FROM posts));\t----- bird -----\tcodebase_community",
    "339": " SELECT c.text, u.displayname\nFROM comments c\nJOIN users u ON c.userid = u.id\nWHERE c.postid IN (\n    SELECT id\n    FROM posts\n    WHERE title = 'Analysing wind data with R'\n)\nORDER BY c.creationdate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": " SELECT\n100.0 * COUNT(p.id) FILTER (WHERE p.score > 50) / COUNT(p.id) AS percentage\nFROM posts p\nJOIN (\nSELECT owneruserid, MAX(reputation) as max_rep\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nGROUP BY owneruserid\n) u ON p.owneruserid = u.owneruserid\nWHERE u.max_rep = (\nSELECT MAX(max_rep)\nFROM (\nSELECT owneruserid, MAX(reputation) as max_rep\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nGROUP BY owneruserid\n) t\n);\t----- bird -----\tcodebase_community",
    "341": " SELECT excerptpostid, wikipostid \nFROM tags \nWHERE tagname = 'sample';\t----- bird -----\tcodebase_community",
    "342": " SELECT u.reputation, u.upvotes\nFROM users u\nJOIN comments c ON u.id = c.userid\nWHERE c.text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": " SELECT c.text, MAX(c.score)\nFROM posts p\nJOIN comments c ON p.id = c.postid\nWHERE p.viewcount BETWEEN 100 AND 150\nGROUP BY c.text;\t----- bird -----\tcodebase_community",
    "344": " SELECT COUNT(\\*)\nFROM comments\nWHERE postid IN (SELECT id FROM posts WHERE commentcount = 1) AND score = 0;\t----- bird -----\tcodebase_community",
    "345": " SELECT\nROUND(100.0 * COUNT(DISTINCT c.userid) FILTER (WHERE v.upvotes = 0) / COUNT(DISTINCT c.userid)) AS percentage\nFROM comments c\nJOIN users u ON c.userid = u.id\nJOIN votes v ON c.id = v.postid\nWHERE c.score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": " SELECT id, artist, asciiname, cardkingdomfoilid, cardkingdomid, name, manacost, types, text\nFROM cards\nWHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL;\t----- bird -----\tcard_games",
    "347": " SELECT id, artist, asciiname, availability, bordercolor, cardkingdomfoilid, cardkingdomid, coloridentity, colorindicator, colors, convertedmanacost, dueldeck, edhrecrank, faceconvertedmanacost, facename, flavorname, flavortext, frameeffects, frameversion, hand, hasalternativedecklimit, hascontentwarning, hasfoil, hasnonfoil, isalternative, isfullart, isonlineonly, isoversized, ispromo, isreprint, isreserved, isstarter, isstoryspotlight, istextless, istimeshifted, keywords, layout, leadershipskills, life, loyalty, manacost, mcmid, mcmmetaid, mtgarenaid, mtgjsonv4id, mtgoid, multiverseid, name, number, originalreleasedate, originaltext, originaltype, otherfaceids, power, printings, promotypes, purchaseurls, rarity, scryfallid, scryfallillustrationid, scryfalloracleid, setcode, side, subtypes, supertypes, tcgplayerproductid, text, toughness, type, types, uuid, variations, watermark\nFROM cards\nWHERE bordercolor = 'borderless' AND cardkingdomfoilid IS NULL AND cardkingdomid IS NOT NULL;\n\nThis SQL query will return all the borderless cards available without powerful foils. It filters the cards table based on the bordercolor being 'borderless' and cardkingdomfoilid being NULL, while cardkingdomid is not NULL.\t----- bird -----\tcard_games",
    "348": " SELECT c.id, c.name\nFROM cards c\nJOIN legalities l ON c.id = l.uuid\nJOIN sets s ON c.setcode = s.code\nWHERE c.rarity = 'mythic' AND l.status = 'Banned' AND s.type = 'gladiator';\t----- bird -----\tcard_games",
    "349": " SELECT c.name, l.status\nFROM cards c\nJOIN legalities l ON c.id = l.uuid\nWHERE c.types LIKE '%Artifact%' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": " SELECT id, artist\nFROM cards\nWHERE (power IS NULL OR power = '*') AND\nEXISTS (\n    SELECT 1\n    FROM legalities\n    WHERE cards.id = legalities.id AND\n    format = 'commander' AND status = 'Legal'\n);\t----- bird -----\tcard_games",
    "351": " SELECT c.id, c.name, r.text, r.date, c.hascontentwarning\nFROM cards c\nJOIN rulings r ON c.id = r.id\nJOIN foreign\\_data fd ON c.id = fd.id AND fd.language = 'en'\nJOIN sets s ON c.setcode = s.code\nWHERE c.artist = 'Stephen Daniele' AND fd.flavortext IS NOT NULL AND fd.text IS NOT NULL AND fd.type IS NOT NULL;\t----- bird -----\tcard_games",
    "352": " SELECT c.name, c.artist, MAX(COUNT(r.uuid)) as num\\_rulings\nFROM cards c\nJOIN rulings r ON c.id = r.id\nWHERE c.ispromo = 1\nGROUP BY c.name, c.artist;\t----- bird -----\tcard_games",
    "353": " SELECT \n100.0 * COUNT(c.id) FILTER (WHERE f.language = 'Chinese Simplified') / COUNT(c.id) AS chinese_simplified_percentage\nFROM \ncards c\nJOIN \nforeign_data f ON c.id = f.id;\n\nExplanation:\n1. We start by selecting the percentage of cards available in Chinese Simplified.\n2. We calculate this percentage by dividing the count of cards with Chinese Simplified foreign data by the total count of cards.\n3. We join the cards table and the foreign\\_data table on the id field to get the necessary data.\n4. We use the FILTER clause to count only the rows where the language is 'Chinese Simplified'.\n5. We multiply the result by 100.0 to convert it to a percentage.\t----- bird -----\tcard_games",
    "354": " SELECT COUNT(\\*)\nFROM cards\nWHERE power = '*';\t----- bird -----\tcard_games",
    "355": " SELECT bordercolor \nFROM cards \nWHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "356": " SELECT r.text\nFROM rulings r\nJOIN cards c ON r.id = c.id\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": " SELECT 100.0 * COUNT(c.id) FILTER (WHERE c.bordercolor = 'borderless') / COUNT(c.id) AS percentage\nFROM cards c;\n```\t----- bird -----\tcard_games",
    "358": " SELECT\nROUND(100.0 * COUNT(c.id) FILTER (WHERE c.isstoryspotlight = 1 AND f.language = 'French') / COUNT(c.id) FILTER (WHERE c.isstoryspotlight = 1), 2) AS percentage\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.isstoryspotlight = 1;\t----- bird -----\tcard_games",
    "359": " SELECT COUNT(\\*)\nFROM cards\nWHERE originaltype = 'Summon - Angel' AND subtypes NOT ILIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": " SELECT id \nFROM cards \nWHERE dueldeck = 'a';\t----- bird -----\tcard_games",
    "361": " SELECT COUNT(\\*)\nFROM cards\nWHERE status = 'Banned' AND bordercolor = 'white';\t----- bird -----\tcard_games",
    "362": " SELECT c.*\nFROM cards c\nJOIN foreign\\_data fd ON c.id = fd.id\nWHERE c.originaltype = 'Artifact' AND c.colors = 'B' AND fd.language <> 'en';\t----- bird -----\tcard_games",
    "363": " SELECT manacost\nFROM cards\nWHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": " SELECT \n\tDIVIDE(COUNT(c.id), (SELECT SUM(totalsetsize) FROM sets)) \\* 100 \n\tAS percentage \nFROM cards c \nJOIN sets s ON c.setcode = s.code \nWHERE c.isstoryspotlight = 1 AND c.istextless = 0 \nAND s.totalsetsize IS NOT NULL;\t----- bird -----\tcard_games",
    "365": " SELECT COUNT(\\*)\nFROM sets\nWHERE block = 'Commander' AND language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": " SELECT DISTINCT german_type\nFROM (\n    SELECT\n        c.id,\n        c.types AS german_type\n    FROM cards c\n    JOIN set_translations st ON c.setcode = st.setcode\n    WHERE st.language = 'ger'\n    UNION\n    SELECT\n        c.id,\n        c.subtypes AS german_type\n    FROM cards c\n    JOIN set_translations st ON c.setcode = st.setcode\n    WHERE st.language = 'ger'\n) subquery\nWHERE german_type IS NOT NULL;\t----- bird -----\tcard_games",
    "367": " SELECT COUNT(\\*)\nFROM cards\nWHERE power IS NULL OR power = '*' AND text ILIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": " SELECT COUNT(\\*)\nFROM cards\nJOIN rulings ON cards.id = rulings.id\nWHERE cards.setcode IN (SELECT setcode FROM set_translations WHERE translation = 'premodern')\nAND rulings.text = 'This is a triggered mana ability.'\nAND cards.side IS NULL;\t----- bird -----\tcard_games",
    "369": " SELECT foreign\\_data.name\nFROM cards\nJOIN foreign\\_data ON cards.id = foreign\\_data.id\nJOIN sets ON cards.setcode = sets.code\nWHERE foreign\\_data.language = 'French'\nAND cards.type = 'Creature'\nAND cards.layout = 'normal'\nAND cards.bordercolor = 'black'\nAND cards.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "370": " SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setcode = sets.code\nWHERE sets.basesetsize = 180 AND sets.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": " SELECT\nDIVIDE(COUNT(cards.id), (SELECT COUNT(DISTINCT id) FROM cards JOIN legalities ON cards.id = legalities.uuid WHERE legalities.format = 'commander' AND legalities.status = 'legal'))*100 AS percentage\nFROM cards\nJOIN legalities ON cards.id = legalities.uuid\nWHERE legalities.format = 'commander' AND legalities.status = 'legal' AND cards.hascontentwarning = 0;\t----- bird -----\tcard_games",
    "372": " SELECT ROUND(100.0 * SUM(CASE WHEN language = 'French' AND (power IS NULL OR power = '*') THEN 1 ELSE 0 END) / COUNT(power IS NULL OR power = '*'), 2) AS percentage\nFROM cards\nJOIN foreign\\_data ON cards.id = foreign\\_data.id AND (power IS NULL OR power = '*');\t----- bird -----\tcard_games",
    "373": " SELECT f.language\nFROM foreign\\_data f\nWHERE f.multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": " SELECT (COUNT(cards.id) FILTER (WHERE cards.istextless = 1 AND cards.layout = 'normal')) * 100.0 / COUNT(cards.id) AS proportion\nFROM cards;\t----- bird -----\tcard_games",
    "375": " SELECT DISTINCT language\nFROM set_translations\nWHERE setcode = 'ARC' AND translation ILIKE '%Archenemy%';\t----- bird -----\tcard_games",
    "376": " SELECT language\nFROM foreign\\_data\nWHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": " SELECT c.name, c.convertedmanacost\nFROM cards c\nWHERE c.name = 'Serra Angel' OR c.name = 'Shrine Keeper'\nORDER BY c.convertedmanacost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "378": " SELECT set\\_translations.translation\nFROM set\\_translations\nJOIN sets ON set\\_translations.setcode = sets.code\nWHERE sets.name = (\nSELECT sets.name\nFROM sets\nJOIN cards ON sets.code = cards.setcode\nJOIN foreign\\_data ON cards.multiverseid = foreign\\_data.multiverseid\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign\\_data.language = 'Italian'\n) AND set\\_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "379": " SELECT f.name\nFROM cards c\nJOIN foreign\\_data f ON c.id = f.id AND f.name = 'Ancestor''s Chosen'\nJOIN set\\_translations st ON c.setcode = st.setcode AND f.language = 'Korean';\t----- bird -----\tcard_games",
    "380": " SELECT COUNT(\\*)\nFROM cards\nJOIN set\\_translations ON cards.setcode = set\\_translations.setcode\nJOIN foreign\\_data ON cards.uuid = foreign\\_data.uuid\nWHERE set\\_translations.translation = 'Hauptset Zehnte Edition' AND foreign\\_data.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": " SELECT translation\nFROM set\\_translations\nWHERE setcode = 'Eighth Edition' AND language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": " SELECT EXISTS (\n SELECT 1\n FROM sets\n WHERE mtgocode IS NOT NULL\n AND name = 'Angel of Mercy'\n );\t----- bird -----\tcard_games",
    "383": " SELECT COUNT(\\*)\nFROM sets\nWHERE block = 'Ice Age' AND language = 'Italian' AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": " SELECT sets.code\nFROM sets\nJOIN cards ON sets.id = cards.setcode\nWHERE cards.name = 'Adarkar Valkyrie' AND sets.isforeignonly = 1;\n```\t----- bird -----\tcard_games",
    "385": " SELECT COUNT(\\*)\nFROM sets\nWHERE language = 'Italian' AND basesetsize < 100;\t----- bird -----\tcard_games",
    "386": " SELECT DISTINCT artist\nFROM cards\nWHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": " SELECT COUNT(\\*)\nFROM cards T1\nJOIN sets T2 ON T1.setcode = T2.code\nWHERE T1.convertedmanacost > 5 AND (T1.power = '*' OR T1.power IS NULL) AND T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "388": " SELECT foreign\\_data.flavortext\nFROM foreign\\_data\nJOIN cards ON foreign\\_data.uuid = cards.uuid\nJOIN set\\_translations ON cards.setcode = set\\_translations.setcode\nWHERE cards.name = 'Ancestor''s Chosen' AND set\\_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "389": " SELECT r.text\nFROM rulings r\nJOIN cards c ON r.id = c.id\nJOIN set_translations st ON c.setcode = st.setcode\nWHERE st.language = 'Italian' AND c.setcode = 'Coldsnap';\t----- bird -----\tcard_games",
    "390": " SELECT foreign\\_data.name\nFROM foreign\\_data\nJOIN cards ON foreign\\_data.uuid = cards.uuid\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.code = 'Coldsnap' AND foreign\\_data.language = 'Italian' AND cards.convertedmanacost = (SELECT MAX(convertedmanacost) FROM cards WHERE setcode = 'Coldsnap')\nORDER BY cards.convertedmanacost DESC;\t----- bird -----\tcard_games",
    "391": " SELECT ROUND(100.0 * SUM(CASE WHEN sets.name = 'Coldsnap' AND cards.convertedmanacost = 7 THEN 1 ELSE 0 END) / SUM(cards.convertedmanacost = 7), 2) AS percentage\nFROM cards\nJOIN sets ON cards.setcode = sets.code;\n```\t----- bird -----\tcard_games",
    "392": " SELECT\nDIVIDE(SUM(CASE WHEN name = 'Coldsnap' AND cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL THEN 1 ELSE 0 END), SUM(CASE WHEN name = 'Coldsnap' THEN 1 ELSE 0 END)) * 100\nFROM cards;\n\nExplanation:\n\n1. We need to find the percentage of incredibly powerful cards in the set Coldsnap.\n2. Incredibly powerful cards are defined as those that have a cardkingdomfoilid and a cardkingdomid, indicating that they have both a foil and a non-foil version available on the Card Kingdom website.\n3. To find the percentage, we need to divide the number of incredibly powerful cards in the set by the total number of cards in the set.\n4. We can use the SUM() function to count the number of rows that meet certain conditions.\n5. We use a CASE statement to check if the name of the set is Coldsnap, and if the cardkingdomfoilid and cardkingdomid are not null.\n6. We use the SUM() function to count the number of rows that meet these conditions, and divide it by the total number of rows where the name of the set is Coldsnap.\n7. Finally, we multiply the result by 100 to get the percentage.\t----- bird -----\tcard_games",
    "393": " SELECT l.format, array\\_agg(c.name) as banned\\_cards\nFROM legalities l\nJOIN cards c ON l.id = c.id\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": " SELECT name, format\nFROM cards\nJOIN legalities ON cards.id = legalities.uuid\nWHERE edhrecrank = 1 AND status = 'Banned';\t----- bird -----\tcard_games",
    "395": " SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nJOIN sets ON cards.setcode = sets.code\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "396": " SELECT s.name\nFROM sets s\nLEFT JOIN set\\_translations st ON s.id = st.id AND st.language = 'Korean'\nWHERE s.name NOT IN (\n    SELECT setcode\n    FROM set\\_translations\n    WHERE language ILIKE '%Japanese%'\n) AND st.id IS NOT NULL;\t----- bird -----\tcard_games",
    "397": " SELECT DISTINCT frameversion AS frame\\_style\nFROM cards;\n\nSELECT DISTINCT artist\nFROM cards\nWHERE artist = 'Allen Williams';\n\nSELECT id, name, format, status\nFROM legalities\nWHERE status = 'Banned';\t----- bird -----\tcard_games",
    "398": " SELECT bond_type, COUNT(*) as bond_count\nFROM bond\nJOIN molecule ON molecule.molecule_id = bond.molecule_id\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": " SELECT AVG(subquery.oxygen_count)\nFROM (\n SELECT COUNT(a.atom_id) AS oxygen_count\n FROM atom a\n JOIN molecule m ON a.molecule_id = m.molecule_id\n JOIN connected c ON a.atom_id = c.atom_id\n JOIN bond b ON c.bond_id = b.bond_id\n WHERE m.molecule_id IN (\n SELECT molecule_id\n FROM bond\n WHERE bond_type = '-'\n )\n AND a.element = 'O'\n GROUP BY m.molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "400": " SELECT AVG(ct) AS avg_single_bonded_carcinogenic_molecules\nFROM (\n    SELECT COUNT(a.atom_id) AS ct\n    FROM atom a\n    JOIN molecule m ON a.molecule_id = m.molecule_id\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    JOIN connected c ON (a.atom_id = c.atom_id1 AND b.bond_id = c.bond_id)\n    WHERE m.label = '+' AND b.bond_type = '-'\n    GROUP BY m.molecule_id\n) subquery;\t----- bird -----\ttoxicology",
    "401": " SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "402": " SELECT \nDIVIDE(SUM(CASE WHEN atom.element = 'c' THEN 1 ELSE 0 END), COUNT(atom.atom_id)) AS carbon_percentage\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '='\n```\n```\t----- bird -----\ttoxicology",
    "403": " SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": " SELECT DISTINCT e.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN connected c2 ON c.atom_id2 = c2.atom_id\nJOIN atom a2 ON c2.atom_id = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE b.bond_type = '='\nORDER BY e.element;\t----- bird -----\ttoxicology",
    "405": " SELECT label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'h'\nGROUP BY label\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": " SELECT element as least_numerous_element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": " SELECT bond_type\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20')\nOR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": " SELECT SUM( CASE WHEN a.element = 'i' THEN 1 ELSE 0 END ) AS iodine_atoms,\nSUM( CASE WHEN a.element = 's' THEN 1 ELSE 0 END ) AS sulfur_atoms\nFROM atom a\nJOIN bond b ON a.molecule\\_id = b.molecule\\_id\nWHERE b.bond\\_type = '-'\nGROUP BY a.molecule\\_id;\t----- bird -----\ttoxicology",
    "409": " SELECT 100.0 * AVG(CASE WHEN molecule.label = '+' AND atom.element <> 'f' THEN 1.0 ELSE 0.0 END) AS percentage\nFROM molecule\nLEFT JOIN atom ON molecule.molecule_id = atom.molecule_id\nGROUP BY molecule.molecule\\_id;\t----- bird -----\ttoxicology",
    "410": " SELECT DIVIDE(SUM(CASE WHEN b.bond_type = '#' AND m.label = '+' THEN 1 ELSE 0 END) * 100, COUNT(b.bond_id)) as percent\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id;\n```\n```\t----- bird -----\ttoxicology",
    "411": " SELECT DISTINCT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR000'\nORDER BY a.element ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": " SELECT ROUND(100.0 * SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(bond_id), 5) AS percent\nFROM bond\nJOIN molecule ON molecule_id = 'TR008';\n```\n```\t----- bird -----\ttoxicology",
    "413": " SELECT ROUND(100.0 * SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(DISTINCT molecule_id), 3) AS percent\nFROM molecule\nLEFT JOIN atom ON molecule.molecule_id = atom.molecule_id;\t----- bird -----\ttoxicology",
    "414": " SELECT ROUND(DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(atom_id))*10000, 4) as percent_hydrogen\nFROM atom\nJOIN molecule ON molecule.molecule\\_id = atom.molecule\\_id\nWHERE molecule.molecule\\_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": " SELECT a.element, m.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": " SELECT bond_type\nFROM bond\nWHERE molecule_id = 'TR010' AND bond_type = (SELECT MAX(bond_type) FROM bond WHERE molecule_id = 'TR010')\nLIMIT 1;\n\nI cannot determine if molecule TR010 is carcinogenic based on the provided schema, as it does not contain any information about the carcinogenicity of the molecules.\t----- bird -----\ttoxicology",
    "417": " SELECT molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE molecule.label = '-' AND bond.bond_type = '-'\nGROUP BY molecule_id\nORDER BY molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": " SELECT COUNT(DISTINCT bond_id)\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nWHERE c1.atom_id = 'TR009_12' OR c1.atom_id2 = 'TR009_12'\nAND b.molecule_id = 'TR009';\t----- bird -----\ttoxicology",
    "419": " SELECT bond_type, a1.atom_id AS atom1, a2.atom_id AS atom2\nFROM bond\nJOIN atom a1 ON bond.atom_id = a1.atom_id OR bond.atom_id = a1.atom_id2\nJOIN atom a2 ON bond.atom_id = a2.atom_id OR bond.atom_id = a2.atom_id2\nWHERE bond.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": " SELECT COUNT(DISTINCT connected.bond_id)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE atom.atom_id LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": " SELECT DISTINCT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": " SELECT DISTINCT m.molecule\\_id\nFROM molecule m\nJOIN atom a ON m.molecule\\_id = a.molecule\\_id\nJOIN connected c ON a.atom\\_id = c.atom\\_id OR a.atom\\_id = c.atom\\_id2\nJOIN bond b ON c.bond\\_id = b.bond\\_id\nWHERE SUBSTR(a.atom\\_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "423": " SELECT bond_id\nFROM bond b\nJOIN atom a1 ON b.molecule_id = a1.molecule_id\nJOIN atom a2 ON b.molecule_id = a2.molecule_id\nWHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "424": " SELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond\\_type = ' = '\nGROUP BY m.label\nORDER BY COUNT(c.atom\\_id2) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": " SELECT AVG(counts.bond_count)\nFROM (\nSELECT COUNT(bond.bond_id) AS bond_count\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE atom.element = 'i' AND atom.atom_id = bond.atom_id\nGROUP BY atom.atom_id\n) AS counts;\t----- bird -----\ttoxicology",
    "426": " SELECT DISTINCT a.element\nFROM atom a\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM connected c\n    WHERE (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id)\n);\t----- bird -----\ttoxicology",
    "427": " SELECT atom.atom_id, atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE molecule.molecule_id = 'TR041' AND bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": " SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": " SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": " SELECT\n\t----- bird -----\ttoxicology",
    "431": " SELECT COUNT(*)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (m.label = 'triple-bond' AND (a.element = 'p' OR a.element = 'br'));\t----- bird -----\ttoxicology",
    "432": " SELECT\nDIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(atom_id)) * 100 AS percent\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2)\nWHERE b.bond_type = '-'\nGROUP BY a.molecule_id;\n```\n```\t----- bird -----\ttoxicology",
    "433": " SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": " SELECT 100.0 * AVG( (CASE WHEN a.element = 'cl' AND m.label = '+' THEN 1.0 ELSE 0.0 END) ) AS percentage\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id;\t----- bird -----\ttoxicology",
    "435": " SELECT m.label, a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+' AND a.atom_id LIKE 'A%' AND CAST(SUBSTR(a.atom_id, 7, 1) AS INTEGER) = 4;\t----- bird -----\ttoxicology",
    "436": " SELECT\nDIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(*)) AS hydrogen_ratio,\n(CASE WHEN label = '+' THEN 'carcinogenic' WHEN label = '-' THEN 'non-carcinogenic' END) AS label\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "437": " SELECT m.molecule\\_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule\\_id = a.molecule\\_id\nGROUP BY m.molecule\\_id, m.label\nHAVING COUNT(a.atom\\_id) > 5 AND m.label = '-';\t----- bird -----\ttoxicology",
    "438": " SELECT COUNT(\\*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE virtual = 'F' AND avgscrmath > 400;\t----- bird -----\tcalifornia_schools",
    "439": " SELECT s.cdscode\nFROM schools s\nJOIN (\n    SELECT cdscode, \n           \"Enrollment (K-1\t----- bird -----\tcalifornia_schools",
    "440": " SELECT MAX(frpm.\"Percent (%) Eligible Free (Ages 5-17)\" )\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.\"School Code\"\nWHERE (numge1500::float / numtsttakr) > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": " SELECT s.charternum, AVG(satscores.avgscrwrite) as avg_writing_score\nFROM satscores\nJOIN schools s ON satscores.cds = s.ncesdist || s.ncesschool\nWHERE satscores.avgscrwrite > 499\nGROUP BY s.charternum\nORDER BY avg_writing_score DESC;\t----- bird -----\tcalifornia_schools",
    "442": " SELECT s.school, s.street, s.city, s.zip\nFROM schools s\nJOIN frpm f ON s.cdscode = f.\"School Code\"\nWHERE f.\"Enrollment (K-12)\" - f.\"Enrollment (Ages 5-17)\" > 30;\t----- bird -----\tcalifornia_schools",
    "443": " SELECT s.school, s.enrollment, fr.percent_eligible_frpm\nFROM schools s\nJOIN frpm fr ON s.cdscode = fr.\"County Code\"\nJOIN satscores ss ON s.cdscode = ss.cds\nWHERE fr.percent_eligible_frpm > 0.1 AND ss.numge1500 IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "444": " SELECT s.fundingtype\nFROM schools s\nJOIN satscores sat ON s.cdscode = sat.cds\nWHERE s.county = 'Riverside' AND avgscrmath / numtsttakr > 400;\t----- bird -----\tcalifornia_schools",
    "445": " SELECT s.school, s.street, s.city, s.state, s.zip\nFROM schools s\nJOIN frpm f ON s.cdscode = f.\"School Code\"\nWHERE s.highgrade = '12'\nAND s.county = 'Monterey'\nAND f.\"Percent (%) Eligible FRPM (Ages 15-17)\" > 800;\t----- bird -----\tcalifornia_schools",
    "446": " SELECT s.school, s.phone as communication_number, avgscrwrite\nFROM satscores s\nJOIN schools sch ON s.cds = sch.ncesdist || sch.ncesschool\nWHERE sch.opendate > '1991-01-01' OR sch.closeddate < '2000-01-01'\nGROUP BY s.cds, s.avgscrwrite, sch.school, sch.phone;\n\nExplanation:\n\n1. Join the `satscores` and `schools` tables on the `cds` field of the `satscores` table and the concatenation of the `ncesdist` and `ncesschool` fields of the `schools` table.\n2. Filter the records where the `opendate` of the `schools` table is greater than '1991-01-01' or the `closeddate` is less than '2000-01-01'.\n3. Group the records by the `cds`, `avgscrwrite`, `school`, and `phone` fields.\n4. Select the `school`, `phone` as `communication_number`, and `avgscrwrite` fields.\n5. The result will be the average score in writing for the schools that were opened after 1991 or closed before 2000, along with the school names and communication numbers if there is any.\t----- bird -----\tcalifornia_schools",
    "447": " SELECT s.school, s.doc\nFROM schools s\nJOIN frpm f ON s.cdscode = f.\"School Code\"\nWHERE s.fundingtype = 'Locally Funded'\nAND (s.Enrollment(K-12) - s.Enrollment(Ages 5-17)) > (\nSELECT AVG(s.Enrollment(K-12) - s.Enrollment(Ages 5-17))\nFROM schools s\nJOIN frpm f ON s.cdscode = f.\"School Code\"\nWHERE s.fundingtype = 'Locally Funded'\n)\t----- bird -----\tcalifornia_schools",
    "448": " SELECT s.cdscode,\ns.school,\n(s.Free_Meal_Count_K12::numeric / s.Enrollment_K12::numeric) AS eligible_free_rate\nFROM (\nSELECT cdscode,\nschool,\nSUM(CASE WHEN Low_Grade BETWEEN 1 AND 12 THEN Enrollment_K12 ELSE 0 END) AS Enrollment_K12,\nSUM(CASE WHEN Low_Grade BETWEEN 1 AND 12 THEN Free_Meal_Count_K12 ELSE 0 END) AS Free_Meal_Count_K12\nFROM schools s\nJOIN frpm f ON s.cdscode = f.School_Code\nGROUP BY 1, 2\nORDER BY 3 DESC\nLIMIT 10\n) s\nORDER BY eligible_free_rate DESC\nLIMIT 2;\t----- bird -----\tcalifornia_schools",
    "449": " SELECT\ns.cdscode,\ns.school,\n(sfrpm.FRPM_Count_K-12 / sfrpm.Enrollment_K-12) as eligible_free_reduced_meal_rate\nFROM\nschools s\nJOIN\n(\nSELECT\ncdscode,\nSUM(FRPM_Count_K-12) as FRPM_Count_K-12,\nSUM(Enrollment_K-12) as Enrollment_K-12\nFROM\nfrpm\nWHERE\nCharter_School_YN = 1 AND\ncdscode IN (SELECT cdscode FROM schools WHERE charter = 66)\nGROUP BY\ncdscode\nORDER BY\nFRPM_Count_K-12 DESC\nLIMIT 5\n) sfrpm\nON s.cdscode = sfrpm.cdscode\nORDER BY\neligible\\_free\\_reduced\\_meal\\_rate DESC;\t----- bird -----\tcalifornia_schools",
    "450": " SELECT s.street, s.city, s.state, s.zip\nFROM satscores s\nJOIN schools sch ON s.cds = sch.ncesdist || sch.ncesschool\nORDER BY (s.numge1500::float / s.numtsttakr) ASC\nLIMIT 1;\n\nThis query first joins the `satscores` and `schools` tables on the `cds` field of the `satscores` table and the concatenation of the `ncesdist` and `ncesschool` fields of the `schools` table. This is because the `cds` field in the `satscores` table corresponds to the concatenation of the `ncesdist` and `ncesschool` fields in the `schools` table.\n\nThe query then orders the resulting rows by the excellence rate, which is calculated as the number of students with a score of 1500 or above divided by the total number of test takers, in ascending order. This will put the school with the lowest excellence rate at the top of the result set.\n\nFinally, the query limits the result set to a single row using the `LIMIT` clause and selects the `street`, `city`, `state`, and `zip` columns from the `schools` table to get the complete address of the school with the lowest excellence rate.\t----- bird -----\tcalifornia_schools",
    "451": " SELECT s.admfname1 || ' ' || s.admlname1 AS administrator\nFROM schools s\nJOIN satscores ss ON s.cdscode = ss.cds\nJOIN (\n    SELECT cdscode, MAX(numge1500) AS max_numge1500\n    FROM satscores\n    GROUP BY cdscode\n) sub ON s.cdscode = sub.cdscode AND ss.numge1500 = sub.max_numge1500;\t----- bird -----\tcalifornia_schools",
    "452": " SELECT AVG(numtsttakr)\nFROM satscores\nJOIN schools\nON satscores.cds = schools.cdscode\nWHERE schools.opendate BETWEEN '1980-01-01' AND '1980-12-31' AND schools.district = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "453": " SELECT s.phone\nFROM satscores s\nJOIN schools sch ON s.cds = sch.ncesdist\nWHERE sch.district = 'Fresno Unified'\nAND avgscrread = (\n    SELECT MIN(avgscrread)\n    FROM satscores\n    WHERE cds IN (\n        SELECT ncesdist\n        FROM schools\n        WHERE district = 'Fresno Unified'\n    )\n) ;\t----- bird -----\tcalifornia_schools",
    "454": " WITH virtual_schools AS (\n    SELECT s.cdscode, s.school, AVG(satscores.avgscrread) as avg_reading_score\n    FROM schools s\n    JOIN satscores ON s.cdscode = satscores.cds\n    WHERE s.virtual = 'F'\n    GROUP BY s.cdscode, s.school\n),\ncounty_max_scores AS (\n    SELECT cdscode, MAX(avg_reading_score) as max_score\n    FROM virtual_schools\n    GROUP BY cdscode\n)\nSELECT vs.cdscode, vs.school\nFROM virtual_schools vs\nJOIN county_max_scores cms ON vs.cdscode = cms.cdscode\nWHERE vs.avg_reading_score = cms.max_score\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "455": " SELECT s.school, sats.avgscrwrite\nFROM schools s\nJOIN satscores sats ON s.school = sats.sname\nJOIN (\n    SELECT cdscode, MAX(admfname1) AS admin_name\n    FROM schools\n    WHERE admfname1 = 'Ricci Ulrich' OR admfname2 = 'Ricci Ulrich' OR admfname3 = 'Ricci Ulrich'\n    GROUP BY cdscode\n) admins ON s.cdscode = admins.cdscode\nORDER BY sats.avgscrwrite DESC;\t----- bird -----\tcalifornia_schools",
    "456": " SELECT s.cdscode, s.school, s.enrollment\\_k12\nFROM schools s\nJOIN (\n    SELECT cdscode, SUM(enrollment\\_k12) as enrollment\\_k1\t----- bird -----\tcalifornia_schools",
    "457": " SELECT AVG(COUNT(cdscode)) AS \"Monthly Average Number of Schools Opened\"\nFROM schools\nWHERE county = 'Alameda' AND doc = 52 AND EXTRACT(YEAR FROM lastupdate) = 1980\nGROUP BY EXTRACT(MONTH FROM lastupdate)\nORDER BY EXTRACT(MONTH FROM lastupdate);\t----- bird -----\tcalifornia_schools",
    "458": " SELECT \n       COUNT(DISTINCT s1.cdscode) FILTER (WHERE s1.doc = '54' AND s1.county = 'Orange') /\n       COUNT(DISTINCT s2.cdscode) FILTER (WHERE s2.doc = '52' AND s2.county = 'Orange') \n       AS ratio\nFROM \n       schools s1, schools s2;\t----- bird -----\tcalifornia_schools",
    "459": " SELECT s.school, s.street\nFROM satscores s\nJOIN (\n    SELECT cds, AVG(avgscrmath) as avg_math\n    FROM satscores\n    GROUP BY cds\n    ORDER BY avg_math DESC\n    LIMIT 1 OFFSET 6\n) subquery ON s.cds = subquery.cds;\t----- bird -----\tcalifornia_schools",
    "460": " SELECT COUNT(\\*)\nFROM schools s\nJOIN frpm f ON s.cdscode = f.\"School Code\"\nWHERE s.charter = 0\nAND f.\"Percent (%) Eligible Free (K-12)\" < 0.18\nAND s.county = 'Los Angeles';\t----- bird -----\tcalifornia_schools",
    "461": " SELECT frpm.\"Enrollment (Ages 5-17)\"\nFROM frpm\nJOIN schools ON frpm.\"School Code\" = schools.\"ncesschool\"\nWHERE schools.\"cdscode\" = 'SSS' AND frpm.\"Academic Year\" = '2014-2015' AND schools.\"district\" = 'Fremont';\t----- bird -----\tcalifornia_schools",
    "462": " SELECT s.school, ((s.FRPM_Count_Ages_5_17 / s.Enrollment_Ages_5_17) * 100) AS Percent\\_Eligible\\_FRPM\\_Ages\\_5-17\nFROM (\nSELECT sch.school, fr.Enrollment\\_Ages\\_5\\_17, fr.FRPM\\_Count\\_Ages\\_5\\_17\nFROM schools sch\nJOIN frpm fr ON sch.cdscode = fr.School\\_Code\nWHERE sch.county = 'Los Angeles' AND sch.High\\_Grade = '9' AND sch.Low\\_Grade = 'K'\n) s;\t----- bird -----\tcalifornia_schools",
    "463": " SELECT frpm.County Name, COUNT(\\*) as Virtual Schools\nFROM frpm\nJOIN schools ON frpm.School Code = schools.ncesdist\nWHERE virtual = 'T' AND \"County Name\" IN ('San Diego', 'Santa Barbara')\nGROUP BY frpm.County Name\nORDER BY Virtual Schools DESC\nLIMIT 1;\n\nThis query will join the frpm and schools tables on the School Code / ncesdist column, filter for virtual schools in San Diego and Santa Barbara counties, and then group by county name and count the number of virtual schools. The ORDER BY and LIMIT clauses are used to get the county with the most virtual schools.\t----- bird -----\tcalifornia_schools",
    "464": " SELECT s.grade_span\nFROM (\nSELECT schools.*,\nCASE\nWHEN high_grade >= 12 AND low_grade <= 12 THEN 'K-12'\nWHEN high_grade >= 9 AND low_grade <= 9 THEN '9-12'\nWHEN high_grade >= 6 AND low_grade <= 6 THEN '6-8'\nWHEN high_grade >= 3 AND low_grade <= 3 THEN 'K-3'\nELSE 'Other'\nEND AS grade_span\nFROM schools\nORDER BY longitude DESC\nLIMIT 1\n) s;\t----- bird -----\tcalifornia_schools",
    "465": " SELECT city, COUNT(*) as num_schools\nFROM (\n    SELECT s.city, s.cdscode\n    FROM schools s\n    JOIN frpm f ON s.cdscode = f.School Code\n    WHERE s.magnet = 1 AND (Low Grade = 'K' AND High Grade = '8') AND f.`NSLP Provision Status` = 'Multiple Provision Types'\n) subquery\nGROUP BY city;\t----- bird -----\tcalifornia_schools",
    "466": " SELECT frpm.\"Percent (%) Eligible Free (K-12)\"\nFROM frpm\nJOIN schools ON frpm.\"School Code\" = schools.ncesdist\nWHERE schools.admfname1 = 'Alusine' AND frpm.\"County Code\" IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "467": " SELECT DISTINCT admemail1 as valid_email\nFROM schools s\nJOIN frpm f ON s.cdscode = f.\"School Code\"\nJOIN satscores sat ON s.cdscode = sat.cds\nWHERE county = 'San Bernardino'\nAND city = 'San Bernardino City Unified'\nAND opendate BETWEEN '2009-01-01' AND '2010-12-31'\nAND (soc = '62' OR doc = '54')\nAND charter = 0;\t----- bird -----\tcalifornia_schools",
    "468": " SELECT COUNT(a.account\\_id)\nFROM account a\nJOIN district d ON a.district\\_id = d.district\\_id\nWHERE d.a3 = 'Vychodni Cechy' AND a.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "469": " SELECT COUNT(a11)\nFROM district\nWHERE a11 > 6000 AND a11 < 10000 AND a3 = 'F';\t----- bird -----\tfinancial",
    "470": " SELECT COUNT(*)\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M' AND d.a3 = 'North Bohemia' AND c.a11 > 8000;\t----- bird -----\tfinancial",
    "471": " SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nWHERE c.gender = 'F'\nAND c.birth_date = (SELECT MAX(birth_date) FROM client)\nAND a.account_id IN (\nSELECT account_id\nFROM account ac\nJOIN client cl ON ac.district_id = cl.district_id\nWHERE cl.gender = 'F'\nGROUP BY ac.account_id\nORDER BY AVG(a11) ASC\nLIMIT 1)\nAND EXISTS (\nSELECT 1\nFROM district d\nWHERE d.district_id = a.district_id\nAND EXISTS (\nSELECT 1\nFROM client\nWHERE district_id = d.district_id\nGROUP BY district_id\nHAVING MAX(birth_date) = (SELECT MAX(birth_date) FROM client)\n)\nAND EXISTS (\nSELECT 1\nFROM client\nWHERE district_id = d.district_id\nGROUP BY district_id\nHAVING MIN(a11) = (SELECT MIN(a11) FROM client WHERE gender = 'F')\n)\n);\n\nSELECT MAX(a11) - MIN(a11) AS gap\nFROM district d\nJOIN account ac ON d.district_id = ac.district_id\nJOIN client cl ON ac.district_id = cl.district_id\nWHERE cl.gender = 'F'\nAND cl.birth_date = (SELECT MAX(birth_date) FROM client)\nAND ac.account_id IN (\nSELECT account_id\nFROM account ac\nJOIN client cl ON ac.district_id = cl.district_id\nWHERE cl.gender = 'F'\nGROUP BY ac.account_id\nORDER BY AVG(a11) ASC\nLIMIT 1\n);\t----- bird -----\tfinancial",
    "472": " SELECT account_id\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE birth_date = (SELECT MIN(birth_date) FROM client) AND a11 = (SELECT MAX(a11) FROM district);\t----- bird -----\tfinancial",
    "473": " SELECT account_id\nFROM loan\nWHERE date IN (SELECT date FROM loan WHERE YEAR(date) = 1997 AND status = 'APPROVED') AND frequency = 'POPLATEK TYDNE'\nORDER BY amount\nLIMIT 1;\t----- bird -----\tfinancial",
    "474": " SELECT account_id\nFROM loan\nWHERE duration > 12 AND date_part('year', age(date)) = 1993\nORDER BY amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": " SELECT COUNT(\\*)\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nWHERE c.gender = 'F' AND c.birth\\_date < '1950-01-01' AND c.district\\_id = (SELECT district\\_id FROM district WHERE a2 = 'Sokolov');\t----- bird -----\tfinancial",
    "476": " SELECT district.a2\nFROM district\nJOIN client ON district.district_id = client.district_id\nWHERE client.gender = 'F' AND client.birth\\_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": " SELECT ROUND(DIVIDE(COUNT(c.client\\_id) FILTER(WHERE c.gender = 'M'), COUNT(c.client\\_id)) \\* 100, 2) AS percentage_of_male_clients\nFROM client c\nJOIN district d ON c.district\\_id = d.district\\_id\nWHERE d.a3 = 'South Bohemia' AND d.a4 = (\nSELECT MAX(a4) FROM district WHERE a3 = 'South Bohemia'\n);\t----- bird -----\tfinancial",
    "478": " SELECT\n    ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate\nFROM\n    (SELECT\n        balance\n    FROM\n        trans\n    WHERE\n        account_id = (SELECT client.account_id\n                      FROM client\n                      JOIN loan\n                        ON client.client_id = loan.account_id\n                      WHERE loan.date = (SELECT MIN(date)\n                                        FROM loan\n                                        WHERE date >= '1993-07-05'\n                                       )\n                     ) AND date = (SELECT MAX(date)\n                                  FROM trans\n                                  WHERE date <= '1993-03-22'\n                                 )\n    ) t1,\n    (SELECT\n        balance\n    FROM\n        trans\n    WHERE\n        account_id = (SELECT client.account_id\n                      FROM client\n                      JOIN loan\n                        ON client.client_id = loan.account_id\n                      WHERE loan.date = (SELECT MIN(date)\n                                        FROM loan\n                                        WHERE date >= '1993-07-05'\n                                       )\n                     ) AND date = (SELECT MAX(date)\n                                  FROM trans\n                                  WHERE date <= '1998-12-27'\n                                 )\n    ) t2;\t----- bird -----\tfinancial",
    "479": " SELECT\n(SUM(amount) FILTER (WHERE status = 'A')) * 100.0 / SUM(amount) AS percentage\nFROM loan;\t----- bird -----\tfinancial",
    "480": " SELECT\n(SUM(CASE WHEN loan.amount < 100000 AND loan.status = 'C' THEN loan.amount ELSE 0 END) / SUM(loan.amount)) * 100 AS percentage\nFROM loan\nJOIN account ON loan.account_id = account.account_id;\t----- bird -----\tfinancial",
    "481": " SELECT d.a12 AS unemployment\\_rate\\_2015,\nd.a13 AS unemployment\\_rate\\_2016,\n((d.a13 - d.a12) / d.a12) * 100 AS unemployment\\_increment\\_percentage,\ndistrict\\_name\nFROM district d\nJOIN account a ON d.district\\_id = a.district\\_id\nJOIN client c ON a.account\\_id = c.account\\_id\nJOIN disp ds ON c.client\\_id = ds.client\\_id\nJOIN card cd ON ds.disp\\_id = cd.disp\\_id\nJOIN loan l ON a.account\\_id = l.account\\_id\nWHERE l.status = 'D'\nJOIN (\nSELECT district\\_id, a7 AS district\\_name\nFROM district\n) district\\_names ON d.district\\_id = district\\_names.district\\_id;\t----- bird -----\tfinancial",
    "482": " SELECT a2, COUNT(DISTINCT account_id) as num_female_accounts\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nWHERE c.gender = 'F'\nGROUP BY a2\nORDER BY num_female_accounts DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": " SELECT COUNT(\\*)\nFROM loan\nWHERE amount >= 250000 AND date BETWEEN '1995-01-01' AND '1997-12-31' AND account_id IN (\n    SELECT account_id\n    FROM account\n    WHERE frequency = 'POPLATEK MESICNE'\n);\t----- bird -----\tfinancial",
    "484": " SELECT COUNT(\\*)\nFROM account\nJOIN district ON account.district\\_id = district.district\\_id\nWHERE district.a2 = '1' AND account.frequency = 'C';\t----- bird -----\tfinancial",
    "485": " SELECT COUNT(DISTINCT c.client\\_id)\nFROM client c\nJOIN district d ON c.district\\_id = d.district\\_id\nWHERE c.gender = 'M' AND d.a15 = (\nSELECT MAX(d2.a15)\nFROM district d2\nWHERE d2.a15 < (\nSELECT MAX(d3.a15)\nFROM district d3\n)\n) AND d.a4 = '1995';\t----- bird -----\tfinancial",
    "486": " SELECT d.a2 AS district_name, SUM(t.amount) AS total_withdrawal\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.a2\nORDER BY total_withdrawal DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": " SELECT COUNT(\\*)\nFROM account\nJOIN district ON account.district\\_id = district.district\\_id\nWHERE district.a2 = '1' AND account.frequency = 'C';\t----- bird -----\tfinancial",
    "488": " SELECT COUNT(DISTINCT c.client\\_id)\nFROM client c\nJOIN district d ON c.district\\_id = d.district\\_id\nWHERE c.gender = 'M' AND d.a15 = (\nSELECT MAX(d2.a15)\nFROM district d2\nWHERE d2.a15 < (\nSELECT MAX(d3.a15)\nFROM district d3\n)\n) AND d.a4 = '1995';\t----- bird -----\tfinancial",
    "489": " SELECT account_id\nFROM trans\nWHERE type = 'VYBER KARTOU' AND amount < (\nSELECT AVG(amount)\nFROM trans\nWHERE type = 'VYBER KARTOU' AND EXTRACT(YEAR FROM date) = 1998\n) AND EXTRACT(YEAR FROM date) = 1998;\t----- bird -----\tfinancial",
    "490": " SELECT DISTINCT account.type\nFROM account\nJOIN district ON account.district\\_id = district.district\\_id\nWHERE account.type != 'OWNER' AND district.a11 BETWEEN 8000 AND 9000;\t----- bird -----\tfinancial",
    "491": " SELECT AVG(district.a15)\nFROM district\nJOIN account ON district.district_id = account.district_id\nWHERE district.a15 > 4000 AND EXTRACT(YEAR FROM account.date) >= 1997;\t----- bird -----\tfinancial",
    "492": " SELECT t.*\nFROM trans t\nJOIN card c ON t.account = c.card_id\nJOIN disp d ON c.disp_id = d.disp_id\nJOIN client cl ON d.client_id = cl.client_id\nWHERE cl.client_id = 3356 AND t.type = 'VYBER';\t----- bird -----\tfinancial",
    "493": " SELECT 100.0 * COUNT(c.client_id) FILTER (WHERE c.gender = 'F' AND d.a11 > 10000) / COUNT(c.client_id) FILTER (WHERE d.a11 > 10000) AS percentage\nFROM client c\nJOIN account a ON c.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE d.a11 > 10000;\t----- bird -----\tfinancial",
    "494": " SELECT ROUND((SUM(l.amount WHERE YEAR(l.date) = 1997) - SUM(l.amount WHERE YEAR(l.date) = 199\t----- bird -----\tfinancial",
    "495": " SELECT frequency\nFROM account\nWHERE account\\_id = 3;\n\nSELECT SUM(amount)\nFROM trans\nWHERE account\\_id = 3 AND operation = 'debit' AND k\\_symbol = '3539';\t----- bird -----\tfinancial",
    "496": " SELECT\n(COUNT(client.client\\_id) FILTER (WHERE client.gender = 'M' AND account.frequency = 'POPLATEK TYDNE')) * 100.0 / COUNT(DISTINCT account.account\\_id)\nFROM client\nLEFT JOIN account ON client.district\\_id = account.district\\_id;\t----- bird -----\tfinancial",
    "497": " SELECT account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nWHERE gender = 'F'\nAND birth_date = (SELECT MIN(birth_date) FROM client)\nAND client.district_id IN (\n    SELECT district_id\n    FROM client\n    JOIN (\n        SELECT district_id, MIN(a11) as min_salary\n        FROM client\n        JOIN district ON client.district_id = district.district_id\n        GROUP BY district_id\n    ) as subquery ON client.district_id = subquery.district_id AND a11 = subquery.min_salary\n);\t----- bird -----\tfinancial",
    "498": " SELECT AVG(loan.amount)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.status = 'C' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": " SELECT c.client\\_id, EXTRACT(YEAR FROM age(c.birth\\_date)) - EXTRACT(YEAR FROM CURRENT\\_DATE) AS age\nFROM client c\nJOIN card ca ON c.client\\_id = ca.disp\\_id\nWHERE ca.type = 'gold' AND EXISTS (\n    SELECT 1\n    FROM disp d\n    WHERE c.client\\_id = d.client\\_id AND d.type = 'OWNER'\n)\n```\t----- bird -----\tfinancial"
}