{
    "0": "SELECT \n    SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) / SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) \nFROM \n    customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customerid, consumption\nFROM yearmonth\nWHERE date BETWEEN '201201' AND '201212' AND consumption = (\n    SELECT MIN(consumption)\n    FROM yearmonth\n    WHERE date BETWEEN '201201' AND '201212' AND customerid IN (\n        SELECT customerid\n        FROM customers\n        WHERE segment = 'LAM'\n    )\n) AND customerid IN (\n    SELECT customerid\n    FROM customers\n    WHERE segment = 'LAM'\n);\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(consumption) / 12 \nFROM yearmonth \nWHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') \nAND LEFT(date, 4) = '2013';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    SUM(CASE WHEN c.currency = 'CZK' THEN y.consumption::float ELSE 0 END) - \n    SUM(CASE WHEN c.currency = 'EUR' THEN y.consumption::float ELSE 0 END) \nAS difference_in_consumption\nFROM customers c\nJOIN yearmonth y ON c.customerid = y.customerid\nWHERE y.date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT LEFT(ym.date, 4) AS year, SUM(ym.consumption) AS total_consumption\nFROM yearmonth ym\nJOIN customers c ON ym.customerid = c.customerid\nWHERE c.currency = 'CZK'\nGROUP BY year\nORDER BY total_consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT \n    ym.date, \n    SUM(t.amount) AS total_consumption\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.customerid = c.customerid\nJOIN \n    yearmonth ym ON t.customerid = ym.customerid\nWHERE \n    c.segment = 'SME' \n    AND LEFT(ym.date, 4) = '2013'\nGROUP BY \n    ym.date\nORDER BY \n    total_consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SME_avg - LAM_avg) AS SME_LAM_diff, \n    (LAM_avg - KAM_avg) AS LAM_KAM_diff, \n    (KAM_avg - SME_avg) AS KAM_SME_diff\nFROM \n    (SELECT \n         AVG(consumption) AS SME_avg\n     FROM \n         yearmonth\n     WHERE \n         date BETWEEN '201301' AND '201312' \n         AND customerid IN \n             (SELECT \n                  customerid \n              FROM \n                  customers \n              WHERE \n                  segment = 'SME' \n                  AND currency = 'CZK' \n              ORDER BY \n                  consumption \n              LIMIT 1)) AS SME,\n    (SELECT \n         AVG(consumption) AS LAM_avg\n     FROM \n         yearmonth\n     WHERE \n         date BETWEEN '201301' AND '201312' \n         AND customerid IN \n             (SELECT \n                  customerid \n              FROM \n                  customers \n              WHERE \n                  segment = 'LAM' \n                  AND currency = 'CZK' \n              ORDER BY \n                  consumption \n              LIMIT 1)) AS LAM,\n    (SELECT \n         AVG(consumption) AS KAM_avg\n     FROM \n         yearmonth\n     WHERE \n         date BETWEEN '201301' AND '201312' \n         AND customerid IN \n             (SELECT \n                  customerid \n              FROM \n                  customers \n              WHERE \n                  segment = 'KAM' \n                  AND currency = 'CZK' \n              ORDER BY \n                  consumption \n              LIMIT 1)) AS KAM;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    segment, \n    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY percentage_increase) OVER (PARTITION BY segment) AS median_percentage_increase,\n    MAX(percentage_increase) AS max_percentage_increase,\n    MIN(percentage_increase) AS min_percentage_increase\nFROM \n    (\n    SELECT \n        c.segment, \n        (ym2.consumption - ym1.consumption) / ym2.consumption * 100 AS percentage_increase\n    FROM \n        customers c\n    JOIN \n        yearmonth ym1 ON c.customerid = ym1.customerid AND LEFT(ym1.date, 4) = '2012'\n    JOIN \n        yearmonth ym2 ON c.customerid = ym2.customerid AND LEFT(ym2.date, 4) = '2013'\n    JOIN \n        transactions_1k t ON c.customerid = t.customerid\n    WHERE \n        c.currency = 'EUR'\n    ) AS subquery\nGROUP BY \n    segment;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(consumption) \nFROM yearmonth \nWHERE customerid = 6 AND date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SUM(CASE WHEN g.country = 'CZE' AND g.segment = 'discount' THEN 1 ELSE 0 END) - \n     SUM(CASE WHEN g.country = 'SVK' AND g.segment = 'discount' THEN 1 ELSE 0 END)) AS more_discount_gas_stations\nFROM \n    gasstations g;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    SUM(CASE WHEN c.currency = 'CZK' THEN t.amount ELSE 0 END) - \n    SUM(CASE WHEN c.currency = 'EUR' THEN t.amount ELSE 0 END) AS difference\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.customerid = c.customerid\nWHERE \n    c.segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT \n    ROUND(\n        (\n            (\n                SELECT COUNT(*) \n                FROM yearmonth \n                WHERE consumption > 46.73 AND customerid IN \n                    (\n                        SELECT customerid \n                        FROM customers \n                        WHERE segment = 'LAM'\n                    )\n            ) / \n            (\n                SELECT COUNT(*) \n                FROM customers \n                WHERE segment = 'LAM'\n            )\n        ) * 100, 2\n    ) AS percentage;\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \n    ROUND(\n        (\n            SUM(CASE WHEN consumption > 528.3 THEN 1 ELSE 0 END) / \n            COUNT(DISTINCT customerid)\n        ) * 100, 2\n    )\nFROM yearmonth\nWHERE date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(consumption::float) \nFROM yearmonth \nWHERE LEFT(date, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT p.description\nFROM products p\nJOIN transactions_1k t ON p.productid = t.productid\nJOIN yearmonth y ON t.customerid = y.customerid\nWHERE y.date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gs.country\nFROM gasstations gs\nJOIN transactions_1k t ON gs.gasstationid = t.gasstationid\nWHERE EXTRACT(MONTH FROM t.date) = 6 AND EXTRACT(YEAR FROM t.date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT ym.customerid)\nFROM yearmonth ym\nJOIN customers c ON ym.customerid = c.customerid\nWHERE c.currency = 'EUR' AND ym.consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT p.description\nFROM transactions_1k t\nJOIN gasstations g ON t.gasstationid = g.gasstationid\nJOIN products p ON t.productid = p.productid\nWHERE g.country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT time \nFROM transactions_1k \nWHERE gasstationid IN (SELECT gasstationid \n                       FROM gasstations \n                       WHERE chainid = 11);\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k\nWHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE country = 'CZE')\nAND date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.currency\nFROM customers c\nJOIN transactions_1k t ON c.customerid = t.customerid\nWHERE t.date = '2012-08-24' AND t.time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.segment \nFROM customers c \nJOIN transactions_1k t ON c.customerid = t.customerid \nWHERE t.date = '2012-08-23' AND t.time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k\nWHERE date = '2012-08-26' AND time BETWEEN '08:00:00' AND '09:00:00' \nAND gasstationid IN (SELECT gasstationid FROM gasstations WHERE country = 'CZE');\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT g.country \nFROM transactions_1k t \nJOIN customers c ON t.customerid = c.customerid \nJOIN gasstations g ON t.gasstationid = g.gasstationid \nWHERE t.date = '2012-08-24' AND t.price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    ROUND(\n        (\n            SELECT COUNT(DISTINCT t.customerid) \n            FROM transactions_1k t \n            JOIN customers c ON t.customerid = c.customerid \n            WHERE t.date = '2012-08-25' AND c.currency = 'EUR'\n        ) / \n        (\n            SELECT COUNT(DISTINCT customerid) \n            FROM customers \n            WHERE currency = 'EUR'\n        ) * 100, 2\n    ) AS percentage;\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (y2.consumption - y1.consumption) / y1.consumption AS consumption_decrease_rate\nFROM yearmonth y1, yearmonth y2, transactions_1k t\nWHERE y1.customerid = y2.customerid\nAND y1.customerid = t.customerid\nAND y1.date LIKE '2012%'\nAND y2.date LIKE '2013%'\nAND t.date = '2012-08-25'\nAND t.price = 634.8;\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    ROUND(\n        (\n            SUM(CASE WHEN c.segment = 'premium' THEN 1 ELSE 0 END) / \n            COUNT(c.segment) \n        ) * 100, 2\n    ) AS percentage_premium\nFROM \n    customers c\nJOIN \n    transactions_1k t ON c.customerid = t.customerid\nJOIN \n    gasstations g ON t.gasstationid = g.gasstationid\nWHERE \n    g.country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t.amount) AS total_spent, \n       SUM(CASE WHEN t.date = '201201' THEN t.amount ELSE 0 END) AS jan_2012_spent\nFROM transactions_1k t\nWHERE t.customerid = 38508 AND t.gasstationid IS NOT NULL;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.customerid, c.currency, SUM(t.price) / SUM(t.amount) AS avg_price\nFROM transactions_1k t\nJOIN customers c ON t.customerid = c.customerid\nGROUP BY c.customerid, c.currency\nORDER BY SUM(t.price) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.consumption\nFROM yearmonth ym\nJOIN (\n    SELECT DISTINCT t.customerid\n    FROM transactions_1k t\n    JOIN products p ON t.productid = p.productid\n    WHERE p.productid = 5 AND t.price / t.amount > 29.00\n) AS cust ON ym.customerid = cust.customerid\nWHERE ym.date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT m.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id)\nFROM event\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM attendance\n    GROUP BY link_to_event\n    HAVING COUNT(link_to_member) > 10\n) AND type = 'Meeting';\t----- bird -----\tstudent_club",
    "33": "SELECT event_name \nFROM event \nWHERE event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_event) > 20\n) \nAND type != 'fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT amount \nFROM income \nWHERE link_to_member IN \n    (SELECT member_id \n     FROM member \n     WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "35": "SELECT m.first_name, m.last_name \nFROM member m \nJOIN zip_code z ON m.zip = z.zip_code \nWHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT e.expense_id, e.expense_description, e.approved\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(e.cost) \nFROM expense e \nJOIN member m ON e.link_to_member = m.member_id \nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' \nAND (DATE_PART('month', e.expense_date::DATE) = 9 OR DATE_PART('month', e.expense_date::DATE) = 10);\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SUM(b.spent) FILTER (WHERE EXTRACT(YEAR FROM e.event_date) = 2019) - \n     SUM(b.spent) FILTER (WHERE EXTRACT(YEAR FROM e.event_date) = 2020)) AS difference \nFROM \n    budget b \nJOIN \n    event e ON b.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone \nFROM member \nWHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT e.status \nFROM expense \nJOIN budget ON expense.link_to_budget = budget.budget_id \nJOIN event e ON budget.link_to_event = e.event_id \nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": "SELECT m.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nWHERE t_shirt_size = 'Medium' AND link_to_major IN (\n    SELECT major_id\n    FROM major\n    WHERE major_name = 'Business'\n)\t----- bird -----\tstudent_club",
    "44": "SELECT m.department \nFROM member m \nWHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT date_received \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT COUNT(*)\nFROM (\n  SELECT event_name, \n         SUM(amount) AS total_amount\n  FROM budget\n  WHERE category = 'Advertisement'\n  GROUP BY event_name\n) AS subquery\nWHERE total_amount > (SELECT SUM(amount) \n                      FROM budget \n                      WHERE category = 'Advertisement' \n                      AND event_name = 'October Meeting');\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(e.cost) \nFROM expense e \nWHERE e.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT m.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT a.link_to_member)\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT m.first_name, m.last_name \nFROM member m \nJOIN major ma ON m.link_to_major = ma.major_id \nWHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name, b.spent, b.amount, b.spent / b.amount AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) \nFROM budget \nWHERE event_status = 'event';\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name, m.last_name \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nGROUP BY m.first_name, m.last_name \nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nJOIN budget b ON e.link_to_budget = b.budget_id \nJOIN event ev ON b.link_to_event = ev.event_id \nWHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name\nFROM event e\nJOIN expense ex ON e.event_id = ex.link_to_budget\nJOIN budget b ON ex.link_to_budget = b.link_to_event\nGROUP BY e.event_name\nORDER BY MIN(ex.cost) LIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 \nFROM expense ex \nJOIN event e ON ex.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "59": "SELECT source \nFROM income \nWHERE date_received BETWEEN '2019-09-01' and '2019-09-30' \nGROUP BY source \nORDER BY SUM(amount) DESC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*)\nFROM member\nWHERE link_to_major IN (\n    SELECT major_id\n    FROM major\n    WHERE major_name = 'Physics Teaching'\n);\t----- bird -----\tstudent_club",
    "61": "SELECT e.event_name \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE b.category = 'Advertisement' \nAND b.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement');\t----- bird -----\tstudent_club",
    "62": "SELECT *\nFROM attendance\nWHERE link_to_member IN (\n    SELECT member_id\n    FROM member\n    WHERE first_name = 'Maya' AND last_name = 'Mclean'\n) AND link_to_event IN (\n    SELECT event_id\n    FROM event\n    WHERE event_name = 'Women''s Soccer'\n);\t----- bird -----\tstudent_club",
    "63": "SELECT e.expense_description, e.cost \nFROM expense e \nJOIN budget b ON e.link_to_budget = b.budget_id \nJOIN event ev ON b.link_to_event = ev.event_id \nWHERE ev.event_name = 'September Speaker' AND e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE e.status = 'Closed' \nAND b.remaining = (SELECT MIN(remaining) FROM budget WHERE remaining < 0);\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND approved = 'true'\nGROUP BY expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nWHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'April Speaker')\nGROUP BY category\nORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) \nFROM expense \nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nWHERE link_to_member IN \n    (SELECT member_id \n     FROM member \n     WHERE first_name = 'Sacha' AND last_name = 'Harrison');\t----- bird -----\tstudent_club",
    "70": "SELECT e.type \nFROM event e \nWHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, ma.department, ma.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT b.category \nFROM budget b \nJOIN event e ON b.link_to_event = e.event_id \nWHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT ROUND((COUNT(CASE WHEN i.amount = 50 THEN 1 END)::numeric / COUNT(m.member_id) * 100, 2) \nFROM member m \nJOIN income i ON m.member_id = i.link_to_member \nWHERE m.t_shirt_size = 'Medium' AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name, m.last_name, m.phone \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT concat(m.first_name, ' ', m.last_name) as full_name, e.cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name, m.last_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT \n    ROUND(\n        100 * (\n            (COUNT(CASE WHEN Admission = '+' THEN 1 END) - COUNT(CASE WHEN Admission = '-' THEN 1 END)) / \n            COUNT(CASE WHEN Admission = '-' THEN 1 END)\n        ), 2\n    ) AS deviation_percentage\nFROM Patient\nWHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT \n    ROUND(\n        (\n            (COUNT(CASE WHEN year(Birthday) > '1930' AND Sex = 'F' THEN ID END) * 1.0) \n            / \n            COUNT(CASE WHEN Sex = 'F' THEN ID END)\n        ) * 100, 2\n    ) AS percentage\nFROM \n    Patient;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    ROUND(\n        (\n            (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-')\n            /\n            (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+')\n        )::NUMERIC, 2\n    ) AS ratio;\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT e.Diagnosis, l.TestDate\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE p.PatientID = '30609';\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT p.ID, p.Sex, p.Birthday \nFROM Patient p \nJOIN Examination e ON p.ID = e.PatientID \nJOIN Laboratory l ON e.ID = l.ExaminationID \nWHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT p.ID, age \nFROM Patient p \nJOIN Examination e ON p.ID = e.PatientID \nJOIN Laboratory l ON e.ID = l.ExaminationID \nWHERE l.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.sex, e.diagnosis \nFROM Patient p \nJOIN Examination e ON p.ID = e.patient_id \nJOIN Laboratory l ON e.ID = l.examination_id \nWHERE l.thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient\nWHERE Sex = 'F' AND year(Description) = '1997' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.patient_id = Examination.patient_id\nWHERE Examination.year = 1997 AND Patient.Thrombosis = '1' AND Patient.sex = 'F';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT e.symptoms, l.diagnosis\nFROM Examination e\nJOIN Patient p ON e.patient_id = p.id\nJOIN Laboratory l ON e.id = l.examination_id\nWHERE p.birthday = (SELECT MAX(birthday) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT l.Date, (EXTRACT(YEAR FROM e.\"First Date\") - EXTRACT(YEAR FROM p.Birthday)) AS age\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE e.Diagnosis = 'SJS'\nORDER BY age DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) \nAS ratio \nFROM \n    Patient \nJOIN \n    Examination \nON \n    Patient.patient_id = Examination.patient_id \nJOIN \n    Laboratory \nON \n    Examination.examination_id = Laboratory.examination_id;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nWHERE year(p.Birthday) < 18 AND year(e.\"Examination Date\") BETWEEN '1990' AND '1993';\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    age, \n    diagnosis \nFROM \n    ( \n        SELECT \n            SUBTRACT(year(e.examination_date), year(p.birthday)) AS age, \n            e.diagnosis, \n            l.hgb \n        FROM \n            Patient p \n        JOIN \n            Examination e ON p.patient_id = e.patient_id \n        JOIN \n            Laboratory l ON e.examination_id = l.examination_id \n        WHERE \n            l.hgb IS NOT NULL \n    ) AS subquery \nWHERE \n    hgb = (SELECT MAX(hgb) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT l.aCL_IgM \nFROM Patient p \nJOIN Examination e ON p.Patient_ID = e.Patient_ID \nJOIN Laboratory l ON e.Examination_ID = l.Examination_ID \nWHERE e.Examination_Date = '1993-11-12' AND e.Diagnosis = 'SLE' AND e.Description = '1994-02-19';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(CASE WHEN EXTRACT(MONTH FROM e.Date) = 11 THEN l.`T-CHO` ELSE 0 END) - \n     SUM(CASE WHEN EXTRACT(MONTH FROM e.Date) = 12 THEN l.`T-CHO` ELSE 0 END)) / \n    SUM(CASE WHEN EXTRACT(MONTH FROM e.Date) = 11 THEN l.`T-CHO` ELSE 0 END) * 100 \nFROM \n    Patient p \nJOIN \n    Examination e ON p.PatientID = e.PatientID \nJOIN \n    Laboratory l ON e.ExaminationID = l.ExaminationID \nWHERE \n    p.Birthday = '1959-02-18' \n    AND EXTRACT(YEAR FROM e.Date) = 1981;\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.PatientID\nJOIN Laboratory l ON e.ID = l.ExaminationID\nWHERE e.Date BETWEEN '1987-07-06' AND '1996-01-31' AND l.GPT > 30 AND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE e.Thrombosis = 2 AND l.ANA = 'S' AND l.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT p.*\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE e.Admission = '-' AND l.Date LIKE '1991-10%' AND l.T_BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(L.ALB) \nFROM Patient P \nJOIN Examination E ON P.PatientID = E.PatientID \nJOIN Laboratory L ON E.ExaminationID = L.ExaminationID \nWHERE P.SEX = 'F' AND L.PLT > 400 AND E.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND PatientID IN (\n    SELECT PatientID\n    FROM Examination\n    WHERE Diagnosis = 'APS'\n);\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT ROUND(DIVIDE(SUM(SEX = 'F'), COUNT(SEX)) * 100, 2) \nFROM Patient \nWHERE YEAR(BIRTHDAY) = '1980' AND Diagnosis='RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n           WHEN p.SEX = 'M' AND l.UA > 8.0 THEN 'Yes' \n           WHEN p.SEX = 'F' AND l.UA > 6.5 THEN 'Yes' \n           ELSE 'No' \n       END \nFROM Patient p \nJOIN Examination e ON p.PatientID = e.PatientID \nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID \nWHERE p.PatientID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.PatientID\nJOIN Laboratory l ON e.ID = l.ExaminationID\nWHERE p.SEX = 'M' AND l.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.date_of_birth, p.name, e.GPT\nFROM Patient p\nJOIN Examination e ON p.patient_id = e.patient_id\nJOIN Laboratory l ON e.examination_id = l.examination_id\nWHERE e.GPT > 60\nORDER BY p.date_of_birth ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT p.ID, p.sex, p.birthday \nFROM Patient p \nJOIN Examination e ON p.ID = e.patient_id \nJOIN Laboratory l ON e.ID = l.examination_id \nWHERE l.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT p.Sex, GROUP_CONCAT(DISTINCT p.ID) \nFROM Patient p \nJOIN Examination e ON p.ID = e.PatientID \nJOIN Laboratory l ON e.ID = l.ExaminationID \nWHERE l.\"T-BIL\" >= 2.0 \nGROUP BY p.Sex;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(DATE_PART('year', AGE(NOW(), birthday))) \nFROM Patient \nWHERE sex = 'M' \nAND ID IN (SELECT patient_id \n            FROM Examination \n            WHERE examination_id IN (SELECT examination_id \n                                     FROM Laboratory \n                                     WHERE \"T-CHO\" >= 250));\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT P.PatientID)\nFROM Patient P\nJOIN Examination E ON P.PatientID = E.PatientID\nJOIN Laboratory L ON E.ExaminationID = L.ExaminationID\nWHERE L.TG >= 200 AND (EXTRACT(YEAR FROM AGE(CURRENT_TIMESTAMP, P.Birthday)) > 50);\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE year(p.Birthday) BETWEEN '1936' AND '1956' AND p.sex = 'M' AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT P.ID, P.sex, EXTRACT(YEAR FROM age(current_timestamp, P.Birthday)) AS age\nFROM Patient P\nJOIN Examination E ON P.ID = E.PatientID\nJOIN Laboratory L ON E.ID = L.ExaminationID\nWHERE L.GLU >= 180 AND L.'T-CHO' < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, age, d.Diagnosis \nFROM Patient p \nJOIN Examination e ON p.ID = e.PatientID \nJOIN Laboratory l ON e.ID = l.ExaminationID \nJOIN (SELECT ID, (EXTRACT(YEAR FROM age(current_timestamp, Birthday))) AS age FROM Patient) pa ON p.ID = pa.ID \nJOIN (SELECT ExaminationID, Diagnosis FROM Examination) d ON e.ID = d.ExaminationID \nWHERE l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT p.ID, p.Sex \nFROM Patient p \nJOIN Examination e ON p.ID = e.PatientID \nJOIN Laboratory l ON e.ID = l.ExaminationID \nWHERE e.Diagnosis = 'SLE' AND l.HGB > 10 AND l.HGB < 17 \nORDER BY p.Birthday LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, age \nFROM Patient p \nJOIN (\n    SELECT e.PatientID \n    FROM Examination e \n    JOIN Laboratory l ON e.ID = l.ExaminationID \n    WHERE l.HCT >= 52 \n    GROUP BY e.PatientID \n    HAVING COUNT(e.ID) > 1\n) AS sub ON p.ID = sub.PatientID;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal\nFROM \n    Laboratory\nWHERE \n    PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.*\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE YEAR(e.Date) = '1984' \nAND SUBTRACT(year(current_timestamp), year(p.Birthday)) < 50 \nAND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n    ROUND(\n        (\n            SUM(CASE WHEN P.Sex = 'F' AND L.PT >= 14 THEN 1 ELSE 0 END) / \n            SUM(CASE WHEN L.PT >= 14 THEN 1 ELSE 0 END)\n        ) * 100, 2\n    ) AS percentage\nFROM \n    Patient P\nJOIN \n    Examination E ON P.PatientID = E.PatientID\nJOIN \n    Laboratory L ON E.ExaminationID = L.ExaminationID\nWHERE \n    DATE_PART('year', AGE(CURRENT_TIMESTAMP, P.Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE p.Sex = 'M' AND l.WBC > 3.5 AND l.WBC < 9.0 AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.IGG > 900 AND l.IGG < 2000 AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.IGA > 80 AND l.IGA < 500 AND YEAR(p.`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis \nFROM \n    (SELECT Diagnosis, COUNT(Diagnosis) as count \n     FROM \n         (SELECT p.PatientID, e.Diagnosis, l.IGM \n          FROM Patient p \n          JOIN Examination e ON p.PatientID = e.PatientID \n          JOIN Laboratory l ON e.ExaminationID = l.ExaminationID \n          WHERE l.IGM <= 40 OR l.IGM >= 400) as abnormal_igm \n     GROUP BY Diagnosis \n     ORDER BY count DESC \n     LIMIT 1) as most_common_disease;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.CRP = '+' AND l.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.CRE >= 1.5 AND EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.RNP IN ('-', '+-') AND e.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.SM IN('-', '0', '+-') AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.SC170 IN ('negative', '0') AND p.Sex = 'F' AND p.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.PatientID)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.CENTROMEA IN('-', '+-') AND l.SSB IN('-', '+-') AND p.Sex = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(birthday) \nFROM Patient p \nJOIN Examination e ON p.patient_id = e.patient_id \nJOIN Laboratory l ON e.examination_id = l.examination_id \nWHERE l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.PatientID = e.PatientID\nJOIN Laboratory l ON e.ExaminationID = l.ExaminationID\nWHERE l.CPK < 250 AND (l.KCT = '+' OR l.RVVT = '+' OR l.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT l.name \nFROM League l \nJOIN Match m ON l.id = m.league_id \nWHERE m.season = '2015/2016' \nGROUP BY l.name \nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Team\nJOIN Match ON Team.team_api_id = Match.away_team_api_id\nWHERE Match.season = '2009/2010' AND Match.league_id = (SELECT League.id FROM League WHERE League.name = 'Scotland Premier League')\nGROUP BY Team.team_long_name\nORDER BY COUNT(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 END) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT t.name, ta.buildUpPlaySpeed\nFROM Team t\nJOIN Team_Attributes ta ON t.id = ta.team_id\nORDER BY ta.buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT L.name \nFROM League L \nJOIN \n    (SELECT home_team_league, MAX(draws) AS max_draws \n     FROM \n         (SELECT home_team_league, SUM(CASE WHEN home_team_goal = away_team_goal THEN 1 ELSE 0 END) AS draws \n          FROM Match \n          WHERE season = '2015/2016' \n          GROUP BY home_team_league) AS sub \n     GROUP BY home_team_league) AS sub2 \nON L.id = sub2.home_team_league;\t----- bird -----\teuropean_football_2",
    "132": "SELECT EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.birthday)) AS age\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE pa.sprint_speed >= 97 AND pa.date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.league_name, COUNT(m.match_id) AS total_matches\nFROM Match m\nJOIN League l ON m.league_id = l.league_id\nGROUP BY l.league_name\nORDER BY total_matches DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team \nJOIN Team_Attributes \nON Team.team_api_id = Team_Attributes.team_api_id \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name \nFROM Team_Attributes \nWHERE buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) \n                            FROM Team_Attributes \n                            WHERE strftime('%Y', date) = '2012' \n                            AND buildUpPlayPassing IS NOT NULL) \nAND strftime('%Y', date) = '2012';\t----- bird -----\teuropean_football_2",
    "136": "SELECT ROUND((SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) / COUNT(player_fifa_api_id) * 100), 2) \nFROM Player \nWHERE YEAR(birthday) BETWEEN '1987' AND '1992';\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_fifa_api_id IN \n    (SELECT player_fifa_api_id \n     FROM Player \n     WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name, AVG(pa.heading_accuracy) AS avg_heading_accuracy\nFROM Player p\nJOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.height > 180\nGROUP BY p.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name \nFROM League L \nWHERE L.name IN (\n    SELECT M.league \n    FROM Match M \n    WHERE M.season = '2009/2010' \n    GROUP BY M.league \n    HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\n)\t----- bird -----\teuropean_football_2",
    "140": "SELECT * \nFROM Player \nWHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nWHERE country = 'Poland' AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT \n    CASE \n        WHEN h-finishing_rate > s-finishing_rate THEN h.name \n        WHEN h-finishing_rate < s-finishing_rate THEN s.name \n        ELSE 'Both have the same average finishing rate' \n    END \nFROM \n    (SELECT name, AVG(finishing) as finishing_rate \n     FROM Player \n     JOIN Player_Attributes ON Player.id = Player_Attributes.player_id \n     WHERE height = (SELECT MAX(height) FROM Player)) h, \n    (SELECT name, AVG(finishing) as finishing_rate \n     FROM Player \n     JOIN Player_Attributes ON Player.id = Player_Attributes.player_id \n     WHERE height = (SELECT MIN(height) FROM Player)) s;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(pa.overall_rating) \nFROM Player p \nJOIN Player_Attributes pa ON p.id = pa.id \nWHERE p.height > 170 AND strftime('%Y', p.date) >= '2010' AND strftime('%Y', p.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    AVG(CASE WHEN pa.player_name = 'Abdou Diallo' THEN pa.ball_control ELSE 0 END) / \n    COUNT(CASE WHEN pa.player_name = 'Abdou Diallo' THEN pa.id ELSE NULL END) - \n    AVG(CASE WHEN pa.player_name = 'Aaron Appindangoye' THEN pa.ball_control ELSE 0 END) / \n    COUNT(CASE WHEN pa.player_name = 'Aaron Appindangoye' THEN pa.id ELSE NULL END)\nFROM \n    Player_Attributes pa;\t----- bird -----\teuropean_football_2",
    "146": "SELECT p1.name\nFROM Player p1, Player p2\nWHERE p1.name = 'Aaron Lennon' AND p2.name = 'Abdelaziz Barrada'\nAND p1.birthday < p2.birthday;\t----- bird -----\teuropean_football_2",
    "147": "SELECT *\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nORDER BY pa.height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*)\nFROM Player_Attributes\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT p.player_id)\nFROM Player p\nJOIN Player_Attributes pa ON p.player_id = pa.player_id\nWHERE strftime('%Y', p.birthday)<'1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.*\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE pa.volley_score > 70 AND pa.dribbling_score > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*)\nFROM Match\nWHERE league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\nAND SUBSTR(date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.league_name\nFROM League l\nJOIN (\n    SELECT league_id, COUNT(m.match_id) as num_matches\n    FROM Match m\n    WHERE m.season = '2008/2009'\n    GROUP BY m.league_id\n    ORDER BY num_matches DESC\n    LIMIT 1\n) AS sub ON l.league_id = sub.league_id;\t----- bird -----\teuropean_football_2",
    "153": "SELECT ROUND(((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') * 100, 2) AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(pa.chanceCreationPassing) as highest_chance_creation_passing_score, pa.chanceCreationPassingClass as classification\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_id = p.player_id\nJOIN Team t ON p.team_id = t.team_id\nWHERE t.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": "SELECT name \nFROM Player \nWHERE id IN (\n    SELECT player_id \n    FROM Player_Attributes \n    WHERE overall_rating = 77 AND date LIKE '2016-06-23%'\n) \nORDER BY birthday \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating \nFROM Player p \nJOIN Player_Attributes pa ON p.player_id = pa.player_id \nWHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate \nFROM Player_Attributes \nWHERE player_name = 'Francesco Migliore' \nAND date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT m.date\nFROM Match m\nJOIN (\n    SELECT player_name, MAX(crossing) as max_crossing\n    FROM Player_Attributes\n    WHERE player_name = 'Kevin Constant'\n    GROUP BY player_name\n) pa ON m.player_name = pa.player_name\nJOIN Player p ON m.player_name = p.player_name\nJOIN Player_Attributes pa2 ON p.player_name = pa2.player_name\nWHERE pa2.crossing = pa.max_crossing\nORDER BY m.date\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT pa.build_up_play_passing_class \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nJOIN Match m ON p.player_api_id = m.player_api_id \nJOIN Team t ON m.team_api_id = t.team_api_id \nWHERE t.team_long_name = 'FC Lorient' AND m.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.defence_aggression \nFROM Team_Attributes ta \nJOIN Team t ON ta.team_id = t.id \nWHERE t.team_long_name = 'Hannover 96' AND ta.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Marko Arnautovic' \nAND pa.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    ROUND(\n        (\n            (SELECT overall_rating \n             FROM Player_Attributes \n             WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') \n            - \n            (SELECT overall_rating \n             FROM Player_Attributes \n             WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')\n        ) / \n        (SELECT overall_rating \n         FROM Player_Attributes \n         WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') \n        * 100, 2\n    ) AS percentage_diff;\t----- bird -----\teuropean_football_2",
    "164": "SELECT p.name \nFROM Player p \nJOIN Player_Attributes pa ON p.id = pa.player_id \nWHERE pa.height = (SELECT MAX(pa.height) FROM Player_Attributes pa);\t----- bird -----\teuropean_football_2",
    "165": "SELECT p.*\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nORDER BY pa.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT p.name \nFROM Player p \nJOIN Player_Attributes pa ON p.id = pa.player_id \nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT ta.team_short_name \nFROM Team_Attributes ta \nJOIN Team t ON ta.team_id = t.id \nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*)\nFROM Player\nWHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01';\t----- bird -----\teuropean_football_2",
    "169": "SELECT \n    (SELECT jumping FROM Player_Attributes WHERE id = 6) - \n    (SELECT jumping FROM Player_Attributes WHERE id = 23) AS jumping_score_difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_id \nFROM Player_Attributes \nWHERE preferred_foot = 'right' \nORDER BY potential ASC \nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*)\nFROM Player p\nJOIN Player_Attributes pa ON p.id = pa.player_id\nWHERE pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND p.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal \nFROM Match \nWHERE date = '2008-09-24' AND league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League');\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass \nFROM Team_Attributes \nWHERE team_id IN (SELECT id \n                   FROM Team \n                   WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing_rate, pa.curve_score\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nORDER BY p.weight DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) as num_games\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY num_games DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nWHERE team_api_id = (SELECT away_team_api_id \n                     FROM Match \n                     GROUP BY away_team_api_id \n                     ORDER BY SUM(away_team_goal) DESC \n                     LIMIT 1);\t----- bird -----\teuropean_football_2",
    "177": "SELECT p.* \nFROM Player p \nJOIN Player_Attributes pa ON p.id = pa.player_id \nORDER BY pa.overall_rating DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "178": "SELECT ROUND((COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END)::numeric / COUNT(id) * 100, 2) AS percentage;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverref \nFROM qualifying q \nJOIN drivers d ON q.driverid = d.driverid \nWHERE q.raceid = 20 AND q.q1 IN (SELECT MAX(q1) FROM qualifying WHERE raceid = 20 LIMIT 5 OFFSET 15)\t----- bird -----\tformula_1",
    "180": "SELECT d.surname \nFROM drivers d \nJOIN qualifying q ON d.driverid = q.driverid \nJOIN races r ON q.raceid = r.raceid \nWHERE r.raceid = 19 \nAND q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceid = 19);\t----- bird -----\tformula_1",
    "181": "SELECT r.name \nFROM races r \nJOIN circuits c ON r.circuitid = c.circuitid \nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT lat, lng \nFROM circuits \nWHERE circuitid IN (SELECT circuitid \n                     FROM races \n                     WHERE name = 'Australian Grand Prix');\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng \nFROM races \nJOIN circuits ON races.circuitid = circuits.circuitid \nWHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverid = drivers.driverid \nWHERE raceid = 354 AND forename = 'Bruno' AND surname = 'Senna';\t----- bird -----\tformula_1",
    "185": "SELECT number \nFROM drivers \nWHERE driverid IN (\n    SELECT driverid \n    FROM qualifying \n    WHERE q3 LIKE '1:54%' AND raceid = 903\n)\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*)\nFROM results\nJOIN races ON results.raceid = races.raceid\nJOIN drivers ON results.driverid = drivers.driverid\nWHERE races.year = 2007 AND races.name = 'Bahrain Grand Prix' AND results.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE r.raceid = 592 AND r.time IS NOT NULL\nORDER BY d.dob\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.url \nFROM lapTimes lt \nJOIN results r ON lt.resultid = r.resultid \nJOIN drivers d ON r.driverid = d.driverid \nWHERE lt.time LIKE '0:01:27%' AND r.raceid = 161;\t----- bird -----\tformula_1",
    "189": "SELECT lat, lng \nFROM races \nJOIN circuits ON races.circuitid = circuits.circuitid \nWHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url \nFROM constructorResults cr \nJOIN constructors c ON cr.constructorid = c.constructorid \nJOIN results r ON cr.resultid = r.resultid \nWHERE r.raceid = 9 \nAND cr.points = (SELECT MAX(cr2.points) \n                  FROM constructorResults cr2 \n                  JOIN results r2 ON cr2.resultid = r2.resultid \n                  WHERE r2.raceid = 9);\t----- bird -----\tformula_1",
    "191": "SELECT d.code \nFROM drivers d \nJOIN qualifying q ON d.driverid = q.driverid \nJOIN races r ON q.raceid = r.raceid \nWHERE r.raceid = 45 AND q.q3 LIKE '0:01:33%';\t----- bird -----\tformula_1",
    "192": "SELECT s.url \nFROM seasons s \nJOIN races r ON s.year = r.year \nWHERE r.raceid = 901;\t----- bird -----\tformula_1",
    "193": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE r.raceid = 872 AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality \nFROM results r \nJOIN drivers d ON r.driverid = d.driverid \nWHERE r.fastestlapspeed = (SELECT MAX(fastestlapspeed) FROM results);\t----- bird -----\tformula_1",
    "195": "SELECT ROUND(((SELECT fastestlapspeed FROM results WHERE raceid = 853 AND driverid IN (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) - \n               (SELECT fastestlapspeed FROM results WHERE raceid = 854 AND driverid IN (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) / \n              (SELECT fastestlapspeed FROM results WHERE raceid = 853 AND driverid IN (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) * 100, 2) AS percentage;\t----- bird -----\tformula_1",
    "196": "SELECT \n    ROUND(\n        (\n            COUNT(CASE WHEN r.time IS NOT NULL THEN d.driverid END) \n            / \n            COUNT(d.driverid) \n        ) * 100, 2\n    ) AS race_completion_rate\nFROM \n    results r\nJOIN \n    drivers d ON r.driverid = d.driverid\nWHERE \n    r.date = '1983-07-16';\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE year = (SELECT EXTRACT(YEAR FROM MIN(date)) FROM races) \nAND EXTRACT(MONTH FROM date) = (SELECT EXTRACT(MONTH FROM MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, SUM(r.points) AS total_points\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nGROUP BY d.forename, d.surname\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name, l.milliseconds \nFROM lapTimes l \nJOIN results r2 ON l.resultid = r2.resultid \nJOIN drivers d ON r2.driverid = d.driverid \nJOIN races r ON r2.raceid = r.raceid \nWHERE l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(milliseconds) \nFROM lapTimes \nJOIN results ON lapTimes.resultid = results.resultid \nJOIN races ON results.raceid = races.raceid \nJOIN drivers ON results.driverid = drivers.driverid \nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2009 AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT \n    ROUND(\n        (\n            COUNT(r.raceid) * 1.0 / \n            (SELECT COUNT(raceid) FROM results WHERE surname = 'Hamilton' AND year >= 2010)\n        ) * 100, 2\n    ) AS percentage\nFROM \n    results r\nWHERE \n    surname = 'Hamilton' \n    AND position > 1 \n    AND year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT d.forename, d.surname, d.nationality, MAX(r.points) \nFROM drivers d \nJOIN results r ON d.driverid = r.driverid \nGROUP BY d.driverid, d.forename, d.surname, d.nationality \nORDER BY COUNT(r.position) DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname, YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT r.name, c.name, c.location \nFROM races r \nJOIN circuits c ON r.circuitid = c.circuitid \nWHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "205": "SELECT r.name \nFROM results \nJOIN drivers d ON results.driverid = d.driverid \nWHERE d.forename || ' ' || d.surname = 'Alex Yoong' AND results.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.year, r.name \nFROM results \nJOIN races r ON results.raceid = r.raceid \nJOIN drivers d ON results.driverid = d.driverid \nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND results.fastestlap = 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.points\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nJOIN races ra ON r.raceid = ra.raceid\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY ra.year, ra.round\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT ROUND(COUNT(CASE WHEN country = 'Germany' THEN 1 END)::numeric / COUNT(*) * 100, 2) \nFROM races \nWHERE name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng \nFROM circuits \nWHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitref FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT country \nFROM drivers, (SELECT nationality, MIN(dob) AS min_dob FROM drivers GROUP BY nationality) AS oldest_drivers \nWHERE drivers.nationality = oldest_drivers.nationality AND drivers.dob = oldest_drivers.min_dob;\t----- bird -----\tformula_1",
    "212": "SELECT d.driverref \nFROM results r \nJOIN drivers d ON r.driverid = d.driverid \nJOIN races ra ON r.raceid = ra.raceid \nWHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2007 AND r.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT r.raceid, r.name, d.forename, d.surname, res.rank\nFROM results res\nJOIN races r ON res.raceid = r.raceid\nJOIN drivers d ON res.driverid = d.driverid\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestlapspeed) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "215": "SELECT positionorder \nFROM results \nJOIN races ON results.raceid = races.raceid \nJOIN drivers ON results.driverid = drivers.driverid \nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "216": "SELECT time \nFROM results \nWHERE position = 2 AND raceid IN (SELECT raceid FROM races WHERE year = 2008 AND name = 'Chinese Grand Prix');\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT d.driverid)\nFROM results r\nJOIN drivers d ON r.driverid = d.driverid\nWHERE r.raceid IN (SELECT raceid FROM races WHERE year = 2008 AND name = 'Chinese Grand Prix')\nAND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT \n    (EXTRACT(EPOCH FROM (r1.time - r2.time)) / EXTRACT(EPOCH FROM r2.time)) * 100 \nFROM \n    results r1, \n    results r2 \nWHERE \n    r1.raceid = (SELECT raceid FROM races WHERE year = 2008 AND round = 1) \n    AND r2.raceid = (SELECT raceid FROM races WHERE year = 2008 AND round = 1) \n    AND r1.position = 1 \n    AND r2.position = (SELECT MAX(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND round = 1));\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(r.points)\nFROM results r\nJOIN constructors c ON r.constructorid = c.constructorid\nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructors c\nJOIN results r ON c.constructorid = r.constructorid\nJOIN races ra ON r.raceid = ra.raceid\nWHERE ra.raceid = 291 AND r.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorid)\nFROM constructors c\nJOIN (\n    SELECT constructorid\n    FROM results\n    GROUP BY constructorid\n    HAVING COUNT(raceid) = 2 AND SUM(points) = 0\n) r ON c.constructorid = r.constructorid\nWHERE c.nationality = 'Japanese';\t----- bird -----\tformula_1",
    "223": "SELECT \n    ROUND(\n        (\n            COUNT(DISTINCT d.driverid) / \n            (\n                SELECT COUNT(DISTINCT driverid) \n                FROM results r \n                JOIN drivers d ON r.driverid = d.driverid \n                WHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009\n            )\n        ) * 100, 2\n    ) AS race_completion_percentage\nFROM \n    results r \nJOIN \n    drivers d ON r.driverid = d.driverid \nWHERE \n    d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009 AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "224": "SELECT \n    year, \n    AVG(EXTRACT(EPOCH FROM time)) \nFROM \n    results \nJOIN \n    races ON results.raceid = races.raceid \nWHERE \n    year < 1975 AND position = 1 AND time IS NOT NULL \nGROUP BY \n    year;\t----- bird -----\tformula_1",
    "225": "SELECT fastestlap\nFROM results\nWHERE year = 2009 AND position = 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestlapspeed) \nFROM results \nJOIN races ON results.raceid = races.raceid \nWHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "227": "SELECT \n    ROUND(\n        (\n            COUNT(CASE WHEN EXTRACT(YEAR FROM d.dob) < 1985 AND r.laps > 50 THEN d.driverid END) \n            / \n            COUNT(CASE WHEN EXTRACT(YEAR FROM r.date) BETWEEN 2000 AND 2005 THEN d.driverid END) \n        ) * 100, 2\n    ) AS percentage\nFROM \n    drivers d\nJOIN \n    results r ON d.driverid = r.driverid;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverid)\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN lapTimes lt ON r.resultid = lt.resultid\nWHERE d.nationality = 'French' AND lt.time < '02:00.00';\t----- bird -----\tformula_1",
    "229": "SELECT code \nFROM drivers \nWHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT code\nFROM drivers\nWHERE driverid IN (\n    SELECT driverid\n    FROM drivers\n    ORDER BY EXTRACT(YEAR FROM AGE(CURRENT_DATE, dob)) ASC\n    LIMIT 3\n) AND nationality = 'Dutch';\t----- bird -----\tformula_1",
    "231": "SELECT driverref \nFROM drivers \nWHERE nationality = 'German' \nAND dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German');\t----- bird -----\tformula_1",
    "232": "SELECT d.driverid, d.code \nFROM drivers d \nJOIN results r ON d.driverid = r.driverid \nWHERE d.dob >= '1971-01-01' AND d.dob < '1972-01-01' AND r.fastestlap = 1;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*)\nFROM results\nWHERE raceid BETWEEN 50 AND 100\nAND time IS NOT NULL\nAND statusid = 2;\t----- bird -----\tformula_1",
    "234": "SELECT name, location, lat, lng \nFROM circuits \nWHERE country = 'Austria';\t----- bird -----\tformula_1",
    "235": "SELECT r.year, r.name, r.date, r.time \nFROM races r \nJOIN (\n    SELECT MIN(r.date) AS first_qualifying_race \n    FROM races r \n    JOIN (\n        SELECT driverid, dob \n        FROM drivers \n        ORDER BY dob DESC \n        LIMIT 1\n    ) d ON r.raceid = (\n        SELECT raceid \n        FROM qualifying \n        WHERE driverid = d.driverid \n        ORDER BY raceid \n        LIMIT 1\n    )\n) q ON r.date = q.first_qualifying_race;\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname, AVG(ps.duration) AS avg_pitstop_duration\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nJOIN pitStops ps ON r.raceid = ps.raceid AND r.driverid = ps.driverid\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.forename, d.surname\nORDER BY avg_pitstop_duration\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT r.driverid, d.forename, d.surname, r.time\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nJOIN drivers d ON r.driverid = d.driverid\nWHERE ra.year = 2008 AND ra.name = 'Canadian Grand Prix' AND r.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorref, c.url \nFROM results r \nJOIN races ra ON r.raceid = ra.raceid \nJOIN constructors c ON r.constructorid = c.constructorid \nWHERE ra.name = 'Singapore Grand Prix' AND ra.year = 2009 \nORDER BY r.time LIMIT 1;\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name \nFROM hero_power hp \nJOIN superpower sp ON hp.power_id = sp.id \nJOIN superhero s ON hp.hero_id = s.id \nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(r.points) AS score, c.name, c.nationality\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nJOIN constructors c ON r.constructorid = c.constructorid\nWHERE ra.name = 'Monaco Grand Prix' AND ra.year BETWEEN 1980 AND 2010\nGROUP BY c.name, c.nationality\nORDER BY score DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename, d.surname \nFROM qualifying q \nJOIN drivers d ON q.driverid = d.driverid \nJOIN races r ON q.raceid = r.raceid \nJOIN circuits c ON r.circuitid = c.circuitid \nWHERE q.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit'))) \nAND r.year = 2008 \nAND c.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "242": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS first_race\nFROM drivers d\nJOIN results r ON d.driverid = r.driverid\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nAND r.raceid = (SELECT MIN(raceid) FROM results WHERE driverid = d.driverid);\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(r.statusid) \nFROM results r \nJOIN races ra ON r.raceid = ra.raceid \nWHERE ra.name = 'Canadian Grand Prix' AND r.statusid = 3 \nGROUP BY r.driverid \nORDER BY COUNT(r.statusid) DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT d.forename, d.surname \nFROM results r \nJOIN drivers d ON r.driverid = d.driverid \nWHERE r.time = (SELECT MIN(time) FROM results) \nORDER BY r.resultid \nLIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT c.name, MIN(r.time) AS lap_record\nFROM results r\nJOIN races ra ON r.raceid = ra.raceid\nJOIN circuits c ON ra.circuitid = c.circuitid\nWHERE c.country = 'Italy'\nGROUP BY c.name;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT h.id)\nFROM superhero h\nJOIN colour c ON h.eye_colour_id = c.id\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c1 ON s.eye_colour_id = c1.id \nJOIN colour c2 ON s.hair_colour_id = c2.id \nWHERE c1.colour = 'Blue' AND c2.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT superhero_name, height_cm\nFROM superhero\nWHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\nORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(s.id) AS count\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\nGROUP BY c.colour\nORDER BY count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nJOIN publisher p ON s.publisher_id = p.id \nWHERE sp.power_name = 'Super Strength' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name \nFROM publisher p \nJOIN superhero s ON p.id = s.publisher_id \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Speed' \nAND ha.attribute_value = (SELECT MIN(ha2.attribute_value) \n                           FROM hero_attribute ha2 \n                           JOIN attribute a2 ON ha2.attribute_id = a2.id \n                           WHERE a2.attribute_name = 'Speed');\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Intelligence' \nAND ha.attribute_value = (SELECT MIN(attribute_value) \n                           FROM hero_attribute \n                           JOIN attribute ON hero_attribute.attribute_id = attribute.id \n                           WHERE attribute_name = 'Intelligence');\t----- bird -----\tsuperhero",
    "255": "SELECT r.race \nFROM superhero s \nJOIN race r ON s.race_id = r.id \nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT s.id)\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT \n    ROUND(\n        (\n            SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) / \n            COUNT(s.id) * 100\n        ), 2\n    ) AS percentage,\n    COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS marvel_bad_heroes\nFROM \n    superhero s\nJOIN \n    alignment a ON s.alignment_id = a.id\nJOIN \n    publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "260": "SELECT \n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE -1 END) AS difference\nFROM \n    superhero s\nJOIN \n    publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nWHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "264": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superhero s ON hp.hero_id = s.id\nJOIN gender g ON s.gender_id = g.id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male';\t----- bird -----\tsuperhero",
    "265": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c ON s.eye_colour_id = c.id \nWHERE s.height_cm BETWEEN 170 AND 190 AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour \nFROM superhero s \nJOIN colour c ON s.hair_colour_id = c.id \nJOIN race r ON s.race_id = r.id \nWHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT ROUND(SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) \nFROM superhero s \nJOIN publisher p ON s.publisher_id = p.id \nWHERE s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT s.superhero_name \nFROM superhero s \nJOIN gender g ON s.gender_id = g.id \nWHERE g.gender = 'Male' \nAND s.weight_kg > (SELECT 0.79 * AVG(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name \nFROM hero_power hp \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT h.id)\nFROM superhero h\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'strength' \nAND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength'));\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nJOIN publisher p ON s.publisher_id = p.id \nWHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics' \nORDER BY ha.attribute_value DESC \nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT \n    c.colour AS eye_colour, \n    h.colour AS hair_colour, \n    s.colour AS skin_colour\nFROM \n    superhero \nINNER JOIN \n    colour c ON superhero.eye_colour_id = c.id \nINNER JOIN \n    colour h ON superhero.hair_colour_id = h.id \nINNER JOIN \n    colour s ON superhero.skin_colour_id = s.id \nINNER JOIN \n    gender g ON superhero.gender_id = g.id \nINNER JOIN \n    publisher p ON superhero.publisher_id = p.id \nWHERE \n    g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id AND s.hair_colour_id = c.id AND s.skin_colour_id = c.id\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "275": "SELECT ROUND(((SELECT COUNT(*) \n                FROM superhero \n                WHERE skin_colour_id IN (SELECT id \n                                        FROM colour \n                                        WHERE colour = 'Blue') \n                AND gender_id IN (SELECT id \n                                 FROM gender \n                                 WHERE gender = 'Female')) \n              / (SELECT COUNT(*) \n                 FROM superhero \n                 WHERE gender_id IN (SELECT id \n                                     FROM gender \n                                     WHERE gender = 'Female'))) * 100, 2) AS percentage;\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(power_id) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "277": "SELECT height_cm \nFROM superhero \nWHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Amber');\t----- bird -----\tsuperhero",
    "278": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c1 ON s.eye_colour_id = c1.id \nJOIN colour c2 ON s.hair_colour_id = c2.id \nWHERE c1.colour = 'Black' AND c2.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT superhero_name \nFROM superhero \nWHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT ha.hero_id)\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength' AND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'));\t----- bird -----\tsuperhero",
    "281": "SELECT ROUND(SUM(CASE WHEN s.gender_id IN (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) \nFROM superhero s \nJOIN publisher p ON s.publisher_id = p.id \nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS difference;\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "284": "SELECT p.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower p ON hp.power_id = p.id \nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Speed' \nAND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed'));\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value \nFROM hero_attribute ha \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE ha.hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\t----- bird -----\tsuperhero",
    "287": "SELECT s.superhero_name \nFROM superhero s \nJOIN colour c1 ON s.eye_colour_id = c1.id \nJOIN colour c2 ON s.hair_colour_id = c2.id \nWHERE c1.colour = 'Blue' AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT p.publisher_name \nFROM superhero s \nJOIN publisher p ON s.publisher_id = p.id \nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT ROUND(((SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7) / (SELECT COUNT(*) FROM superhero) * 100.0), 2) AS percentage;\t----- bird -----\tsuperhero",
    "290": "SELECT \n    SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END)::decimal / SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) AS ratio\nFROM \n    superhero s\nJOIN \n    gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "291": "SELECT c.colour \nFROM superhero s \nJOIN colour c ON s.eye_colour_id = c.id \nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT \n    SUBTRACT(SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END), SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END)) AS difference\nFROM \n    superhero T1\nJOIN \n    colour T2 ON T1.eye_colour_id = T2.id\nWHERE \n    T1.weight_kg IS NULL OR T1.weight_kg = 0;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'Wind Control' \nORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nJOIN gender g ON s.gender_id = g.id \nWHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT \n    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - \n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS difference\nFROM \n    superhero s\nJOIN \n    publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "297": "SELECT MAX(reputation) \nFROM users \nWHERE displayname IN ('Harlan', 'Jarrod Dixon');\t----- bird -----\tcodebase_community",
    "298": "SELECT displayname \nFROM users \nWHERE EXTRACT(YEAR FROM creationdate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) \nFROM users \nWHERE lastaccessdate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.displayname \nFROM posts p \nJOIN users u ON p.owneruserid = u.id \nWHERE p.title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE ownerdisplayname = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT u.displayname \nFROM posts p \nJOIN users u ON p.lasteditoruserid = u.id \nWHERE p.title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts\nWHERE owneruserid IN (\n    SELECT id\n    FROM users\n    WHERE age > 65\n) AND score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.body \nFROM tags t \nJOIN posts p ON t.excerptpostid = p.id \nWHERE t.tagname = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.score) \nFROM posts p \nJOIN users u ON p.owneruserid = u.id \nWHERE u.displayname = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    ROUND(\n        (\n            COUNT(p.id) * 100.0 / \n            (\n                SELECT COUNT(id) \n                FROM posts \n                WHERE score > 5\n            )\n        ), 2\n    ) AS percentage\nFROM \n    posts p \nJOIN \n    users u ON p.owneruserid = u.id \nWHERE \n    p.score > 5 AND u.age > 65;\t----- bird -----\tcodebase_community",
    "307": "SELECT favoritecount \nFROM posts \nWHERE id = (SELECT postid \n             FROM comments \n             WHERE userid = 3025 \n             AND creationdate = '2014/4/23 20:29:39.0');\t----- bird -----\tcodebase_community",
    "308": "SELECT p.ClosedDate IS NOT NULL \nFROM comments c \nJOIN posts p ON c.postid = p.id \nWHERE c.userid = 23853 AND c.creationdate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(p.id) \nFROM posts p \nJOIN users u ON p.owneruserid = u.id \nWHERE u.displayname = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT u.displayname \nFROM votes v \nJOIN users u ON v.userid = u.id \nWHERE v.id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(p.id) / COUNT(v.id) \nFROM posts p \nJOIN votes v ON p.owneruserid = v.userid \nWHERE p.owneruserid = 24 AND v.userid = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT viewcount \nFROM posts \nWHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT text \nFROM comments \nWHERE score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT u.displayname \nFROM comments c \nJOIN users u ON c.userid = u.id \nWHERE c.text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.displayname, u.reputation \nFROM posts p \nJOIN users u ON p.owneruserid = u.id \nWHERE p.title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT lasteditordisplayname \nFROM posts \nWHERE title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": "SELECT c.text \nFROM comments c \nJOIN posts p ON c.postid = p.id \nJOIN users u ON c.userid = u.id \nWHERE p.title = 'Why square the difference instead of taking the absolute value in standard deviation?' \nAND p.lasteditoruserid = u.id;\t----- bird -----\tcodebase_community",
    "318": "SELECT u.displayname \nFROM votes v \nJOIN posts p ON v.postid = p.id \nJOIN users u ON v.userid = u.id \nWHERE v.bountyamount = 50 AND p.title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT p.title, c.text, AVG(p.viewcount) OVER () AS avg_view_count\nFROM posts p\nJOIN comments c ON p.id = c.postid\nJOIN tags t ON p.tags LIKE '%<humor>%'\nWHERE p.tags LIKE '%<humor>%';\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT b.userid) \nFROM badges b \nGROUP BY b.userid \nHAVING COUNT(b.userid) > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT u.id, u.displayname\nFROM users u\nJOIN (\n    SELECT p.owneruserid\n    FROM posts p\n    JOIN (\n        SELECT postid\n        FROM postHistory\n        GROUP BY postid\n        HAVING COUNT(DISTINCT id) = 1\n    ) ph ON p.id = ph.postid\n    WHERE p.viewcount >= 1000\n) p ON u.id = p.owneruserid;\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    (100.0 * SUM(CASE WHEN EXTRACT(YEAR FROM b.date) = 2010 THEN 1 ELSE 0 END) / SUM(1) - \n     100.0 * SUM(CASE WHEN EXTRACT(YEAR FROM b.date) = 2011 THEN 1 ELSE 0 END) / SUM(1)) \nAS percentage_difference\nFROM badges b\nWHERE b.name = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT \n    AVG(upvotes) / COUNT(DISTINCT u.id) AS avg_upvotes, \n    AVG(u.age) / COUNT(DISTINCT u.id) AS avg_age\nFROM \n    users u\nJOIN \n    posts p ON u.id = p.owneruserid\nGROUP BY \n    u.id\nHAVING \n    COUNT(p.id) > 10;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    DIVIDE(\n        COUNT(CASE WHEN EXTRACT(YEAR FROM creationdate) = 2010 THEN id END), \n        COUNT(CASE WHEN EXTRACT(YEAR FROM creationdate) = 2011 THEN id END)\n    ) \nFROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT p.id\nFROM posts p\nJOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'slashnick'\nORDER BY p.answercount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(viewcount) \nFROM posts \nWHERE ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder');\t----- bird -----\tcodebase_community",
    "327": "SELECT t.tagname\nFROM posts p\nJOIN tags t ON p.tags LIKE '%' || t.tagname || '%'\nWHERE p.ownerdisplayname = 'Mark Meckes' AND p.commentcount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (COUNT(p.id) FILTER (WHERE t.tagname = 'r'))::numeric / COUNT(p.id) * 100 \nAS percentage\nFROM \n    posts p \nJOIN \n    users u ON p.owneruserid = u.id \nLEFT JOIN \n    postLinks pl ON p.id = pl.postid \nLEFT JOIN \n    tags t ON pl.relatedpostid = t.id \nWHERE \n    u.displayname = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(p.viewcount) - SUM(q.viewcount) \nFROM posts p \nJOIN users u ON p.owneruserid = u.id \nWHERE u.displayname = 'Mornington' \n\n- \n\nSELECT SUM(viewcount) \nFROM posts \nJOIN users ON posts.owneruserid = users.id \nWHERE displayname = 'Amos';\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(pl.id) / 12 \nFROM postLinks pl \nJOIN posts p ON pl.postid = p.id \nWHERE EXTRACT(YEAR FROM pl.creationdate) = 2010 AND p.answercount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.creationdate) \nFROM votes v \nJOIN users u ON v.userid = u.id \nWHERE u.displayname = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT displayname \nFROM users \nWHERE id = (SELECT userid \n             FROM badges \n             WHERE name = 'Autobiographer' \n             ORDER BY date \n             LIMIT 1);\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.id)\nFROM users u\nJOIN posts p ON u.id = p.owneruserid\nWHERE u.location = 'United Kingdom'\nAND p.id IN (\n    SELECT postid\n    FROM posts\n    GROUP BY postid\n    HAVING SUM(favoritecount) >= 4\n);\t----- bird -----\tcodebase_community",
    "334": "SELECT p.id, p.title \nFROM posts p \nJOIN users u ON p.owneruserid = u.id \nWHERE u.displayname = 'Harvey Motulsky' \nORDER BY p.viewcount DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT p.id, p.ownerdisplayname \nFROM posts p \nWHERE p.favoritecount = (SELECT MAX(favoritecount) \n                         FROM posts \n                         WHERE EXTRACT(YEAR FROM creaiondate) = 2010) \nAND EXTRACT(YEAR FROM p.creaiondate) = 2010;\t----- bird -----\tcodebase_community",
    "336": "SELECT \n    (COUNT(p.id) / (SELECT COUNT(u.id) FROM users u WHERE EXTRACT(YEAR FROM u.creationdate) = 2011) * 100) \nFROM \n    posts p \nJOIN \n    users u ON p.owneruserid = u.id \nWHERE \n    u.reputation > 1000 AND EXTRACT(YEAR FROM u.creationdate) = 2011;\t----- bird -----\tcodebase_community",
    "337": "SELECT viewcount, ownerdisplayname \nFROM posts \nWHERE body = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(c.id)\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE p.score = (SELECT MAX(score) FROM posts);\t----- bird -----\tcodebase_community",
    "339": "SELECT c.text, u.displayname\nFROM comments c\nJOIN users u ON c.userid = u.id\nJOIN posts p ON c.postid = p.id\nWHERE p.title = 'Analysing wind data with R'\nORDER BY c.creationdate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    ROUND(\n        (\n            SELECT COUNT(*) \n            FROM posts p \n            WHERE p.score > 50 AND p.owneruserid = (\n                SELECT u.id \n                FROM users u \n                ORDER BY u.reputation DESC \n                LIMIT 1\n            )\n        )::numeric / \n        (\n            SELECT COUNT(*) \n            FROM posts p \n            WHERE p.owneruserid = (\n                SELECT u.id \n                FROM users u \n                ORDER BY u.reputation DESC \n                LIMIT 1\n            )\n        ) * 100, 2\n    ) AS percentage;\t----- bird -----\tcodebase_community",
    "341": "SELECT excerptpostid, wikipostid \nFROM tags \nWHERE tagname = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.reputation, u.upvotes \nFROM users u \nJOIN comments c ON u.id = c.userid \nWHERE c.text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.text, c.score\nFROM comments c\nJOIN posts p ON c.postid = p.id\nWHERE p.viewcount BETWEEN 100 AND 150\nAND c.score = (SELECT MAX(score) FROM comments WHERE postid = p.id)\nORDER BY c.score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*)\nFROM comments\nWHERE score = 0 AND postid IN (\n    SELECT id\n    FROM posts\n    WHERE commentcount = 1\n)\t----- bird -----\tcodebase_community",
    "345": "SELECT ROUND(\n    (COUNT(DISTINCT u.id) / (SELECT COUNT(DISTINCT c.userid) FROM comments c WHERE c.score BETWEEN 5 AND 10)) * 100, 2\n) AS percentage\nFROM users u\nJOIN comments c ON u.id = c.userid\nWHERE c.score BETWEEN 5 AND 10 AND u.upvotes = 0;\t----- bird -----\tcodebase_community",
    "346": "SELECT * \nFROM cards \nWHERE \"cardKingdomFoilId\" IS NOT NULL AND \"cardKingdomId\" IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT * \nFROM cards \nWHERE bordercolor = 'borderless' AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "348": "SELECT c.name \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "349": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.power IS NULL OR c.power = '*' AND l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hascontentwarning\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele' AND c.hascontentwarning = 1;\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, r.uuid, c.ispromo\nFROM cards c\nJOIN (\n    SELECT uuid, COUNT(uuid) as count\n    FROM rulings\n    GROUP BY uuid\n    ORDER BY count DESC\n    LIMIT 1\n) r ON c.uuid = r.uuid;\t----- bird -----\tcard_games",
    "353": "SELECT ROUND(SUM(CASE WHEN fd.language = 'Chinese Simplified' THEN 1 ELSE 0 END) / (SELECT COUNT(*) FROM cards) * 100, 2) AS percentage \nFROM cards \nJOIN foreign_data fd ON cards.id = fd.id \nWHERE fd.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT bordercolor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT ROUND((COUNT(CASE WHEN bordercolor = 'borderless' THEN 1 END)::numeric / COUNT(id) * 100, 2) AS percentage \nFROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT ROUND(\n    (SELECT COUNT(id) FROM cards WHERE language = 'French' AND isStorySpotlight = 1) * 100.0 / \n    (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1)\n, 2) AS percentage;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)\nFROM cards\nWHERE originaltype = 'Summon - Angel' AND NOT ('Angel' = ANY(string_to_array(subtypes, ',')));\t----- bird -----\tcard_games",
    "360": "SELECT id \nFROM cards \nWHERE dueldeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned' AND c.bordercolor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT c.name, fd.language, fd.flavortext\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originaltype = 'Artifact' AND c.colors = 'B';\t----- bird -----\tcard_games",
    "363": "SELECT manacost \nFROM cards \nWHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT id, \n       (SELECT COUNT(*) \n        FROM cards \n        WHERE isstoryspotlight = 1 AND istextless = 0) / (SELECT COUNT(*) FROM cards) * 100 AS percentage\nFROM cards \nWHERE isstoryspotlight = 1 AND istextless = 0;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT st.code)\nFROM sets st\nJOIN set_translations stt ON st.code = stt.setcode\nWHERE st.block = 'Commander' AND stt.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT c.type \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE fd.language = 'German';\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(c.id)\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'premodern' AND r.text = 'This is a triggered mana ability.' AND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.artist = 'Matthew D. Wilson' \nAND c.layout = 'normal' \nAND c.bordercolor = 'black' \nAND c.type = 'Creature' \nAND fd.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT st.language, st.translation \nFROM sets s \nJOIN set_translations st ON s.code = st.setcode \nWHERE s.block = 'Ravnica' AND s.basesetsize = 180;\t----- bird -----\tcard_games",
    "371": "SELECT ROUND((COUNT(c.id) / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT uuid FROM legalities WHERE format = 'commander' AND status = 'legal'))) * 100, 2) \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0;\t----- bird -----\tcard_games",
    "372": "SELECT ROUND(\n    (COUNT(*)::numeric / \n     (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*')) * 100, 2\n) \nFROM cards \nWHERE power IS NULL OR power = '*' AND \n      id IN (SELECT cardid FROM foreign_data WHERE language = 'French');\t----- bird -----\tcard_games",
    "373": "SELECT fd.language \nFROM cards c \nJOIN foreign_data fd ON c.multiverseid = fd.multiverseid \nWHERE c.multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT ROUND(DIVIDE(COUNT(CASE WHEN \"istextless\" = 1 AND \"layout\" = 'normal' THEN 1 END), COUNT(*)) * 100, 2) AS proportion \nFROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT st.language \nFROM set_translations st \nJOIN sets s ON st.setcode = s.code \nWHERE s.mcmname = 'Archenemy' AND s.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT language \nFROM foreign_data \nWHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT \n    CASE \n        WHEN a.convertedmanacost > b.convertedmanacost THEN 'Serra Angel'\n        WHEN a.convertedmanacost < b.convertedmanacost THEN 'Shrine Keeper'\n        ELSE 'Both cards have the same converted mana cost'\n    END \nFROM \n    cards a, cards b \nWHERE \n    a.name = 'Serra Angel' \n    AND b.name = 'Shrine Keeper';\t----- bird -----\tcard_games",
    "378": "SELECT st.translation \nFROM set_translations st \nJOIN sets s ON st.setcode = s.code \nJOIN cards c ON c.setcode = s.code \nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Korean';\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nWHERE setcode IN (SELECT code\n                   FROM sets\n                   WHERE translation = 'Hauptset Zehnte Edition')\n  AND artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT translation \nFROM set_translations \nWHERE setcode = (SELECT code \n                 FROM sets \n                 WHERE name = 'Eighth Edition') \nAND language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    JOIN sets ON cards.setcode = sets.code\n    WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\n) AS appears_on_mtgo;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.code)\nFROM sets s\nJOIN set_translations st ON s.code = st.setcode\nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT s.isforeignonly \nFROM sets s \nWHERE s.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*)\nFROM sets s\nJOIN set_translations st ON s.code = st.setcode\nWHERE st.language = 'Italian' AND st.translation IS NOT NULL AND s.basesetsize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT artist \nFROM cards \nWHERE setcode = 'CDS' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nWHERE setcode = 'CDS' AND convertedmanacost > 5 AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavortext \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT fd.text \nFROM cards c \nJOIN sets s ON c.setcode = s.code \nJOIN foreign_data fd ON c.uuid = fd.uuid \nJOIN rulings r ON c.uuid = r.uuid \nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT st.translation \nFROM cards c \nJOIN set_translations st ON c.name = st.translation \nWHERE c.setcode = 'CSP' AND st.language = 'Italian' \nAND c.convertedmanacost = (SELECT MAX(convertedmanacost) FROM cards WHERE setcode = 'CSP');\t----- bird -----\tcard_games",
    "391": "SELECT ROUND(SUM(CASE WHEN c.convertedmanacost = 7 THEN 1 ELSE 0 END) / (SELECT COUNT(*) FROM cards WHERE setcode IN (SELECT code FROM sets WHERE name = 'Coldsnap')) * 100, 2) \nFROM cards c \nWHERE setcode IN (SELECT code FROM sets WHERE name = 'Coldsnap');\t----- bird -----\tcard_games",
    "392": "SELECT ROUND(SUM(CASE WHEN cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) \nFROM cards \nWHERE setcode IN (SELECT code FROM sets WHERE name = 'Coldsnap');\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nORDER BY COUNT(l.status) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecrank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.setcode IN (SELECT code FROM sets WHERE name = 'Hour of Devastation') AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT s.name\nFROM sets s\nWHERE s.name NOT IN (\n    SELECT st.setcode\n    FROM set_translations st\n    WHERE st.language LIKE '%Japanese%'\n) AND s.name IN (\n    SELECT st.setcode\n    FROM set_translations st\n    WHERE st.language = 'Korean'\n);\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameversion \nFROM cards \nWHERE artist = 'Allen Williams'\n\nUNION \n\nSELECT l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE l.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(bond_type) DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) \nFROM (\n    SELECT molecule_id, COUNT(*) as oxygen_count \n    FROM atom \n    WHERE element = 'o' AND molecule_id IN (\n        SELECT molecule_id \n        FROM bond \n        WHERE bond_type = '-'\n    ) \n    GROUP BY molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) \nFROM (\n    SELECT molecule_id, COUNT(DISTINCT bond_id) AS single_bonded_count \n    FROM molecule \n    JOIN atom ON molecule.molecule_id = atom.molecule_id \n    JOIN connected ON atom.atom_id = connected.atom_id \n    JOIN bond ON connected.bond_id = bond.bond_id \n    WHERE molecule.label = '+' AND bond.bond_type = '-' \n    GROUP BY molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "402": "SELECT \n    ROUND(\n        (\n            SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) / \n            COUNT(a.atom_id) * 100\n        ), 2\n    ) AS carbon_percentage\nFROM \n    atom a\nJOIN \n    connected c ON a.atom_id = c.atom_id\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '=';\t----- bird -----\ttoxicology",
    "403": "SELECT a.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR004_8_9'\nUNION\nSELECT a.element\nFROM connected c\nJOIN atom a ON c.atom_id2 = a.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT a.element, a2.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT label \nFROM molecule \nWHERE molecule_id IN (\n    SELECT molecule_id \n    FROM atom \n    WHERE element = 'h' \n    GROUP BY molecule_id \n    HAVING COUNT(molecule_id) = (\n        SELECT MAX(cnt) \n        FROM (\n            SELECT molecule_id, COUNT(molecule_id) AS cnt \n            FROM atom \n            WHERE element = 'h' \n            GROUP BY molecule_id\n        ) AS subquery\n    )\n)\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom\nWHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-')\nGROUP BY element\nORDER BY COUNT(element)\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element IN ('i', 's') AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": "SELECT \n    ROUND(\n        (\n            (\n                SELECT COUNT(DISTINCT m.molecule_id) \n                FROM molecule m \n                LEFT JOIN atom a ON m.molecule_id = a.molecule_id \n                WHERE m.label = '+' AND a.element IS NULL OR a.element <> 'F'\n            ) / \n            (\n                SELECT COUNT(DISTINCT molecule_id) \n                FROM molecule \n                WHERE label = '+'\n            )\n        ) * 100, 2\n    ) AS percentage;\t----- bird -----\ttoxicology",
    "410": "SELECT \n    ROUND(\n        (\n            SUM(CASE WHEN b.bond_type = '#' THEN 1 ELSE 0 END) * 100.0 \n            / COUNT(b.bond_id)\n        ), 2\n    ) AS percent\nFROM \n    molecule m\nJOIN \n    bond b ON m.molecule_id = b.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR000' \nORDER BY element ASC \nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(\n    100.0 * SUM(CASE WHEN b.bond_type = '=' THEN 1 ELSE 0 END) / COUNT(b.bond_id), \n    5\n) AS percent\nFROM bond b\nWHERE b.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(100.0 * SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) / COUNT(m.molecule_id), 3) AS percent\nFROM molecule m;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(atom_id))*100, 4) \nFROM atom \nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT m.label, a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) \nFROM bond \nJOIN connected ON bond.bond_id = connected.bond_id \nWHERE molecule_id = 'TR010' \nGROUP BY bond_type \nORDER BY COUNT(bond_type) DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a1 ON m.molecule_id = a1.molecule_id\nJOIN atom a2 ON m.molecule_id = a2.molecule_id\nJOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = '-' AND b.bond_type = '-' \nGROUP BY m.molecule_id\nORDER BY m.molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT b.bond_id)\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12' AND b.molecule_id = 'TR009';\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, a1.element, a2.element \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a1 ON c.atom_id = a1.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(DISTINCT c.bond_id) \nFROM connected c \nWHERE c.atom_id = 'TR%_19' OR c.atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT m.label, m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25';\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "424": "SELECT m.label\nFROM molecule m\nJOIN (\n    SELECT molecule_id\n    FROM bond\n    WHERE bond_type = ' = '\n    GROUP BY molecule_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n) b ON m.molecule_id = b.molecule_id\nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(num_bonds) \nFROM (\n    SELECT atom_id, COUNT(bond_id) AS num_bonds \n    FROM connected \n    JOIN atom ON connected.atom_id = atom.atom_id \n    WHERE element = 'i' \n    GROUP BY atom_id\n) AS iodine_atoms;\t----- bird -----\ttoxicology",
    "426": "SELECT element \nFROM atom \nWHERE atom_id NOT IN (SELECT atom_id FROM connected UNION SELECT atom_id2 FROM connected);\t----- bird -----\ttoxicology",
    "427": "SELECT a.element, a2.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT a.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE c.bond_id = 'TR144_8_19'\nUNION\nSELECT a.element\nFROM connected c\nJOIN atom a ON c.atom_id2 = a.atom_id\nWHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(DIVIDE(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0, COUNT(b.bond_id)), 5) \nFROM bond b \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT ROUND(DIVIDE(SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END), COUNT(a.atom_id)) * 100, 2) as percent\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "433": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT \n    ROUND(\n        (\n            SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / \n            COUNT(m.molecule_id)\n        ) * 100, 2\n    ) AS percentage\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT element\nFROM atom\nWHERE atom_id IN (\n    SELECT atom_id\n    FROM atom\n    WHERE molecule_id IN (\n        SELECT molecule_id\n        FROM molecule\n        WHERE label = '+'\n    ) AND substr(atom_id, 7, 1) = '4'\n)\t----- bird -----\ttoxicology",
    "436": "SELECT \n    DIVIDE(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END), COUNT(a.element)) AS ratio, \n    m.label \nFROM \n    molecule m \nJOIN \n    atom a ON m.molecule_id = a.molecule_id \nWHERE \n    m.molecule_id = 'TR006' \nGROUP BY \n    m.label;\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN (\n    SELECT molecule_id\n    FROM atom\n    GROUP BY molecule_id\n    HAVING COUNT(molecule_id) > 5\n) a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-';\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE avgscrmath > 400 AND schools.virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT s.cdscode\nFROM frpm f\nJOIN schools s ON f.cdscode = s.cdscode\nWHERE f.`Enrollment (K-12)` + f.`Enrollment (Ages 5-17)` > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(f.`Percent (%) Eligible Free (Ages 5-17)`)\nFROM satscores s\nJOIN frpm f ON s.cds = f.cdscode\nWHERE s.numge1500 / s.numtsttakr > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.cdscode, s.charternum, avgscrwrite\nFROM satscores\nJOIN schools s ON satscores.cds = s.cdscode\nWHERE avgscrwrite > 499\nORDER BY avgscrwrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.school, s.street, s.city, s.state, s.zip, f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` AS enrollment_diff\nFROM frpm f\nJOIN schools s ON f.`cdscode` = s.`cdscode`\nWHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.sname \nFROM satscores s \nJOIN frpm f ON s.cds = f.cdscode \nJOIN schools sc ON f.cdscode = sc.cdscode \nWHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND s.numge1500 > 0;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.school, f.`Charter Funding Type`\nFROM satscores ss\nJOIN schools s ON ss.cds = s.cdscode\nJOIN frpm f ON s.cdscode = f.cdscode\nWHERE s.county = 'Riverside'\nAND ss.cds IN (\n    SELECT cds\n    FROM satscores\n    GROUP BY cds\n    HAVING AVG(avgscrmath) > 400\n)\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.school, s.street, s.city, s.state, s.zip\nFROM frpm f\nJOIN schools s ON f.cdscode = s.cdscode\nWHERE f.`Percent (%) Eligible FRPM (Ages 5-17)` > 800 AND s.county = 'Monterey' AND s.statustype = 'High';\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.sname, sat.avgscrwrite, sch.phone\nFROM satscores sat\nJOIN schools sch ON sat.cds = sch.cdscode\nWHERE (sch.opendate > '1991-01-01' OR sch.closeddate < '2000-01-01')\nAND sat.avgscrwrite IS NOT NULL\nAND sch.phone IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.school, s.doctype\nFROM schools s\nJOIN frpm f ON s.cdscode = f.School Code\nWHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > (\n    SELECT AVG(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`)\n    FROM frpm f\n    JOIN schools s ON f.`School Code` = s.cdscode\n    WHERE s.fundingtype = 'Locally Funded'\n) AND s.fundingtype = 'Locally Funded';\t----- bird -----\tcalifornia_schools",
    "448": "SELECT \n    s.school, \n    f.Percent_Eligible_Free_K12\nFROM \n    frpm f \nJOIN \n    schools s ON f.cdscode = s.cdscode \nJOIN \n    (SELECT \n         cdscode, \n         Enrollment_K12, \n         ROW_NUMBER() OVER (ORDER BY Enrollment_K12 DESC) AS row_num \n     FROM \n         frpm) r ON f.cdscode = r.cdscode \nWHERE \n    r.row_num IN (10, 11) \n    AND f.Percent_Eligible_Free_K12 IS NOT NULL \n    AND f.Enrollment_K12 IS NOT NULL \n    AND f.Free_Meal_Count_K12 IS NOT NULL \nORDER BY \n    r.row_num;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT school, (FRPM_Count_K_12 / Enrollment_K_12) * 100 AS Eligible_Free_or_Reduced_Price_Meal_Rate\nFROM frpm\nJOIN schools ON frpm.cdscode = schools.cdscode\nWHERE edopscode = '66'\nORDER BY FRPM_Count_K_12 DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.street, s.city, s.zip, s.state \nFROM schools s \nJOIN satscores sat ON s.cdscode = sat.cds \nWHERE sat.numtsttakr > 0 \nORDER BY sat.numge1500 / sat.numtsttakr \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT admfname1, admlname1, admfname2, admlname2, admfname3, admlname3 \nFROM schools \nWHERE cdscode = (SELECT s.cds \n                 FROM satscores s \n                 ORDER BY numge1500 DESC \n                 LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(numtsttakr) \nFROM satscores \nJOIN schools ON satscores.cds = schools.cdscode \nWHERE schools.city = 'Fresno' AND schools.opendate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.phone \nFROM satscores ss \nJOIN schools s ON ss.cds = s.cdscode \nJOIN frpm f ON s.cdscode = f.cdscode \nWHERE f.`District Name` = 'Fresno Unified' \nAND ss.avgscrread = (SELECT MIN(avgscrread) \n                     FROM satscores \n                     JOIN frpm ON satscores.cds = frpm.cdscode \n                     WHERE frpm.`District Name` = 'Fresno Unified');\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.school, avgscrread\nFROM satscores s\nJOIN schools sc ON s.cds = sc.cdscode\nWHERE sc.virtual = 'F'\nAND (sc.county, avgscrread) IN (\n    SELECT county, PERCENTILE_CONT(0.8) WITHIN GROUP (ORDER BY avgscrread DESC) \n    FROM satscores s\n    JOIN schools sc ON s.cds = sc.cdscode\n    WHERE sc.virtual = 'F'\n    GROUP BY county\n)\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.school, avgscrwrite\nFROM satscores\nJOIN schools ON satscores.cds = schools.cdscode\nWHERE admlname1 = 'Ulrich' AND admfname1 = 'Ricci';\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.cdscode, s.school, frpm.\"Enrollment (K-12)\"\nFROM schools s\nJOIN frpm ON s.cdscode = frpm.cdscode\nWHERE s.doc = '31'\nORDER BY frpm.\"Enrollment (K-12)\" DESC;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 \nFROM schools \nWHERE county = 'Alameda' AND doc = '52' AND EXTRACT(YEAR FROM opendate) = 1980;\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SUM(CASE WHEN s.doc = 54 THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN s.doc = 52 THEN 1 ELSE 0 END)) AS ratio\nFROM \n    schools s\nJOIN \n    satscores sat ON s.cdscode = sat.cds\nWHERE \n    s.county = 'Orange';\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.street, s.school \nFROM schools s \nJOIN satscores sat ON s.cdscode = sat.cds \nORDER BY sat.avgscrmath DESC \nOFFSET 6 ROWS \nFETCH FIRST 1 ROW ONLY;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM frpm\nJOIN schools ON frpm.cdscode = schools.cdscode\nWHERE charter = 0 AND county = 'Los Angeles' AND (`Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(\"Enrollment (Ages 5-17)\")\nFROM frpm\nJOIN schools ON frpm.cdscode = schools.cdscode\nWHERE \"Academic Year\" = '2014-2015' AND edopscode = 'SSS' AND city = 'Fremont';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.school, (f.FRPM_Count_Ages_5_17 / f.Enrollment_Ages_5_17) * 100 AS Percent_Eligible_FRPM_Ages_5_17\nFROM frpm f\nJOIN schools s ON f.cdscode = s.cdscode\nWHERE f.County_Name = 'Los Angeles' AND f.Low_Grade = 'K' AND f.High_Grade = '9';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT county, COUNT(*) \nFROM schools \nWHERE virtual = 'F' AND county IN ('San Diego', 'Santa Barbara') \nGROUP BY county \nORDER BY COUNT(*) DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT s.Low_Grade, s.High_Grade \nFROM schools s \nWHERE s.longitude = (SELECT MAX(ABS(longitude)) FROM schools);\t----- bird -----\tcalifornia_schools",
    "465": "SELECT \n    city, \n    COUNT(DISTINCT school) AS num_schools\nFROM \n    schools\nWHERE \n    magnet = 1 AND \n    'K' <= ANY(STRING_TO_ARRAY(Low_Grade, '-')) AND \n    '8' >= ANY(STRING_TO_ARRAY(High_Grade, '-'))\nGROUP BY \n    city;\n\nSELECT \n    COUNT(DISTINCT s.school)\nFROM \n    schools s\nJOIN \n    frpm f ON s.cdscode = f.School_Code\nWHERE \n    s.magnet = 1 AND \n    'K' <= ANY(STRING_TO_ARRAY(s.Low_Grade, '-')) AND \n    '8' >= ANY(STRING_TO_ARRAY(s.High_Grade, '-')) AND \n    f.`NSLP Provision Status` = 'Multiple Provision Types';\t----- bird -----\tcalifornia_schools",
    "466": "SELECT \n    f.`Percent (%) Eligible Free (K-12)`, \n    s.`district`\nFROM \n    frpm f \nJOIN \n    schools s ON f.`cdscode` = s.`cdscode` \nJOIN \n    satscores sat ON s.`cdscode` = sat.`cds` \nWHERE \n    s.`admfname1` = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT admemail1, admemail2, admemail3 \nFROM schools \nWHERE county = 'San Bernardino' \nAND city = 'San Bernardino City Unified' \nAND opendate BETWEEN '2009-01-01' AND '2010-12-31' \nAND (soc = '62' OR doc = '54');\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.a3 = 'East Bohemia' AND a.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) \nFROM district \nWHERE a11 > 6000 AND a11 < 10000 AND a2 = 'F';\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*)\nFROM client\nWHERE gender = 'M' AND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE a3 = 'North Bohemia'\n) AND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE a11 > 8000\n);\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id, d.a11\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\nAND d.a11 = (SELECT MIN(a11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F'))\nUNION ALL\nSELECT (SELECT MAX(a11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F')) - (SELECT MIN(a11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F'));\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nWHERE c.birth_date = (SELECT MAX(birth_date) FROM client)\nAND c.district_id IN (SELECT district_id FROM district WHERE a11 = (SELECT MAX(a11) FROM district));\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.date BETWEEN '1997-01-01' AND '1997-12-31' AND l.status = 'approved'\nAND l.amount = (SELECT MIN(amount) FROM loan WHERE date BETWEEN '1997-01-01' AND '1997-12-31' AND status = 'approved')\nAND a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12 AND a.date >= '1993-01-01' AND a.date < '1994-01-01'\nORDER BY l.amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT c.client_id)\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN account a ON c.client_id = a.district_id\nWHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND d.a2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT d.a2 \nFROM client c \nJOIN disp d1 ON c.client_id = d1.client_id \nJOIN account a ON d1.account_id = a.account_id \nJOIN district d ON a.district_id = d.district_id \nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT \n    ROUND(\n        (\n            SELECT COUNT(*) \n            FROM client \n            WHERE gender = 'M' AND district_id IN (\n                SELECT district_id \n                FROM district \n                WHERE a3 = 'South Bohemia' \n                ORDER BY a4 DESC \n                LIMIT 1\n            )\n        )::numeric / \n        (\n            SELECT COUNT(*) \n            FROM client \n            WHERE district_id IN (\n                SELECT district_id \n                FROM district \n                WHERE a3 = 'South Bohemia' \n                ORDER BY a4 DESC \n                LIMIT 1\n            )\n        ) * 100, 2\n    ) AS percentage_of_male_clients;\t----- bird -----\tfinancial",
    "478": "SELECT \n    ((b.balance - a.balance) / a.balance) * 100 \nFROM \n    trans a, \n    trans b, \n    loan l, \n    account ac, \n    client c, \n    disp d \nWHERE \n    a.account_id = b.account_id \n    AND a.date = '1993-03-22' \n    AND b.date = '1998-12-27' \n    AND a.account_id = ac.account_id \n    AND ac.account_id = l.account_id \n    AND l.date = '1993-07-05' \n    AND l.status = 'approved' \n    AND l.account_id = d.account_id \n    AND d.client_id = c.client_id \n    AND c.client_id = d.client_id \nORDER BY \n    l.date \nLIMIT 1;\t----- bird -----\tfinancial",
    "479": "SELECT \n    (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 \nFROM \n    loan l;\t----- bird -----\tfinancial",
    "480": "SELECT \n    (SUM(CASE WHEN l.amount < 100000 AND l.status = 'C' THEN 1 ELSE 0 END) / SUM(CASE WHEN l.amount < 100000 THEN 1 ELSE 0 END)) * 100 \nFROM \n    loan l \nWHERE \n    l.amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT d.a12, d.a13, ((d.a13 - d.a12) / d.a12) * 100 AS unemployment_rate_increment, d.a7 AS district\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nJOIN disp dp ON a.account_id = dp.account_id\nJOIN client c ON dp.client_id = c.client_id\nWHERE l.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT d.a2, COUNT(c.client_id) \nFROM client c \nJOIN account a ON c.client_id = a.account_id \nJOIN district d ON a.district_id = d.district_id \nWHERE c.gender = 'F' \nGROUP BY d.a2 \nORDER BY COUNT(c.client_id) DESC \nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT l.loan_id)\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE a.frequency = 'POPLATEK MESICNE'\nAND l.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND l.amount >= 250000\nAND l.status = 'approved';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE d.a2 = '1' AND l.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*)\nFROM client\nWHERE gender = 'M' AND district_id IN (\n    SELECT district_id\n    FROM district\n    ORDER BY a16 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "486": "SELECT d.a2, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.a2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE d.a2 = '1' AND l.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*)\nFROM client\nWHERE gender = 'M' AND district_id IN (\n    SELECT district_id\n    FROM district\n    ORDER BY a16 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "489": "SELECT c.client_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nJOIN trans t ON c.district_id = t.account_id\nWHERE t.type = 'VYBER KARTOU' AND t.date BETWEEN '1998-01-01' AND '1998-12-31' AND t.amount < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND date BETWEEN '1998-01-01' AND '1998-12-31');\t----- bird -----\tfinancial",
    "490": "SELECT a.frequency\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.frequency != 'OWNER' AND d.a11 > 8000 AND d.a11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.a15) \nFROM district d \nJOIN account a ON d.district_id = a.district_id \nWHERE d.a15 > 4000 AND a.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "492": "SELECT t.date, t.amount, t.k_symbol, t.bank, t.account\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT \n    ROUND(\n        (\n            SELECT COUNT(*) \n            FROM client \n            WHERE gender = 'F' AND district_id IN (\n                SELECT district_id \n                FROM district \n                WHERE a11 > 10000\n            )\n        )::numeric / \n        (\n            SELECT COUNT(*) \n            FROM client \n            WHERE district_id IN (\n                SELECT district_id \n                FROM district \n                WHERE a11 > 10000\n            )\n        ) * 100, 2\n    ) AS percentage_of_women;\t----- bird -----\tfinancial",
    "494": "SELECT \n    ((SUM(CASE WHEN l.date >= '1997-01-01' AND l.date < '1998-01-01' THEN l.amount ELSE 0 END) - \n     SUM(CASE WHEN l.date >= '1996-01-01' AND l.date < '1997-01-01' THEN l.amount ELSE 0 END)) / \n     SUM(CASE WHEN l.date >= '1996-01-01' AND l.date < '1997-01-01' THEN l.amount ELSE 0 END) * 100) AS growth_rate\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    client c ON a.district_id = c.district_id\nWHERE \n    c.gender = 'M';\t----- bird -----\tfinancial",
    "495": "SELECT frequency, k_symbol \nFROM account \nJOIN trans ON account.account_id = trans.account_id \nWHERE account.account_id = 3 AND operation = 'debit' AND amount = 3539;\t----- bird -----\tfinancial",
    "496": "SELECT \n    ROUND(\n        (\n            (\n                SELECT COUNT(*)\n                FROM client c\n                JOIN disp d ON c.client_id = d.client_id\n                JOIN account a ON d.account_id = a.account_id\n                WHERE c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE'\n            )::numeric /\n            (\n                SELECT COUNT(*)\n                FROM client c\n                JOIN disp d ON c.client_id = d.client_id\n                JOIN account a ON d.account_id = a.account_id\n                WHERE a.frequency = 'POPLATEK TYDNE'\n            )\n        ) * 100, 2\n    ) AS percentage_of_male_clients;\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND d.a11 = (SELECT MIN(a11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F'));\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) \nFROM loan \nWHERE status = 'C' AND k_symbol = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, EXTRACT(YEAR FROM age(c.birth_date)) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE d.type = 'OWNER' AND ca.type = 'gold';\t----- bird -----\tfinancial"
}