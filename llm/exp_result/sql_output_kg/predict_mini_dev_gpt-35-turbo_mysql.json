{
    "0": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS Ratio\nFROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) AS MinConsumption\nFROM yearmonth\nWHERE Date BETWEEN '201201' AND '201212'\nAND Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT customers.CustomerID, \n       customers.Segment, \n       yearmonth.Date, \n       AVG(yearmonth.Consumption) / 12 AS AverageMonthlyConsumption\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Segment = 'SME' \nAND yearmonth.Date BETWEEN '201301' AND '201312'\nGROUP BY customers.CustomerID, yearmonth.Date\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    (SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') AND SUBSTRING(Date, 1, 4) = '2012') \n    - \n    (SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR') AND SUBSTRING(Date, 1, 4) = '2012') AS DifferenceInConsumption\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT YEAR(Date) AS Year, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE Currency = 'CZK'\nGROUP BY YEAR(Date)\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT \n    SUBSTRING(Date, 1, 4) AS Year,\n    SUBSTRING(Date, 5, 2) AS Month,\n    SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE Segment = 'SME' AND Year = '2013'\nGROUP BY Year, Month\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS LAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    AND Segment = 'LAM') -\n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS SME_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    AND Segment = 'SME') AS Difference_LAM_SME,\n    \n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS KAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    AND Segment = 'KAM') -\n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS LAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    AND Segment = 'LAM') AS Difference_KAM_LAM,\n    \n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS SME_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    AND Segment = 'SME') -\n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS KAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    AND Segment = 'KAM') AS Difference_SME_KAM\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \nSegment,\nSUM(CASE WHEN LEFT(Date, 4) = '2012' THEN Consumption ELSE 0 END) AS Consumption_2012,\nSUM(CASE WHEN LEFT(Date, 4) = '2013' THEN Consumption ELSE 0 END) AS Consumption_2013,\n(SUM(CASE WHEN LEFT(Date, 4) = '2013' THEN Consumption ELSE 0 END) - SUM(CASE WHEN LEFT(Date, 4) = '2012' THEN Consumption ELSE 0 END)) AS Increase_or_Decrease,\n((SUM(CASE WHEN LEFT(Date, 4) = '2013' THEN Consumption ELSE 0 END) - SUM(CASE WHEN LEFT(Date, 4) = '2012' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN LEFT(Date, 4) = '2013' THEN Consumption ELSE 0 END)) * 100 AS Percentage_of_Increase\nFROM yearmonth\nGROUP BY Segment\nORDER BY Percentage_of_Increase DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\nAND Date >= '201308'\nAND Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT COUNT(*) AS CzechDiscountStations, \n(SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n(SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS MoreDiscountStationsInCzechRepublic\nFROM gasstations\nWHERE Country = 'CZE' AND Segment = 'discount'\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \nSUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS CZK_count,\nSUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS EUR_count,\n(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END)) AS difference\nFROM customers\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT ((COUNT(*) / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) * 100) AS Percentage\nFROM yearmonth\nWHERE Consumption > 46.73\nAND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM')\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT COUNT(*) AS TotalCustomers,\n       SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS CustomersAboveThreshold\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 4) = '2012' AND SUBSTRING(Date, 5, 2) = '02'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE Date LIKE '2012%'\nGROUP BY Date\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description\nFROM transactions_1k\nJOIN products ON transactions_1k.ProductID = products.ProductID\nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE yearmonth.Date LIKE '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT  DISTINCT gasstations.Country\nFROM gasstations\nJOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE SUBSTRING(yearmonth.Date, 1, 4) = '2013' AND SUBSTRING(yearmonth.Date, 5, 2) = '06'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(*) \nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Currency = 'EUR' AND y.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT transactions_1k.Time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' AND t.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT transactions_1k.Price, customers.Currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Time = '16:25:00' AND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26' AND t.Time BETWEEN '08:00:00' AND '09:00:00' AND g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT customers.Country\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT COUNT(*) / (SELECT COUNT(*) FROM customers) * 100 AS Percentage\nFROM customers\nWHERE Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n    (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS ConsumptionDecreaseRate\nFROM transactions_1k t\nJOIN yearmonth y2012 ON t.CustomerID = y2012.CustomerID AND t.Date = '2012-08-25'\nJOIN yearmonth y2013 ON t.CustomerID = y2013.CustomerID AND y2013.Date = '2013-08-25'\nWHERE t.Price = 634.8\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (COUNT(*) / (SELECT COUNT(*) FROM gasstations WHERE Country = \"SVK\")) * 100 AS Percentage\nFROM gasstations\nWHERE Segment = \"premium\" AND Country = \"SVK\"\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT t1.CustomerID, t1.Amount\nFROM transactions_1k t1\nJOIN gasstations g ON t1.GasStationID = g.GasStationID\nWHERE t1.CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, \n       SUM(t.Amount * t.Price) AS TotalSpending, \n       SUM(t.Amount) AS TotalItemsPurchased, \n       SUM(t.Price) / SUM(t.Amount) AS AveragePricePerItem, \n       c.Currency\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nGROUP BY c.CustomerID\nORDER BY TotalSpending DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT yearmonth.CustomerID, yearmonth.Consumption\nFROM yearmonth\nJOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE products.ProductID = 5\nAND transactions_1k.Date = '201208'\nAND (transactions_1k.Price / transactions_1k.Amount) > 29.00\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(member.member_id)\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women\\'s Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id) \nFROM event \nWHERE type = 'Meeting' \nAND event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10)\t----- bird -----\tstudent_club",
    "33": "SELECT event_name\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE type != 'fundraiser'\nGROUP BY event.event_id\nHAVING COUNT(attendance.link_to_member) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount) \nFROM income \nWHERE link_to_member = (SELECT member_id FROM member WHERE position = 'Vice President')\t----- bird -----\tstudent_club",
    "35": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense_id, expense_description, expense_date, approved\nFROM expense\nWHERE link_to_budget = (SELECT budget_id FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08'))\nAND approved = 'True'\t----- bird -----\tstudent_club",
    "37": "SELECT member.first_name, member.last_name, SUM(expense.cost) / COUNT(DISTINCT event.event_id) AS average_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nJOIN event ON expense.link_to_event = event.event_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND (MONTH(expense.expense_date) = 9 OR MONTH(expense.expense_date) = 10)\nGROUP BY member.first_name, member.last_name\t----- bird -----\tstudent_club",
    "38": "SELECT SUM(CASE WHEN YEAR(event_date) = 2019 THEN spent ELSE 0 END) - SUM(CASE WHEN YEAR(event_date) = 2020 THEN spent ELSE 0 END) AS difference_total_amount_spent\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.status = 'Student_Club'\t----- bird -----\tstudent_club",
    "39": "SELECT income.notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone\nFROM member\nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nWHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') \nAND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT m.department\nFROM member m\nWHERE m.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT \nDIVIDE(\n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')),\n    (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting'))\n) AS budget_difference\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' \nAND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM attendance \nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer')\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = \"School of Applied Sciences, Technology and Education\"\t----- bird -----\tstudent_club",
    "52": "SELECT event_name\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.status = 'Closed'\nORDER BY spent/amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) as highest_budget_spend\nFROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) as total_spent_on_food\nFROM budget\nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT member.first_name, member.last_name\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nGROUP BY member.member_id\nHAVING COUNT(attendance.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name, MIN(cost) \nFROM event \nJOIN expense ON event.event_id = expense.link_to_event \nGROUP BY event_name \nORDER BY MIN(cost) LIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT DIVIDE(SUM(cost), (SELECT SUM(cost) FROM expense)) * 100\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "59": "SELECT source, MAX(amount) as top_source_funds\nFROM income\nWHERE date_received BETWEEN '2019-09-01' and '2019-09-30'\nGROUP BY source\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nWHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "61": "SELECT event_name\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE category = 'Advertisement'\nORDER BY spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT \nattendance.link_to_member\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE member.first_name = 'Maya' AND member.last_name = 'Mclean'\nAND event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT e.cost\nFROM expense e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE ev.event_name = 'September Speaker'\nAND e.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE status = 'Closed'\nAND remaining < 0\nORDER BY remaining\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) as total_value\nFROM expense\nWHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event = 'October Meeting' AND approved = 'Yes')\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT budget.category, SUM(budget.amount) as amount_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY budget.category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, \n       SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event_name, type\nFROM event\nWHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215'\nAND event.type = 'Guest Speaker'\nAND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100 AS percentage\nFROM member\nWHERE t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name, member.last_name, member.phone\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name, member.last_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT \n(SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS in_patient_male_count,\n(SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS outpatient_male_count,\n((SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-')) AS percentage_deviation\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT DIVIDE(COUNT(ID) WHERE YEAR(Birthday) > '1930' AND SEX = 'F'), COUNT(ID) WHERE SEX = 'F') * 100 AS Percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT DIVIDE(COUNT(ID) WHERE Diagnosis = 'SLE' AND Admission = '-', COUNT(ID) WHERE Diagnosis = 'SLE' AND Admission = '+') AS Ratio\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, YEAR(CURDATE()) - YEAR(Patient.Birthday) AS Age\nFROM Patient\nINNER JOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND YEAR(Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.`Thrombosis` = 1 \nAND YEAR(e.`Examination Date`) = 1997 \nAND p.`SEX` = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Patient.ID, Patient.Birthday, Examination.Symptoms, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nORDER BY Patient.Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MAX(Date) AS 'Date of Medical Laboratory Work', \n(SUBTRACT(year(`First Date`)), year(Birthday)) AS 'Age at Initial Arrival'\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Diagnosis = 'SJS'\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS Male_to_Female_Ratio\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE YEAR(p.Birthday) > YEAR(CURDATE()) - 18\nAND YEAR(`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \nSUBTRACT(year(`Examination Date`), year(Birthday)) AS Age,\nMAX(HGB) AS MaxHemoglobin,\nDiagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nGROUP BY Patient.ID\nORDER BY MaxHemoglobin DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `Patient`.`ID`, `Examination`.`aCL IgM`\nFROM `Patient`\nJOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID`\nWHERE `Patient`.`Diagnosis` = 'SLE' AND `Patient`.`Description` = '1994-02-19' AND `Examination`.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n(SUM(CASE WHEN Birthday = '1959-02-18' and Date like '1981-12-%' THEN `T-CHO` ELSE 0 END) - \nSUM(CASE WHEN Birthday = '1959-02-18' and Date like '1981-11-%' THEN `T-CHO` ELSE 0 END)) / \nSUM(CASE WHEN Birthday = '1959-02-18' and Date like '1981-11-%' THEN `T-CHO` ELSE 0 END) * 100 AS DecreaseRate\nFROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2 \nAND e.ANA Pattern = 'S' \nAND e.aCL IgM > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.Admission, Laboratory.Date, Laboratory.T-BIL\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.T-BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(SEX = 'F' AND YEAR(Birthday) = '1980' AND Diagnosis = 'RA'), COUNT(*)) * 100\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT `UA`, `SEX`\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.ID = 57266\nAND ((UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F'))\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.ID, Patient.Birthday, Laboratory.GPT, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT \n  SEX,\n  COUNT(ID) AS Total_Patients\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE T_BIL >= 2.0\nGROUP BY SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT DIVIDE(SUM(SUBTRACT(YEAR(NOW()), YEAR(Birthday))), COUNT(ID)) AS AverageAge\nFROM Patient\nWHERE SEX = 'M' AND T-CHO >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200\nAND YEAR(CURRENT_TIMESTAMP) - YEAR(p.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(Birthday) BETWEEN '1936' AND '1956'\nAND SEX = 'M'\nAND CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, (YEAR(CURDATE()) - YEAR(Patient.Birthday)) AS Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, \n       (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) AS Age,\n       Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Diagnosis = 'SLE' AND HGB > 10 AND HGB < 17\nORDER BY Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, \n       (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) AS Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) > 2 AND MAX(Laboratory.HCT) >= 52\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT COUNT(*) AS `Number of Patients with Lower Than Normal Range`,\n       (SELECT COUNT(*) FROM Patient WHERE PLT > 400) AS `Number of Patients with Higher Than Normal Range`\nFROM Laboratory\nWHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.Birthday, Laboratory.PLT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(Laboratory.Date) = '1984' AND (YEAR(current_timestamp) - YEAR(Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \nDIVIDE(SUM(CASE WHEN (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 55 AND SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END), SUM(CASE WHEN (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 55 THEN 1 ELSE 0 END)) * 100 AS Percentage\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\nAND l.WBC > 3.5 AND l.WBC < 9.0\nAND (l.FG <= 150 OR l.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.`aCL IgG` >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE IGG > 900 AND IGG < 2000 \nAND Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE IGA > 80 AND IGA < 500\nAND YEAR(`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Examination\nWHERE `aCL IgM` <= 40 OR `aCL IgM` >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE CRP = '+' AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE CRE >= 1.5\nAND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.RNP IN ('-', '+-') \nAND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Diagnosis = 'normal anti-SM' AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nWHERE e.SS170 = 'negative' \nAND p.SEX = 'F' \nAND e.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.CENTROMEA IN ('-', '+-') \nAND l.SSB IN ('-', '+-') \nAND p.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) as \"Youngest Birthdate\"\nFROM Patient\nWHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE CPK < 250\nAND (KCT = '+' OR RVVT = '+' OR LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT \nTeam.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League'\nAND Match.season = '2009/2010'\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nORDER BY Team_Attributes.buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY Match.league_id\nORDER BY SUM(Match.home_team_goal = Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT Player.player_name, \n       Player.birthday, \n       (YEAR(CURDATE()) - YEAR(Player.birthday)) - (RIGHT(CURDATE(), 5) < RIGHT(Player.birthday, 5)) AS age \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player_Attributes.sprint_speed >= 97 \nAND YEAR(Player_Attributes.date) >= 2013 \nAND YEAR(Player_Attributes.date) <= 2015\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name as league_name, COUNT(m.id) as total_matches\nFROM League l\nJOIN Match m ON l.id = m.league_id\nGROUP BY l.name\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT Team.team_fifa_api_id\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.buildUpPlaySpeed > 50 AND Team_Attributes.buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT Team.team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL)\nAND strftime('%Y', Team_Attributes.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT DIVIDE(MULTIPLY((SUM(preferred_foot = 'left' AND YEAR(birthday) BETWEEN 1987 AND 1992), 100)), COUNT(player_fifa_api_id)) AS percentage_left_foot_players\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes\nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT Player.player_name\nFROM Player\nWHERE SUBSTR(birthday, 1, 7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT Player_Attributes.overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas'\nAND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT \nAVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN League ON Match.country_id = League.country_id\nWHERE League.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player)\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.finishing) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT  AVG(t2.overall_rating) AS average_overall_rating\nFROM Player_Attributes t1\nJOIN Player t2 ON t1.player_api_id = t2.player_api_id\nWHERE t2.height > 170\nAND strftime('%Y', t1.date) >= '2010'\nAND strftime('%Y', t1.date) <= '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n(SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) - \n(SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END)) AS difference\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT Player.player_name, Player.birthday\nFROM Player\nWHERE Player.player_name = 'Aaron Lennon' OR Player.player_name = 'Abdelaziz Barrada'\t----- bird -----\teuropean_football_2",
    "147": "SELECT Player.player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT pa.player_api_id) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE strftime('%Y', p.birthday)<'1986' \nAND pa.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.name = 'Belgium Jupiler League' \nAND SUBSTR(`date`, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT l.name AS league_name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2008/2009'\nGROUP BY l.name\nORDER BY COUNT(m.id) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((Player_Attributes.overall_rating WHERE player_name = 'Ariel Borysiuk' - Player_Attributes.overall_rating WHERE player_name = 'Paulin Puel') / Player_Attributes.overall_rating WHERE player_name = 'Paulin Puel') * 100 as percentage_higher\nFROM Player_Attributes\nWHERE player_name IN ('Ariel Borysiuk', 'Paulin Puel')\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score, \n       chanceCreationPassingClass AS classification\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT Player_Attributes.overall_rating\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Aaron Mooy'\nAND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT Player_Attributes.attacking_work_rate\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Francesco Migliore'\nAND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') \nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\t----- bird -----\teuropean_football_2",
    "160": "SELECT Team_Attributes.buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'FC Lorient'\nAND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT `defenceAggressionClass` \nFROM Team_Attributes \nJOIN Team \nON Team_Attributes.team_api_id = Team.team_api_id \nWHERE Team.team_long_name = 'Hannover 96' \nAND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') \nAND date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n(DIVIDE(SUBTRACT((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12'), \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')), \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12')))*100 AS percentage\t----- bird -----\teuropean_football_2",
    "164": "SELECT Player.player_name\nFROM Player\nORDER BY Player.height DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23)) AS difference_of_jumping_scores\t----- bird -----\teuropean_football_2",
    "170": "SELECT Player.id\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND Player_Attributes.preferred_foot = 'right'\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT Match.home_team_goal, Match.away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT Team_Attributes.buildUpPlaySpeedClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player.player_name, Player_Attributes.finishing, Player_Attributes.curve\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) AS num_games\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name AS away_team_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE Match.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "177": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "178": "SELECT ROUND((COUNT(*) / (SELECT COUNT(*) FROM Player)) * 100, 2) AS percentage\nFROM Player\nWHERE height < 180 AND overall_rating > 70\t----- bird -----\teuropean_football_2",
    "179": "SELECT \ndrivers.driverRef\nFROM qualifying\nINNER JOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 20\nAND qualifying.q1 = (SELECT MAX(q1) FROM qualifying WHERE raceId = 20)\nORDER BY qualifying.position\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE raceId = 19 AND q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceId = 354\t----- bird -----\tformula_1",
    "185": "SELECT qualifying.number\nFROM qualifying\nWHERE qualifying.raceId = 903\nAND qualifying.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) \nAND time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.raceId = 592\nAND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.forename, drivers.surname, drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nWHERE lapTimes.raceId = 161\nAND lapTimes.time LIKE '0:01:27%'\t----- bird -----\tformula_1",
    "189": "SELECT circuits.location, circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT c.name, c.url\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 9\nAND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9)\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE raceId = 45\nAND q3 LIKE '0:01:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.raceId = 872\nAND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT DIVIDE(SUBTRACT((SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')), \n(SELECT fastestLapSpeed FROM results WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) * 100, \n(SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) as percentage\t----- bird -----\tformula_1",
    "196": "SELECT drivers.driverId, \n       COUNT(results.driverId) / COUNT(DISTINCT drivers.driverId) AS completion_rate\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16'\nGROUP BY drivers.driverId\t----- bird -----\tformula_1",
    "197": "SELECT races.name\nFROM races\nWHERE year = (SELECT MIN(year) FROM races)\nAND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, MAX(results.points) as max_points\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\t----- bird -----\tformula_1",
    "199": "SELECT MIN(milliseconds) AS best_lap_time, drivers.forename, drivers.surname, races.name AS race\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) as average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT DIVIDE(COUNT(raceId) where surname = 'Hamilton' and position>1), (COUNT(raceId) where surname = 'Hamilton') \nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.surname = 'Hamilton' AND results.position > 1 AND results.raceId IN (SELECT raceId FROM races WHERE year >= 2010)\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.wins) as most_wins, MAX(driverStandings.points) as max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.forename, drivers.surname, drivers.nationality\t----- bird -----\tformula_1",
    "203": "SELECT drivers.forename, drivers.surname, (YEAR(CURRENT_TIMESTAMP) - YEAR(drivers.dob)) AS age\nFROM drivers\nWHERE drivers.nationality = 'Japanese'\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT r.name as race_name, c.name as circuit_name, c.location\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.milliseconds\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.date\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT ROUND((COUNT(races.raceId) / (SELECT COUNT(races.raceId) FROM races WHERE races.name = 'European Grand Prix')) * 100, 2) AS percentage\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany' AND races.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality\nFROM drivers\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.positionOrder\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' \nAND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.position\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Chinese Grand Prix'\nAND drivers.forename = 'Lewis'\nAND drivers.surname = 'Hamilton'\nAND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.year = 2008\nAND races.name = 'Chinese Grand Prix'\nAND results.position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT driverId) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) \nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT results.raceId, \n(results.milliseconds - (SELECT MAX(results.milliseconds) FROM results WHERE raceId = 1)) / (SELECT MAX(results.milliseconds) FROM results WHERE raceId = 1) * 100 AS percentage_faster\nFROM results\nWHERE results.raceId = 1\nAND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) \nFROM constructorStandings \nINNER JOIN constructors ON constructorStandings.constructorId = constructors.constructorId \nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nLEFT JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nWHERE constructorStandings.points = 0\nAND constructorStandings.raceId = 291\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) \nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nJOIN races r ON cs.raceId = r.raceId\nWHERE c.nationality = 'Japanese' \nAND cs.points = 0 \nAND r.year = (SELECT year FROM seasons WHERE year = 2)\t----- bird -----\tformula_1",
    "223": "SELECT drivers.forename, drivers.surname, COUNT(results.driverId) as completed_races, \n    (SELECT COUNT(results.driverId) FROM results \n    JOIN races ON results.raceId = races.raceId \n    WHERE results.driverId = drivers.driverId \n    AND races.year BETWEEN 2007 AND 2009) as total_races,\n    (COUNT(results.driverId) / \n    (SELECT COUNT(results.driverId) FROM results \n    JOIN races ON results.raceId = races.raceId \n    WHERE results.driverId = drivers.driverId \n    AND races.year BETWEEN 2007 AND 2009)) * 100 as completion_percentage\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.year BETWEEN 2007 AND 2009\nAND drivers.nationality = 'Japanese'\nGROUP BY drivers.driverId\t----- bird -----\tformula_1",
    "224": "SELECT races.year, AVG(results.milliseconds) / 1000 AS average_time_seconds\nFROM races\nJOIN results ON races.raceId = results.raceId\nWHERE results.position = 1 AND races.year < 1975 AND results.time IS NOT NULL\nGROUP BY races.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009\nAND results.position = 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(driverId) / (SELECT COUNT(driverId) FROM drivers WHERE year(dob) BETWEEN 2000 AND 2005) * 100) AS percentage\nFROM driverStandings\nWHERE year(dob) < 1985\nAND laps > 50\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) \nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French' AND lt.time < '02:00.00'\t----- bird -----\tformula_1",
    "229": "SELECT code\nFROM drivers\nWHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT driverId, forename, surname, dob, nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German'\nORDER BY dob\nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT \ndrivers.driverId, drivers.code\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nWHERE YEAR(drivers.dob) = 1971 AND results.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE raceId > 50 AND raceId < 100 \nAND positionText = 'DQ' \nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT c.name, c.location, c.lat, c.lng\nFROM circuits c\nWHERE c.country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT MIN(r.date) AS first_qualifying_race_date, \n       r.name AS first_qualifying_race_name, \n       r.date AS first_qualifying_race_date, \n       r.time AS first_qualifying_race_time\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nGROUP BY r.date, r.name, r.time\t----- bird -----\tformula_1",
    "236": "SELECT drivers.forename, drivers.surname, AVG(pitStops.duration) as avg_duration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' \nAND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY drivers.driverId\nORDER BY avg_duration\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM constructors\nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nJOIN races ON constructorStandings.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY constructorStandings.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructors.name, constructors.nationality, SUM(constructorStandings.points) as total_points\nFROM constructors\nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nJOIN races ON constructorStandings.raceId = races.raceId\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructors.name, constructors.nationality\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE races.year = 2008\nAND races.name = 'Marina Bay Street Circuit'\nAND qualifying.position = 1\nAND qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = races.raceId AND q3 IS NOT NULL)\nLIMIT 1\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename, drivers.surname, drivers.nationality, races.name\nFROM drivers\nJOIN races ON drivers.driverId = races.driverId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "243": "SELECT drivers.forename, drivers.surname, COUNT(results.statusId) AS num_accidents\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND results.statusId = 3\nGROUP BY drivers.driverId\nORDER BY num_accidents DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, results.fastestLapTime\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN results ON races.raceId = results.raceId\nWHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' \nAND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(superhero.id) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' \nAND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero_name, height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT superhero.superhero_name, colour.colour, COUNT(superhero.id) as eye_colour_count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY superhero.superhero_name, colour.colour\nORDER BY eye_colour_count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(superhero.id) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' \nAND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (COUNT(superhero.id) / (SELECT COUNT(*) FROM superhero)) * 100 AS percentage_bad_superheroes\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE alignment.alignment = 'Bad'\nAND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "260": "SELECT \npublisher_name, COUNT(superhero.id) AS num_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nGROUP BY publisher_name\t----- bird -----\tsuperhero",
    "261": "SELECT id\nFROM publisher\nWHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero",
    "264": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nLEFT JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND eye_colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.hair_colour_id = c.id\nJOIN race r ON s.race_id = r.id\nWHERE s.height_cm = 185\nAND r.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT \n(MULTIPLY(DIVIDE(SUM(publisher.id = 13), COUNT(publisher.id), 100)) AS percentage_published_by_marvel\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nAND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT s.superhero_name, s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'durability'\nAND publisher.publisher_name = 'Dark Horse Comics'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT colour.colour AS eye_colour, \n       colour.colour AS hair_colour, \n       colour.colour AS skin_colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' \nAND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE hair_colour.colour = skin_colour.colour AND hair_colour.colour = eye_colour.colour\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (COUNT(*) / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) * 100\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')\nAND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(power_id) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM hero_attribute \nWHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') \nAND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "281": "SELECT (MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100)) as percent_female_heroes_published_by_marvel\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT SUM(weight_kg) \nFROM superhero \nWHERE full_name = 'Emil Blonsky' \nOR full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "283": "SELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT \n    (COUNT(superhero_name WHERE eye_colour_id = 7) / COUNT(superhero_name)) * 100.0 AS percentage\nFROM superhero\t----- bird -----\tsuperhero",
    "290": "SELECT \nDIVIDE(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END)) AS gender_ratio\nFROM superhero\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT COUNT(*) AS weight_missing_count,\n       SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) AS blue_eyes_count,\n       SUM(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) AS no_eye_color_count,\n       (SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference\nFROM superhero\nWHERE weight_kg = 0 OR weight_kg IS NULL\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(superhero.id) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT superhero.gender_id\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT \n    publisher_name,\n    COUNT(*) as num_superheroes\nFROM superhero\nGROUP BY publisher_name\t----- bird -----\tsuperhero",
    "297": "SELECT \n    DisplayName,\n    MAX(Reputation) AS HighestReputation\nFROM users\nWHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName\nFROM users\nWHERE YEAR(CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*)\nFROM users\nWHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = \"Eliciting priors from experts\"\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.Age > 65\nAND posts.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT tags.TagName, posts.Body\nFROM tags\nJOIN posts ON tags.ExcerptPostId = posts.Id\nWHERE tags.TagName = \"bayesian\"\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS AverageScore\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (COUNT(p.Id) / (SELECT COUNT(Id) FROM posts)) * 100 AS Percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5\nAND u.Age > 65\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.FavoriteCount\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = 3025\nAND comments.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT p.CreationDate, p.ClosedDate\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 23853\nAND c.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS PostCount\nFROM posts\nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(posts.Id) / COUNT(votes.Id) AS PostToVoteRatio\nFROM posts\nJOIN votes ON posts.OwnerUserId = votes.UserId\nWHERE posts.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text\nFROM comments\nWHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Text = 'thank you user93'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.DisplayName AS Editor\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text\nFROM postHistory\nWHERE postHistory.PostId = (SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?')\nAND postHistory.PostHistoryTypeId = 5\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName\nFROM votes\nJOIN posts ON votes.PostId = posts.Id\nJOIN users ON votes.UserId = users.Id\nWHERE votes.BountyAmount = 50\nAND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT posts.Title, posts.Body AS Comment, AVG(posts.ViewCount) AS AverageViewCount\nFROM posts\nWHERE posts.Tags LIKE '%<humor>%'\nGROUP BY posts.Title, posts.Body\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(UserId) AS TotalUsers\nFROM badges\nWHERE COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT u.Id, u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nJOIN postHistory ph ON p.Id = ph.PostId\nWHERE p.ViewCount >= 1000\nGROUP BY u.Id\nHAVING COUNT(ph.Id) = 1\t----- bird -----\tcodebase_community",
    "322": "SELECT ((COUNT(CASE WHEN YEAR(Date) = 2010 AND Name = 'Student' THEN 1 END) / COUNT(Name)) * 100) - ((COUNT(CASE WHEN YEAR(Date) = 2011 AND Name = 'Student' THEN 1 END) / COUNT(Name)) * 100) AS percentage_difference\nFROM badges\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(UpVotes) AS AverageUpVotes, AVG(Age) AS AverageAge\nFROM users\nWHERE Id IN (SELECT OwnerUserId\n             FROM posts\n             GROUP BY OwnerUserId\n             HAVING COUNT(Id) > 10)\t----- bird -----\tcodebase_community",
    "324": "SELECT DIVIDE(COUNT(Id) WHERE YEAR(CreationDate) = 2010, COUNT(Id) WHERE YEAR(CreationDate) = 2011) FROM votes\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(SUM(ViewCount)) as Popularity\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder'\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.TagName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nJOIN postLinks ON posts.Id = postLinks.PostId\nJOIN tags ON postLinks.RelatedPostId = tags.Id\nWHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (tags.Count) / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')) as percentage\nFROM tags\nWHERE TagName = 'r'\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(CASE WHEN p.OwnerDisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) AS MorningtonViewCount,\n       SUM(CASE WHEN p.OwnerDisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) AS AmosViewCount,\n       (SUM(CASE WHEN p.OwnerDisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) - SUM(CASE WHEN p.OwnerDisplayName = 'Amos' THEN p.ViewCount ELSE 0 END)) AS ViewCountDifference\nFROM posts p\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(linksPerMonth) AS averageMonthlyLinks\nFROM\n(\n    SELECT COUNT(Id) AS linksPerMonth\n    FROM postLinks\n    WHERE YEAR(CreationDate) = 2010\n    AND PostId IN (SELECT Id FROM posts WHERE AnswerCount <= 2)\n    GROUP BY MONTH(CreationDate)\n) subquery\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) \nFROM votes \nWHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl')\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE badges.Name = 'Autobiographer'\nORDER BY badges.Date\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) \nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom' \nAND p.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, p.OwnerDisplayName\nFROM posts p\nWHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE YEAR(CreationDate) = 2010)\t----- bird -----\tcodebase_community",
    "336": "SELECT DIVIDE(COUNT(Id), (SELECT COUNT(Id) FROM posts WHERE YEAR(CreationDate) = 2011)) * 100\nFROM posts\nWHERE YEAR(CreationDate) = 2011\nAND OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 1000)\t----- bird -----\tcodebase_community",
    "337": "SELECT posts.ViewCount AS TotalViews, users.DisplayName AS LastUser\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Body = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, u.DisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN users u ON c.UserId = u.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    DIVIDE(COUNT(posts.Id), (SELECT COUNT(posts.Id) FROM posts WHERE Score > 50)) AS percentage\nFROM posts\nWHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId\nFROM tags\nWHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes\nFROM users\nJOIN comments ON users.Id = comments.UserId\nWHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text, MAX(comments.Score) \nFROM posts \nJOIN comments ON posts.Id = comments.PostId \nWHERE posts.ViewCount BETWEEN 100 AND 150 \nGROUP BY comments.Text \nORDER BY MAX(comments.Score) DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nWHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) \nAND Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT DIVIDE(COUNT(UserId), COUNT(UserId where Score BETWEEN 5 and 10))*100\nFROM comments\nWHERE Score BETWEEN 5 and 10\nAND UpVotes = 0\t----- bird -----\tcodebase_community",
    "346": "SELECT * \nFROM cards \nWHERE cardKingdomFoilId IS NOT NULL \nAND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT cards.id, cards.asciiName\nFROM cards\nWHERE cards.borderColor = 'borderless' AND cards.cardKingdomFoilId IS NULL AND cards.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "348": "SELECT cards.name\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.format = 'gladiator' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, cards.name, cards.artist, rulings.text, cards.hasContentWarning\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.name, cards.artist, cards.isPromo\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT ROUND((COUNT(DISTINCT c.id) / (SELECT COUNT(DISTINCT id) FROM cards)) * 100, 2) AS percentage\nFROM cards c\nJOIN foreign_data f ON c.id = f.id\nWHERE f.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*)\nFROM cards\nWHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor\nFROM cards\nWHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT ((COUNT(id) WHERE borderColor = 'borderless') / COUNT(id)) * 100 AS percentage\nFROM cards\t----- bird -----\tcard_games",
    "358": "SELECT ROUND((COUNT(id) WHERE language = 'French' AND isStorySpotlight = 1) / COUNT(id) WHERE isStorySpotlight = 1) * 100 AS percentage\nFROM foreign_data\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel'\nAND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id\nFROM cards\nWHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.originalType = 'Artifact' AND cards.colors = 'B' AND foreign_data.language != 'English'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost\nFROM cards\nWHERE layout = 'normal'\nAND frameVersion = '2003'\nAND borderColor = 'black'\nAND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT id\nFROM cards\nWHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE sets.block = 'Commander' \nAND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT foreign_data.language, cards.types\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE foreign_data.language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') \nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nJOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE foreign_data.language = 'French'\nAND cards.type LIKE '%Creature%'\nAND cards.layout = 'normal'\nAND cards.borderColor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT language\nFROM set_translations\nWHERE setCode = 'Ravnica'\nAND id = (SELECT id FROM sets WHERE baseSetSize = 180 AND block = 'Ravnica')\t----- bird -----\tcard_games",
    "371": "SELECT DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE legalities.format = 'commander' AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT ROUND((COUNT(*) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*')) * 100, 2) AS percentage\nFROM foreign_data\nWHERE language = 'French' AND uuid IN (SELECT uuid FROM cards WHERE power IS NULL OR power = '*')\t----- bird -----\tcard_games",
    "373": "SELECT foreign_data.language\nFROM foreign_data\nWHERE foreign_data.multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT DIVIDE(COUNT(*) WHERE isTextless = 1 AND layout = 'normal', COUNT(*)) * 100\nFROM cards\t----- bird -----\tcard_games",
    "375": "SELECT foreign_data.language\nFROM foreign_data\nJOIN sets ON foreign_data.uuid = sets.uuid\nWHERE sets.mcmName = 'Archenemy' AND sets.setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT foreign_data.language\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT \nCASE\n    WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') THEN 'Serra Angel'\n    ELSE 'Shrine Keeper'\nEND AS higher_cost_card\t----- bird -----\tcard_games",
    "378": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nJOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT * \nFROM cards \nJOIN foreign_data ON cards.id = foreign_data.id \nWHERE cards.name = 'Ancestor''s Chosen' \nAND foreign_data.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nWHERE id IN (SELECT id FROM sets WHERE name = 'Hauptset Zehnte Edition') \nAND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT st_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.name = 'Eighth Edition'\nAND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name, sets.mtgoCode\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.name, sets.isForeignOnly\nFROM sets\nJOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT sets.name, sets.baseSetSize\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT artist\nFROM cards\nWHERE setCode = 'Coldsnap'\nAND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nWHERE setCode = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT foreign_data.flavorText\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND rulings.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT \ncards.name, foreign_data.name AS italian_name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND foreign_data.language = 'Italian'\nAND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards)\t----- bird -----\tcard_games",
    "391": "SELECT DIVIDE(SUM(convertedManaCost = 7), SUM(convertedManaCost))*100\nFROM cards\nWHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT (DIVIDE(SUM(cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL), SUM(name = 'Coldsnap')))*100\nFROM cards\nWHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT legalities.format, cards.name\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE legalities.status = 'Banned'\nGROUP BY legalities.format\nORDER BY COUNT(legalities.status) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1\nAND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name\nFROM sets\nLEFT JOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language NOT LIKE '%Japanese%' AND set_translations.language = 'Korean'\t----- bird -----\tcard_games",
    "397": "SELECT frameVersion\nFROM cards\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN bond.bond_type = '-' AND atom.element = 'o' THEN 1 ELSE 0 END) AS avg_oxygen_atoms\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nJOIN atom ON atom.molecule_id = molecule.molecule_id\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN m.label = '+' AND b.bond_type = '-' THEN 1 ELSE 0 END) AS average_carcinogenic_single_bonded\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT DIVIDE(SUM(CASE WHEN element = 'c' AND bond_type = '=' THEN 1 ELSE 0 END), COUNT(atom_id)) * 100 AS percentage\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT element, COUNT(label) as label_count\nFROM atom\nWHERE element = 'h'\nGROUP BY element\nORDER BY label_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nLEFT JOIN bond ON atom.molecule_id = bond.molecule_id\nLEFT JOIN connected ON atom.atom_id = connected.atom_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom a \nJOIN bond b ON a.molecule_id = b.molecule_id \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE (a.element = 'i' OR a.element = 's') \nAND b.bond_type = '-' \t----- bird -----\ttoxicology",
    "409": "SELECT DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '+' AND element = 'f' THEN 1 ELSE 0 END) * 100, COUNT(DISTINCT molecule_id)) as percentage_no_fluorine\nFROM molecule\nLEFT JOIN atom ON molecule.molecule_id = atom.molecule_id\t----- bird -----\ttoxicology",
    "410": "SELECT DIVIDE(SUM(b.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR000'\nORDER BY atom.element\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT DIVIDE(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END), COUNT(bond_id)) * 100 AS percent\nFROM bond\nWHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT DIVIDE(SUM(label = '+'), COUNT(molecule_id)) * 100 as percent\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(atom_id)) as percent \nFROM atom \nWHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT atom.element, molecule.label\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-'\nAND m.label = '-'\nGROUP BY m.molecule_id\nORDER BY m.molecule_id\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) \nFROM bond \nJOIN connected ON bond.molecule_id = connected.molecule_id \nWHERE (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS connections\nFROM connected\nWHERE atom_id = 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT m.molecule_id\nFROM molecule m\nWHERE m.label = '+'\nAND m.molecule_id IN (SELECT DISTINCT molecule_id FROM atom WHERE SUBSTR(atom_id, 7, 2) BETWEEN '21' AND '25')\t----- bird -----\ttoxicology",
    "423": "SELECT bond.bond_id\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE atom.element = 'p' OR atom.element = 'n'\t----- bird -----\ttoxicology",
    "424": "SELECT m.molecule_id, COUNT(b.bond_id) AS double_bonds\nFROM molecule m\nLEFT JOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY double_bonds DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(COUNT(bond_id) / COUNT(atom_id)) AS average_bonds\nFROM atom\nWHERE element = 'i'\t----- bird -----\ttoxicology",
    "426": "SELECT element\nFROM atom\nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT DIVIDE(SUM(label = '+') * 100, COUNT(bond_id)) as proportion\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-' and molecule.label = '+'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom a\nJOIN bond b ON a.molecule_id = b.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a.element = 'p' OR a.element = 'br') \nAND b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT DIVIDE(SUM(element = 'cl'), COUNT(atom_id)) as percent\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT DIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(molecule_id)) as percentage\nFROM molecule\nWHERE label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE molecule.label = '+'\nAND SUBSTR(atom.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT DIVIDE(SUM(element = 'h'), count(element)) as ratio, label\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrMath > 400 AND sc.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT satscores.cds\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT schools.`CDSCode`, schools.`School`, frpm.`Percent (%) Eligible Free (Ages 5-17)`\nFROM satscores\nJOIN schools ON satscores.`cds` = schools.`CDSCode`\nJOIN frpm ON frpm.`CDSCode` = schools.`CDSCode`\nWHERE satscores.`NumTstTakr` > 0\nAND satscores.`NumGE1500` / satscores.`NumTstTakr` > 0.3\nORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "441": "SELECT satscores.sname, satscores.AvgScrWrite, schools.CharterNum\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrWrite > 499\nORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.`School`, schools.`Street`, schools.`City`, schools.`State`\nFROM schools\nWHERE (schools.`Enrollment (K-12)` - schools.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT satscores.sname\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) > 0.1\nAND satscores.NumTstTakr > 0\nAND satscores.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE sc.County = 'Riverside' \nAND s.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.School, schools.Street, schools.City, schools.State, schools.Zip\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE frpm.Percent (%) Eligible FRPM (Ages 5-17) > 800\nAND schools.County = 'Monterey'\nAND schools.StatusType = 'High School'\t----- bird -----\tcalifornia_schools",
    "446": "SELECT satscores.sname, satscores.AvgScrWrite, schools.Phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE (schools.OpenDate > '1991-01-01' OR schools.ClosedDate < '2000-01-01')\nAND satscores.AvgScrWrite IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "447": "SELECT schools.`School`, schools.`DOCType`, \n    (schools.`Enrollment (K-12)` - schools.`Enrollment (Ages 5-17)`) as `EnrollmentDifference`\nFROM schools\nJOIN frpm ON schools.`CDSCode` = frpm.`CDSCode`\nWHERE frpm.`FundingType` = 'Local'\nHAVING `EnrollmentDifference` > (SELECT AVG(schools.`Enrollment (K-12)` - schools.`Enrollment (Ages 5-17)`) FROM schools\nJOIN frpm ON schools.`CDSCode` = frpm.`CDSCode`\nWHERE frpm.`FundingType` = 'Local')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT s.CDSCode, \n       s.School, \n       s.Enrollment, \n       f.`Free Meal Count (K-12)`, \n       (f.`Free Meal Count (K-12)` / s.Enrollment) * 100 AS Eligible_Free_Rate\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.StatusType = 'Active'\nORDER BY s.Enrollment DESC\nLIMIT 10, 11\t----- bird -----\tcalifornia_schools",
    "449": "SELECT schools.`School Name`, frpm.`Percent (%) Eligible FRPM (K-12)` \nFROM schools \nJOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` \nWHERE schools.`GSserved` = '1-12' AND frpm.`Charter Funding Type` = '66' \nORDER BY frpm.`Percent (%) Eligible FRPM (K-12)` DESC \nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.Street, schools.City, schools.Zip, schools.State\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.NumTstTakr > 0\nORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT schools.School, \n       satscores.NumGE1500, \n       schools.AdmFName1, \n       schools.AdmLName1, \n       schools.AdmFName2, \n       schools.AdmLName2, \n       schools.AdmFName3, \n       schools.AdmLName3\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(NumTstTakr) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.County = 'Fresno' \nAND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.Phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE dname = 'Fresno Unified')\t----- bird -----\tcalifornia_schools",
    "454": "SELECT satscores.sname, satscores.AvgScrRead, schools.County\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.Virtual = 'F'\nORDER BY satscores.AvgScrRead DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT satscores.sname, satscores.AvgScrWrite\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich'\t----- bird -----\tcalifornia_schools",
    "456": "SELECT schools.School, schools.Enrollment\nFROM schools\nWHERE schools.DOC = 31\nAND schools.GSoffered = '1-12'\nORDER BY schools.Enrollment DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(schools.CDSCode) / 12 AS MonthlyAvgSchoolsOpened\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE frpm.CountyName = 'Alameda' AND schools.DOC = '52' AND YEAR(schools.OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT COUNT(*) as UnifiedSchools\nFROM schools\nWHERE County = 'Orange' AND DOC = '54'\t----- bird -----\tcalifornia_schools",
    "459": "SELECT schools.`Street`, schools.`School`\nFROM satscores\nJOIN schools ON satscores.`cds` = schools.`CDSCode`\nORDER BY satscores.`AvgScrMath` DESC\nLIMIT 6, 1\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools \nJOIN frpm ON schools.CDSCode = frpm.CDSCode \nWHERE County = 'Los Angeles' \nAND Charter = 0 \nAND (`Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)` \nFROM frpm \nJOIN schools ON frpm.CDSCode = schools.CDSCode \nWHERE schools.EdOpsCode = 'SSS' \nAND frpm.`Academic Year` = '2014-2015' \nAND schools.City = 'Fremont'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.`School`, frpm.`Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools\nJOIN frpm ON schools.`CDSCode` = frpm.`CDSCode`\nWHERE schools.`County` = 'Los Angeles' \nAND schools.`GSserved` = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumVirtualSchools\nFROM schools\nWHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F'\nGROUP BY County\nORDER BY NumVirtualSchools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT  `GSoffered` \nFROM schools \nWHERE Longitude = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT schools.City, COUNT(schools.CDSCode) AS NumSchools\nFROM schools\nWHERE schools.GSserved = 'K-8' AND schools.Magnet = 1\nGROUP BY schools.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT schools.`Percent (%) Eligible Free (K-12)`, schools.`District Code`\nFROM schools\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT schools.AdmEmail1, schools.AdmEmail2, schools.AdmEmail3\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE frpm.CountyName = 'San Bernardino' \nAND frpm.DistrictName = 'San Bernardino City Unified' \nAND schools.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND (schools.SOCType = '62' OR schools.DOCType = '54')\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nWHERE district.A3 = 'East Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000 \nAND district_id IN (SELECT district_id FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(client.client_id) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' \nAND district.A3 = 'North Bohemia' \nAND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account_id\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'F'\nORDER BY birth_date ASC, A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account_id\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN account a ON c.client_id = a.client_id\nWHERE birth_date = (SELECT MIN(birth_date) FROM client)\nAND A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT account_id, MIN(amount) as lowest_approved_amount\nFROM loan\nWHERE YEAR(date) = 1997\nGROUP BY account_id\nHAVING frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "474": "SELECT account_id, MAX(amount) as max_approved_amount\nFROM loan\nWHERE duration > 12\nAND account_id IN (SELECT account_id FROM account WHERE YEAR(date) = 1993)\nGROUP BY account_id\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(client.client_id) AS female_customers\nFROM client\nJOIN district ON client.district_id = district.district_id\nJOIN account ON client.client_id = account.client_id\nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT A2\nFROM district\nJOIN client ON district.district_id = client.district_id\nJOIN account ON client.client_id = account.client_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) / COUNT(c.client_id)) * 100 AS percentage_male_clients\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE d.A3 = 'south Bohemia'\nORDER BY d.A4 DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "478": "SELECT c.client_id, \n       ((t1.balance - t2.balance) / t2.balance) * 100 AS increase_rate\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t1 ON a.account_id = t1.account_id\nJOIN trans t2 ON a.account_id = t2.account_id\nWHERE t1.date = '1998-12-27' \nAND t2.date = '1993-03-22' \nAND EXISTS (SELECT 1 FROM loan l WHERE l.account_id = a.account_id AND l.date = '1993-07-05' AND l.status = 'approved')\t----- bird -----\tfinancial",
    "479": "SELECT ((SUM(amount) / (SELECT SUM(amount) FROM loan)) * 100) AS percentage\nFROM loan\nWHERE status = 'A'\t----- bird -----\tfinancial",
    "480": "SELECT ((COUNT(*) / (SELECT COUNT(*) FROM loan WHERE amount < 100000)) * 100) AS percentage\nFROM loan\nWHERE amount < 100000\nAND status = 'C'\t----- bird -----\tfinancial",
    "481": "SELECT d.A2 AS district,\n((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nJOIN client c ON a.district_id = c.district_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT \nd.A2 AS district_name,\nCOUNT(c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.amount >= 250000 \nAND a.frequency = 'POPLATEK MESICNE' \nAND l.date BETWEEN '1995-01-01' AND '1997-12-31' \nAND l.status = 'approved'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district_id = 1 \nAND loan.status = 'C'\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client_id) AS male_clients\nFROM client\nWHERE district_id = \n(SELECT district_id\nFROM trans\nWHERE A15 = (SELECT MAX(A15) FROM trans WHERE A15 < (SELECT MAX(A15) FROM trans)))\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district_id = 1 \nAND loan.status = 'C'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district_id = \n    (SELECT district_id\n    FROM \n        (SELECT district_id, RANK() OVER (ORDER BY A15 DESC) AS crime_rank\n        FROM district) AS ranked_districts\n    WHERE crime_rank = 2)\nAND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT account_id\nFROM trans\nWHERE trans_id IN (SELECT trans_id FROM trans WHERE type = 'VYBER KARTOU' AND amount < (SELECT AVG(amount) FROM trans WHERE YEAR(date) = 1998))\nGROUP BY account_id\t----- bird -----\tfinancial",
    "490": "SELECT disp.type\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.A11 > 8000 AND district.A11 <= 9000\nAND disp.type != 'OWNER'\t----- bird -----\tfinancial",
    "491": "SELECT AVG(d.A15) AS avg_crimes\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000\nAND YEAR(a.date) >= 1997\t----- bird -----\tfinancial",
    "492": "SELECT trans.trans_id, trans.date, trans.amount\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.client_id = 3356\nAND trans.type = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT \n    COUNT(c.client_id) / (SELECT COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) * 100 AS percentage\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE gender = 'F' AND d.A11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT \n    (SUM(l.amount) - (SELECT SUM(l2.amount) \n                     FROM loan l2 \n                     JOIN account a ON l2.account_id = a.account_id \n                     JOIN client c ON a.client_id = c.client_id \n                     WHERE c.gender = 'M' \n                     AND YEAR(l2.date) = 1996)) / \n    (SELECT SUM(l2.amount) \n     FROM loan l2 \n     JOIN account a ON l2.account_id = a.account_id \n     JOIN client c ON a.client_id = c.client_id \n     WHERE c.gender = 'M' \n     AND YEAR(l2.date) = 1996) * 100 AS growth_rate\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.client_id = c.client_id\nWHERE c.gender = 'M'\nAND YEAR(l.date) = 1997\t----- bird -----\tfinancial",
    "495": "SELECT \nCOUNT(*) AS statement_requests,\nSUM(amount) AS total_debit\nFROM trans\nWHERE account_id = 3\nAND type = 'PRIJEM'\nAND operation = 'VYBER'\nAND k_symbol = 'VYDAJ'\t----- bird -----\tfinancial",
    "496": "SELECT \n((COUNT(CASE WHEN c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE' THEN 1 END) / COUNT(CASE WHEN a.frequency = 'POPLATEK TYDNE' THEN 1 END)) * 100) AS percentage_of_male_clients\nFROM client c\nJOIN account a ON c.client_id = a.client_id\t----- bird -----\tfinancial",
    "497": "SELECT account_id\nFROM client\nJOIN account ON client.district_id = account.district_id\nWHERE gender = 'F'\nORDER BY birth_date ASC, A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) \nFROM loan \nWHERE status = 'C' \nAND account_id IN (SELECT account_id FROM trans WHERE k_symbol = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER'\t----- bird -----\tfinancial"
}