{
    "0": "SELECT \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') /\n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') as CurrencyRatio\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customers.CustomerID, customers.Segment, SUM(yearmonth.Consumption) AS TotalConsumption\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Segment = 'LAM'\nGROUP BY customers.CustomerID\nORDER BY TotalConsumption\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT customers.CustomerID, \n       customers.Segment, \n       yearmonth.Date, \n       AVG(yearmonth.Consumption) / 12 AS \"Average Monthly Consumption\"\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Segment = 'SME' \nAND yearmonth.Date BETWEEN '201301' AND '201312'\nGROUP BY customers.CustomerID, yearmonth.Date\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) - \nSUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE SUBSTR(y.Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT strftime('%Y', Date) AS Year, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nJOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE Currency = 'CZK'\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT strftime('%Y%m', Date) AS YearMonth, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\nAND Date BETWEEN '201301' AND '201312'\nGROUP BY YearMonth\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS LAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    GROUP BY Segment\n    ORDER BY LAM_Annual_Average\n    LIMIT 1)\n    -\n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS SME_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    GROUP BY Segment\n    ORDER BY SME_Annual_Average DESC\n    LIMIT 1) AS Difference_LAM_SME,\n    \n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS KAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    GROUP BY Segment\n    ORDER BY KAM_Annual_Average\n    LIMIT 1)\n    -\n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS LAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    GROUP BY Segment\n    ORDER BY LAM_Annual_Average DESC\n    LIMIT 1) AS Difference_KAM_LAM,\n    \n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS SME_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    GROUP BY Segment\n    ORDER BY SME_Annual_Average\n    LIMIT 1)\n    -\n    (SELECT (SUM(Consumption) / COUNT(CustomerID)) AS KAM_Annual_Average\n    FROM yearmonth\n    WHERE Date BETWEEN 201301 AND 201312\n    GROUP BY Segment\n    ORDER BY KAM_Annual_Average DESC\n    LIMIT 1) AS Difference_SME_KAM\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment,\n       (SUM(CASE WHEN substr(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - \n       SUM(CASE WHEN substr(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) as IncreaseOrDecrease,\n       ((SUM(CASE WHEN substr(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - \n       SUM(CASE WHEN substr(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) / \n       SUM(CASE WHEN substr(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END)) * 100 as PercentageIncrease\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Currency = 'EUR'\nGROUP BY Segment\nORDER BY PercentageIncrease DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE CustomerID = 6 \nAND Date >= '201308' \nAND Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT COUNT(*) AS DiscountGasStationsCzech\nFROM gasstations\nWHERE Country = 'CZE'\nAND Segment = 'discount'\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(DISTINCT CustomerID) \n     FROM transactions_1k \n     WHERE Currency = 'CZK') \n     - \n    (SELECT COUNT(DISTINCT CustomerID) \n     FROM transactions_1k \n     WHERE Currency = 'EUR') \n     AS Difference\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT ((COUNT(*) * 100.0) / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM' AND CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Amount > 46.73))) AS Percentage\nFROM customers\nWHERE Segment = 'LAM' AND CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Amount > 46.73)\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CustomerID\nFROM yearmonth\nWHERE Date = '201202' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) \nFROM yearmonth \nWHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description\nFROM transactions_1k\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE strftime('%Y%m', transactions_1k.Date) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT  DISTINCT Country\nFROM gasstations\nJOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE substr(transactions_1k.Date, 1, 4) = '2013' AND substr(transactions_1k.Date, 5, 2) = '06'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(*) \nFROM yearmonth \nJOIN customers ON yearmonth.CustomerID = customers.CustomerID \nWHERE customers.Currency = 'EUR' \nAND yearmonth.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT transactions_1k.Time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT customers.Currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Time = '16:25:00' AND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26' \nAND t.Time BETWEEN '08:00:00' AND '09:00:00'\nAND g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Country\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24'\nGROUP BY c.Country\nHAVING SUM(t.Amount * t.Price) = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT COUNT(CustomerID) * 100.0 / (SELECT COUNT(CustomerID) FROM customers WHERE Currency = 'EUR') as Percentage\nFROM yearmonth\nWHERE Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n    (c2012.Consumption - c2013.Consumption) / c2012.Consumption AS DecreaseRate\nFROM\n    yearmonth c2012\nJOIN\n    yearmonth c2013 ON c2012.CustomerID = c2013.CustomerID\nWHERE\n    c2012.Date = '2012-08-25'\n    AND c2013.Date = '2013-08-25'\n    AND c2012.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price = 634.8)\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT Segment, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM gasstations WHERE Country = \"SVK\") AS Percentage\nFROM gasstations\nWHERE Country = \"SVK\"\nGROUP BY Segment\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t.Amount * t.Price) AS TotalSpent\nFROM transactions_1k t\nWHERE t.CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, \n       c.Currency, \n       AVG(t.Price / t.Amount) AS AveragePricePerItem \nFROM customers c \nJOIN transactions_1k t ON c.CustomerID = t.CustomerID \nGROUP BY c.CustomerID \nORDER BY SUM(t.Amount * t.Price) DESC \nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT customers.CustomerID, yearmonth.Consumption\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE transactions_1k.ProductID = 5\nAND transactions_1k.Price / transactions_1k.Amount > 29.00\nAND transactions_1k.Date LIKE '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE first_name = 'Angela' AND last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women\\'s Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id)\nFROM event\nWHERE type = 'Meeting'\nAND event_id IN (SELECT link_to_event\n                FROM attendance\n                GROUP BY link_to_event\n                HAVING COUNT(link_to_member) > 10)\t----- bird -----\tstudent_club",
    "33": "SELECT event_name\nFROM event\nWHERE type != 'fundraiser'\nGROUP BY event_name\nHAVING COUNT(event_id) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount)\nFROM income\nWHERE source = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense_id, expense_description, expense_date, approved\nFROM expense\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08')\nAND approved = 'True'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) AS average_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nJOIN event ON expense.link_to_event = event.event_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND (strftime('%m', expense.expense_date) = '09' OR strftime('%m', expense.expense_date) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT SUM(CASE WHEN substr(event_date, 1, 4) = '2019' THEN spent ELSE 0 END) - \nSUM(CASE WHEN substr(event_date, 1, 4) = '2020' THEN spent ELSE 0 END) AS difference\nFROM budget\nWHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'Student_Club')\t----- bird -----\tstudent_club",
    "39": "SELECT notes\nFROM income\nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone\nFROM member\nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nWHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business')\nAND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT i.date_received\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT DIVIDE(SUM(amount when event_name = 'Yearly Kickoff'), SUM(amount when event_name = 'October Meeting'))\nFROM budget\nWHERE category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(link_to_member)\nFROM attendance\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer')\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = \"School of Applied Sciences, Technology and Education\"\t----- bird -----\tstudent_club",
    "52": "SELECT event_name\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.status = 'Closed'\nORDER BY budget.spent / budget.amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) \nFROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) \nFROM budget \nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT first_name, last_name\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nGROUP BY member.member_id\nHAVING COUNT(attendance.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name\nFROM event\nWHERE event_id = (\n    SELECT link_to_event\n    FROM expense\n    WHERE cost = (\n        SELECT MIN(cost)\n        FROM expense\n    )\n)\t----- bird -----\tstudent_club",
    "58": "SELECT DIVIDE(SUM(cost), (SELECT SUM(cost) FROM expense)) * 100\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) as total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' and '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event_name\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE category = 'Advertisement'\nORDER BY spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT attendance.link_to_event, attendance.link_to_member\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE member.first_name || ' ' || member.last_name = 'Maya Mclean'\nAND event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'September Speaker'\nAND expense.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.remaining < 0\nORDER BY budget.remaining\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) as total_value\nFROM expense\nWHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event = 'October Meeting' AND approved = 'Yes')\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(amount) AS amount_budgeted, category\nFROM budget\nWHERE link_to_event = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT  member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = \"rec4BLdZHS2Blfp4v\"\nGROUP BY member.first_name, member.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event_name, location\nFROM event\nWHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215'\nAND event.type = 'Guest Speaker'\nAND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.t_shirt_size = 'Medium' AND member.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone AS contact_number\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name || ' ' || member.last_name AS full_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name || ' ' || member.last_name AS full_name, income.amount AS funds_received\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT \n    (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') as in_patient_male_count,\n    (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') as outpatient_male_count,\n    (SELECT (in_patient_male_count * 100.0 / (in_patient_male_count + outpatient_male_count)) - (outpatient_male_count * 100.0 / (in_patient_male_count + outpatient_male_count)) as deviation_percentage) as deviation_percentage\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT DIVIDE(COUNT(ID) WHERE year(Birthday) > '1930' AND SEX = 'F'), COUNT(ID) WHERE SEX = 'F') * 100 as Percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT DIVIDE(COUNT(ID) where Diagnosis = 'SLE' and Admission = '-', COUNT(ID) where Diagnosis = 'SLE' and Admission = '+') as `Outpatient to Inpatient Ratio`\nFROM Patient\nWHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Diagnosis, Date\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Thrombosis = 1\nAND `Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'\nAND Patient.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Symptoms\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Birthday = (SELECT MIN(Birthday) FROM Patient)\nAND Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MAX(Date) AS `Oldest SJS Patient Lab Date`, (SUBTRACT(year(`First Date`), year(Birthday))) AS `Age at Initial Arrival`\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Diagnosis = 'SJS'\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT DIVIDE(SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END), SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END)) as `Male to Female Ratio with Abnormal Uric Acid`\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (UA <= 8.0 AND SEX = 'M') OR (UA <= 6.5 AND SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(*) \nFROM Examination \nJOIN Patient ON Examination.ID = Patient.ID \nWHERE strftime('%Y', Patient.Birthday) > 1993 - 18 \nAND strftime('%Y', Patient.`First Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT MAX(HGB) as `Highest Hemoglobin Count`, \n       Diagnosis as `Doctor's Diagnosis`, \n       SUBTRACT(year(`Examination Date`), year(Birthday)) as `Patient's Age`\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nORDER BY `Highest Hemoglobin Count` DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM`\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n(SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END) - \nSUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END)) /\nSUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) * 100\nAS DecreaseRate\nFROM Laboratory\nWHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18')\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Examination \nWHERE Thrombosis = 2 \nAND `ANA Pattern` = 'S' \nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB) \nFROM Laboratory \nJOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Patient.SEX = 'F' \nAND Laboratory.PLT > 400 \nAND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT DIVIDE(SUM(SEX = 'F' AND YEAR(BIRTHDAY) = '1980' AND Diagnosis = 'RA'), COUNT(*)) * 100\nFROM Patient\nWHERE YEAR(BIRTHDAY) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT UA, SEX\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.ID = 57266\nAND (UA > 8.0 AND SEX = 'M' OR UA > 6.5 AND SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.ID, Patient.Birthday, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Patient.ID) as Patients\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.`T-BIL` >= 2.0\nGROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT DIVIDE(SUM(SUBTRACT(YEAR(NOW()), YEAR(Birthday))), COUNT(ID)) AS 'Average Age'\nFROM Patient\nWHERE SEX = 'M' AND ID IN (SELECT ID FROM Laboratory WHERE `T-CHO` >= 250)\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200\nAND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Birthday BETWEEN '1936' AND '1956'\nAND SEX = 'M'\nAND CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, \n       (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age,\n       Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Diagnosis = 'SLE' AND HGB > 10 AND HGB < 17\nORDER BY Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) > 2 AND MAX(Laboratory.HCT) >= 52\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT Patient.ID, \n       COUNT(CASE WHEN PLT < 100 THEN 1 END) AS 'Lower than normal range',\n       COUNT(CASE WHEN PLT > 400 THEN 1 END) AS 'Higher than normal range'\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE PLT <= 100 OR PLT >= 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.Birthday, Laboratory.PLT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(Laboratory.Date) = '1984' \nAND (STRFTIME('%Y', 'now') - STRFTIME('%Y', Patient.Birthday)) < 50 \nAND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n(DIVIDE(SUM(CASE WHEN (strftime('%Y', 'now') - strftime('%Y', Birthday) > 55) AND SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END), \nSUM(CASE WHEN (strftime('%Y', 'now') - strftime('%Y', Birthday) > 55) AND PT >= 14 THEN 1 ELSE 0 END)) * 100) AS Percentage\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Date = (SELECT MAX(Date) FROM Laboratory WHERE Laboratory.ID = Patient.ID)\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\nAND l.WBC > 3.5 AND l.WBC < 9.0\nAND (l.FG <= 150 OR l.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID)\nFROM Laboratory\nWHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE `aCL IgG` > 900 AND `aCL IgG` < 2000\nAND Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE IGA > 80 AND IGA < 500 AND YEAR(`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis\nFROM Examination\nWHERE `aCL IgM` <= 40 OR `aCL IgM` >= 400\nGROUP BY Diagnosis\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE CRP = '+' AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE CRE >= 1.5\nAND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP = '-' OR Laboratory.RNP = '+-' AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE SM IN ('-', '+-') AND Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nLEFT JOIN Examination ON Patient.ID = Examination.ID\nWHERE Laboratory.SC170 IN ('negative', '0')\nAND Patient.SEX = 'F'\nAND Examination.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CENTROMEA IN ('-', '+-')\nAND l.SSB IN ('-', '+-')\nAND p.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) \nFROM Patient \nWHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*)\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Laboratory.CPK < 250\nAND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY Match.league_id\nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League'\nAND Match.season = '2009/2010'\nGROUP BY Match.away_team_api_id\nORDER BY COUNT(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 END) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nORDER BY Team_Attributes.buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY Match.league_id\nORDER BY SUM(CASE WHEN Match.home_team_goal = Match.away_team_goal THEN 1 ELSE 0 END) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT Player.player_name, (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) AS age\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.sprint_speed >= 97\nAND (YEAR(Player_Attributes.date) >= '2013' AND YEAR(Player_Attributes.date) <= '2015')\t----- bird -----\teuropean_football_2",
    "133": "SELECT l.name AS league_name, COUNT(m.id) AS match_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nGROUP BY l.name\nORDER BY match_count DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT `team_fifa_api_id` \nFROM `Team_Attributes` \nWHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT Team.team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL)\nAND strftime('%Y', Team_Attributes.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT DIVIDE(MULTIPLY((SUM(preferred_foot = 'left'), 100)), COUNT(player_fifa_api_id))\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id\nWHERE YEAR(birthday) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2009/2010'\nGROUP BY Match.league_id\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT `player_name`\nFROM `Player`\nWHERE substr(`birthday`, 1, 7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas'\nAND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nWHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') \nAND season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player)\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.finishing) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT  AVG(overall_rating) \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.height > 170 \nAND strftime('%Y', date) >= '2010' \nAND strftime('%Y', date) <= '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) - (SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END)) AS difference\nFROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday\nFROM Player\nWHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada'\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', p.birthday)<'1986' AND pa.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.name = 'Belgium Jupiler League' \nAND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2008/2009'\nGROUP BY Match.league_id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((Player_Attributes.overall_rating - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) * 100\nFROM Player_Attributes\nWHERE player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino')\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score, chanceCreationPassingClass AS classification\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate\nFROM Player_Attributes\nJOIN Player\nON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Francesco Migliore'\nAND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT date\nFROM Player_Attributes\nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant')\nORDER BY crossing DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT `buildUpPlayPassingClass` \nFROM `Team_Attributes` \nWHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'FC Lorient') \nAND `date` LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT `defenceAggressionClass` \nFROM `Team_Attributes` \nWHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Hannover 96') \nAND `date` LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') \nAND date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')) * 100 / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') as percentage\t----- bird -----\teuropean_football_2",
    "164": "SELECT `player_name`\nFROM `Player`\nORDER BY `height` DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name\nFROM Player\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player_Attributes\n    WHERE overall_rating = (\n        SELECT MAX(overall_rating)\n        FROM Player_Attributes\n    )\n)\t----- bird -----\teuropean_football_2",
    "166": "SELECT `player_name`\nFROM `Player_Attributes`\nJOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id`\nWHERE `attacking_work_rate` = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23)) AS difference_of_jumping_scores\t----- bird -----\teuropean_football_2",
    "170": "SELECT Player_Attributes.player_api_id\nFROM Player_Attributes\nWHERE Player_Attributes.potential = (SELECT MIN(potential) FROM Player_Attributes)\nAND Player_Attributes.preferred_foot = 'right'\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT Match.home_team_goal, Match.away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT `Team_Attributes`.`buildUpPlaySpeedClass`\nFROM `Team_Attributes`\nJOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id`\nWHERE `Team`.`team_long_name` = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player.player_name, Player.weight, Player_Attributes.finishing, Player_Attributes.curve\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) AS games_played\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY games_played DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nGROUP BY Match.away_team_api_id\nORDER BY MAX(Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name\nFROM Player\nWHERE id = (\n    SELECT id\n    FROM Player_Attributes\n    WHERE overall_rating = (\n        SELECT MAX(overall_rating)\n        FROM Player_Attributes\n    )\n)\t----- bird -----\teuropean_football_2",
    "178": "SELECT (CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM Player)) * 100\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.height < 180 AND Player_Attributes.overall_rating > 70\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverRef\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE raceId = 20\nAND q1 = (SELECT MAX(q1) FROM qualifying WHERE raceId = 20)\nORDER BY position\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nWHERE qualifying.raceId = 19\nAND qualifying.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceId = 354\t----- bird -----\tformula_1",
    "185": "SELECT drivers.number\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 903\nAND qualifying.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Bahrain Grand Prix' \nAND races.year = 2007 \nAND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.raceId = 592\nAND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.forename, drivers.surname, drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nJOIN races ON races.raceId = lapTimes.raceId\nWHERE lapTimes.time = '0:01:27' AND races.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT circuits.location, circuits.lat, circuits.lng\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 9\nAND constructorResults.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9)\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM    qualifying\nJOIN    drivers ON qualifying.driverId = drivers.driverId\nWHERE   qualifying.raceId = 45\nAND     qualifying.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "192": "SELECT url\nFROM seasons\nWHERE year = (SELECT year FROM races WHERE raceId = 901)\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.raceId = 872\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT DIVIDE(SUBTRACT((SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')), \n(SELECT fastestLapSpeed FROM results WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) * 100, \n(SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) as percentage\t----- bird -----\tformula_1",
    "196": "SELECT drivers.driverId, \n       COUNT(results.driverId) FILTER (WHERE results.time IS NOT NULL) / COUNT(results.driverId) AS completion_rate\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16'\nGROUP BY drivers.driverId\t----- bird -----\tformula_1",
    "197": "SELECT races.name\nFROM races\nWHERE year = (SELECT min(year) FROM seasons)\nAND strftime('%m', date) = (SELECT min(strftime('%m', date)) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nGROUP BY drivers.driverId\nORDER BY SUM(results.points) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(milliseconds) AS best_lap_time, drivers.forename, drivers.surname, races.name AS race\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nGROUP BY lapTimes.raceId\nORDER BY best_lap_time\nLIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(milliseconds) \nFROM lapTimes \nJOIN drivers ON lapTimes.driverId = drivers.driverId \nJOIN races ON lapTimes.raceId = races.raceId \nWHERE drivers.forename = 'Lewis' \nAND drivers.surname = 'Hamilton' \nAND races.name = 'Malaysian Grand Prix' \nAND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT DIVIDE(COUNT(raceId) where surname = 'Hamilton' and position>1), (COUNT(raceId) where surname = 'Hamilton') \nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.surname = 'Hamilton' AND results.position > 1 AND results.raceId IN (SELECT raceId FROM races WHERE year >= 2010)\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name,\n       drivers.nationality,\n       MAX(driverStandings.wins) AS most_wins,\n       MAX(driverStandings.points) AS max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY most_wins DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT drivers.forename, drivers.surname, (YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) as age\nFROM drivers\nWHERE nationality = 'Japanese'\nORDER BY dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE MONTH(races.date) = 9 AND seasons.year = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename || ' ' || drivers.surname = 'Alex Yoong'\nAND results.position < 10\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' AND results.fastestLap = 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT (races.name = 'European Grand Prix' AND races.country = 'Germany') AS germanRaces,\n       races.name = 'European Grand Prix' AS totalEuropeanRaces\nFROM races\nWHERE races.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality\nFROM drivers\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' \nAND results.fastestLapSpeed IS NOT NULL\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Australian Grand Prix'\nAND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT driverId) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') \nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT results.driverId, \n    ((results.milliseconds - (SELECT MAX(results.milliseconds) FROM results WHERE raceId = 1)) / (SELECT MAX(results.milliseconds) FROM results WHERE raceId = 1)) * 100 AS percentage_faster\nFROM results\nWHERE results.raceId = 1\nAND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*)\nFROM circuits\nWHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) \nFROM constructorStandings \nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId \nWHERE nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE constructorStandings.points = 0\nAND constructorStandings.raceId = 291\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(constructorId) \nFROM constructorStandings \nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId \nJOIN races ON constructorStandings.raceId = races.raceId \nWHERE constructors.nationality = 'Japanese' \nAND constructorStandings.points = 0 \nAND races.year = (SELECT year FROM seasons WHERE year = 2)\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(driverId) * 100.0) / \n    (SELECT COUNT(driverId) \n     FROM results \n     WHERE time IS NOT NULL \n     AND raceId IN \n         (SELECT raceId \n          FROM races \n          WHERE year BETWEEN 2007 AND 2009 \n          AND circuitId IN \n              (SELECT circuitId \n               FROM circuits \n               WHERE country = 'Japan')\n         )\n     AND year BETWEEN 2007 AND 2009) \n     AS race_completion_percentage\nFROM results \nWHERE time IS NOT NULL \nAND raceId IN \n    (SELECT raceId \n     FROM races \n     WHERE year BETWEEN 2007 AND 2009 \n     AND circuitId IN \n         (SELECT circuitId \n          FROM circuits \n          WHERE country = 'Japan')\n    )\nAND year BETWEEN 2007 AND 2009 \nAND driverId IN \n    (SELECT driverId \n     FROM drivers \n     WHERE nationality = 'Japanese')\t----- bird -----\tformula_1",
    "224": "SELECT races.year, \n       AVG(strftime('%s', results.time)) AS average_time_seconds \nFROM races \nJOIN results ON races.raceId = results.raceId \nWHERE results.position = 1 \nAND results.time IS NOT NULL \nAND races.year < 1975 \nGROUP BY races.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009\nAND results.position = 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' \nAND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(driverId) * 100) / \n    (SELECT COUNT(driverId) FROM drivers WHERE year(dob) BETWEEN 2000 AND 2005) \n    FROM drivers \n    WHERE year(dob) < 1985 AND driverId IN \n    (SELECT driverId FROM results WHERE laps > 50)\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(driverId)\nFROM lapTimes\nWHERE time < '02:00.00'\nAND driverId IN (SELECT driverId FROM drivers WHERE nationality = 'French')\t----- bird -----\tformula_1",
    "229": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT driverId, forename, surname, dob, nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German'\nORDER BY dob\nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE drivers.dob = 1971 AND results.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE raceId > 50 AND raceId < 100 \nAND positionText = 'DSQ'\t----- bird -----\tformula_1",
    "234": "SELECT circuitRef, name, location, lat, lng\nFROM circuits\nWHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT MIN(races.date) as first_qualifying_race_date, races.name as first_qualifying_race_name, races.year as first_qualifying_race_year, races.time as first_qualifying_race_time\nFROM qualifying\nJOIN races ON qualifying.raceId = races.raceId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "236": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, \n       AVG(pitStops.milliseconds) AS avg_duration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' \n      AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY drivers.driverId\nORDER BY avg_duration\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM results\nJOIN constructors ON results.constructorId = constructors.constructorId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY results.position ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructors.name, constructors.nationality, sum(constructorResults.points) as total_points\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nJOIN races ON constructorResults.raceId = races.raceId\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructors.name\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE races.year = 2008\nAND races.name = 'Marina Bay Street Circuit'\nAND qualifying.position = 1\nAND qualifying.number = 3\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename || ' ' || drivers.surname as full_name, drivers.nationality, races.name as first_race\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "243": "SELECT MAX(number) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') \nAND statusId = 3\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, lapTimes.time\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nORDER BY lapTimes.milliseconds ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS eye_color_count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY eye_color_count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(superhero.id)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' \nAND attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (COUNT(s.id) * 100) / (SELECT COUNT(*) FROM superhero) AS percentage,\n    (SELECT COUNT(*) FROM superhero s\n    INNER JOIN publisher p ON s.publisher_id = p.id\n    INNER JOIN alignment a ON s.alignment_id = a.id\n    WHERE a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics') AS marvel_bad_superheroes\nFROM superhero s\nINNER JOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "260": "SELECT publisher_name, COUNT(superhero.id) AS num_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nGROUP BY publisher_name\t----- bird -----\tsuperhero",
    "261": "SELECT id\nFROM publisher\nWHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*)\nFROM superhero\nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg)\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero",
    "264": "SELECT superhero.superhero_name, superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.hair_colour_id = colour.id\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.height_cm = 185\nAND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (COUNT(superhero.id) * 100) / \n    (SELECT COUNT(superhero.id) FROM superhero WHERE height_cm BETWEEN 150 AND 180) \n    AS percentage_published_by_marvel\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE height_cm BETWEEN 150 AND 180\nAND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')\nAND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'durability'\nAND publisher.publisher_name = 'Dark Horse Comics'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT colour.colour AS eye_colour,\n       colour.colour AS hair_colour,\n       colour.colour AS skin_colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.gender_id = (SELECT id FROM gender WHERE gender = 'Female')\nAND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE hair_colour.colour = skin_colour.colour AND hair_colour.colour = eye_colour.colour\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (COUNT(*) * 100) / \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) \n    FROM superhero \n    WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') \n    AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(power_id) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT  superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(hero_id)\nFROM hero_attribute\nWHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength')\nAND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "281": "SELECT ROUND((COUNT(*) * 100.0) / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND gender_id = (SELECT id FROM gender WHERE gender = 'Female')) as percent_female_heroes_marvel_comics\t----- bird -----\tsuperhero",
    "282": "SELECT SUM(weight_kg) \nFROM superhero \nWHERE full_name = 'Emil Blonsky'\n- \nSELECT SUM(weight_kg) \nFROM superhero \nWHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "283": "SELECT superhero.superhero_name, \n       AVG(superhero.height_cm) AS average_height\nFROM superhero\nGROUP BY superhero.superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT \n    (COUNT(superhero_name) * 100.0) / \n    (SELECT COUNT(superhero_name) FROM superhero) \n    FROM superhero \n    WHERE eye_colour_id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) /\n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) as ratio\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL) *\n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')) -\n    (SELECT COUNT(*) FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL) *\n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'no eye color')) as difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*)\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN colour ON superhero.skin_colour_id = colour.id\nWHERE alignment.alignment = 'Bad' AND colour.colour = 'Green'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT superhero.gender_id\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT \n    publisher_name,\n    COUNT(*) as num_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nGROUP BY publisher_name\t----- bird -----\tsuperhero",
    "297": "SELECT MAX(Reputation) AS HighestReputation\nFROM users\nWHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName\nFROM users\nWHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*)\nFROM users\nWHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = \"Eliciting priors from experts\"\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*)\nFROM posts\nWHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65)\nAND Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.Body\nFROM tags\nJOIN posts ON tags.ExcerptPostId = posts.Id\nWHERE tags.TagName = \"bayesian\"\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score)\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT  (COUNT(p.Id) * 100.0) / (SELECT COUNT(u.Id) FROM users u WHERE u.Age > 65) AS Percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.FavoriteCount\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = 3025\nAND comments.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT posts.ClosedDate\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = 23853\nAND comments.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = \"Tiago Pasqualini\")\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(posts.Id) / COUNT(votes.Id) AS PostToVoteRatio\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nJOIN votes ON posts.Id = votes.PostId\nWHERE users.Id = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text\nFROM comments\nWHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Text = 'thank you user93'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT \n    users.DisplayName AS Editor\nFROM\n    posts\n    INNER JOIN users ON posts.LastEditorUserId = users.Id\nWHERE\n    posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text\nFROM comments\nJOIN postHistory ON comments.PostId = postHistory.Id\nJOIN posts ON postHistory.PostId = posts.Id\nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName\nFROM votes\nJOIN posts ON votes.PostId = posts.Id\nJOIN users ON votes.UserId = users.Id\nWHERE votes.BountyAmount = 50\nAND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT posts.Title, comments.Text\nFROM posts\nJOIN postLinks ON posts.Id = postLinks.PostId\nJOIN comments ON posts.Id = comments.PostId\nJOIN tags ON posts.Id = tags.ExcerptPostId\nWHERE tags.TagName = 'humor'\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(UserId) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT u.Id, u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nJOIN postHistory ph ON p.Id = ph.PostId\nWHERE p.ViewCount >= 1000\nGROUP BY u.Id\nHAVING COUNT(DISTINCT ph.Id) = 1\t----- bird -----\tcodebase_community",
    "322": "SELECT ((COUNT(Name) FILTER (WHERE strftime('%Y', Date) = '2010') * 100 / COUNT(Name)) - (COUNT(Name) FILTER (WHERE strftime('%Y', Date) = '2011') * 100 / COUNT(Name))) AS percentage_difference\nFROM badges\nWHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(UpVotes) AS AverageUpVotes, AVG(Age) AS AverageAge\nFROM users\nWHERE Id IN (SELECT UserId\n             FROM posts\n             GROUP BY UserId\n             HAVING COUNT(UserId) > 10)\t----- bird -----\tcodebase_community",
    "324": "SELECT DIVIDE(\n    (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010'),\n    (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2011')\n) as VoteRatio\t----- bird -----\tcodebase_community",
    "325": "SELECT posts.Id\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'slashnick'\nORDER BY posts.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(SUM(ViewCount)) as Popularity\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder'\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.TagName\nFROM posts\nJOIN postHistory ON posts.Id = postHistory.PostId\nJOIN tags ON posts.Id = tags.ExcerptPostId\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Mark Meckes'\nAND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (COUNT(PostId WHERE TagName = 'r')) / (COUNT(PostId WHERE DisplayName = 'Community')) as percentage\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nJOIN tags ON posts.Id = tags.ExcerptPostId\nWHERE users.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Mornington') -\n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Amos') as ViewCountDifference\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(COUNT(Id)) as AverageMonthlyLinks\nFROM postLinks\nJOIN posts ON postLinks.PostId = posts.Id\nWHERE strftime('%Y', postLinks.CreationDate) = '2010'\nAND posts.AnswerCount <= 2\nGROUP BY strftime('%m', postLinks.CreationDate)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) \nFROM votes \nWHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl')\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Autobiographer'\nORDER BY badges.Date\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom'\nAND p.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.Id, posts.Title\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky'\nORDER BY posts.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.Id, users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE strftime('%Y', CreationDate) = '2010')\t----- bird -----\tcodebase_community",
    "336": "SELECT DIVIDE(COUNT(posts.Id), COUNT(users.Id)) * 100\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE strftime('%Y', posts.CreationDate) = '2011' AND users.Reputation > 1000\t----- bird -----\tcodebase_community",
    "337": "SELECT posts.ViewCount AS \"Total Views\", users.DisplayName AS \"Last User\"\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nJOIN users ON comments.UserId = users.Id\nWHERE posts.Title = 'Analysing wind data with R'\nORDER BY comments.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    DIVIDE(COUNT(posts.Id), (SELECT COUNT(posts.Id) FROM posts WHERE Score > 50)) * 100\nFROM posts\nWHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId\nFROM tags\nWHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text\nFROM posts\nJOIN comments ON posts.Id = comments.PostId\nWHERE posts.ViewCount BETWEEN 100 AND 150\nORDER BY comments.Score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nWHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) \nAND Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT DIVIDE(COUNT(UserId) WHERE UpVotes = 0 AND Score BETWEEN 5 AND 10) * 100, COUNT(UserId) WHERE Score BETWEEN 5 AND 10) AS Percentage\nFROM comments\t----- bird -----\tcodebase_community",
    "346": "SELECT * \nFROM cards \nWHERE cardKingdomFoilId IS NOT NULL \nAND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT * \nFROM cards \nWHERE borderColor = 'borderless' \nAND cardKingdomFoilId IS NULL \nAND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "348": "SELECT cards.name\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.format = 'gladiator' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, cards.name, rulings.text, cards.hasContentWarning\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.name, cards.artist, cards.isPromo\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT (language, (COUNT(id) / (SELECT COUNT(id) FROM foreign_data)) * 100) AS percentage\nFROM foreign_data\nWHERE language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*)\nFROM cards\nWHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor\nFROM cards\nWHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT ((COUNT(id) WHERE borderColor = 'borderless') / COUNT(id)) * 100 AS percentage\nFROM cards\t----- bird -----\tcard_games",
    "358": "SELECT (Count(id) where language = 'French' and isStorySpotlight = 1) / (Count(id) where isStorySpotlight = 1) * 100\nFROM foreign_data\nWHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)\nFROM cards\nWHERE originalType = \"Summon - Angel\"\nAND subtypes != \"Angel\"\t----- bird -----\tcard_games",
    "360": "SELECT id\nFROM cards\nWHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.originalType = 'Artifact' AND cards.colors = 'B' AND foreign_data.language != 'English'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost\nFROM cards\nWHERE layout = 'normal'\nAND frameVersion = '2003'\nAND borderColor = 'black'\nAND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT cards.id\nFROM cards\nWHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE sets.block = 'Commander' \nAND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT foreign_data.name\nFROM foreign_data\nWHERE foreign_data.language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nJOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE foreign_data.language = 'French'\nAND cards.type LIKE '%Creature%'\nAND cards.layout = 'normal'\nAND cards.borderColor = 'black'\nAND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.block = 'Ravnica'\nAND sets.baseSetSize = 180\t----- bird -----\tcard_games",
    "371": "SELECT DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE format = 'commander' AND status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT (DIVIDE(COUNT(language = 'French' and (power IS NULL or power = '*')), COUNT(power IS NULL or power = '*')) * 100) as percentage\nFROM foreign_data\nWHERE language = 'French' and (power IS NULL or power = '*')\t----- bird -----\tcard_games",
    "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT DIVIDE(COUNT(Textless = 1 and layout = 'normal'),COUNT(Textless))*100\nFROM cards\t----- bird -----\tcard_games",
    "375": "SELECT language\nFROM set_translations\nWHERE setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language\nFROM foreign_data\nWHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost\nFROM cards\nWHERE name = 'Serra Angel' OR name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "378": "SELECT sets.name\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "379": "SELECT language\nFROM foreign_data\nWHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nWHERE id IN (SELECT id FROM sets WHERE name = 'Hauptset Zehnte Edition')\nAND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation\nFROM set_translations\nWHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition')\nAND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name, sets.mtgoCode\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE block = 'Ice Age' AND language = 'Italian' AND translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT isForeignOnly\nFROM sets\nWHERE name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT sets.name\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist\nFROM cards\nWHERE setCode = 'CSP'\nAND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nWHERE setCode = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT flavorText\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.name = 'Ancestor''s Chosen'\nAND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND rulings.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT cards.name\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards)\nAND cards.uuid IN (SELECT uuid FROM foreign_data WHERE language = 'Italian')\t----- bird -----\tcard_games",
    "391": "SELECT DIVIDE(SUM(convertedManaCost = 7), SUM(convertedManaCost))*100\nFROM cards\nWHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT (DIVIDE(SUM(cardKingdomFoilId is not null AND cardKingdomId is not null), SUM(name = 'Coldsnap'))*100) as percentage_of_incredibly_powerful_cards\nFROM cards\nWHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT legalities.format, COUNT(legalities.status) AS banned_count\nFROM legalities\nWHERE legalities.status = 'Banned'\nGROUP BY legalities.format\nORDER BY banned_count DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1\nAND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name\nFROM sets\nLEFT JOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language NOT LIKE '%Japanese%' AND set_translations.language = 'Korean'\t----- bird -----\tcard_games",
    "397": "SELECT frameVersion\nFROM cards\nGROUP BY frameVersion\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN bond.bond_type = '-' AND atom.element = 'o' THEN 1 ELSE 0 END) AS avg_oxygen_atoms\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN m.label = '+' AND b.bond_type = '-' THEN 1 ELSE 0 END) AS average_single_bonded_carcinogenic_molecules\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\t----- bird -----\ttoxicology",
    "401": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT DIVIDE(SUM(CASE WHEN element = 'c' AND bond_type = '=' THEN 1 ELSE 0 END), COUNT(atom_id)) AS percentage\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE element = 'c' AND bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label, COUNT(label) AS label_count\nFROM atom\nWHERE element = 'h'\nGROUP BY label\nORDER BY label_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nJOIN bond b ON m.molecule_id = b.molecule_id \nJOIN connected c ON a.atom_id = c.atom_id \nWHERE (a.element = 'i' OR a.element = 's') \nAND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '+' AND element = 'f' THEN 1 ELSE 0 END) * 100, COUNT(DISTINCT molecule_id)) \nFROM molecule\nLEFT JOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT molecule.label, \n       (SUM(CASE WHEN bond.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT DIVIDE(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END), COUNT(bond_id)) as percent \nFROM bond \nWHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(molecule_id)) * 100, 3) AS percent\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND((CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(atom_id)) * 100, 4) AS percent\nFROM atom\nWHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT `atom`.`element`, `molecule`.`label`\nFROM `atom`\nJOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id`\nWHERE `molecule`.`molecule_id` = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR018'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '-'\nAND m.label = '-'\nORDER BY m.molecule_id\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'\t----- bird -----\ttoxicology",
    "419": "SELECT `bond`.`bond_type`, `connected`.`atom_id`, `connected`.`atom_id2`\nFROM `bond`\nJOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id`\nWHERE `bond`.`bond_id` = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT `atom`.`element`\nFROM `atom`\nJOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id`\nWHERE `molecule`.`molecule_id` = \"TR004\"\t----- bird -----\ttoxicology",
    "422": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT `bond_id`\nFROM `connected`\nJOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id`\nJOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id`\nJOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`\nWHERE (`atom`.`element` = 'p' OR `atom2`.`element` = 'p') AND (`atom`.`element` = 'n' OR `atom2`.`element` = 'n')\t----- bird -----\ttoxicology",
    "424": "SELECT m.molecule_id, m.label, COUNT(b.bond_id) AS double_bonds\nFROM molecule m\nLEFT JOIN bond b ON m.molecule_id = b.molecule_id AND b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY double_bonds DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(COUNT(bond_id) / COUNT(atom_id)) \nFROM atom \nWHERE element = 'i'\t----- bird -----\ttoxicology",
    "426": "SELECT a.element\nFROM atom a\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.atom_id IS NULL\t----- bird -----\ttoxicology",
    "427": "SELECT atom.atom_id\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT `atom`.`element`\nFROM `atom`\nJOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id`\nJOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`\nWHERE `bond`.`bond_id` = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT DIVIDE(SUM(label = '+') * 100, COUNT(bond_id))\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE (a.element = 'p' OR a.element = 'br') AND b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT DIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(atom_id)) as percent\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT `atom`.`element`\nFROM `atom`\nJOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id`\nJOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`\nWHERE `bond`.`bond_id` = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT DIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(DISTINCT molecule_id)) as percentage\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT substr(atom_id, 7, 1) AS fourth_atom, element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\nAND substr(atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(element)) AS hydrogen_ratio,\n       (SELECT label FROM molecule WHERE molecule_id = 'TR006') AS molecule_label\nFROM atom\nWHERE molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT molecule_id\nFROM molecule\nWHERE label = '-'\nAND molecule_id IN (\n  SELECT molecule_id\n  FROM atom\n  GROUP BY molecule_id\n  HAVING COUNT(atom_id) > 5\n)\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE AvgScrMath > 400 AND Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT frpm.CDSCode\nFROM frpm\nWHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT frpm.`School Name`, \n       frpm.`Percent (%) Eligible Free (Ages 5-17)`\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE satscores.NumTstTakr > 0\nAND satscores.NumGE1500 / satscores.NumTstTakr > 0.3\nORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "441": "SELECT satscores.sname, satscores.AvgScrWrite, schools.CharterNum\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrWrite > 499\nORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street, s.City, s.State, s.Zip\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT satscores.sname\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) > 0.1\nAND satscores.NumGE1500 >= 1\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Riverside' AND ss.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, s.Street || ', ' || s.City || ', ' || s.State || ' ' || s.Zip AS Full_Address\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE f.`County Name` = 'Monterey' \nAND f.`FRPM Count (Ages 5-17)` > 800 \nAND s.GSoffered LIKE '%12%'\t----- bird -----\tcalifornia_schools",
    "446": "SELECT satscores.sname, satscores.AvgScrWrite, schools.Phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE (schools.OpenDate > '1991-01-01' OR schools.ClosedDate < '2000-01-01') AND satscores.AvgScrWrite IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "447": "SELECT frpm.`School Name`, schools.DOCType\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)` > \n    (SELECT AVG(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) \n     FROM frpm \n     WHERE frpm.`Charter Funding Type` = 'Local')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)` AS `Eligible Free Rate`\nFROM frpm\nORDER BY frpm.`Enrollment (K-12)` DESC\nLIMIT 11, 10\t----- bird -----\tcalifornia_schools",
    "449": "SELECT  schools.`School Name`, frpm.`Percent (%) Eligible FRPM (K-12)`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.`Charter School (Y/N)` = 66\nORDER BY frpm.`Percent (%) Eligible FRPM (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.Street, schools.City, schools.Zip, schools.State\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.NumTstTakr > 0\nORDER BY (CAST(satscores.NumGE1500 AS REAL) / satscores.NumTstTakr) ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT schools.CDSCode, schools.School, satscores.NumGE1500, schools.AdmFName1, schools.AdmLName1, schools.AdmFName2, schools.AdmLName2, schools.AdmFName3, schools.AdmLName3\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(NumTstTakr)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.Phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE dname = 'Fresno Unified')\t----- bird -----\tcalifornia_schools",
    "454": "SELECT satscores.sname\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.Virtual = 'F'\nORDER BY satscores.AvgScrRead DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT schools.School, satscores.AvgScrWrite\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich'\t----- bird -----\tcalifornia_schools",
    "456": "SELECT schools.School\nFROM schools\nWHERE schools.DOC = 31\nORDER BY schools.enroll12 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(schools.CDSCode) / 12 AS MonthlyAverage\nFROM schools\nWHERE schools.County = 'Alameda' \nAND schools.DOC = 52 \nAND strftime('%Y', schools.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT COUNT(DISTINCT s.CDSCode) / COUNT(DISTINCT e.CDSCode) AS ratio\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Orange' AND s.StatusType = 'Merged' AND (s.DOC = 52 OR s.DOC = 54)\t----- bird -----\tcalifornia_schools",
    "459": "SELECT satscores.sname, schools.Street\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY satscores.AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools \nWHERE County = 'Los Angeles' \nAND Charter = 0 \nAND (SELECT `Free Meal Count (K-12)` * 100 / `Enrollment (K-12)` FROM frpm) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT  `Enrollment (Ages 5-17)` \nFROM frpm \nJOIN schools ON frpm.CDSCode = schools.CDSCode \nWHERE schools.EdOpsCode = 'SSS' \nAND schools.City = 'Fremont' \nAND frpm.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.School, frpm.`Percent (%) Eligible FRPM (Ages 5-17`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Los Angeles' \nAND frpm.`Low Grade` = 'K' \nAND frpm.`High Grade` = '9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumVirtualSchools\nFROM schools\nWHERE Virtual = 'F'\nAND County IN ('San Diego', 'Santa Barbara')\nGROUP BY County\nORDER BY NumVirtualSchools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT schools.GSoffered\nFROM schools\nWHERE schools.Longitude = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT schools.City, COUNT(schools.CDSCode) AS NumSchools\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.GSserved = 'K-8' AND schools.Magnet = 1 AND frpm.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY schools.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT schools.AdmEmail1, schools.AdmEmail2, schools.AdmEmail3\nFROM schools\nWHERE schools.County = 'San Bernardino' \nAND schools.City = 'San Bernardino' \nAND schools.District = 'San Bernardino City Unified' \nAND schools.OpenDate BETWEEN '1/1/2009' AND '12/31/2010' \nAND (schools.SOC = '62' OR schools.DOC = '54')\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A3 = 'East Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000 AND district_id IN \n    (SELECT district_id \n     FROM client \n     JOIN district ON client.district_id = district.district_id \n     WHERE gender = 'F')\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'M' AND A3 = 'North Bohemia' AND A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON client.district_id = district.district_id\nWHERE birth_date = (SELECT MIN(birth_date) FROM client)\nAND A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT account_id, MIN(amount) \nFROM loan \nWHERE date LIKE '1997%' \nGROUP BY account_id \nHAVING frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "474": "SELECT account_id, MAX(amount) \nFROM loan \nWHERE duration > 12 \nAND account_id IN \n    (SELECT account_id \n     FROM account \n     WHERE date >= '1993-01-01' AND date <= '1993-12-31')\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'F' AND birth_date < '1950-01-01' AND A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT A2\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT ((SELECT COUNT(client_id) FROM client \nJOIN district ON client.district_id = district.district_id \nWHERE district.A3 = 'south Bohemia' AND district.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia') AND client.gender = 'M') / \n(SELECT COUNT(client_id) FROM client \nJOIN district ON client.district_id = district.district_id \nWHERE district.A3 = 'south Bohemia' AND district.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia'))) * 100 as percentage_male_clients\t----- bird -----\tfinancial",
    "478": "SELECT client.client_id, \n       ((trans.balance - prev.balance) / prev.balance) * 100 AS increase_rate\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN trans ON account.account_id = trans.account_id\nJOIN (SELECT account_id, balance\n      FROM trans\n      WHERE date = '1993-03-22') AS prev ON account.account_id = prev.account_id\nWHERE trans.date = '1998-12-27'\nAND client.client_id IN (SELECT client_id\n                         FROM loan\n                         WHERE date = '1993-07-05'\n                         ORDER BY date\n                         LIMIT 1)\t----- bird -----\tfinancial",
    "479": "SELECT ((SUM(amount) - SUM(payments)) / SUM(amount)) * 100\nFROM loan\nWHERE status = 'A'\t----- bird -----\tfinancial",
    "480": "SELECT ((SELECT COUNT(*) FROM loan WHERE amount < 100000 AND status = 'C') / (SELECT COUNT(*) FROM loan WHERE amount < 100000)) * 100 as percentage_of_running_accounts\t----- bird -----\tfinancial",
    "481": "SELECT d.A2 AS district,\n    ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district_name, COUNT(c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(loan_id) \nFROM loan \nJOIN account ON loan.account_id = account.account_id \nWHERE date BETWEEN '1995-01-01' AND '1997-12-31' \nAND amount >= 250000 \nAND frequency = 'POPLATEK MESICNE' \nAND status = 'approved'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) \nFROM account \nWHERE account_id IN \n    (SELECT account_id \n     FROM loan \n     WHERE status = 'C' \n     AND account_id IN \n         (SELECT account_id \n          FROM disp \n          WHERE client_id IN \n              (SELECT client_id \n               FROM client \n               WHERE district_id = 1)))\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client_id) \nFROM client \nWHERE district_id = \n    (SELECT district_id \n     FROM district \n     ORDER BY A15 DESC \n     LIMIT 1 OFFSET 1) \nAND gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) \nFROM account \nWHERE account_id IN \n    (SELECT account_id \n     FROM loan \n     WHERE status = 'C' \n     AND account_id IN \n         (SELECT account_id \n          FROM disp \n          WHERE client_id IN \n              (SELECT client_id \n               FROM client \n               WHERE district_id = 1)))\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client_id) \nFROM client \nWHERE district_id = \n    (SELECT district_id \n     FROM district \n     ORDER BY A15 DESC \n     LIMIT 1 OFFSET 1) \nAND gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT account_id\nFROM trans\nWHERE account_id IN (SELECT account_id FROM card)\nAND amount < (SELECT AVG(amount) FROM trans WHERE date BETWEEN '1998-01-01' AND '1998-12-31')\nAND date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tfinancial",
    "490": "SELECT disp.type\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.A11 > 8000 AND district.A11 <= 9000\nAND disp.type != 'OWNER'\t----- bird -----\tfinancial",
    "491": "SELECT AVG(A15) \nFROM district \nWHERE A8 > 4000 \nAND district_id IN \n    (SELECT district_id \n     FROM account \n     WHERE date >= '1997-01-01')\t----- bird -----\tfinancial",
    "492": "SELECT trans_id, date, amount\nFROM trans\nWHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 3356)\nAND type = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT \n    COUNT(client_id) * 100.0 / (SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) AS percentage\nFROM client\nWHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 10000)\t----- bird -----\tfinancial",
    "494": "SELECT \n    ((SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M'))) \n    - (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date = '1996')) \n    / (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date = '1996') * 100% as growth_rate\t----- bird -----\tfinancial",
    "495": "SELECT frequency\nFROM account\nWHERE account_id = 3\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE' THEN 1 END) * 100.0) / \n    COUNT(CASE WHEN a.frequency = 'POPLATEK TYDNE' THEN 1 END) AS percentage_of_male_clients\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\t----- bird -----\tfinancial",
    "497": "SELECT account_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'F'\nORDER BY birth_date ASC, A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) \nFROM loan \nWHERE status = 'C' \nAND account_id IN \n    (SELECT account_id \n     FROM `order` \n     WHERE k_symbol = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, \n       strftime('%Y', 'now') - strftime('%Y', client.birth_date) - (strftime('%m-%d', 'now') < strftime('%m-%d', client.birth_date)) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}