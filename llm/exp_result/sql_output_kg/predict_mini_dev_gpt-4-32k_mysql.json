{
    "0": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio FROM customers LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT `CustomerID`, MIN(`Consumption`) as `LeastConsumption`\nFROM `yearmonth`\nWHERE `Date` BETWEEN '201201' AND '201212' AND `Segment` = 'LAM'\nGROUP BY `CustomerID`\nORDER BY `LeastConsumption` ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption)/12 AS 'Average Monthly Consumption'\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND SUBSTRING(yearmonth.Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT (SUM(CZK.Consumption) - SUM(EUR.Consumption)) AS Difference\nFROM\n(\n    SELECT ym.Consumption\n    FROM yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE c.Currency = 'CZK' AND SUBSTRING(ym.Date, 1, 4) = '2012'\n) CZK,\n(\n    SELECT ym.Consumption\n    FROM yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE c.Currency = 'EUR' AND SUBSTRING(ym.Date, 1, 4) = '2012'\n) EUR\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTRING(yearmonth.Date, 1, 4) AS Year, SUM(yearmonth.Consumption) AS Total_Consumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'CZK'\nGROUP BY Year\nORDER BY Total_Consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT `Date`, SUM(`Consumption`) as Total_Consumption\nFROM `yearmonth` \nJOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID`\nWHERE `customers`.`Segment` = 'SME' AND `yearmonth`.`Date` BETWEEN '201301' AND '201312'\nGROUP BY `Date`\nORDER BY Total_Consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT The question is quite complex and requires multiple steps to solve. Here is a step-by-step breakdown of the SQL query:\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment, \n(MAX(PercentageIncrease) - MIN(PercentageIncrease)) as PercentageIncrease\nFROM\n(\n    SELECT \n    c.Segment,\n    ((y2013.Consumption - y2012.Consumption) / y2013.Consumption) * 100 as PercentageIncrease\n    FROM \n    customers c\n    JOIN yearmonth y2012 ON c.CustomerID = y2012.CustomerID AND y2012.Date LIKE '2012%'\n    JOIN yearmonth y2013 ON c.CustomerID = y2013.CustomerID AND y2013.Date LIKE '2013%'\n    WHERE c.Currency = 'EUR'\n) as temp\nGROUP BY Segment\nORDER BY PercentageIncrease DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE CustomerID = 6 \nAND SUBSTRING(Date, 1, 6) BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n(SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS Difference\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - \n(SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS MoreSMEsInCZK\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM' AND CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Consumption > 46.73)) / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') * 100 AS percentage\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT (SELECT COUNT(*) FROM yearmonth WHERE Consumption > 528.3 AND Date = '201202') / (SELECT COUNT(*) FROM yearmonth WHERE Date = '201202') * 100 AS percentage FROM yearmonth\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS 'Highest Monthly Consumption'\nFROM yearmonth\nWHERE SUBSTRING(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description \nFROM products \nJOIN transactions_1k ON products.ProductID = transactions_1k.ProductID \nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID \nWHERE SUBSTRING(yearmonth.Date, 1, 6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gasstations.Country\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE SUBSTRING(transactions_1k.Date, 1, 6) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT customers.CustomerID) \nFROM customers \nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID \nWHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT transactions_1k.Time\nFROM transactions_1k\nJOIN gasstations\nON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k \nJOIN gasstations \nON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' \nAND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT customers.Currency\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k \nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' \nAND transactions_1k.Date = '2012-08-26' \nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT gasstations.Country\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Price = 548.4 AND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR')) / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25') * 100 AS percentage\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (\n    (SELECT Consumption \n     FROM yearmonth \n     WHERE CustomerID = \n        (SELECT CustomerID \n         FROM transactions_1k \n         WHERE Price = 634.8 AND Date = '2012-08-25') \n     AND Date = '2012') \n    - \n    (SELECT Consumption \n     FROM yearmonth \n     WHERE CustomerID = \n        (SELECT CustomerID \n         FROM transactions_1k \n         WHERE Price = 634.8 AND Date = '2012-08-25') \n     AND Date = '2013')\n) / \n(SELECT Consumption \n FROM yearmonth \n WHERE CustomerID = \n    (SELECT CustomerID \n     FROM transactions_1k \n     WHERE Price = 634.8 AND Date = '2012-08-25') \n AND Date = '2012') AS ConsumptionDecreaseRate\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Segment = 'premium' AND Country = 'SVK') / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') * 100 AS percentage_premium_SVK\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(transactions_1k.Amount * transactions_1k.Price) AS TotalSpent\nFROM transactions_1k\nWHERE transactions_1k.CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT customers.CustomerID, customers.Currency, SUM(transactions_1k.Price) / SUM(transactions_1k.Amount) AS AveragePricePerItem\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nGROUP BY customers.CustomerID, customers.Currency\nORDER BY SUM(transactions_1k.Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT yearmonth.CustomerID, yearmonth.Consumption\nFROM transactions_1k\nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE transactions_1k.ProductID = 5 AND (transactions_1k.Price / transactions_1k.Amount) > 29.00 AND yearmonth.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) \nFROM member \nJOIN attendance ON member.member_id = attendance.link_to_member \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = 'Women's Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id) \nFROM event \nWHERE type = 'Meeting' \nAND event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 10\n)\t----- bird -----\tstudent_club",
    "33": "SELECT event_name \nFROM event \nWHERE event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 20\n) \nAND type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT amount \nFROM income \nINNER JOIN member ON income.link_to_member = member.member_id \nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name, member.last_name \nFROM member \nJOIN zip_code ON member.zip = zip_code.zip_code \nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.approved \nFROM expense \nJOIN budget ON expense.link_to_budget = budget.budget_id \nJOIN event ON budget.link_to_event = event.event_id \nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) as average_cost\nFROM expense\nINNER JOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' \nAND (MONTH(expense.expense_date) = 9 OR MONTH(expense.expense_date) = 10)\t----- bird -----\tstudent_club",
    "38": "SELECT (SUM(b1.spent) - SUM(b2.spent)) AS difference\nFROM budget b1\nJOIN event e1 ON b1.link_to_event = e1.event_id\nJOIN budget b2 ON b1.budget_id = b2.budget_id\nJOIN event e2 ON b2.link_to_event = e2.event_id\nWHERE YEAR(e1.event_date) = 2019 AND YEAR(e2.event_date) = 2020\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone \nFROM member \nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status \nFROM expense \nJOIN budget ON expense.link_to_budget = budget.budget_id \nJOIN event ON budget.link_to_event = event.event_id \nWHERE expense.expense_description = 'Post Cards, Posters' \nAND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT income.date_received \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT (\n    SELECT SUM(amount) \n    FROM budget \n    WHERE category = 'Advertisement' \n    AND link_to_event IN (\n        SELECT event_id \n        FROM event \n        WHERE event_name = 'Yearly Kickoff'\n    )\n) / (\n    SELECT SUM(amount) \n    FROM budget \n    WHERE category = 'Advertisement' \n    AND link_to_event IN (\n        SELECT event_id \n        FROM event \n        WHERE event_name = 'October Meeting'\n    )\n) AS ratio\nFROM budget\nWHERE category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) as total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM attendance \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.department = \"School of Applied Sciences, Technology and Education\"\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name, (budget.spent / budget.amount) AS spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent\nFROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_on_food \nFROM budget \nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT first_name, last_name \nFROM member \nWHERE member_id IN \n(SELECT link_to_member \nFROM attendance \nGROUP BY link_to_member \nHAVING COUNT(link_to_event) > 7)\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name \nFROM member \nJOIN budget ON member.member_id = budget.link_to_event \nJOIN event ON budget.link_to_event = event.event_id \nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name\nFROM event\nJOIN expense ON event.event_id = expense.link_to_event\nORDER BY expense.cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT (SELECT SUM(cost) FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')) / (SELECT SUM(cost) FROM expense) * 100 AS percentage\t----- bird -----\tstudent_club",
    "59": "SELECT `source`, MAX(`amount`) as `max_amount`\nFROM `income`\nWHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY `source`\nORDER BY `max_amount` DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE budget.category = 'Advertisement' \nORDER BY budget.spent DESC \nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT *\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nORDER BY budget.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) as total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE expense.approved = 'Yes' AND event.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "66": "SELECT b.category, SUM(b.amount) as 'Amount Budgeted'\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'April Speaker'\nGROUP BY b.category\nORDER BY SUM(b.amount) ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense \nFROM expense \nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = \"rec4BLdZHS2Blfp4v\"\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nINNER JOIN member ON expense.link_to_member = member.member_id \nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event.type\nFROM event\nWHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category \nFROM budget \nJOIN event ON budget.link_to_event = event.event_id \nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT (COUNT(IF(amount = 50, 1, NULL)) / COUNT(*)) * 100 AS percentage\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "74": "SELECT `event_name` \nFROM `event` \nWHERE `type` = 'Game' \nAND `status` = 'Closed' \nAND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name, member.last_name, member.phone\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name, member.last_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM member\nINNER JOIN income\nON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT CASE \n    WHEN in_patient > out_patient THEN 'More in-patients'\n    WHEN in_patient < out_patient THEN 'More out-patients'\n    ELSE 'Equal number of in-patients and out-patients'\nEND AS result,\nABS((in_patient - out_patient) / total * 100) AS deviation_percentage\nFROM\n(\n    SELECT \n        COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 END) AS in_patient,\n        COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 END) AS out_patient,\n        COUNT(CASE WHEN SEX = 'M' THEN 1 END) AS total\n    FROM Patient\n) AS subquery\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (\n    SELECT COUNT(*) \n    FROM Patient \n    WHERE YEAR(Birthday) > 1930 AND SEX = 'F'\n) / (\n    SELECT COUNT(*) \n    FROM Patient \n    WHERE SEX = 'F'\n) * 100 AS percentage\nFROM Patient\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') / (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS Ratio\nFROM Patient\nWHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, YEAR(CURRENT_DATE()) - YEAR(Patient.Birthday) as Age\nFROM Patient\nJOIN Examination\nON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Examination\nON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND YEAR(Description) = 1997 \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 1 \nAND YEAR(e.`Examination Date`) = 1997 \nAND p.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Patient.ID, Patient.Birthday, Examination.Symptoms, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT `Laboratory`.`Date`, (YEAR(`Patient`.`First Date`) - YEAR(`Patient`.`Birthday`)) AS `Age at Admission`\nFROM `Patient`\nJOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID`\nWHERE `Patient`.`Diagnosis` = 'SJS'\nORDER BY `Patient`.`Birthday` ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.UA <= 8.0 AND p.SEX = 'M') / \n(SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.UA <= 6.5 AND p.SEX = 'F') AS Ratio\nFROM Patient\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination \nON Patient.ID = Examination.ID \nWHERE YEAR(Patient.Birthday) > YEAR(Examination.`Examination Date`) - 18 \nAND YEAR(Examination.`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT YEAR(`Examination Date`) - YEAR(Patient.Birthday) AS Age, Examination.Diagnosis\nFROM Laboratory\nJOIN Examination ON Laboratory.ID = Examination.ID\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM` \nFROM `Examination` \nWHERE `ID` = (SELECT `ID` FROM `Patient` WHERE `Diagnosis` = 'SLE' AND `Description` = '1994-02-19') \nAND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - \nSUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) AS `Decrease Rate`\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2 \nAND e.`ANA Pattern` = 'S' \nAND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-' \nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(Laboratory.ALB) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (DIVIDE(SUM(SEX = 'F'), COUNT(SEX)) * 100) as Percentage\nFROM Patient\nWHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n    WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n    WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n    ELSE 'No'\nEND AS 'Is Uric Acid Normal'\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.ID, Patient.Birthday, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT Patient.SEX, COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.`T-BIL` >= 2.0 \nGROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURDATE()) - YEAR(Patient.Birthday)) AS Average_Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE Laboratory.TG >= 200 \nAND YEAR(CURDATE()) - YEAR(Patient.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE YEAR(Patient.Birthday) BETWEEN 1936 AND 1956 \nAND Patient.SEX = 'M' \nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, YEAR(CURDATE()) - YEAR(Patient.Birthday) as Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, YEAR(CURDATE()) - YEAR(Patient.Birthday) as Age, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.Diagnosis = 'SLE' AND Laboratory.HGB BETWEEN 10 AND 17\nORDER BY Patient.Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, YEAR(CURRENT_DATE()) - YEAR(Patient.Birthday) as Age\nFROM Patient\nJOIN (\n    SELECT Laboratory.ID\n    FROM Laboratory\n    WHERE Laboratory.HCT >= 52\n    GROUP BY Laboratory.ID\n    HAVING COUNT(Laboratory.ID) >= 2\n) AS LabExams\nON Patient.ID = LabExams.ID\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT (\n    SELECT COUNT(*) \n    FROM Laboratory \n    WHERE PLT < 100\n) AS 'Lower than Normal Range',\n(\n    SELECT COUNT(*) \n    FROM Laboratory \n    WHERE PLT > 400\n) AS 'Higher than Normal Range'\nFROM Laboratory\nWHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.PLT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(Laboratory.Date) = 1984 \nAND TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) < 50\nAND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (DIVIDE(SUM(Patient.SEX = 'F' AND Laboratory.PT >= 14), SUM(Laboratory.PT >= 14)) * 100) AS 'Percentage of Female with Abnormal PT'\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) > 55\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND Laboratory.WBC > 3.5 \nAND Laboratory.WBC < 9.0 \nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) \nFROM Laboratory \nWHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.IGG BETWEEN 900 AND 2000\nAND e.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGA >= 80 AND Laboratory.IGA <= 500 AND YEAR(Patient.`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS Frequency\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE IGM <= 40 OR IGM >= 400\nGROUP BY Diagnosis\nORDER BY Frequency DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CRP = '+' AND Patient.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE Laboratory.RNP IN ('-', '+-') \nAND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE (e.SM IN('-', '+-') OR e.SM = 'negative' OR e.SM = '0') AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination \nON Patient.ID = Examination.ID \nWHERE Patient.SEX = 'F' \nAND Examination.Symptoms IS NULL \nAND Laboratory.SC170 IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND Laboratory.CENTROMEA IN('-', '+-') \nAND Laboratory.SSB IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) \nFROM Patient \nWHERE ID IN \n(SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2015/2016'\nGROUP BY L.id\nORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name AS 'Team Name', COUNT(*) AS 'Number of Wins'\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT `team_api_id`, `buildUpPlaySpeed` \nFROM `Team_Attributes` \nORDER BY `buildUpPlaySpeed` DESC \nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal\nGROUP BY League.name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT player_name, TIMESTAMPDIFF(YEAR, birthday, CURDATE()) AS age\nFROM Player\nWHERE player_api_id IN (\n    SELECT player_api_id\n    FROM Player_Attributes\n    WHERE sprint_speed >= 97\n    AND YEAR(date) BETWEEN 2013 AND 2015\n)\t----- bird -----\teuropean_football_2",
    "133": "SELECT L.name, COUNT(M.league_id) AS total_matches\nFROM League L\nJOIN Match M ON L.id = M.league_id\nGROUP BY M.league_id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT `team_fifa_api_id` \nFROM Team_Attributes \nWHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name \nFROM Team \nINNER JOIN Team_Attributes \nON Team.team_api_id = Team_Attributes.team_api_id \nWHERE buildUpPlayPassing > \n    (SELECT AVG(buildUpPlayPassing) \n    FROM Team_Attributes \n    WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012') \nAND strftime('%Y', Team_Attributes.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT ROUND((COUNT(*) * 100 / (SELECT COUNT(*) FROM Player_Attributes WHERE YEAR(birthday) BETWEEN 1987 AND 1992)) , 2) AS percentage\nFROM Player_Attributes\nWHERE preferred_foot = 'left' AND YEAR(birthday) BETWEEN 1987 AND 1992\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "138": "SELECT player_name, AVG(heading_accuracy) as avg_heading_accuracy\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE height > 180\nGROUP BY player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN (\n    SELECT league_id, AVG(home_team_goal) as avg_home_goal, AVG(away_team_goal) as avg_away_goal\n    FROM Match\n    WHERE season = '2009/2010'\n    GROUP BY league_id\n) AS MatchStats\nON League.id = MatchStats.league_id\nWHERE avg_home_goal > avg_away_goal\t----- bird -----\teuropean_football_2",
    "140": "SELECT `player_name`, `birthday` \nFROM `Player` \nWHERE YEAR(`birthday`) = 1970 AND MONTH(`birthday`) = 10\t----- bird -----\teuropean_football_2",
    "141": "SELECT Player_Attributes.overall_rating\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_name, AVG(finishing) as avg_finishing_rate\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.height IN (\n    SELECT MAX(height) FROM Player\n    UNION\n    SELECT MIN(height) FROM Player\n)\nGROUP BY player_name\nORDER BY avg_finishing_rate DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player t1\nJOIN Player_Attributes t2 ON t1.player_api_id = t2.player_api_id\nWHERE t1.height > 170 AND strftime('%Y', t2.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT (\n    (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo')) \n    - \n    (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye'))\n) AS difference\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday \nFROM Player \nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') \nORDER BY birthday ASC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT `player_name`, `height` \nFROM `Player` \nORDER BY `height` DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id) \nFROM Player_Attributes \nWHERE player_api_id IN \n(SELECT player_api_id FROM Player WHERE strftime('%Y', birthday)<'1986') \nAND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT player_name \nFROM Player \nJOIN Player_Attributes \nON Player.player_api_id = Player_Attributes.player_api_id \nWHERE volleys > 70 AND dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match \nWHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') \nAND SUBSTR(`date`, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT `League`.`name` \nFROM `League` \nJOIN `Match` ON `League`.`id` = `Match`.`league_id` \nWHERE `Match`.`season` = '2008/2009' \nGROUP BY `League`.`name` \nORDER BY COUNT(`Match`.`id`) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) / \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino')\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chanceCreationPassing), chanceCreationPassingClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Ajax')\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT `overall_rating` \nFROM `Player_Attributes` \nJOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` \nWHERE `Player`.`player_name` = 'Aaron Mooy' \nAND `Player_Attributes`.`date` LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT `attacking_work_rate` \nFROM Player_Attributes \nWHERE `player_api_id` = \n    (SELECT `player_api_id` \n    FROM Player \n    WHERE `player_name` = 'Francesco Migliore') \nAND `date` LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT `date`\nFROM Player_Attributes\nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant')\nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\nORDER BY `date` ASC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT `buildUpPlayPassingClass` \nFROM `Team_Attributes` \nJOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` \nWHERE `Team`.`team_long_name` = 'FC Lorient' \nAND `Team_Attributes`.`date` LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT `defenceAggressionClass` \nFROM `Team_Attributes` \nWHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Hannover 96') \nAND `date` LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT avg(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') \nAND SUBSTRING(date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT (\n    (SELECT overall_rating \n     FROM Player_Attributes \n     WHERE player_api_id = \n        (SELECT player_api_id \n         FROM Player \n         WHERE player_name = 'Landon Donovan') \n     AND date = '2013-07-12') \n    -\n    (SELECT overall_rating \n     FROM Player_Attributes \n     WHERE player_api_id = \n        (SELECT player_api_id \n         FROM Player \n         WHERE player_name = 'Jordan Bowery') \n     AND date = '2013-07-12')\n) / \n(SELECT overall_rating \n FROM Player_Attributes \n WHERE player_api_id = \n    (SELECT player_api_id \n     FROM Player \n     WHERE player_name = 'Landon Donovan') \n AND date = '2013-07-12') * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name \nFROM Player \nORDER BY height DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT `player_name` \nFROM Player \nWHERE `player_api_id` = \n    (SELECT `player_api_id` \n    FROM Player_Attributes \n    WHERE `overall_rating` = \n        (SELECT MAX(`overall_rating`) \n        FROM Player_Attributes))\t----- bird -----\teuropean_football_2",
    "166": "SELECT player_name \nFROM Player \nWHERE id IN (\n    SELECT player_api_id \n    FROM Player_Attributes \n    WHERE attacking_work_rate = 'high'\n)\t----- bird -----\teuropean_football_2",
    "167": "SELECT team_short_name \nFROM Team \nWHERE team_api_id IN \n(SELECT team_api_id \nFROM Team_Attributes \nWHERE chanceCreationPassingClass = 'Safe')\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 6) - (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 23) AS `jumping_difference`\t----- bird -----\teuropean_football_2",
    "170": "SELECT `player_api_id`\nFROM Player_Attributes\nWHERE `preferred_foot` = 'right'\nORDER BY `potential` ASC\nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT `home_team_goal`, `away_team_goal` \nFROM `Match` \nJOIN `League` ON `Match`.`league_id` = `League`.`id` \nWHERE `Match`.`date` LIKE '2008-09-24%' \nAND `League`.`name` = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge')\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player.player_name, Player_Attributes.finishing, Player_Attributes.curve, Player.weight\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT `League`.`name`, COUNT(`Match`.`id`) AS `num_matches`\nFROM `Match`\nJOIN `League` ON `Match`.`league_id` = `League`.`id`\nWHERE `Match`.`season` = '2015/2016'\nGROUP BY `League`.`name`\nORDER BY `num_matches` DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name \nFROM Team \nJOIN Match ON Team.team_api_id = Match.away_team_api_id \nORDER BY Match.away_team_goal DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT `player_name` \nFROM Player \nWHERE `player_api_id` = \n    (SELECT `player_api_id` \n    FROM Player_Attributes \n    ORDER BY `overall_rating` DESC \n    LIMIT 1)\t----- bird -----\teuropean_football_2",
    "178": "SELECT (SELECT COUNT(*) FROM Player_Attributes WHERE height < 180 AND overall_rating > 70) / (SELECT COUNT(*) FROM Player_Attributes) * 100 AS percentage\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverRef \nFROM drivers \nJOIN qualifying ON drivers.driverId = qualifying.driverId \nWHERE qualifying.raceId = 20 \nORDER BY qualifying.q1 DESC \nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname \nFROM drivers \nJOIN qualifying ON drivers.driverId = qualifying.driverId \nWHERE qualifying.raceId = 19 AND qualifying.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT races.name \nFROM races \nJOIN circuits \nON races.circuitId = circuits.circuitId \nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng \nFROM circuits \nJOIN races ON circuits.circuitId = races.circuitId \nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT `lat`, `lng` \nFROM `circuits` \nINNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` \nWHERE `races`.`name` = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceId = 354\t----- bird -----\tformula_1",
    "185": "SELECT number FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE raceId = 903 AND q3 = '0:01:54'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.driverRef, drivers.dob \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nWHERE results.raceId = 592 AND results.time IS NOT NULL \nORDER BY drivers.dob \nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url \nFROM drivers \nJOIN lapTimes ON drivers.driverId = lapTimes.driverId \nWHERE lapTimes.time LIKE '1:27%' AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT circuits.location, circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url \nFROM constructors \nJOIN constructorResults \nON constructors.constructorId = constructorResults.constructorId \nWHERE constructorResults.raceId = 9 \nORDER BY constructorResults.points DESC \nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE qualifying.raceId = 45 AND qualifying.q3 = '1:33'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url \nFROM seasons \nJOIN races ON seasons.year = races.year \nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.driverId, drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 872 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nORDER BY results.fastestLapSpeed DESC \nLIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT (\n    (SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceId = 853)\n    -\n    (SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceId = 854)\n) / \n(SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceId = 853) * 100 AS percentage_increase\t----- bird -----\tformula_1",
    "196": "SELECT COUNT(driverId) / (SELECT COUNT(driverId) FROM races WHERE date = '1983-07-16') as completion_rate\nFROM results\nWHERE raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16')\nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE YEAR(date) = (SELECT MIN(YEAR(date)) FROM races) \nAND MONTH(date) = (SELECT MIN(MONTH(date)) FROM races WHERE YEAR(date) = (SELECT MIN(YEAR(date)) FROM races))\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, MAX(driverStandings.points) as max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nORDER BY max_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT MIN(lapTimes.milliseconds), drivers.forename, drivers.surname, races.name\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds)\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT (\n    SELECT COUNT(*) \n    FROM results \n    JOIN races ON results.raceId = races.raceId \n    JOIN drivers ON results.driverId = drivers.driverId \n    WHERE drivers.surname = 'Hamilton' \n    AND races.year >= 2010 \n    AND results.position != 1\n) / (\n    SELECT COUNT(*) \n    FROM results \n    JOIN races ON results.raceId = races.raceId \n    JOIN drivers ON results.driverId = drivers.driverId \n    WHERE drivers.surname = 'Hamilton' \n    AND races.year >= 2010\n) AS percentage\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) as max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY COUNT(driverStandings.wins) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(dob)) AS age, forename, surname \nFROM drivers \nWHERE nationality = 'Japanese'\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.positionOrder < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT (COUNT(*) * 100 / \n    (SELECT COUNT(*) \n    FROM races \n    WHERE name = 'European Grand Prix')) as percentage\nFROM races \nWHERE name = 'European Grand Prix' AND country = 'Germany'\t----- bird -----\tformula_1",
    "209": "SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT `circuitRef` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality \nFROM drivers \nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name, races.year\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(results.fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT results.time \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Chinese Grand Prix' \nAND races.year = 2008 \nAND results.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT results.driverId) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.year = 2008 \nAND races.name = 'Chinese Grand Prix' \nAND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT (\n    (SELECT time FROM results \n    WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') \n    AND positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) \n    AND time IS NOT NULL) \n    -\n    (SELECT time FROM results \n    WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') \n    AND positionOrder = 1 \n    AND time IS NOT NULL)\n) / \n(SELECT time FROM results \nWHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') \nAND positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) \nAND time IS NOT NULL) * 100 AS 'Faster_Percentage'\nFROM results\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) \nFROM constructorStandings \nWHERE constructorId IN (\n    SELECT constructorId \n    FROM constructors \n    WHERE nationality = 'British'\n)\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name \nFROM constructors \nJOIN constructorResults \nON constructors.constructorId = constructorResults.constructorId \nWHERE constructorResults.points = 0 AND constructorResults.raceId = 291\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT constructors.constructorId) \nFROM constructors \nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId \nWHERE constructors.nationality = 'Japanese' \nAND constructorResults.points = 0 \nGROUP BY constructors.constructorId \nHAVING COUNT(constructorResults.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT (DIVIDE(COUNT(DISTINCT r.raceId) WHERE r.time IS NOT NULL AND s.year BETWEEN 2007 AND 2009, COUNT(DISTINCT r.raceId) WHERE s.year BETWEEN 2007 AND 2009)) * 100 AS 'Race Completion Percentage'\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN seasons s ON ra.year = s.year\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.nationality = 'Japanese'\t----- bird -----\tformula_1",
    "224": "SELECT races.year, AVG(TIME_TO_SEC(results.time)) as average_time\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year < 1975 AND results.position = 1 AND results.time IS NOT NULL\nGROUP BY races.year\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap \nFROM results \nJOIN races ON results.raceId = races.raceId \nJOIN driverStandings ON races.raceId = driverStandings.raceId AND results.driverId = driverStandings.driverId \nWHERE races.year = 2009 AND driverStandings.position = 1 \nORDER BY fastestLapTime \nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT (\n    SELECT COUNT(*) FROM drivers \n    WHERE YEAR(dob) < 1985 \n    AND driverId IN (\n        SELECT driverId FROM results \n        WHERE laps > 50 \n        AND raceId IN (\n            SELECT raceId FROM races \n            WHERE YEAR BETWEEN 2000 AND 2005\n        )\n    )\n) / (\n    SELECT COUNT(*) FROM drivers \n    WHERE driverId IN (\n        SELECT driverId FROM results \n        WHERE raceId IN (\n            SELECT raceId FROM races \n            WHERE YEAR BETWEEN 2000 AND 2005\n        )\n    )\n) * 100 AS percentage\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) \nFROM drivers d \nJOIN lapTimes lt ON d.driverId = lt.driverId \nWHERE d.nationality = 'French' AND lt.milliseconds < 120000\t----- bird -----\tformula_1",
    "229": "SELECT `code` FROM `drivers` WHERE `nationality` = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT drivers.code, drivers.nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT `driverRef` \nFROM `drivers` \nWHERE `nationality` = 'German' \nORDER BY `dob` ASC \nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nWHERE YEAR(drivers.dob) = 1971 AND results.fastestLapTime IS NOT NULL \nORDER BY results.fastestLapTime ASC\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE statusId = 2 AND time IS NOT NULL AND raceId BETWEEN 50 AND 100\t----- bird -----\tformula_1",
    "234": "SELECT count(*) as times_held, location, lat, lng \nFROM circuits \nWHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT drivers.forename, drivers.surname, MIN(races.year) as 'Year', races.date, races.time\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nGROUP BY drivers.driverId\t----- bird -----\tformula_1",
    "236": "SELECT drivers.driverId, drivers.forename, drivers.surname, AVG(pitStops.milliseconds) as average_pitstop_duration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' AND YEAR(drivers.dob) BETWEEN 1980 AND 1985\nGROUP BY drivers.driverId\nORDER BY average_pitstop_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM constructors\nJOIN results ON constructors.constructorId = results.constructorId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY results.positionOrder\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(cr.points) as total_points\nFROM constructorResults cr\nJOIN races r ON cr.raceId = r.raceId\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010\nGROUP BY c.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname\nFROM qualifying\nJOIN races ON qualifying.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE circuits.name = 'Marina Bay Street Circuit' AND races.year = 2008 AND qualifying.position = 1 AND qualifying.q3 IS NOT NULL\nORDER BY qualifying.q3 ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename, drivers.surname, drivers.nationality, races.name\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT driverId, COUNT(*) as accidents\nFROM results\nWHERE raceId IN (SELECT raceId FROM races WHERE name LIKE '%Canadian Grand Prix%') AND statusId = 3\nGROUP BY driverId\nORDER BY accidents DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname, MIN(lapTimes.time) as shortest_lap_time\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nGROUP BY drivers.driverId\nORDER BY shortest_lap_time ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, MIN(lapTimes.time) as lap_record\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name \nFROM superhero \nJOIN publisher ON superhero.publisher_id = publisher.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM publisher\nJOIN superhero ON publisher.id = superhero.publisher_id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT (SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) / (SELECT COUNT(*) FROM superhero) * 100 AS percentage,\n(SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_bad_heroes\nFROM superhero\t----- bird -----\tsuperhero",
    "260": "SELECT CASE \n    WHEN (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) > \n         (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) \n    THEN 'Marvel Comics'\n    ELSE 'DC Comics'\nEND AS 'Publisher with more superheroes',\nABS((SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics'))) AS 'Difference in number of superheroes'\t----- bird -----\tsuperhero",
    "261": "SELECT `id` \nFROM `publisher` \nWHERE `publisher_name` = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.hair_colour_id = colour.id \nJOIN race ON superhero.race_id = race.id \nWHERE superhero.height_cm = 185 AND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180) * 100 AS percentage\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Male' \nAND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT colour.eye_colour, colour.hair_colour, colour.skin_colour\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN colour ON superhero.eye_colour_id = colour.id AND superhero.hair_colour_id = colour.id AND superhero.skin_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nWHERE eye_colour.id = hair_colour.id AND hair_colour.id = skin_colour.id\t----- bird -----\tsuperhero",
    "275": "SELECT ROUND((SELECT COUNT(*) FROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN gender ON superhero.gender_id = gender.id \nWHERE colour.colour = 'Blue' AND gender.gender = 'Female') / \n(SELECT COUNT(*) FROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female') * 100, 2) AS percentage_of_blue_female_superheroes\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.superhero_name, superhero.height_cm \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name \nFROM superhero \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Strength' AND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute JOIN attribute ON attribute.id = hero_attribute.attribute_id WHERE attribute.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "281": "SELECT (SELECT COUNT(*) FROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics') / \n(SELECT COUNT(*) FROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female') * 100 AS percentage\t----- bird -----\tsuperhero",
    "282": "SELECT (SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky') - (SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT superhero.superhero_name, AVG(superhero.height_cm) as average_height\nFROM superhero\nGROUP BY superhero.superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nORDER BY ha.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name \nFROM superhero \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')) / (SELECT COUNT(*) FROM superhero) * 100 AS percentage\t----- bird -----\tsuperhero",
    "290": "SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')) / \n(SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) AS ratio\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT (SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference\nFROM superhero AS T1\nJOIN colour ON T1.eye_colour_id = colour.id\nWHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN alignment ON superhero.alignment_id = alignment.id \nJOIN colour ON superhero.skin_colour_id = colour.id \nWHERE alignment.alignment = 'Bad' AND colour.colour = 'Green'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Wind Control' \nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nJOIN gender ON superhero.gender_id = gender.id \nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - \n(SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon') \nORDER BY Reputation DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName \nFROM users \nWHERE YEAR(CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) \nFROM users \nWHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName \nFROM users \nJOIN posts ON users.Id = posts.OwnerUserId \nWHERE posts.Title = \"Eliciting priors from experts\"\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName \nFROM users \nJOIN posts ON users.Id = posts.LastEditorUserId \nWHERE posts.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) \nAND Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.Body \nFROM tags \nJOIN posts ON tags.ExcerptPostId = posts.Id \nWHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(posts.Score) \nFROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT (SELECT COUNT(*) FROM posts WHERE Score > 5 AND OwnerUserId IN (SELECT Id FROM users WHERE Age > 65)) / (SELECT COUNT(*) FROM posts WHERE Score > 5) * 100 AS percentage\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE \n    WHEN p.ClosedDate IS NULL THEN 'Yes'\n    ELSE 'No'\nEND AS 'Well-finished'\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = \n    (SELECT Id \n    FROM users \n    WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName \nFROM users \nJOIN votes ON users.Id = votes.UserId \nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT (COUNT(posts.Id) / COUNT(votes.Id)) AS Ratio\nFROM posts\nLEFT JOIN votes ON posts.OwnerUserId = votes.UserId\nWHERE posts.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT `ViewCount` \nFROM `posts` \nWHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT `Text` \nFROM comments \nWHERE `Score` = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName \nFROM comments \nJOIN users ON comments.UserId = users.Id \nWHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.DisplayName \nFROM posts \nJOIN users ON posts.LastEditorUserId = users.Id \nWHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nJOIN postHistory ON posts.Id = postHistory.PostId\nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND comments.UserId = postHistory.UserId\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName\nFROM users\nJOIN votes ON users.Id = votes.UserId\nJOIN posts ON votes.PostId = posts.Id\nWHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT posts.Title, comments.Text, AVG(posts.ViewCount) as AverageViewCount\nFROM posts\nLEFT JOIN comments ON posts.Id = comments.PostId\nWHERE posts.Tags LIKE '%<humor>%'\nGROUP BY posts.Id\t----- bird -----\tcodebase_community",
    "320": "SELECT UserId, COUNT(*) as BadgeCount\nFROM badges\nGROUP BY UserId\nHAVING BadgeCount > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT users.Id, users.DisplayName\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nJOIN postHistory ON posts.Id = postHistory.PostId\nGROUP BY users.Id, users.DisplayName\nHAVING COUNT(postHistory.Id) = 1 AND SUM(posts.ViewCount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT (\n    (\n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND YEAR(Date) = 2010) / \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student')\n    ) * 100\n    -\n    (\n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND YEAR(Date) = 2011) / \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student')\n    ) * 100\n) AS PercentageDifference\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(users.UpVotes) AS AverageUpVotes, AVG(users.Age) AS AverageAge\nFROM users\nWHERE users.Id IN (\n    SELECT posts.OwnerUserId\n    FROM posts\n    GROUP BY posts.OwnerUserId\n    HAVING COUNT(posts.Id) > 10\n)\t----- bird -----\tcodebase_community",
    "324": "SELECT (SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2010) / (SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2011) AS 'Ratio'\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT `OwnerDisplayName`, SUM(`ViewCount`) as `TotalViews`\nFROM `posts`\nWHERE `OwnerDisplayName` IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY `OwnerDisplayName`\nORDER BY `TotalViews` DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.TagName\nFROM tags\nJOIN posts ON posts.Tags LIKE CONCAT('%', tags.TagName, '%')\nJOIN users ON users.Id = posts.OwnerUserId\nWHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<r>%' AND OwnerDisplayName = 'Community') / (SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Community') * 100 AS percentage\t----- bird -----\tcodebase_community",
    "329": "SELECT (SUM(p1.ViewCount) - SUM(p2.ViewCount)) AS ViewCountDifference\nFROM posts p1\nJOIN users u1 ON p1.OwnerUserId = u1.Id\nJOIN posts p2 ON p2.OwnerUserId = u1.Id\nJOIN users u2 ON p2.OwnerUserId = u2.Id\nWHERE u1.DisplayName = 'Mornington' AND u2.DisplayName = 'Amos'\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(Id) / 12 AS average_monthly_links\nFROM postLinks\nWHERE YEAR(CreationDate) = 2010\nAND PostId IN (\n    SELECT Id\n    FROM posts\n    WHERE AnswerCount <= 2\n)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) \nFROM votes \nWHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl')\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName \nFROM users \nJOIN badges ON users.Id = badges.UserId \nWHERE badges.Name = 'Autobiographer' \nORDER BY badges.Date \nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT users.Id) \nFROM users \nJOIN posts ON users.Id = posts.OwnerUserId \nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.Id, posts.Title\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky'\nORDER BY posts.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.Id, users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE YEAR(posts.CreationDate) = 2010\nORDER BY posts.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT (SELECT COUNT(*) FROM posts WHERE YEAR(CreationDate) = 2011 AND OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 1000)) / (SELECT COUNT(*) FROM posts WHERE YEAR(CreationDate) = 2011) * 100 AS percentage\t----- bird -----\tcodebase_community",
    "337": "SELECT posts.ViewCount AS TotalViews, users.DisplayName AS LastPostedBy\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (\n    SELECT Id \n    FROM posts \n    ORDER BY Score DESC \n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName \nFROM comments \nJOIN users ON comments.UserId = users.Id \nJOIN posts ON comments.PostId = posts.Id \nWHERE posts.Title = 'Analysing wind data with R' \nORDER BY comments.CreationDate DESC \nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT (SELECT COUNT(*) FROM posts WHERE Score > 50 AND OwnerUserId = \n    (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)) / \n(SELECT COUNT(*) FROM posts WHERE OwnerUserId = \n    (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)) * 100 AS percentage\t----- bird -----\tcodebase_community",
    "341": "SELECT `ExcerptPostId`, `WikiPostId` \nFROM `tags` \nWHERE `TagName` = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes \nFROM users \nJOIN comments ON users.Id = comments.UserId \nWHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text \nFROM comments \nJOIN posts ON comments.PostId = posts.Id \nWHERE posts.ViewCount BETWEEN 100 AND 150 \nORDER BY comments.Score DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nWHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) \nAND Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT (SELECT COUNT(*) FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Score BETWEEN 5 AND 10 AND users.UpVotes = 0) / (SELECT COUNT(*) FROM comments WHERE Score BETWEEN 5 AND 10) * 100 AS percentage\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT `name`, `borderColor`, `cardKingdomFoilId`, `cardKingdomId` \nFROM `cards` \nWHERE `borderColor` = 'borderless' \nAND (`cardKingdomFoilId` IS NULL OR `cardKingdomId` IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT cards.name, cards.rarity, legalities.status, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types LIKE '%Artifact%' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, cards.artist, rulings.text, cards.hasContentWarning \nFROM cards \nLEFT JOIN rulings ON cards.uuid = rulings.uuid \nWHERE cards.artist = 'Stephen Daniele' AND cards.hasContentWarning = 1\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.uuid\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT (SELECT COUNT(*) FROM cards WHERE availability LIKE '%Chinese Simplified%') / (SELECT COUNT(*) FROM cards) * 100 AS percentage\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT `borderColor` \nFROM `cards` \nWHERE `name` = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format, legalities.status \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE cards.name = \"Benalish Knight\"\t----- bird -----\tcard_games",
    "357": "SELECT (SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless') / (SELECT COUNT(*) FROM cards) * 100 AS percentage_of_borderless_cards\t----- bird -----\tcard_games",
    "358": "SELECT (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100 AS percentage\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = \"Summon - Angel\" \nAND subtypes NOT LIKE \"%Angel%\"\t----- bird -----\tcard_games",
    "360": "SELECT `id` FROM `cards` WHERE `duelDeck` = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards \nWHERE borderColor = 'white' \nAND id IN (SELECT id FROM legalities WHERE status = 'Banned')\t----- bird -----\tcard_games",
    "362": "SELECT cards.name, foreign_data.language\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.originalType = 'Artifact' AND cards.colors = 'B' AND foreign_data.language IS NOT NULL\t----- bird -----\tcard_games",
    "363": "SELECT `manaCost` \nFROM `cards` \nWHERE `layout` = 'normal' \nAND `frameVersion` = '2003' \nAND `borderColor` = 'black' \nAND `availability` = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT (\n    SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 1\n) / (\n    SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1\n) * 100 AS percentage,\nid\nFROM cards\nWHERE isStorySpotlight = 1 AND isTextless = 1\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nINNER JOIN sets ON set_translations.setCode = sets.code \nWHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT `type` \nFROM `foreign_data` \nWHERE `language` = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') \nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.id = legalities.id \nJOIN rulings ON cards.id = rulings.id \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name \nFROM cards \nJOIN foreign_data ON cards.id = foreign_data.id \nWHERE cards.artist = 'Matthew D. Wilson' \nAND cards.type = 'Creature' \nAND cards.layout = 'normal' \nAND cards.borderColor = 'black' \nAND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT (DIVIDE(COUNT(hasContentWarning = 0), COUNT(ID)) * 100) AS percentage\nFROM cards\nWHERE id IN (\n    SELECT id\n    FROM legalities\n    WHERE format = 'commander' AND status = 'legal'\n)\t----- bird -----\tcard_games",
    "372": "SELECT (SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'French' AND (cards.power IS NULL OR cards.power = '*')) / (SELECT COUNT(*) FROM cards WHERE cards.power IS NULL OR cards.power = '*') * 100 AS percentage\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT (DIVIDE(COUNT(`isTextless` = 1 AND `layout` = 'normal'), COUNT(`isTextless`))) * 100 AS `proportion`\nFROM `cards`\t----- bird -----\tcard_games",
    "375": "SELECT set_translations.language \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language \nFROM foreign_data \nWHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT `name`, `convertedManaCost` \nFROM `cards` \nWHERE `name` IN ('Serra Angel', 'Shrine Keeper')\t----- bird -----\tcard_games",
    "378": "SELECT set_translations.translation \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nJOIN cards ON sets.code = cards.setCode \nWHERE set_translations.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "379": "SELECT *\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nWHERE artist = 'Adam Rex' \nAND setCode = (SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition')\t----- bird -----\tcard_games",
    "381": "SELECT translation \nFROM set_translations \nWHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') \nAND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name, sets.mtgoCode \nFROM sets \nJOIN cards ON sets.code = cards.setCode \nWHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly \nFROM sets \nJOIN cards ON sets.code = cards.setCode \nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets \nWHERE code IN (\n    SELECT setCode \n    FROM set_translations \n    WHERE language = 'Italian' AND translation IS NOT NULL\n) AND baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist \nFROM cards \nWHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') \nAND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards AS T1 \nJOIN sets AS T2 ON T1.setCode = T2.code \nWHERE T1.convertedManaCost > 5 AND T2.name = 'Coldsnap' AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT foreign_data.flavorText \nFROM foreign_data \nJOIN cards ON foreign_data.uuid = cards.uuid \nWHERE foreign_data.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.name = 'Coldsnap' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT foreign_data.name \nFROM foreign_data \nJOIN cards ON foreign_data.uuid = cards.uuid \nJOIN sets ON cards.setCode = sets.code \nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian' \nORDER BY cards.convertedManaCost DESC\t----- bird -----\tcard_games",
    "391": "SELECT (SELECT COUNT(*) FROM cards WHERE convertedManaCost = 7 AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) / (SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) * 100 AS percentage\t----- bird -----\tcard_games",
    "392": "SELECT (\n    SELECT COUNT(*) \n    FROM cards \n    WHERE cardKingdomFoilId IS NOT NULL \n    AND cardKingdomId IS NOT NULL \n    AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')\n) / \n(\n    SELECT COUNT(*) \n    FROM cards \n    WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')\n) * 100 AS percentage_of_incredibly_powerful_cards_in_Coldsnap\t----- bird -----\tcard_games",
    "393": "SELECT format, COUNT(status) as banned_count, GROUP_CONCAT(name) as banned_cards\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY banned_count DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE set_translations.language = 'Korean' \nAND sets.name NOT IN (\n    SELECT sets.name \n    FROM sets \n    JOIN set_translations ON sets.code = set_translations.setCode \n    WHERE set_translations.language LIKE '%Japanese%'\n)\t----- bird -----\tcard_games",
    "397": "SELECT cards.frameVersion, cards.artist, legalities.status \nFROM cards \nLEFT JOIN legalities ON cards.uuid = legalities.uuid \nWHERE cards.artist = 'Allen Williams' OR legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS avg_oxygen\nFROM\n(\n    SELECT molecule_id, COUNT(*) AS oxygen_count\n    FROM atom\n    WHERE element = 'o' AND molecule_id IN\n    (\n        SELECT molecule_id\n        FROM bond\n        WHERE bond_type = '-'\n    )\n    GROUP BY molecule_id\n) AS oxygen_counts\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) AS average_single_bonded_carcinogenic\nFROM\n(\n    SELECT molecule.molecule_id, COUNT(bond.bond_id) AS single_bonded_count\n    FROM molecule\n    JOIN atom ON molecule.molecule_id = atom.molecule_id\n    JOIN bond ON molecule.molecule_id = bond.molecule_id\n    JOIN connected ON atom.atom_id = connected.atom_id AND bond.bond_id = connected.bond_id\n    WHERE molecule.label = '+' AND bond.bond_type = '-'\n    GROUP BY molecule.molecule_id\n) AS subquery\t----- bird -----\ttoxicology",
    "401": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT (\n    SELECT COUNT(*) \n    FROM atom \n    WHERE element = 'c' \n    AND molecule_id IN (\n        SELECT molecule_id \n        FROM bond \n        WHERE bond_type = '='\n    )\n) / (\n    SELECT COUNT(*) \n    FROM atom \n    WHERE molecule_id IN (\n        SELECT molecule_id \n        FROM bond \n        WHERE bond_type = '='\n    )\n) * 100 AS percentage_of_carbon_in_double_bond_molecules\t----- bird -----\ttoxicology",
    "403": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT `molecule`.`label`\nFROM `molecule`\nJOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`\nWHERE `atom`.`element` = 'h'\nGROUP BY `molecule`.`label`\nORDER BY COUNT(`molecule`.`label`) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(*) as count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY count\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') \nOR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE (atom.element = 'i' OR atom.element = 's') AND bond.bond_type = '-' AND atom.molecule_id = bond.molecule_id\t----- bird -----\ttoxicology",
    "409": "SELECT (\n    (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') - \n    (SELECT COUNT(DISTINCT atom.molecule_id) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'f')\n) / (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') * 100 AS percentage_of_carcinogenic_without_fluorine\t----- bird -----\ttoxicology",
    "410": "SELECT (DIVIDE(SUM(bond.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR000' \nORDER BY element ASC \nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND((SELECT COUNT(*) FROM bond WHERE bond_type = '=' AND molecule_id = 'TR008') / (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR008') * 100, 5) AS percentage\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SELECT COUNT(*) FROM molecule WHERE label = '+') / (SELECT COUNT(*) FROM molecule) * 100, 3) AS percentage\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND((SUM(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) / COUNT(atom.atom_id)) * 100, 4) AS percentage\nFROM atom\nWHERE atom.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT molecule.label, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond.bond_type, COUNT(bond.bond_type) as bond_count\nFROM bond\nWHERE bond.molecule_id = 'TR010'\nGROUP BY bond.bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT molecule.molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '-' AND molecule.label = '-'\nGROUP BY molecule.molecule_id\nORDER BY molecule.molecule_id ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(bond_id) \nFROM connected \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12') \nAND bond.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element \nFROM atom \nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT b.bond_id, b.bond_type\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'p'\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'n'\nWHERE b.molecule_id = a1.molecule_id AND b.molecule_id = a2.molecule_id\t----- bird -----\ttoxicology",
    "424": "SELECT molecule.label\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_type = ' = '\nGROUP BY molecule.molecule_id\nORDER BY COUNT(bond.bond_type) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT a.atom_id, COUNT(c.bond_id) AS bond_count\n    FROM atom a\n    LEFT JOIN connected c ON a.atom_id = c.atom_id\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n) AS subquery\t----- bird -----\ttoxicology",
    "426": "SELECT element \nFROM atom \nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.atom_id\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND((SUM(label = '+') / COUNT(bond_id)) * 100, 5) AS proportion\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nJOIN bond ON molecule.molecule_id = bond.molecule_id \nJOIN connected ON atom.atom_id = connected.atom_id \nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT (DIVIDE(SUM(element = 'cl'), COUNT(atom_id)) * 100) as percent\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT (DIVIDE(SUM(element = 'cl'), COUNT(molecule_id)) * 100) as percentage \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT atom.element, COUNT(*) as count\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '+' AND SUBSTR(atom.atom_id, 7, 1) = '4'\nGROUP BY atom.element\t----- bird -----\ttoxicology",
    "436": "SELECT molecule.label, \n(SUM(atom.element = 'h') / COUNT(atom.element)) as ratio\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '-'\nGROUP BY molecule.molecule_id\nHAVING COUNT(atom.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE AvgScrMath > 400 AND Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT `CDSCode` \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) as highest_eligible_free_rate\nFROM frpm\nWHERE `CDSCode` IN (\n    SELECT `cds`\n    FROM satscores\n    WHERE `NumGE1500` / `NumTstTakr` > 0.3\n)\t----- bird -----\tcalifornia_schools",
    "441": "SELECT `School`, `AvgScrWrite`, `CharterNum` \nFROM `satscores` \nJOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` \nWHERE `AvgScrWrite` > 499 AND `CharterNum` IS NOT NULL \nORDER BY `AvgScrWrite` DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.`School`, schools.`Street`\nFROM schools\nJOIN frpm ON schools.`CDSCode` = frpm.`CDSCode`\nWHERE ABS(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.school, f.`Percent (%) Eligible Free (K-12)`, s.`NumGE1500`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND ss.`NumGE1500` >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.School, schools.FundingType\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrMath > 400 AND schools.County = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.School, schools.Street, schools.City, schools.State, schools.Zip\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Monterey' AND frpm.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, s.AvgScrWrite, s.Phone\nFROM satscores AS s\nJOIN schools AS sc ON s.cds = sc.CDSCode\nWHERE sc.OpenDate > '1991-12-31' OR sc.ClosedDate < '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT schools.School, schools.DOCType\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.FundingType = 'Local'\nAND (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`)\n     FROM schools\n     JOIN frpm ON schools.CDSCode = frpm.CDSCode\n     WHERE schools.FundingType = 'Local')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, `Enrollment (K-12)`, `Free Meal Count (K-12)`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) as `Eligible Free Rate`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 9, 2\t----- bird -----\tcalifornia_schools",
    "449": "SELECT `School Name`, `FRPM Count (K-12)`, `Enrollment (K-12)`, (`FRPM Count (K-12)` / `Enrollment (K-12)`) as `Eligible FRPM Rate`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.DOC = '66' AND `Enrollment (K-12)` > 0\nORDER BY `FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.Street, schools.City, schools.Zip, schools.State\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3\nFROM schools\nWHERE CDSCode = (\n    SELECT cds\n    FROM satscores\n    ORDER BY NumGE1500 DESC\n    LIMIT 1\n)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.Phone\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE frpm.`District Name` = 'Fresno Unified'\nORDER BY satscores.AvgScrRead ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT schools.School\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.Virtual = 'F'\nAND satscores.AvgScrRead IS NOT NULL\nORDER BY schools.County, satscores.AvgScrRead DESC\t----- bird -----\tcalifornia_schools",
    "455": "SELECT schools.School, AVG(satscores.AvgScrWrite) as Average_Writing_Score\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich'\nGROUP BY schools.School\t----- bird -----\tcalifornia_schools",
    "456": "SELECT `sname`, `enroll12` \nFROM `satscores` \nWHERE `rtype` = 'S' \nORDER BY `enroll12` DESC \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*)/12 as 'Monthly Average'\nFROM schools\nWHERE County = 'Alameda' AND DOC = '52' AND YEAR(OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "458": "SELECT (SELECT COUNT(*) FROM schools WHERE `County` = 'Orange' AND `DOC` = '54') / \n(SELECT COUNT(*) FROM schools WHERE `County` = 'Orange' AND `DOC` = '52') AS `Ratio`\t----- bird -----\tcalifornia_schools",
    "459": "SELECT `sname`, `Street`\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY `AvgScrMath` DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.County = 'Los Angeles' \nAND s.Charter = 0 \nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)` \nFROM frpm \nWHERE `CDSCode` IN \n(SELECT `CDSCode` FROM schools WHERE `EdOpsCode` = 'SSS' AND `City` = 'Fremont' AND `LastUpdate` BETWEEN '2014-08-01' AND '2015-07-31')\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.School, (frpm.`FRPM Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)` * 100) as PercentEligibleFRPM\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Los Angeles' AND schools.GSserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT `County`, COUNT(*) as `Number of Schools`\nFROM schools\nWHERE `Virtual` = 'F' AND (`County` = 'San Diego' OR `County` = 'Santa Barbara')\nGROUP BY `County`\nORDER BY `Number of Schools` DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT `GSoffered` \nFROM schools \nORDER BY ABS(`Longitude`) DESC \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT schools.City, COUNT(schools.CDSCode) as NumberOfSchools\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.Magnet = 1 AND schools.GSserved = 'K-8' AND frpm.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY schools.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT `frpm`.`Percent (%) Eligible Free (K-12)`, `frpm`.`District Code`\nFROM `frpm`\nJOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode`\nWHERE `schools`.`AdmFName1` = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' \nAND District = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND DOC = '54' \nAND SOC = '62'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(*) \nFROM account \nJOIN district ON account.district_id = district.district_id \nWHERE frequency = 'POPLATEK PO OBRATU' AND A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(DISTINCT district_id) \nFROM district \nJOIN client ON district.district_id = client.district_id \nWHERE client.gender = 'F' AND district.A11 > 6000 AND district.A11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' AND district.A3 = 'North Bohemia' AND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id, MIN(district.A11) AS lowest_avg_salary, (MAX(district.A11) - MIN(district.A11)) AS gap\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = (SELECT MAX(birth_date) FROM client WHERE gender = 'F')\nGROUP BY account.account_id\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN client ON account.district_id = client.district_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.birth_date = (SELECT MAX(birth_date) FROM client)\nAND district.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id, loan.amount, account.frequency\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE YEAR(loan.date) = 1997 AND loan.status = 'A' AND account.frequency = 'POPLATEK TYDNE'\nORDER BY loan.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id, loan.amount, account.date\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND loan.amount = (\n    SELECT MAX(amount) \n    FROM loan \n    WHERE duration > 12\n) AND YEAR(account.date) = 1993\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.client_id) \nFROM client \nJOIN disp ON client.client_id = disp.client_id \nJOIN account ON disp.account_id = account.account_id \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT district.A2\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = \n    (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1)) / \n(SELECT COUNT(*) FROM client WHERE district_id = \n    (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1)) * 100 AS percentage_of_male_clients\t----- bird -----\tfinancial",
    "478": "SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate\nFROM\n    (SELECT account_id, balance\n    FROM trans\n    WHERE date = '1993-03-22') t1\nJOIN\n    (SELECT account_id, balance\n    FROM trans\n    WHERE date = '1998-12-27') t2\nON t1.account_id = t2.account_id\nWHERE t1.account_id = \n    (SELECT account_id\n    FROM loan\n    WHERE date = '1993-07-05'\n    ORDER BY date ASC\n    LIMIT 1)\t----- bird -----\tfinancial",
    "479": "SELECT (SELECT SUM(amount) FROM loan WHERE status = 'A') / (SELECT SUM(amount) FROM loan) * 100 AS percentage_paid_no_issue\t----- bird -----\tfinancial",
    "480": "SELECT (SELECT COUNT(*) FROM loan WHERE amount < 100000 AND status = 'C') / (SELECT COUNT(*) FROM loan WHERE amount < 100000) * 100 AS percentage FROM loan\t----- bird -----\tfinancial",
    "481": "SELECT district.A2 as district, ((district.A13 - district.A12) / district.A12) * 100 as unemployment_rate_increment\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district, COUNT(*) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F' AND dp.type = 'OWNER'\nGROUP BY d.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan \nJOIN account ON loan.account_id = account.account_id \nWHERE loan.amount >= 250000 \nAND account.frequency = 'POPLATEK MESICNE' \nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.district_id = 1 AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15) \n    FROM district \n    WHERE A15 NOT IN (\n        SELECT MAX(A15) \n        FROM district\n    )\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT district.A2 as district_name, SUM(trans.amount) as total_withdrawal\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%'\nGROUP BY district.A2\nORDER BY total_withdrawal DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.district_id = 1 AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE district.A15 = (\n    SELECT MAX(A15) \n    FROM district \n    WHERE A15 NOT IN (\n        SELECT MAX(A15) \n        FROM district\n    )\n) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT disp.client_id\nFROM disp\nJOIN trans ON disp.account_id = trans.account_id\nWHERE trans.operation = 'VYBER KARTOU' AND trans.amount < (SELECT AVG(amount) FROM trans WHERE YEAR(date) = 1998) AND YEAR(trans.date) = 1998\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT disp.type, district.A11\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE disp.type != 'OWNER' AND district.A11 > 8000 AND district.A11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(district.A15) as average_crimes\nFROM district\nJOIN account ON district.district_id = account.district_id\nWHERE district.A15 > 4000 AND YEAR(account.date) >= 1997\t----- bird -----\tfinancial",
    "492": "SELECT *\nFROM trans\nWHERE operation = 'VYBER' AND account_id IN (\n    SELECT account_id\n    FROM disp\n    WHERE client_id = 3356\n)\t----- bird -----\tfinancial",
    "493": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id IN \n(SELECT district_id FROM district WHERE A11 > 10000)) / \n(SELECT COUNT(*) FROM client WHERE district_id IN \n(SELECT district_id FROM district WHERE A11 > 10000)) * 100 AS percentage\t----- bird -----\tfinancial",
    "494": "SELECT ((SUM(l.amount) WHERE YEAR(l.date) = 1997 AND c.gender = 'M') - (SUM(l.amount) WHERE YEAR(l.date) = 1996 AND c.gender = 'M')) / (SUM(l.amount) WHERE YEAR(l.date) = 1996 AND c.gender = 'M') * 100 AS 'Growth Rate'\nFROM loan l\nJOIN disp d ON l.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT frequency, k_symbol \nFROM account \nJOIN trans ON account.account_id = trans.account_id \nWHERE account.account_id = 3 AND trans.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND client_id IN (SELECT client_id FROM disp WHERE account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE'))) / (SELECT COUNT(*) FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE'))) * 100 AS percentage\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount) as average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN trans ON account.account_id = trans.account_id\nWHERE loan.status = 'C' AND trans.operation = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, TIMESTAMPDIFF(YEAR, client.birth_date, CURDATE()) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nJOIN loan ON disp.account_id = loan.account_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}