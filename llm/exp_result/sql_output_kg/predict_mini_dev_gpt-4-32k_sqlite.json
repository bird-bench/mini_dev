{
    "0": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / \n(SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) as LeastConsumption\nFROM yearmonth\nWHERE substr(Date,1,4) = '2012' AND Segment = 'LAM'\nGROUP BY CustomerID\nORDER BY LeastConsumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS Average_Monthly_Consumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND SUBSTR(yearmonth.Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT (SUM(CASE WHEN customers.Currency = 'CZK' THEN yearmonth.Consumption ELSE 0 END) -\n SUM(CASE WHEN customers.Currency = 'EUR' THEN yearmonth.Consumption ELSE 0 END)) AS Difference\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE SUBSTR(yearmonth.Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS Total_Consumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'CZK'\nGROUP BY Year\nORDER BY Total_Consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date, MAX(Consumption) as Peak_Consumption\nFROM yearmonth\nWHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\nAND substr(Date,1,4) = '2013'\nGROUP BY Date\nORDER BY Peak_Consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \"Segment\",\n       \"Year\",\n       AVG(\"Consumption\") AS \"Annual Average Consumption\"\nFROM\n  (\n    SELECT customers.\"Segment\",\n           SUBSTR(yearmonth.\"Date\", 1, 4) AS \"Year\",\n           yearmonth.\"Consumption\"\n    FROM customers\n    JOIN yearmonth ON customers.\"CustomerID\" = yearmonth.\"CustomerID\"\n    WHERE customers.\"Currency\" = 'CZK'\n      AND SUBSTR(yearmonth.\"Date\", 1, 4) = '2013'\n  ) AS subquery\nGROUP BY \"Segment\",\n         \"Year\"\nHAVING COUNT(\"Consumption\") = \n  (\n    SELECT MIN(subquery2.\"Count\")\n    FROM\n      (\n        SELECT COUNT(yearmonth.\"Consumption\") AS \"Count\"\n        FROM customers\n        JOIN yearmonth ON customers.\"CustomerID\" = yearmonth.\"CustomerID\"\n        WHERE customers.\"Currency\" = 'CZK'\n          AND SUBSTR(yearmonth.\"Date\", 1, 4) = '2013'\n        GROUP BY customers.\"Segment\"\n      ) AS subquery2\n  )\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment, \n    ((SUM(CASE WHEN substr(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - \n    SUM(CASE WHEN substr(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) / \n    SUM(CASE WHEN substr(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END)) * 100 as PercentageIncrease\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND (c.Segment = 'SME' OR c.Segment = 'LAM' OR c.Segment = 'KAM')\nGROUP BY Segment\nORDER BY PercentageIncrease DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE CustomerID = 6 \nAND substr(Date,1,6) BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n(SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS Difference\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT (\n    SELECT COUNT(DISTINCT CustomerID) \n    FROM customers \n    WHERE Segment = 'SME' AND Currency = 'CZK'\n) - \n(\n    SELECT COUNT(DISTINCT CustomerID) \n    FROM customers \n    WHERE Segment = 'SME' AND Currency = 'EUR'\n) AS MoreSMEsPayInCZKThanEUR\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (SELECT COUNT(*) FROM yearmonth WHERE Consumption > 46.73 AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM')) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') AS Percentage FROM yearmonth\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT (SELECT COUNT(*) FROM yearmonth WHERE substr(Date,1,6) = '201202' AND Consumption > 528.3) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE substr(Date,1,6) = '201202') AS Percentage FROM yearmonth LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) \nFROM yearmonth \nWHERE substr(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description\nFROM products\nJOIN transactions_1k ON products.ProductID = transactions_1k.ProductID\nWHERE strftime('%Y%m', transactions_1k.Date) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gasstations.Country\nFROM gasstations\nJOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nWHERE strftime('%Y%m', transactions_1k.Date) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT yearmonth.CustomerID)\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description\nFROM \"transactions_1k\"\nJOIN gasstations ON \"transactions_1k\".GasStationID = gasstations.GasStationID\nJOIN products ON \"transactions_1k\".ProductID = products.ProductID\nWHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time \nFROM transactions_1k \nINNER JOIN gasstations \nON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM \"transactions_1k\" \nJOIN gasstations ON \"transactions_1k\".GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' AND \"transactions_1k\".Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT Currency \nFROM customers \nJOIN transactions_1k \nON customers.CustomerID = transactions_1k.CustomerID \nWHERE Date = '2012-08-24' AND Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM \"transactions_1k\" \nJOIN gasstations ON \"transactions_1k\".GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' \nAND \"transactions_1k\".Date = '2012-08-26' \nAND \"transactions_1k\".Time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT gasstations.Country\nFROM \"transactions_1k\"\nJOIN customers ON \"transactions_1k\".CustomerID = customers.CustomerID\nJOIN gasstations ON \"transactions_1k\".GasStationID = gasstations.GasStationID\nWHERE \"transactions_1k\".Date = '2012-08-24' AND \"transactions_1k\".Price * \"transactions_1k\".Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k \n WHERE Date = '2012-08-25' AND CustomerID IN \n (SELECT CustomerID FROM customers WHERE Currency = 'EUR')) * 100.0 / \n (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25') AS percentage\nFROM transactions_1k\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (\n    (SELECT Consumption \n     FROM yearmonth \n     WHERE CustomerID = \n         (SELECT CustomerID \n          FROM transactions_1k \n          WHERE Date = '2012-08-25' AND Price = 634.8) \n          AND Date LIKE '2012%') \n    - \n    (SELECT Consumption \n     FROM yearmonth \n     WHERE CustomerID = \n         (SELECT CustomerID \n          FROM transactions_1k \n          WHERE Date = '2012-08-25' AND Price = 634.8) \n          AND Date LIKE '2013%')\n) \n/ \n(SELECT Consumption \n FROM yearmonth \n WHERE CustomerID = \n     (SELECT CustomerID \n      FROM transactions_1k \n      WHERE Date = '2012-08-25' AND Price = 634.8) \n      AND Date LIKE '2012%') AS ConsumptionDecreaseRate\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Segment = 'premium' AND Country = 'SVK') * 100.0 / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') AS percentage FROM gasstations LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Price) AS TotalSpent\nFROM transactions_1k\nWHERE CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT customers.CustomerID, AVG(transactions_1k.Price/transactions_1k.Amount) as Average_Price_Per_Item, customers.Currency\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nGROUP BY customers.CustomerID\nORDER BY SUM(transactions_1k.Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT yearmonth.CustomerID, yearmonth.Consumption\nFROM yearmonth\nJOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.ProductID = 5 \nAND transactions_1k.Price/transactions_1k.Amount > 29.00\nAND yearmonth.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) \nFROM member \nJOIN attendance ON member.member_id = attendance.link_to_member \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = 'Women's Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id) \nFROM event \nWHERE type = 'Meeting' \nAND event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 10\n)\t----- bird -----\tstudent_club",
    "33": "SELECT event_name \nFROM event \nWHERE event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 20\n) \nAND type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT amount \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name, member.last_name \nFROM member \nJOIN zip_code ON member.zip = zip_code.zip_code \nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.expense_id, expense.approved\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) as average_cost\nFROM expense\nWHERE link_to_member = (\n    SELECT member_id\n    FROM member\n    WHERE first_name = 'Elijah' AND last_name = 'Allen'\n) AND (substr(expense_date, 6, 2) = '09' OR substr(expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT (SUM(b1.spent) - SUM(b2.spent)) as difference\nFROM budget b1\nJOIN event e1 ON b1.link_to_event = e1.event_id\nJOIN budget b2 ON b1.budget_id = b2.budget_id\nJOIN event e2 ON b2.link_to_event = e2.event_id\nWHERE SUBSTR(e1.event_date, 1, 4) = '2019' AND SUBSTR(e2.event_date, 1, 4) = '2020'\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone \nFROM member \nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')) /\n(SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting')) AS Ratio\nFROM budget\nWHERE category = 'Advertisement'\nGROUP BY category\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) as total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.phone = \"809-555-3360\"\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM attendance \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT first_name, last_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.department = \"School of Applied Sciences, Technology and Education\"\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name, MAX(budget.spent / budget.amount) as spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nGROUP BY event.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent\nFROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) \nFROM budget \nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT first_name, last_name \nFROM member \nWHERE member_id IN (\n    SELECT link_to_member \n    FROM attendance \n    GROUP BY link_to_member \n    HAVING COUNT(link_to_event) > 7\n)\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name\nFROM member\nJOIN budget ON member.member_id = budget.link_to_member\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nORDER BY expense.cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(cost) * 100 / (SELECT SUM(cost) FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))) as percentage\nFROM expense\t----- bird -----\tstudent_club",
    "59": "SELECT source \nFROM income \nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' \nORDER BY amount DESC \nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event_name \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE category = 'Advertisement' \nORDER BY spent DESC \nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT * \nFROM attendance \nJOIN member ON attendance.link_to_member = member.member_id \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed' AND budget.remaining < 0\nORDER BY budget.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) as total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense.expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) as amount_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) as total_expense \nFROM expense \nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = \"rec4BLdZHS2Blfp4v\"\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nINNER JOIN member ON expense.link_to_member = member.member_id \nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event.type\nFROM event\nWHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT (COUNT(CASE WHEN amount = 50 THEN 1 END) * 100.0 / COUNT(*)) as percentage\nFROM income\nWHERE link_to_member IN \n    (SELECT member_id FROM member WHERE t_shirt_size = 'Medium')\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' \nAND status = 'Closed' \nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT first_name, last_name, phone\nFROM member\nWHERE member_id IN (\n    SELECT link_to_member\n    FROM expense\n    WHERE cost > (\n        SELECT AVG(cost)\n        FROM expense\n    )\n)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name, member.last_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT CASE \n    WHEN in_patient_count > out_patient_count THEN 'More in-patients'\n    WHEN in_patient_count < out_patient_count THEN 'More out-patients'\n    ELSE 'Equal number of in-patients and out-patients'\nEND AS result,\n(abs(in_patient_count - out_patient_count) * 100.0 / total_count) AS deviation_percentage\nFROM\n(\n    SELECT \n        (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS in_patient_count,\n        (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS out_patient_count,\n        (SELECT COUNT(*) FROM Patient WHERE SEX = 'M') AS total_count\n)\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (CAST((SELECT COUNT(ID) FROM Patient WHERE strftime('%Y', Birthday) > '1930' AND SEX = 'F') AS REAL) / CAST((SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') AS REAL)) * 100 AS Percentage FROM Patient LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') / (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS Ratio FROM Patient\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND ID IN \n    (SELECT ID \n    FROM Examination \n    WHERE Thrombosis = 1 AND strftime('%Y', `Examination Date`) = '1997')\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Examination.Symptoms, Examination.Diagnosis\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Date, (strftime('%Y', Patient.`First Date`) - strftime('%Y', Patient.Birthday)) as Age\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Patient.Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.UA <= 8.0) / \n(SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA <= 6.5) AS Ratio\nFROM Patient\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nJOIN Patient ON Examination.ID = Patient.ID \nWHERE strftime('%Y', Patient.Birthday) > strftime('%Y', Examination.`Examination Date`) - 18 \nAND strftime('%Y', Examination.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT Patient.ID, Patient.Description, Patient.Diagnosis, Examination.`Examination Date`, Laboratory.HGB, \n    (strftime('%Y', Examination.`Examination Date`) - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM` \nFROM Examination \nWHERE ID = (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19') \nAND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(case when Birthday = '1959-02-18' and Date like '1981-11-%' then `T-CHO` else 0 end) - \nSUM(case when Birthday = '1959-02-18' and Date like '1981-12-%' then `T-CHO` else 0 end)) as 'Decrease Rate'\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nJOIN Patient ON Examination.ID = Patient.ID \nWHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`)*1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-' \nAND Laboratory.Date LIKE '1991-10%' \nAND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(Laboratory.ALB) \nFROM Laboratory \nJOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (DIVIDE(SUM(SEX = 'F'), COUNT(SEX)) * 100) as Percentage\nFROM Patient\nWHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n    WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n    WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n    ELSE 'No'\nEND AS 'Is Uric Acid Normal'\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.ID, Patient.Birthday, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT ID) as List\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE `T-BIL` >= 2.0\nGROUP BY SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) AS Average_Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND YEAR(Patient.Birthday) BETWEEN 1936 AND 1956 \nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.HCT >= 52\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \"Number of patients with platelet level lower than normal range\" AS \"Lower than Normal\", \n\"Number of patients with platelet level higher than normal range\" AS \"Higher than Normal\", \n\"Number of patients with platelet level lower than normal range\" - \"Number of patients with platelet level higher than normal range\" AS \"Difference\"\nFROM\n(\n    SELECT \n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT < 100) AS \"Number of patients with platelet level lower than normal range\",\n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT > 400) AS \"Number of patients with platelet level higher than normal range\"\n)\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.PLT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE YEAR(Laboratory.Date) = '1984' \nAND (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) < 50 \nAND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', Birthday)) > 55 AND ID IN (SELECT ID FROM Laboratory WHERE PT >= 14)) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE (strftime('%Y', 'now') - strftime('%Y', Birthday)) > 55 AND ID IN (SELECT ID FROM Laboratory WHERE PT >= 14)) AS Percentage\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0 AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) \nFROM Laboratory \nWHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE IGG BETWEEN 900 AND 2000 AND Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGA >= 80 AND Laboratory.IGA <= 500 AND strftime('%Y', Patient.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) as Frequency\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE IGM <= 40 OR IGM >= 400\n)\nGROUP BY Diagnosis\nORDER BY Frequency DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nLEFT JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CRP = '+' AND Patient.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) \nFROM Patient \nWHERE ID IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE CRE >= 1.5\n) \nAND (strftime('%Y', 'now') - strftime('%Y', Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE (Laboratory.RNP = '-' OR Laboratory.RNP = '+-') \nAND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE (Examination.SM IN('-', '+-') OR Examination.SM = 'negative' OR Examination.SM = '0') \nAND Examination.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Patient.SEX = 'F' \nAND Examination.Symptoms IS NULL \nAND Laboratory.SC170 IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND Laboratory.CENTROMEA IN('-', '+-') \nAND Laboratory.SSB IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) \nFROM Patient \nWHERE ID IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE GOT >= 60\n)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT Laboratory.ID)\nFROM Laboratory\nJOIN Examination ON Laboratory.ID = Examination.ID\nWHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.id\nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name, COUNT(*) as wins\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal\nGROUP BY Match.away_team_api_id\nORDER BY wins DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_long_name, buildUpPlaySpeed \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nORDER BY buildUpPlaySpeed DESC \nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name \nFROM League \nJOIN Match ON League.id = Match.league_id \nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal \nGROUP BY League.id \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT Player.player_name, Player.birthday, (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) as age, Player_Attributes.sprint_speed, Player_Attributes.date\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.sprint_speed >= 97 AND strftime('%Y', Player_Attributes.date) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) as total_matches\nFROM Match\nJOIN League ON Match.league_id = League.id\nGROUP BY League.name\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name \nFROM Team \nJOIN Team_Attributes \nON Team.team_api_id = Team_Attributes.team_api_id \nWHERE buildUpPlayPassing > \n    (SELECT AVG(buildUpPlayPassing) \n    FROM Team_Attributes \n    WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012') \nAND strftime('%Y', date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT (SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992') AS percentage\nFROM Player\nWHERE preferred_foot = 'left' AND strftime('%Y', birthday) BETWEEN '1987' AND '1992')\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) as avg_heading_accuracy\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.id\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name, birthday \nFROM Player \nWHERE strftime('%Y', birthday) = '1970' AND strftime('%m', birthday) = '10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = \"Gabriel Tamas\") \nAND strftime('%Y', date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nJOIN League ON Match.league_id = League.id \nJOIN Country ON League.country_id = Country.id \nWHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT CASE \n    WHEN AVG(p1.finishing) > AVG(p2.finishing) THEN p1.player_name\n    ELSE p2.player_name\nEND AS player_with_highest_avg_finishing_rate\nFROM \n    (SELECT pa.player_api_id, pa.finishing, p.player_name\n    FROM Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.player_api_id\n    WHERE p.height = (SELECT MAX(height) FROM Player)) p1,\n    (SELECT pa.player_api_id, pa.finishing, p.player_name\n    FROM Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.player_api_id\n    WHERE p.height = (SELECT MIN(height) FROM Player)) p2\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player_Attributes AS t2\nJOIN Player AS t1 ON t1.player_api_id = t2.player_api_id\nWHERE strftime('%Y', t2.date) BETWEEN '2010' AND '2015' AND t1.height > 170\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Abdou Diallo' THEN id ELSE NULL END)) - \n(SUM(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) / COUNT(CASE WHEN player_name = 'Aaron Appindangoye' THEN id ELSE NULL END)) \nAS difference\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE player_name IN ('Abdou Diallo', 'Aaron Appindangoye')\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday \nFROM Player \nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') \nORDER BY birthday ASC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, height \nFROM Player \nORDER BY height DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id) \nFROM Player_Attributes \nWHERE player_api_id IN (SELECT player_api_id FROM Player WHERE strftime('%Y', birthday)<'1986') \nAND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT player_name \nFROM Player \nJOIN Player_Attributes \nON Player.player_api_id = Player_Attributes.player_api_id \nWHERE volleys > 70 AND dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name \nFROM League \nJOIN Match ON League.id = Match.league_id \nWHERE Match.season = '2008/2009' \nGROUP BY League.name \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) / \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(Team_Attributes.chanceCreationPassing), Team_Attributes.chanceCreationPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy') \nAND date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate \nFROM Player_Attributes \nWHERE player_api_id = (\n    SELECT player_api_id \n    FROM Player \n    WHERE player_name = 'Francesco Migliore'\n) \nAND date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT date \nFROM Player_Attributes \nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Kevin Constant') \nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Kevin Constant')) \nORDER BY date ASC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass \nFROM Team_Attributes \nWHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'FC Lorient') \nAND date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT defenceAggressionClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hannover 96') \nAND date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT avg(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') \nAND substr(date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') - \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')) * 100.0 / \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') AS percentage_difference\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name \nFROM Player \nORDER BY height DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name \nFROM Player \nWHERE player_api_id = (\n    SELECT player_api_id \n    FROM Player_Attributes \n    WHERE overall_rating = (\n        SELECT MAX(overall_rating) \n        FROM Player_Attributes\n    )\n)\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT team_short_name \nFROM Team \nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id \nWHERE chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS jumping_difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id \nFROM Player_Attributes \nWHERE preferred_foot = 'right' \nORDER BY potential ASC \nLIMIT 5\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass \nFROM Team_Attributes \nWHERE team_fifa_api_id = (\n    SELECT team_fifa_api_id \n    FROM Team \n    WHERE team_long_name = 'KSV Cercle Brugge'\n)\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player.player_name, Player_Attributes.finishing, Player_Attributes.curve\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) as num_games\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nWHERE team_api_id = (\n    SELECT away_team_api_id \n    FROM Match \n    ORDER BY away_team_goal DESC \n    LIMIT 1\n)\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name \nFROM Player \nWHERE player_api_id = (\n    SELECT player_api_id \n    FROM Player_Attributes \n    WHERE overall_rating = (\n        SELECT MAX(overall_rating) \n        FROM Player_Attributes\n    )\n)\t----- bird -----\teuropean_football_2",
    "178": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes)) as percentage\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.height < 180 AND Player_Attributes.overall_rating > 70\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverRef \nFROM drivers \nJOIN qualifying ON drivers.driverId = qualifying.driverId \nWHERE qualifying.raceId = 20 \nORDER BY qualifying.q1 DESC \nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname \nFROM drivers \nJOIN qualifying ON drivers.driverId = qualifying.driverId \nWHERE qualifying.raceId = 19 AND qualifying.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT races.name \nFROM races \nJOIN circuits \nON races.circuitId = circuits.circuitId \nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng \nFROM circuits \nJOIN races ON circuits.circuitId = races.circuitId \nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE raceId = 354 AND drivers.forename = 'Bruno' AND drivers.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT number \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE raceId = 903 AND q3 = '0:01:54'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.driverRef, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nWHERE lapTimes.time LIKE '1:27%' AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 45 AND qualifying.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url \nFROM seasons \nJOIN races ON seasons.year = races.year \nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 872 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT ((results.fastestLapSpeed WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) - \n(results.fastestLapSpeed WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) / \n(results.fastestLapSpeed WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) * 100 AS percentage_increase\nFROM results\t----- bird -----\tformula_1",
    "196": "SELECT CAST(COUNT(CASE WHEN results.time IS NOT NULL THEN 1 END) AS FLOAT) / COUNT(results.driverId) AS completion_rate\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, MAX(driverStandings.points) as max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\t----- bird -----\tformula_1",
    "199": "SELECT MIN(lapTimes.milliseconds), drivers.forename, drivers.surname, races.name\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds)\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT (\n    SELECT COUNT(*) \n    FROM results \n    JOIN drivers ON results.driverId = drivers.driverId \n    JOIN races ON results.raceId = races.raceId \n    WHERE surname = 'Hamilton' \n    AND position != 1 \n    AND year >= 2010\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM results \n    JOIN drivers ON results.driverId = drivers.driverId \n    JOIN races ON results.raceId = races.raceId \n    WHERE surname = 'Hamilton' \n    AND year >= 2010\n) AS percentage_not_first_place_since_2010\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points)\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY COUNT(driverStandings.wins) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT MIN(strftime('%Y', 'now') - strftime('%Y', dob)) AS age, forename, surname\nFROM drivers\nWHERE nationality = 'Japanese'\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE strftime('%Y', races.date) = '2005' AND strftime('%m', races.date) = '09'\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')) as percentage\nFROM races\nWHERE name = 'European Grand Prix' AND country = 'Germany'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef \nFROM circuits \nWHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality \nFROM drivers \nORDER BY drivers.dob ASC \nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name, races.year\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT max(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT time \nFROM results \nJOIN races ON results.raceId = races.raceId \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT results.driverId) \nFROM results \nJOIN races ON results.raceId = races.raceId \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.time IS NOT NULL AND drivers.driverRef LIKE '%f1%'\t----- bird -----\tformula_1",
    "218": "SELECT ((SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND positionOrder = 1) - (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) / (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'))) * 100 AS percentage_faster\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) \nFROM constructors \nWHERE nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nWHERE constructorResults.points = 0 AND constructorResults.raceId = 291\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT constructors.constructorId) \nFROM constructors \nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId \nJOIN races ON constructorResults.raceId = races.raceId \nWHERE constructors.nationality = 'Japanese' \nGROUP BY constructors.constructorId \nHAVING COUNT(races.raceId) = 2 AND SUM(constructorResults.points) = 0\t----- bird -----\tformula_1",
    "223": "SELECT (DIVIDE(COUNT(DriverID) WHERE time IS NOT NULL AND year BETWEEN 2007 AND 2009 AND nationality = 'Japanese') / COUNT(DriverID) WHERE year BETWEEN 2007 AND 2009 AND nationality = 'Japanese') * 100 AS race_completion_percentage\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\t----- bird -----\tformula_1",
    "224": "SELECT races.year, AVG(results.milliseconds/1000) as average_time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN driverStandings ON races.raceId = driverStandings.raceId AND results.driverId = driverStandings.driverId\nWHERE races.year < 1975 AND driverStandings.position = 1 AND results.time IS NOT NULL\nGROUP BY races.year\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap \nFROM results \nJOIN races ON results.raceId = races.raceId \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN driverStandings ON races.raceId = driverStandings.raceId AND drivers.driverId = driverStandings.driverId \nWHERE races.year = 2009 AND driverStandings.position = 1 \nORDER BY fastestLapTime \nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT avg(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT (COUNT(driverId) * 100.0 / (SELECT COUNT(driverId) FROM drivers WHERE strftime('%Y', dob) BETWEEN '2000' AND '2005')) AS percentage\nFROM drivers\nWHERE strftime('%Y', dob) < '1985' AND driverId IN (SELECT driverId FROM results WHERE laps > 50)\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) \nFROM drivers \nJOIN lapTimes ON drivers.driverId = lapTimes.driverId \nWHERE drivers.nationality = 'French' AND lapTimes.milliseconds < 120000\t----- bird -----\tformula_1",
    "229": "SELECT code \nFROM drivers \nWHERE nationality = 'America'\t----- bird -----\tformula_1",
    "230": "SELECT drivers.code\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef \nFROM drivers \nWHERE nationality = 'German' \nORDER BY dob \nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE strftime('%Y', drivers.dob) = '1971' AND results.fastestLapTime IS NOT NULL\nORDER BY results.fastestLapTime ASC\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE statusId = 2 AND time IS NOT NULL AND raceId > 50 AND raceId < 100\t----- bird -----\tformula_1",
    "234": "SELECT count(*), location, lat, lng \nFROM circuits \nWHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT drivers.forename, drivers.surname, races.year, races.date, races.time\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT drivers.driverId, drivers.forename, drivers.surname, AVG(pitStops.duration) as average_duration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' AND strftime('%Y', drivers.dob) BETWEEN '1980' AND '1985'\nGROUP BY drivers.driverId\nORDER BY average_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM constructors\nJOIN results ON constructors.constructorId = results.constructorId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "239": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nJOIN superhero ON hero_power.hero_id = superhero.id \nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructors.name, constructors.nationality, SUM(results.points) as total_points\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN constructors ON results.constructorId = constructors.constructorId\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructors.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nJOIN races ON qualifying.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.year = 2008 AND circuits.name = 'Marina Bay Street Circuit' AND qualifying.position = 1 AND qualifying.q3 IS NOT NULL\nORDER BY qualifying.q3 ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, drivers.nationality, races.name AS first_race\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT driverId, COUNT(*) as accidents\nFROM results\nWHERE raceId IN (SELECT raceId FROM races WHERE name LIKE '%Canadian Grand Prix%') AND statusId = 3\nGROUP BY driverId\nORDER BY accidents DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname, MIN(lapTimes.time) as shortest_lap_time\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nGROUP BY drivers.driverId\nORDER BY shortest_lap_time ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, MIN(lapTimes.time) as lap_record\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name \nFROM superhero \nJOIN publisher ON superhero.publisher_id = publisher.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM publisher\nJOIN superhero ON publisher.id = superhero.publisher_id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT (SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,\n(SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_bad_heroes\nFROM superhero\nLIMIT 1\t----- bird -----\tsuperhero",
    "260": "SELECT CASE \n    WHEN (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) > \n         (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) \n    THEN 'Marvel Comics' \n    ELSE 'DC Comics' \nEND AS 'Publisher with more superheroes',\nABS((SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics'))) AS 'Difference in number of superheroes'\t----- bird -----\tsuperhero",
    "261": "SELECT id \nFROM publisher \nWHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT power_name \nFROM superpower \nWHERE id IN (\n    SELECT power_id \n    FROM hero_power \n    WHERE hero_id IN (\n        SELECT id \n        FROM superhero \n        WHERE gender_id = (\n            SELECT id \n            FROM gender \n            WHERE gender = 'Male'\n        )\n    )\n)\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE height_cm BETWEEN 170 AND 190 AND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE race.race = 'human' AND superhero.height_cm = 185\t----- bird -----\tsuperhero",
    "267": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) AS percentage\nFROM superhero\nWHERE height_cm BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Male' AND superhero.weight_kg > (SELECT AVG(superhero.weight_kg)*0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_id) \nFROM hero_power \nWHERE power_id = (SELECT id FROM superpower WHERE power_name = 'stealth')\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT colour.colour AS eyes, \ncolour_1.colour AS hair, \ncolour_2.colour AS skin_colour\nFROM superhero\nINNER JOIN gender ON superhero.gender_id = gender.id\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nINNER JOIN colour colour_1 ON superhero.hair_colour_id = colour_1.id\nINNER JOIN colour colour_2 ON superhero.skin_colour_id = colour_2.id\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT (CAST((SELECT COUNT(*) FROM superhero \n        JOIN gender ON superhero.gender_id = gender.id \n        JOIN colour ON superhero.skin_colour_id = colour.id \n        WHERE gender.gender = 'Female' AND colour.colour = 'Blue') AS FLOAT) / \n (SELECT COUNT(*) FROM superhero \n        JOIN gender ON superhero.gender_id = gender.id \n        WHERE gender.gender = 'Female')) * 100 AS percentage_blue_female_superheroes\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(power_id) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.superhero_name, superhero.height_cm \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id AND superhero.hair_colour_id = colour.id \nWHERE colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name \nFROM superhero \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "281": "SELECT (CAST((SELECT COUNT(*) FROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics') AS FLOAT) / \nCAST((SELECT COUNT(*) FROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female') AS FLOAT)) * 100 AS percentage\nFROM superhero\nLIMIT 1\t----- bird -----\tsuperhero",
    "282": "SELECT (SUM(weight_kg) WHERE full_name = 'Emil Blonsky') - (SUM(weight_kg) WHERE full_name = 'Charles Chandler') AS weight_difference FROM superhero\t----- bird -----\tsuperhero",
    "283": "SELECT superhero.superhero_name, AVG(superhero.height_cm) as average_height\nFROM superhero\nGROUP BY superhero.superhero_name\t----- bird -----\tsuperhero",
    "284": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nJOIN superhero ON hero_power.hero_id = superhero.id \nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name \nFROM publisher \nJOIN superhero ON publisher.id = superhero.publisher_id \nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) as percentage\nFROM superhero\nWHERE eye_colour_id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')) / \n(SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) AS ratio FROM superhero\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT (SUM(T1.eye_colour_id = 7) - SUM(T1.eye_colour_id = 1)) as difference\nFROM superhero as T1\nWHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN alignment ON superhero.alignment_id = alignment.id \nJOIN colour ON superhero.skin_colour_id = colour.id \nWHERE alignment.alignment = 'Bad' AND colour.colour = 'Green'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - \n(SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, MAX(Reputation) as Reputation\nFROM users\nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName \nFROM users \nWHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) \nFROM users \nWHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName \nFROM users \nJOIN posts ON users.Id = posts.OwnerUserId \nWHERE posts.Title = \"Eliciting priors from experts\"\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName\nFROM users\nJOIN posts ON users.Id = posts.LastEditorUserId\nWHERE posts.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) \nAND Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.Body\nFROM tags\nJOIN posts ON tags.ExcerptPostId = posts.Id\nWHERE tags.TagName = \"bayesian\"\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(posts.Score) \nFROM posts \nJOIN users \nON posts.OwnerUserId = users.Id \nWHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT (COUNT(posts.Id) * 100.0 / (SELECT COUNT(*) FROM posts WHERE Score > 5)) as Percentage\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Score > 5 AND users.Age > 65\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.FavoriteCount\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = 3025 AND comments.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE \n    WHEN posts.ClosedDate IS NULL THEN 'Yes' \n    ELSE 'No' \nEND AS 'Well-Finished'\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = 23853 AND comments.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT DisplayName \nFROM users \nJOIN votes ON users.Id = votes.UserId \nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT (COUNT(posts.Id) / COUNT(votes.Id)) AS Times\nFROM posts\nLEFT JOIN votes ON posts.OwnerUserId = votes.UserId\nWHERE posts.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount \nFROM posts \nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text \nFROM comments \nWHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName \nFROM users \nJOIN comments ON users.Id = comments.UserId \nWHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.DisplayName \nFROM users \nJOIN posts ON users.Id = posts.LastEditorUserId \nWHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nJOIN postHistory ON posts.Id = postHistory.PostId\nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND comments.UserId = postHistory.UserId\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName\nFROM users\nJOIN votes ON users.Id = votes.UserId\nJOIN posts ON votes.PostId = posts.Id\nWHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) as AverageViewCount\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.Tags LIKE '%<humor>%'\nGROUP BY p.Id\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT UserId \nFROM postHistory \nGROUP BY UserId, PostId \nHAVING COUNT(Id) = 1 \nAND UserId IN (\n    SELECT OwnerUserId \n    FROM posts \n    WHERE ViewCount >= 1000\n)\t----- bird -----\tcodebase_community",
    "322": "SELECT (\n    (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') - \n    (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011')\n) * 100.0 / \n(SELECT COUNT(*) FROM badges WHERE Name = 'Student') AS PercentageDifference\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(UpVotes) as AverageUpVotes, AVG(Age) as AverageAge\nFROM users\nWHERE Id IN (\n    SELECT OwnerUserId\n    FROM posts\n    GROUP BY OwnerUserId\n    HAVING COUNT(Id) > 10\n)\t----- bird -----\tcodebase_community",
    "324": "SELECT (CAST((SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010') AS FLOAT) / \nCAST((SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS FLOAT)) AS Ratio\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, MAX(SUM(ViewCount)) as Popularity\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY DisplayName\nORDER BY Popularity DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.TagName\nFROM tags\nJOIN posts ON tags.ExcerptPostId = posts.Id\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT (\n    SELECT COUNT(*) \n    FROM posts \n    INNER JOIN tags ON posts.Id = tags.ExcerptPostId \n    WHERE tags.TagName = 'r' AND posts.OwnerDisplayName = 'Community'\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM posts \n    WHERE OwnerDisplayName = 'Community'\n) AS percentage\t----- bird -----\tcodebase_community",
    "329": "SELECT (SUM(posts.ViewCount) WHERE users.DisplayName = 'Mornington') - (SUM(posts.ViewCount) WHERE users.DisplayName = 'Amos')\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(*) / 12 AS average_monthly_links\nFROM postLinks\nWHERE strftime('%Y', CreationDate) = '2010'\nAND PostId IN (\n    SELECT Id\n    FROM posts\n    WHERE AnswerCount <= 2\n)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(votes.CreationDate)\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE users.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT DisplayName \nFROM users \nWHERE Id = (\n    SELECT UserId \n    FROM badges \n    WHERE Name = 'Autobiographer' \n    ORDER BY Date \n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT users.Id)\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.Id, posts.Title\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky'\nORDER BY posts.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.Id, users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE strftime('%Y', posts.CreaionDate) = '2010'\nORDER BY posts.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT (CAST((SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Reputation > 1000 AND strftime('%Y', users.CreationDate) = '2011') AS FLOAT) / CAST((SELECT COUNT(*) FROM posts) AS FLOAT)) * 100 AS percentage\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount AS TotalViews, u.DisplayName AS UserName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (\n    SELECT Id \n    FROM posts \n    ORDER BY Score DESC \n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName\nFROM comments\nJOIN users ON comments.UserId = users.Id\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.Title = 'Analysing wind data with R'\nORDER BY comments.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT (\n    SELECT COUNT(*) \n    FROM posts \n    WHERE Score > 50 AND OwnerUserId = \n    (\n        SELECT Id \n        FROM users \n        ORDER BY Reputation DESC \n        LIMIT 1\n    )\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM posts \n    WHERE OwnerUserId = \n    (\n        SELECT Id \n        FROM users \n        ORDER BY Reputation DESC \n        LIMIT 1\n    )\n) AS percentage\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId \nFROM tags \nWHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes \nFROM users \nJOIN comments ON users.Id = comments.UserId \nWHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text \nFROM comments \nJOIN posts ON comments.PostId = posts.Id \nWHERE posts.ViewCount BETWEEN 100 AND 150 \nORDER BY comments.Score DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nWHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) \nAND Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT (COUNT(DISTINCT comments.UserId)* 100.0 / \n(SELECT COUNT(DISTINCT comments.UserId) FROM comments \nJOIN users ON comments.UserId = users.Id \nWHERE comments.Score BETWEEN 5 AND 10)) AS percentage\nFROM comments \nJOIN users ON comments.UserId = users.Id \nWHERE comments.Score BETWEEN 5 AND 10 AND users.UpVotes = 0\t----- bird -----\tcodebase_community",
    "346": "SELECT cards.name, cards.cardKingdomFoilId, cards.cardKingdomId \nFROM cards \nWHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT * \nFROM cards \nWHERE borderColor = 'borderless' \nAND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT cards.name \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types LIKE '%Artifact%' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE (cards.power = '*' OR cards.power IS NULL) \nAND legalities.format = 'commander' \nAND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, cards.artist, rulings.text, cards.hasContentWarning\nFROM cards\nLEFT JOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.uuid\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified') * 100.0 / (SELECT COUNT(*) FROM cards) AS percentage\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor \nFROM cards \nWHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format, legalities.status \nFROM legalities \nJOIN cards ON legalities.uuid = cards.uuid \nWHERE cards.name = \"Benalish Knight\"\t----- bird -----\tcard_games",
    "357": "SELECT (CAST((SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless') AS REAL) / CAST((SELECT COUNT(*) FROM cards) AS REAL)) * 100 AS percentage_of_borderless_cards\t----- bird -----\tcard_games",
    "358": "SELECT (CAST((SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'French' AND cards.isStorySpotlight = 1) AS REAL) / CAST((SELECT COUNT(*) FROM cards WHERE cards.isStorySpotlight = 1) AS REAL)) * 100 AS percentage\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = \"Summon - Angel\" \nAND subtypes NOT LIKE \"%Angel%\"\t----- bird -----\tcard_games",
    "360": "SELECT id \nFROM cards \nWHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT cards.name, foreign_data.language\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.originalType = 'Artifact' AND cards.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT id, \n(CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN isStorySpotlight = 1 THEN 1 ELSE 0 END) AS FLOAT)) * 100 AS percentage\nFROM cards\nGROUP BY id\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nWHERE language = 'Portuguese (Brasil)' \nAND setCode IN (SELECT code FROM sets WHERE block = 'Commander')\t----- bird -----\tcard_games",
    "366": "SELECT foreign_data.language, cards.types\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE foreign_data.language = 'German'\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') \nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nJOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name \nFROM foreign_data \nJOIN cards ON foreign_data.uuid = cards.uuid \nWHERE foreign_data.language = 'French' \nAND cards.type = 'Creature' \nAND cards.layout = 'normal' \nAND cards.borderColor = 'black' \nAND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE format = 'commander' AND status = 'legal')) as percentage\nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0\t----- bird -----\tcard_games",
    "372": "SELECT (CAST((SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'French' AND (cards.power IS NULL OR cards.power = '*')) AS REAL) / CAST((SELECT COUNT(*) FROM cards WHERE cards.power IS NULL OR cards.power = '*') AS REAL)) * 100 AS percentage\t----- bird -----\tcard_games",
    "373": "SELECT language \nFROM foreign_data \nWHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT (COUNT(*) * 100 / (SELECT COUNT(*) FROM cards WHERE isTextless = 1 AND layout = 'normal')) as proportion\nFROM cards\nWHERE isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT set_translations.language \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language \nFROM foreign_data \nWHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost \nFROM cards \nWHERE name IN ('Serra Angel', 'Shrine Keeper')\t----- bird -----\tcard_games",
    "378": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nJOIN cards ON sets.code = cards.setCode\nWHERE set_translations.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "379": "SELECT *\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nWHERE setCode IN (SELECT code FROM sets WHERE name = 'Hauptset Zehnte Edition') \nAND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation \nFROM set_translations \nWHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') \nAND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name \nFROM sets \nJOIN cards ON sets.code = cards.setCode \nWHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist \nFROM cards \nWHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') \nAND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards AS C \nJOIN sets AS S ON C.setCode = S.code \nWHERE S.name = 'Coldsnap' AND C.convertedManaCost > 5 AND (C.power = '*' OR C.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT flavorText \nFROM foreign_data \nWHERE language = 'Italian' AND name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.name = 'Coldsnap' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian' AND cards.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE sets.name = 'Coldsnap'\n)\t----- bird -----\tcard_games",
    "391": "SELECT (SELECT COUNT(*) FROM cards WHERE convertedManaCost = 7 AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')) AS percentage\t----- bird -----\tcard_games",
    "392": "SELECT (\n    SELECT COUNT(*) \n    FROM cards \n    WHERE cardKingdomFoilId IS NOT NULL \n    AND cardKingdomId IS NOT NULL \n    AND setCode = 'Coldsnap'\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM cards \n    WHERE setCode = 'Coldsnap'\n) AS percentage_of_incredibly_powerful_cards_in_Coldsnap\t----- bird -----\tcard_games",
    "393": "SELECT format, COUNT(status) AS BannedCount, GROUP_CONCAT(name) AS BannedCards\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY BannedCount DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.name NOT IN (SELECT sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language LIKE '%Japanese%') \nAND set_translations.language = 'Korean'\t----- bird -----\tcard_games",
    "397": "SELECT cards.frameVersion, cards.artist, legalities.status\nFROM cards\nLEFT JOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.artist = 'Allen Williams' OR legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(COUNT(atom.element)) \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE atom.element = 'o' AND bond.bond_type = '-' \nGROUP BY atom.molecule_id\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded_count) \nFROM (\n  SELECT molecule_id, COUNT(bond_id) as single_bonded_count\n  FROM (\n    SELECT molecule.molecule_id, bond.bond_id\n    FROM molecule\n    JOIN bond ON molecule.molecule_id = bond.molecule_id\n    WHERE molecule.label = '+' AND bond.bond_type = '-'\n  ) \n  GROUP BY molecule_id\n)\t----- bird -----\ttoxicology",
    "401": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT (\n  SELECT COUNT(*) \n  FROM `atom` \n  INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` \n  INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` \n  WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = '='\n) * 100.0 / \n(\n  SELECT COUNT(*) \n  FROM `atom` \n  INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` \n  INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` \n  WHERE `bond`.`bond_type` = '='\n) AS percentage_of_carbon_in_double_bond_molecules\t----- bird -----\ttoxicology",
    "403": "SELECT `atom`.`element`\nFROM `connected`\nJOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id`\nWHERE `connected`.`bond_id` = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT `molecule`.`label`\nFROM `molecule`\nJOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`\nWHERE `atom`.`element` = 'h'\nGROUP BY `molecule`.`label`\nORDER BY COUNT(`molecule`.`label`) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(*) as count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY count\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') \nOR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE a.element IN ('i', 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT 100 - (SELECT COUNT(DISTINCT atom.atom_id) * 100.0 / (SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule WHERE label = '+') \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.label = '+' AND atom.element = 'f') AS percentage_without_fluorine\nFROM molecule\nWHERE label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT (DIVIDE(SUM(bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND((SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '=' AND `molecule_id` = 'TR008') * 100.0 / (SELECT COUNT(*) FROM `bond` WHERE `molecule_id` = 'TR008'), 5) AS percentage FROM `bond` LIMIT 1\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SELECT COUNT(*) FROM `molecule` WHERE `label` = '+') * 100.0 / (SELECT COUNT(*) FROM `molecule`), 3) AS percentage FROM `molecule`\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND((SELECT COUNT(*) FROM `atom` WHERE `element` = 'h' AND `molecule_id` = 'TR206') * 100.0 / (SELECT COUNT(*) FROM `atom` WHERE `molecule_id` = 'TR206'), 4) AS percentage\t----- bird -----\ttoxicology",
    "415": "SELECT `atom`.`element`, `molecule`.`label`\nFROM `atom`\nJOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id`\nWHERE `molecule`.`molecule_id` = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond.bond_type, molecule.label\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.molecule_id = 'TR010'\nGROUP BY bond.bond_type\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT molecule.molecule_id\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nWHERE bond.bond_type = '-' AND molecule.label = '-'\nGROUP BY molecule.molecule_id\nORDER BY molecule.molecule_id ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT connected.bond_id) \nFROM connected \nJOIN atom ON connected.atom_id = atom.atom_id \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12') \nAND bond.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) \nFROM `connected` \nWHERE `atom_id` LIKE 'TR%_19' OR `atom_id2` LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT `element` \nFROM `atom` \nWHERE `molecule_id` = \"TR004\"\t----- bird -----\ttoxicology",
    "422": "SELECT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT bond.bond_id, bond.bond_type\nFROM bond\nJOIN connected AS c1 ON bond.bond_id = c1.bond_id\nJOIN atom AS a1 ON c1.atom_id = a1.atom_id\nJOIN connected AS c2 ON bond.bond_id = c2.bond_id\nJOIN atom AS a2 ON c2.atom_id = a2.atom_id\nWHERE a1.element = 'p' AND a2.element = 'n'\t----- bird -----\ttoxicology",
    "424": "SELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) \nFROM (\n  SELECT COUNT(c.bond_id) as bond_count\n  FROM atom a\n  JOIN connected c ON a.atom_id = c.atom_id\n  WHERE a.element = 'i'\n  GROUP BY a.atom_id\n)\t----- bird -----\ttoxicology",
    "426": "SELECT `element` \nFROM `atom` \nWHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected`)\t----- bird -----\ttoxicology",
    "427": "SELECT a.atom_id\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT element \nFROM atom \nWHERE atom_id IN (\n  SELECT atom_id \n  FROM connected \n  WHERE bond_id = 'TR144_8_19'\n)\t----- bird -----\ttoxicology",
    "429": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND((SELECT COUNT(*) FROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nWHERE m.label = '+' AND b.bond_type = '-') * 100.0 / \n(SELECT COUNT(*) FROM bond WHERE bond_type = '-'), 5) AS proportion FROM molecule\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT (DIVIDE(SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END), COUNT(atom.atom_id))) * 100 as percent\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT (DIVIDE(SUM(element = 'cl'), COUNT(molecule_id))) as percentage \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT element, COUNT(*) as count\nFROM atom\nWHERE molecule_id IN (\n  SELECT molecule_id\n  FROM molecule\n  WHERE label = '+'\n) AND substr(atom_id, 7, 1) = '4'\nGROUP BY element\t----- bird -----\ttoxicology",
    "436": "SELECT molecule.label, \n(SUM(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) / CAST(COUNT(atom.element) AS FLOAT)) AS ratio\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT `molecule`.`molecule_id`, `molecule`.`label`\nFROM `molecule`\nJOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`\nWHERE `molecule`.`label` = '-'\nGROUP BY `molecule`.`molecule_id`\nHAVING COUNT(`atom`.`atom_id`) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE AvgScrMath > 400 AND Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) as HighestEligibleFreeRate\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE NumGE1500 / NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.School, s.CharterNum, sat.AvgScrWrite\nFROM schools s\nJOIN satscores sat ON s.CDSCode = sat.cds\nWHERE sat.AvgScrWrite > 499 AND s.CharterNum IS NOT NULL\nORDER BY sat.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT `School Name`, `Street`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE ABS(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.School\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores sat ON s.CDSCode = sat.cds\nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1\nAND sat.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.School, schools.FundingType\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Riverside' AND satscores.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT `School Name`, `Street`, `City`, `State`, `Zip`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `County Name` = 'Monterey' AND `High Grade` = '12' AND `FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, s.Phone, sat.AvgScrWrite\nFROM schools s\nLEFT JOIN satscores sat ON s.CDSCode = sat.cds\nWHERE s.OpenDate > '1991-12-31' OR (s.ClosedDate IS NOT NULL AND s.ClosedDate < '2000-01-01')\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCTYPE\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.FundingType = 'Locally Funded'\nGROUP BY s.School\nHAVING AVG(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n    FROM frpm f2\n    JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n    WHERE s2.FundingType = 'Locally Funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, `Enrollment (K-12)`, `Free Meal Count (K-12)`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) as `Eligible Free Rate`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT `School Name`, `FRPM Count (K-12)`, `Enrollment (K-12)`, (`FRPM Count (K-12)` / `Enrollment (K-12)`) as `Eligible FRPM Rate`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.SOC = '66' AND `Enrollment (K-12)` > 0\nORDER BY `FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT Street, City, Zip, State\nFROM schools\nWHERE CDSCode = (\n    SELECT cds\n    FROM satscores\n    WHERE NumTstTakr != 0\n    ORDER BY NumGE1500 / NumTstTakr ASC\n    LIMIT 1\n)\t----- bird -----\tcalifornia_schools",
    "451": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3\nFROM schools\nWHERE CDSCode = (\n    SELECT cds\n    FROM satscores\n    ORDER BY NumGE1500 DESC\n    LIMIT 1\n)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT avg(satscores.NumTstTakr) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT Phone \nFROM schools \nWHERE CDSCode = (\n    SELECT cds \n    FROM satscores \n    WHERE dname = 'Fresno Unified' \n    ORDER BY AvgScrRead ASC \n    LIMIT 1\n)\t----- bird -----\tcalifornia_schools",
    "454": "SELECT sname\nFROM\n(\n    SELECT sname, cname, AvgScrRead,\n    ROW_NUMBER() OVER(PARTITION BY cname ORDER BY AvgScrRead DESC) as rank\n    FROM satscores\n    JOIN schools ON satscores.cds = schools.CDSCode\n    WHERE Virtual = 'F'\n)\nWHERE rank <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT schools.School, AVG(satscores.AvgScrWrite) as Average_Writing_Score\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich'\nGROUP BY schools.School\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.School, s.enroll12\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE sc.DOC = 31\nORDER BY s.enroll12 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*)/12 as 'Monthly Average'\nFROM schools\nWHERE County = 'Alameda' AND DOC = '52' AND strftime('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT (SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange') / \n(SELECT COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange') AS Ratio\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.School, s.Street\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nORDER BY ss.AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools \nJOIN frpm ON schools.CDSCode = frpm.CDSCode \nWHERE schools.County = 'Los Angeles' \nAND schools.Charter = 0 \nAND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `Academic Year` = '2014-2015' AND City = 'Fremont' AND EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.School, frpm.`Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Los Angeles' AND schools.GSoffered = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) as NumberOfSchools\nFROM schools\nWHERE (County = 'San Diego' OR County = 'Santa Barbara') AND Virtual = 'F'\nGROUP BY County\nORDER BY NumberOfSchools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT City, COUNT(*) as NumberOfSchools\nFROM schools\nWHERE Magnet = 1 AND GSoffered = 'K-8' AND CDSCode IN \n    (SELECT CDSCode FROM frpm WHERE `NSLP Provision Status` = 'Multiple Provision Types')\nGROUP BY City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT `District Code`, (`Free Meal Count (K-12)` / `Enrollment (K-12)` * 100) as `Percent (%) Eligible Free (K-12)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino' \nAND District = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND DOC = '54' \nAND SOC = '62' \nAND StatusType = 'Active'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nWHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(DISTINCT district_id) \nFROM district \nJOIN client ON district.district_id = client.district_id \nWHERE A11 > 6000 AND A11 < 10000 AND gender = 'F'\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' AND district.A3 = 'North Bohemia' AND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT The question is quite complex and requires multiple steps to solve. Here is the SQLite query:\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.birth_date = (SELECT MAX(birth_date) FROM client)\nAND district.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT loan.account_id, loan.amount, account.frequency\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.status = 'approved' AND loan.date BETWEEN '1997-01-01' AND '1997-12-31' AND account.frequency = 'POPLATEK TYDNE'\nORDER BY loan.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT loan.account_id, loan.amount, account.date\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.duration > 12 AND loan.amount = (SELECT MAX(amount) FROM loan WHERE duration > 12) AND strftime('%Y', account.date) = '1993'\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND dist.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT district.A2\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = \n    (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1)) * 100.0 / \n    (SELECT COUNT(*) FROM client WHERE district_id = \n    (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1)) AS percentage_of_male_clients\t----- bird -----\tfinancial",
    "478": "SELECT ((t2.balance - t1.balance) / t1.balance) * 100 as increase_rate\nFROM \n    (SELECT account_id, balance \n     FROM trans \n     WHERE date = '1993-03-22') as t1\nJOIN \n    (SELECT account_id, balance \n     FROM trans \n     WHERE date = '1998-12-27') as t2\nON t1.account_id = t2.account_id\nWHERE t1.account_id = \n    (SELECT account_id \n     FROM loan \n     WHERE date = '1993-07-05'\n     ORDER BY date \n     LIMIT 1)\t----- bird -----\tfinancial",
    "479": "SELECT (SELECT SUM(amount) FROM loan WHERE status = 'A') / (SELECT SUM(amount) FROM loan) * 100 AS percentage_of_loan_paid_no_issue\t----- bird -----\tfinancial",
    "480": "SELECT (SELECT COUNT(*) FROM loan WHERE amount < 100000 AND status = 'C') * 100.0 / (SELECT COUNT(*) FROM loan WHERE amount < 100000) AS percentage FROM loan LIMIT 1\t----- bird -----\tfinancial",
    "481": "SELECT district.A2 as district, district.A3 as state, ((district.A13 - district.A12) / district.A12) * 100 as unemployment_rate_increment\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT district.A2, COUNT(*) as female_account_holders\nFROM district\nJOIN client ON district.district_id = client.district_id\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nWHERE client.gender = 'F' AND disp.type = 'OWNER'\nGROUP BY district.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan \nJOIN account ON loan.account_id = account.account_id \nWHERE loan.amount >= 250000 \nAND account.frequency = 'POPLATEK MESICNE' \nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.A2 = '1' AND loan.status = 'C'\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) \nFROM client \nWHERE gender = 'M' AND district_id = (\n    SELECT district_id \n    FROM district \n    WHERE A15 = (\n        SELECT MAX(A15) \n        FROM district \n        WHERE A15 NOT IN (\n            SELECT MAX(A15) \n            FROM district\n        )\n    )\n)\t----- bird -----\tfinancial",
    "486": "SELECT district.A2 as district_name, trans.amount as withdrawal_amount\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%'\nORDER BY trans.amount DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE loan.status = 'C' AND district.A2 = '1'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) \nFROM client \nWHERE gender = 'M' AND district_id = (\n    SELECT district_id \n    FROM district \n    WHERE A15 = (\n        SELECT MAX(A15) \n        FROM district \n        WHERE A15 < (\n            SELECT MAX(A15) \n            FROM district\n        )\n    )\n)\t----- bird -----\tfinancial",
    "489": "SELECT disp.client_id\nFROM disp\nJOIN trans ON disp.account_id = trans.account_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE trans.operation = 'VYBER KARTOU' AND trans.amount < (SELECT AVG(amount) FROM trans WHERE date LIKE '1998%') AND trans.date LIKE '1998%' AND card.type = 'credit'\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT disp.type, district.A11\nFROM disp\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE disp.type != 'OWNER' AND district.A11 > 8000 AND district.A11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT avg(A15) as average_crimes\nFROM district\nWHERE A15 > 4000 AND district_id IN (\n    SELECT district_id\n    FROM account\n    WHERE date >= '1997-01-01'\n)\t----- bird -----\tfinancial",
    "492": "SELECT *\nFROM trans\nJOIN disp ON trans.account_id = disp.account_id\nWHERE disp.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT (SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) AS percentage_women\t----- bird -----\tfinancial",
    "494": "SELECT ((SUM(l.amount) WHERE c.gender = 'M' AND strftime('%Y', l.date) = '1997') - (SUM(l.amount) WHERE c.gender = 'M' AND strftime('%Y', l.date) = '1996')) / (SUM(l.amount) WHERE c.gender = 'M' AND strftime('%Y', l.date) = '1996') * 100 AS growth_rate\nFROM loan l\nJOIN disp d ON l.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'M' AND (strftime('%Y', l.date) = '1996' OR strftime('%Y', l.date) = '1997')\t----- bird -----\tfinancial",
    "495": "SELECT frequency, k_symbol\nFROM account\nJOIN trans ON account.account_id = trans.account_id\nWHERE account.account_id = 3 AND trans.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT (\n    SELECT COUNT(*) \n    FROM client \n    WHERE gender = 'M' \n    AND client_id IN (\n        SELECT disp.client_id \n        FROM disp \n        JOIN account ON disp.account_id = account.account_id \n        WHERE account.frequency = 'POPLATEK TYDNE'\n    )\n) * 100.0 / \n(\n    SELECT COUNT(*) \n    FROM client \n    WHERE client_id IN (\n        SELECT disp.client_id \n        FROM disp \n        JOIN account ON disp.account_id = account.account_id \n        WHERE account.frequency = 'POPLATEK TYDNE'\n    )\n) AS percentage_of_male_clients_requesting_weekly_statements\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT avg(amount) \nFROM loan \nWHERE status = 'C' \nAND account_id IN (\n    SELECT account_id \n    FROM account \n    WHERE frequency = 'POPLATEK PO OBRATU'\n)\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, (strftime('%Y', 'now') - strftime('%Y', client.birth_date)) as age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}