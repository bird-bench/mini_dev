{
    "0": "SELECT \n    SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS ratio\nFROM \n    customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customers.CustomerID\nFROM customers\nINNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE yearmonth.Date BETWEEN '201201' AND '201212'\nAND customers.Segment = 'LAM'\nORDER BY yearmonth.Consumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(yearmonth.Consumption) / 12 AS Average_Monthly_Consumption\nFROM yearmonth\nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND yearmonth.Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM yearmonth y\nINNER JOIN customers c ON y.CustomerID = c.CustomerID\nWHERE y.Date >= '201201' AND y.Date <= '201212'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(yearmonth.Date, 1, 4) AS Year\nFROM yearmonth\nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'CZK'\nGROUP BY SUBSTR(yearmonth.Date, 1, 4)\nORDER BY SUM(yearmonth.Consumption) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT substr(yearmonth.Date, 5, 2) AS PeakMonth\nFROM yearmonth\nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME'\nAND yearmonth.Date BETWEEN '201301' AND '201312'\nORDER BY yearmonth.Consumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    AVG(CASE WHEN c.Segment = 'SME' THEN ym.Consumption END) - AVG(CASE WHEN c.Segment = 'LAM' THEN ym.Consumption END) AS SME_LAM_Diff,\n    AVG(CASE WHEN c.Segment = 'LAM' THEN ym.Consumption END) - AVG(CASE WHEN c.Segment = 'KAM' THEN ym.Consumption END) AS LAM_KAM_Diff,\n    AVG(CASE WHEN c.Segment = 'KAM' THEN ym.Consumption END) - AVG(CASE WHEN c.Segment = 'SME' THEN ym.Consumption END) AS KAM_SME_Diff\nFROM yearmonth ym\nINNER JOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE ym.Date BETWEEN '201301' AND '201312'\nAND c.Currency = 'CZK'\nGROUP BY c.Segment\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    c.Segment, \n    ((SUM(CASE WHEN strftime('%Y', ym.Date) = '2013' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN strftime('%Y', ym.Date) = '2012' THEN ym.Consumption ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', ym.Date) = '2012' THEN ym.Consumption ELSE 0 END)) * 100 AS Percentage_Increase\nFROM \n    yearmonth ym\nINNER JOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR' AND (strftime('%Y', ym.Date) = '2012' OR strftime('%Y', ym.Date) = '2013')\nGROUP BY \n    c.Segment\nORDER BY \n    Percentage_Increase DESC\nLIMIT 1\nUNION\nSELECT \n    c.Segment, \n    ((SUM(CASE WHEN strftime('%Y', ym.Date) = '2013' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN strftime('%Y', ym.Date) = '2012' THEN ym.Consumption ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', ym.Date) = '2012' THEN ym.Consumption ELSE 0 END)) * 100 AS Percentage_Increase\nFROM \n    yearmonth ym\nINNER JOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR' AND (strftime('%Y', ym.Date) = '2012' OR strftime('%Y', ym.Date) = '2013')\nGROUP BY \n    c.Segment\nORDER BY \n    Percentage_Increase\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(yearmonth.Consumption) AS total_consumption\nFROM yearmonth\nWHERE yearmonth.CustomerID = 6 AND yearmonth.Date >= '201308' AND yearmonth.Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS difference\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - \n    (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Amount_of_more_SMEs\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST(COUNT(CASE WHEN y.Consumption > 46.73 THEN 1 END) AS REAL) * 100 / COUNT(*) AS Percentage\nFROM customers c\nINNER JOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(COUNT(DISTINCT CASE WHEN yearmonth.Consumption > 528.3 THEN yearmonth.CustomerID END) AS REAL) * 100 / COUNT(DISTINCT yearmonth.CustomerID) AS percentage\nFROM yearmonth\nWHERE yearmonth.Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(yearmonth.Consumption) AS HighestConsumption\nFROM yearmonth\nWHERE substr(yearmonth.Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT products.Description\nFROM products\nINNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID\nINNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE yearmonth.Date = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gasstations.Country\nFROM gasstations\nINNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nWHERE strftime('%Y%m', transactions_1k.Date) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT yearmonth.CustomerID) \nFROM customers \nINNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID \nWHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT products.Description\nFROM transactions_1k\nINNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nINNER JOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT transactions_1k.Time\nFROM transactions_1k\nINNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k \nINNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT customers.Currency\nFROM transactions_1k\nINNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Time = '16:25:00' AND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment\nFROM transactions_1k\nINNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k \nINNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE transactions_1k.Date = '2012-08-26' \nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00' \nAND gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT customers.Currency\nFROM customers\nINNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(COUNT(DISTINCT CASE WHEN c.Currency = 'EUR' THEN t.CustomerID END) AS REAL) * 100 / COUNT(DISTINCT t.CustomerID) AS percentage\nFROM transactions_1k t\nINNER JOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END)) / SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END) * 100 AS consumption_decrease_rate\nFROM transactions_1k t\nINNER JOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE t.Date = '2012-08-25' AND t.Amount * t.Price = 634.8\nAND (ym.Date LIKE '2012%' OR ym.Date LIKE '2013%')\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage\nFROM gasstations\nWHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Price * Amount) AS TotalSpent\nFROM transactions_1k\nWHERE CustomerID = 38508 AND Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, CAST(SUM(t.Price) / SUM(t.Amount) AS REAL) AS average_price, c.Currency\nFROM transactions_1k t\nINNER JOIN customers c ON t.CustomerID = c.CustomerID\nGROUP BY t.CustomerID\nORDER BY SUM(t.Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.Consumption\nFROM yearmonth ym\nINNER JOIN (\n    SELECT t.CustomerID\n    FROM transactions_1k t\n    WHERE t.ProductID = 5 AND (t.Price / t.Amount) > 29\n) AS filtered_customers ON ym.CustomerID = filtered_customers.CustomerID\nWHERE ym.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(DISTINCT attendance.link_to_member) \nFROM attendance \nINNER JOIN event ON attendance.link_to_event = event.event_id \nINNER JOIN member ON attendance.link_to_member = member.member_id \nWHERE event.event_name = 'Women''s Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT a.link_to_event) \nFROM attendance a \nINNER JOIN event e ON a.link_to_event = e.event_id \nWHERE e.type = 'Meeting' \nGROUP BY a.link_to_event \nHAVING COUNT(a.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT event.event_name\nFROM event\nINNER JOIN attendance ON event.event_id = attendance.link_to_event\nGROUP BY event.event_id\nHAVING COUNT(attendance.link_to_member) > 20 AND event.type != 'Fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS amount\nFROM income\nINNER JOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nINNER JOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.approved\nFROM expense\nINNER JOIN budget ON expense.link_to_budget = budget.budget_id\nINNER JOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(expense.cost) AS average_cost\nFROM expense\nINNER JOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND (expense.expense_date LIKE '2019-09%' OR expense.expense_date LIKE '2019-10%')\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SELECT SUM(expense.cost) \n     FROM expense \n     INNER JOIN budget ON expense.link_to_budget = budget.budget_id \n     INNER JOIN event ON budget.link_to_event = event.event_id \n     WHERE event.event_date LIKE '2019%') \n    - \n    (SELECT SUM(expense.cost) \n     FROM expense \n     INNER JOIN budget ON expense.link_to_budget = budget.budget_id \n     INNER JOIN event ON budget.link_to_event = event.event_id \n     WHERE event.event_date LIKE '2020%') AS difference\t----- bird -----\tstudent_club",
    "39": "SELECT income.notes\nFROM income\nWHERE income.source = 'Fundraising' AND income.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT member.phone\nFROM member\nWHERE member.first_name = 'Carlo' AND member.last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT budget.event_status\nFROM expense\nINNER JOIN budget ON expense.link_to_budget = budget.budget_id\nWHERE expense.expense_description = 'Post Cards, Posters'\nAND expense.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) AS count\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT income.date_received\nFROM income\nINNER JOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) / SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS times\nFROM budget b\nINNER JOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT attendance.link_to_member) AS members_attended\nFROM attendance\nINNER JOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name\nFROM event\nINNER JOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nORDER BY CAST(budget.spent AS REAL) / CAST(budget.amount AS REAL) DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_for_food FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM attendance a\nINNER JOIN member m ON a.link_to_member = m.member_id\nGROUP BY a.link_to_member\nHAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM expense e\nINNER JOIN budget b ON e.link_to_budget = b.budget_id\nINNER JOIN event ev ON b.link_to_event = ev.event_id\nINNER JOIN member m ON e.link_to_member = m.member_id\nWHERE ev.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name\nFROM expense\nINNER JOIN budget ON expense.link_to_budget = budget.budget_id\nINNER JOIN event ON budget.link_to_event = event.event_id\nGROUP BY event.event_name\nORDER BY MIN(expense.cost) ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT \n    (SUM(CASE WHEN event.event_name = 'Yearly Kickoff' THEN expense.cost ELSE 0 END) / SUM(expense.cost)) * 100 AS percentage\nFROM \n    expense\nINNER JOIN \n    budget ON expense.link_to_budget = budget.budget_id\nINNER JOIN \n    event ON budget.link_to_event = event.event_id\t----- bird -----\tstudent_club",
    "59": "SELECT income.source\nFROM income\nWHERE income.date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY income.source\nORDER BY SUM(income.amount) DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) AS total_members\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nINNER JOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT COUNT(*) \nFROM attendance \nINNER JOIN member ON attendance.link_to_member = member.member_id \nINNER JOIN event ON attendance.link_to_event = event.event_id \nWHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nINNER JOIN event ON expense.link_to_budget = event.event_id\nWHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name\nFROM event\nINNER JOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed' AND budget.remaining < 0\nORDER BY budget.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) AS total_value\nFROM expense\nINNER JOIN budget ON expense.link_to_budget = budget.budget_id\nINNER JOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'true'\nGROUP BY expense.expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT budget.category, SUM(budget.amount) AS total_amount\nFROM budget\nINNER JOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY budget.category\nORDER BY total_amount ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM expense e\nINNER JOIN member m ON e.link_to_member = m.member_id\nWHERE e.link_to_member = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense.expense_description\nFROM expense\nINNER JOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT DISTINCT budget.category\nFROM event\nINNER JOIN budget ON event.event_id = budget.link_to_event\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(COUNT(CASE WHEN income.amount = 50 THEN 1 END) AS REAL) * 100 / COUNT(DISTINCT member.member_id) AS percentage\nFROM member\nINNER JOIN income ON member.member_id = income.link_to_member\nWHERE member.t_shirt_size = 'Medium' AND member.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT event.event_name\nFROM event\nWHERE event.type = 'Game' \nAND event.status = 'Closed' \nAND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number\nFROM member m\nINNER JOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nHAVING MIN(e.cost) > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM expense e\nINNER JOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount\nFROM income i\nINNER JOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "78": "SELECT \n    CASE \n        WHEN COUNT(CASE WHEN Admission = '+' THEN 1 END) > COUNT(CASE WHEN Admission = '-' THEN 1 END) THEN 'in-patient'\n        WHEN COUNT(CASE WHEN Admission = '+' THEN 1 END) < COUNT(CASE WHEN Admission = '-' THEN 1 END) THEN 'outpatient'\n        ELSE 'equal'\n    END AS More_Patients,\n    (CAST(COUNT(CASE WHEN Admission = '+' THEN 1 END) AS REAL) / COUNT(CASE WHEN Admission = '-' THEN 1 END) * 100) - 100 AS Deviation_Percentage\nFROM \n    Patient\nWHERE \n    SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(SUM(CASE WHEN strftime('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 AS percentage\nFROM Patient\nWHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS ratio\nFROM Patient\nWHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.\"lactate dehydrogenase\" > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Examination.ID, CAST(strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) AS INTEGER) AS age\nFROM Examination\nINNER JOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nINNER JOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND strftime('%Y', Description) = '1997' \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nINNER JOIN Patient ON Examination.ID = Patient.ID \nWHERE Examination.Thrombosis = 1 \nAND Examination.`Examination Date` LIKE '1997%' \nAND Patient.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Examination.Symptoms\nFROM Examination\nINNER JOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.Symptoms IS NOT NULL\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Date, CAST(strftime('%Y', Laboratory.Date) - strftime('%Y', Patient.Birthday) AS INTEGER) AS age\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Patient.Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(CASE WHEN SEX = 'M' AND \"uric acid\" <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'F' AND \"uric acid\" <= 6.5 THEN 1 ELSE 0 END) AS ratio\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nINNER JOIN Patient ON Examination.ID = Patient.ID \nWHERE strftime('%Y', Examination.`Examination Date`) BETWEEN '1990' AND '1993' \nAND strftime('%Y', Patient.Birthday) < '1972';\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    strftime('%Y', Examination.`Examination Date`) - strftime('%Y', Patient.Birthday) AS Age, \n    Examination.Diagnosis \nFROM \n    Laboratory \nINNER JOIN \n    Examination ON Laboratory.ID = Examination.ID \nINNER JOIN \n    Patient ON Examination.ID = Patient.ID \nORDER BY \n    Laboratory.HGB DESC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Examination.ID\nFROM Patient\nINNER JOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.Diagnosis = 'SLE'\nAND Patient.Description = '1994-02-19'\nAND Examination.Diagnosis = 'aCL IgM'\nAND Examination.Description = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT CAST((SUM(CASE WHEN Laboratory.Date LIKE '1981-11-%' THEN Laboratory.`T-CHO` ELSE 0 END) - SUM(CASE WHEN Laboratory.Date LIKE '1981-12-%' THEN Laboratory.`T-CHO` ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN Laboratory.Date LIKE '1981-12-%' THEN Laboratory.`T-CHO` ELSE 0 END) AS decrease_rate\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Examination ON Patient.ID = Examination.ID \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' \nAND Laboratory.GPT > 30 \nAND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nWHERE Thrombosis = 2 \nAND ANA = 'S' \nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT DISTINCT Patient.ID\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.\"total bilirubin\" < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(Laboratory.ALB) AS average_albumin_level\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nLEFT JOIN Examination ON Patient.ID = Examination.ID \nWHERE Patient.SEX = 'F' AND (Examination.Diagnosis = 'APS' OR Patient.Diagnosis = 'APS')\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0) / COUNT(*) AS percentage\nFROM Patient\nWHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT Patient.ID\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 57266 AND ((Patient.SEX = 'M' AND Laboratory.\"uric acid\" > 8.0) OR (Patient.SEX = 'F' AND Laboratory.\"uric acid\" > 6.5))\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT Patient.ID\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.Diagnosis\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Patient.ID) AS Patient_IDs\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.\"total bilirubin\" >= 2.0\nGROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) AS average_age\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.TG >= 200 \nAND strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.Birthday BETWEEN '1936-01-01' AND '1956-12-31' \nAND Patient.SEX = 'M' \nAND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, CAST(STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Patient.Birthday) AS INTEGER) AS age\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.T-CHO < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, p.Diagnosis, CAST(strftime('%Y', 'now') - strftime('%Y', p.Birthday) AS INTEGER) AS age\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.Red_blood_cell < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nINNER JOIN Examination ON Patient.ID = Examination.ID\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.Birthday ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, CAST(STRFTIME('%Y', 'now') - STRFTIME('%Y', Patient.Birthday) AS INTEGER) AS age\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.HCT >= 52\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n(SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) - \n(SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS difference\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT DISTINCT Patient.ID\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE strftime('%Y', Laboratory.Date) = '1984'\nAND Laboratory.PLT BETWEEN 100 AND 400\nAND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 50\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT CAST(COUNT(DISTINCT CASE WHEN p.SEX = 'F' THEN p.ID END) AS REAL) / COUNT(DISTINCT p.ID) * 100 AS percentage\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE strftime('%Y', 'now') - strftime('%Y', p.Birthday) > 55\nAND l.PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND Laboratory.WBC > 3.5 \nAND Laboratory.WBC < 9.0 \nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT \"Laboratory.ID\") \nFROM Laboratory \nWHERE \"Laboratory.IGG\" >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nINNER JOIN Laboratory ON Examination.ID = Laboratory.ID \nWHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Laboratory \nINNER JOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 AND Patient.`First Date` > '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Patient.Diagnosis, COUNT(Patient.Diagnosis) AS Diagnosis_Count\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.\"Ig M\" <= 40 OR Laboratory.\"Ig M\" >= 400\nGROUP BY Patient.Diagnosis\nORDER BY Diagnosis_Count DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CRP = '+' AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CRE >= 1.5 \nAND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.RNP IN ('-', '+-') AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nINNER JOIN Laboratory ON Examination.ID = Laboratory.ID \nWHERE Laboratory.SM IN ('negative', '0') AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nLEFT JOIN Examination ON Patient.ID = Examination.ID \nWHERE Laboratory.SC170 IN ('negative', '0') \nAND Patient.SEX = 'F' \nAND Examination.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CENTROMEA IN('-', '+-') \nAND Laboratory.SSB IN('-', '+-') \nAND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT Patient.Birthday\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GOT >= 60\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT Examination.ID) \nFROM Examination \nINNER JOIN Laboratory ON Examination.ID = Laboratory.ID \nWHERE Laboratory.CPK < 250 \nAND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name \nFROM Match \nINNER JOIN League ON Match.league_id = League.id \nWHERE Match.season = '2015/2016' \nGROUP BY League.name \nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nINNER JOIN League ON Match.league_id = League.id\nINNER JOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name \nFROM Match \nINNER JOIN League ON Match.league_id = League.id \nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal \nGROUP BY League.id \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT \n    Player.birthday, \n    (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', Player.birthday)) AS age\nFROM \n    Player\nINNER JOIN \n    Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE \n    Player_Attributes.sprint_speed >= 97 \n    AND \n    Player_Attributes.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) AS total_matches\nFROM League\nINNER JOIN Match ON League.id = Match.league_id\nGROUP BY League.id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT DISTINCT Team.team_fifa_api_id\nFROM Team_Attributes\nINNER JOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id\nWHERE Team_Attributes.buildUpPlaySpeed > 50 AND Team_Attributes.buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT Team.team_long_name\nFROM Team\nINNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE strftime('%Y', Team_Attributes.date) = '2012'\nAND Team_Attributes.buildUpPlayPassing > (\n    SELECT AVG(Team_Attributes.buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE strftime('%Y', Team_Attributes.date) = '2012'\n)\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_fifa_api_id) AS percentage_of_left_footed_players\nFROM Player\nWHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992';\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(Player_Attributes.long_shots) AS average_long_shots\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_api_id\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name \nFROM Match M \nINNER JOIN League L ON M.league_id = L.id \nWHERE M.season = '2009/2010' \nGROUP BY L.id \nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT Player.player_name \nFROM Player \nWHERE substr(Player.birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT Player_Attributes.overall_rating\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(Match.home_team_goal) AS average_home_team_goal\nFROM Match\nINNER JOIN Country ON Match.country_id = Country.id\nWHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT MAX(average_finishing) AS highest_average_finishing\nFROM (\n    SELECT AVG(finishing) AS average_finishing\n    FROM Player_Attributes\n    INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\n    WHERE Player.height IN (\n        SELECT MAX(height) FROM Player\n        UNION\n        SELECT MIN(height) FROM Player\n    )\n    GROUP BY Player.player_api_id\n) AS subquery\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.height > 170\nAND strftime('%Y', Player_Attributes.date) >= '2010' AND strftime('%Y', Player_Attributes.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    AVG(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control ELSE NULL END) - \n    AVG(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control ELSE NULL END) AS difference\nFROM \n    Player_Attributes pa\nINNER JOIN \n    Player p ON pa.player_api_id = p.player_api_id\t----- bird -----\teuropean_football_2",
    "146": "SELECT CASE WHEN p1.birthday < p2.birthday THEN 'Aaron Lennon' ELSE 'Abdelaziz Barrada' END AS older_player\nFROM Player p1, Player p2\nWHERE p1.player_name = 'Aaron Lennon' AND p2.player_name = 'Abdelaziz Barrada';\t----- bird -----\teuropean_football_2",
    "147": "SELECT Player.player_name \nFROM Player \nORDER BY Player.height DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player_Attributes pa\nINNER JOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) AS total_matches\nFROM Match\nINNER JOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League' AND strftime('%Y-%m', Match.date) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name\nFROM Match\nINNER JOIN League ON Match.league_id = League.id\nWHERE Match.season = '2008/2009'\nGROUP BY League.name\nORDER BY COUNT(Match.id) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT \n    (CAST((SUM(CASE WHEN p.player_name = 'Ariel Borysiuk' THEN pa.overall_rating ELSE 0 END) - \n    SUM(CASE WHEN p.player_name = 'Paulin Puel' THEN pa.overall_rating ELSE 0 END)) AS REAL) * 100 / \n    SUM(CASE WHEN p.player_name = 'Paulin Puel' THEN pa.overall_rating ELSE 0 END)) AS percentage_difference\nFROM \n    Player_Attributes pa\nINNER JOIN \n    Player p ON pa.player_api_id = p.player_api_id\nWHERE \n    p.player_name IN ('Ariel Borysiuk', 'Paulin Puel');\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT Team_Attributes.chanceCreationPassing, Team_Attributes.chanceCreationPassingClass\nFROM Team\nINNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'Ajax'\nORDER BY Team_Attributes.chanceCreationPassing DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday ASC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT Player_Attributes.overall_rating\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT Player_Attributes.attacking_work_rate\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT Player_Attributes.date \nFROM Player_Attributes \nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.player_name = 'Kevin Constant' \nORDER BY Player_Attributes.crossing DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT Team_Attributes.buildUpPlayPassingClass\nFROM Team\nINNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT Team_Attributes.defenceAggressionClass\nFROM Team\nINNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Marko Arnautovic'\nAND SUBSTR(Player_Attributes.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    (CAST((ld.overall_rating - jb.overall_rating) AS REAL) / jb.overall_rating) * 100 AS percentage_difference\nFROM \n    Player p_ld\nINNER JOIN \n    Player_Attributes ld ON p_ld.player_api_id = ld.player_api_id\nINNER JOIN \n    Player p_jb ON p_ld.player_api_id != p_jb.player_api_id\nINNER JOIN \n    Player_Attributes jb ON p_jb.player_api_id = jb.player_api_id\nWHERE \n    p_ld.player_name = 'Landon Donovan'\n    AND p_jb.player_name = 'Jordan Bowery'\n    AND ld.date = '2013-07-12 00:00:00'\n    AND jb.date = '2013-07-12 00:00:00';\t----- bird -----\teuropean_football_2",
    "164": "SELECT Player.player_name \nFROM Player \nORDER BY Player.height DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT Player.player_name\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nORDER BY Player_Attributes.overall_rating DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.player_name\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team_Attributes\nINNER JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE birthday > '1990-12-31' \nAND player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2",
    "169": "SELECT \n    (SELECT jumping FROM Player_Attributes WHERE id = 6) - \n    (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT Player_Attributes.player_api_id\nFROM Player_Attributes\nWHERE Player_Attributes.preferred_foot = 'right'\nORDER BY Player_Attributes.potential ASC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' AND crossing = (\n    SELECT MAX(crossing) \n    FROM Player_Attributes \n    WHERE preferred_foot = 'left'\n)\t----- bird -----\teuropean_football_2",
    "172": "SELECT Match.home_team_goal, Match.away_team_goal\nFROM Match\nINNER JOIN League ON Match.league_id = League.id\nWHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT Team_Attributes.buildUpPlaySpeedClass\nFROM Team\nINNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player_Attributes.finishing, Player_Attributes.curve\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nORDER BY Player.weight DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) AS games_count\nFROM Match\nINNER JOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY games_count DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name \nFROM Team \nINNER JOIN (\n    SELECT Match.away_team_api_id, SUM(Match.away_team_goal) AS total_goals \n    FROM Match \n    GROUP BY Match.away_team_api_id \n    ORDER BY total_goals DESC \n    LIMIT 1\n) AS MostGoals \nON Team.team_api_id = MostGoals.away_team_api_id\t----- bird -----\teuropean_football_2",
    "177": "SELECT Player.player_name\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nORDER BY Player_Attributes.overall_rating DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT CAST(COUNT(DISTINCT CASE WHEN Player.height < 180 AND Player_Attributes.overall_rating > 70 THEN Player.player_api_id END) AS REAL) / COUNT(DISTINCT Player.player_api_id) * 100 AS percentage\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverRef\nFROM qualifying\nINNER JOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 20\nORDER BY qualifying.q1 DESC\nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname \nFROM qualifying \nINNER JOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE qualifying.raceId = 19 AND qualifying.q2 IS NOT NULL \nORDER BY qualifying.q2 ASC \nLIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nINNER JOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM circuits\nINNER JOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM circuits\nINNER JOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT qualifying.q1 \nFROM qualifying \nINNER JOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceId = 354\t----- bird -----\tformula_1",
    "185": "SELECT qualifying.number\nFROM qualifying\nWHERE qualifying.raceId = 903 AND qualifying.q3 = '0:01:54'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) AS not_finished_drivers\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.surname, drivers.forename\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url\nFROM lapTimes\nINNER JOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE lapTimes.time = '0:01:27' AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng\nFROM circuits\nINNER JOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url \nFROM constructorResults \nINNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId \nWHERE constructorResults.raceId = 9 \nORDER BY constructorResults.points DESC \nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nINNER JOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 45 AND qualifying.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url \nFROM seasons \nINNER JOIN races ON seasons.year = races.year \nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT drivers.driverId\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 872 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality \nFROM drivers \nINNER JOIN results ON drivers.driverId = results.driverId \nORDER BY CAST(results.fastestLapSpeed AS FLOAT) DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "195": "SELECT \n    (CAST(r853.fastestLapSpeed AS REAL) - CAST(r854.fastestLapSpeed AS REAL)) * 100 / CAST(r854.fastestLapSpeed AS REAL) AS percentage_faster\nFROM \n    results r853\nINNER JOIN \n    drivers ON r853.driverId = drivers.driverId\nINNER JOIN \n    results r854 ON drivers.driverId = r854.driverId\nWHERE \n    drivers.forename = 'Paul' AND drivers.surname = 'di Resta'\n    AND r853.raceId = 853 AND r854.raceId = 854\t----- bird -----\tformula_1",
    "196": "SELECT CAST(COUNT(results.time) AS REAL) * 100 / COUNT(results.driverId) AS percentage\nFROM results\nINNER JOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT races.name\nFROM races\nWHERE strftime('%Y-%m', races.date) = (\n    SELECT strftime('%Y-%m', MIN(races.date))\n    FROM races\n)\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, driverStandings.points\nFROM drivers\nINNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId\nORDER BY driverStandings.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT drivers.forename, drivers.surname, races.name\nFROM results\nINNER JOIN drivers ON results.driverId = drivers.driverId\nINNER JOIN races ON results.raceId = races.raceId\nORDER BY results.milliseconds ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time\nFROM lapTimes\nINNER JOIN drivers ON lapTimes.driverId = drivers.driverId\nINNER JOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT CAST(SUM(CASE WHEN results.position > 1 THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 AS percentage\nFROM results\nINNER JOIN drivers ON results.driverId = drivers.driverId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE drivers.surname = 'Hamilton' AND races.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT d.forename, d.surname, d.nationality, MAX(ds.points) as max_points\nFROM drivers d\nINNER JOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nORDER BY SUM(ds.wins) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT drivers.forename, drivers.surname, CAST((strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', drivers.dob)) AS INTEGER) AS age\nFROM drivers\nWHERE drivers.nationality = 'Japanese'\nORDER BY drivers.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location\nFROM races\nINNER JOIN circuits ON races.circuitId = circuits.circuitId\nWHERE strftime('%Y-%m', races.date) = '2005-09'\t----- bird -----\tformula_1",
    "205": "SELECT races.name \nFROM races \nINNER JOIN results ON races.raceId = results.raceId \nINNER JOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.grid < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT CAST(COUNT(DISTINCT CASE WHEN circuits.country = 'Germany' THEN races.raceId END) AS REAL) / COUNT(DISTINCT races.raceId) * 100 AS percentage\nFROM races\nINNER JOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuits.circuitRef FROM circuits WHERE circuits.name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality \nFROM drivers \nORDER BY drivers.dob ASC \nLIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name \nFROM races \nINNER JOIN results ON races.raceId = results.raceId \nINNER JOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' \nORDER BY results.rank ASC \nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(results.fastestLapSpeed) AS fastestLapSpeed\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder\nFROM results\nINNER JOIN drivers ON results.driverId = drivers.driverId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT results.time\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT results.driverId) \nFROM results \nINNER JOIN races ON results.raceId = races.raceId \nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT (CAST(champion_time AS REAL) - CAST(last_driver_time AS REAL)) * 100 / CAST(last_driver_time AS REAL) AS percentage_faster\nFROM (\n    SELECT \n        (SELECT milliseconds \n         FROM results \n         INNER JOIN races ON results.raceId = races.raceId \n         WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.positionOrder = 1) AS champion_time,\n        (SELECT milliseconds + CAST(SUBSTR(results.time, 2, LENGTH(results.time) - 1) AS REAL) \n         FROM results \n         INNER JOIN races ON results.raceId = races.raceId \n         WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL \n         ORDER BY results.positionOrder DESC LIMIT 1) AS last_driver_time\n)\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) AS total_circuits FROM circuits WHERE country = 'Australia' AND location = 'Adelaide'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(constructorStandings.points) AS maximum_points\nFROM constructorStandings\nINNER JOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name \nFROM constructorResults \nINNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId \nWHERE constructorResults.raceId = 291 AND constructorResults.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT constructors.constructorId) \nFROM constructors \nINNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId \nWHERE constructors.nationality = 'Japanese' \nGROUP BY constructors.constructorId \nHAVING COUNT(constructorResults.raceId) = 2 AND SUM(constructorResults.points) = 0\t----- bird -----\tformula_1",
    "223": "SELECT CAST(COUNT(DISTINCT CASE WHEN results.time IS NOT NULL THEN results.driverId END) AS REAL) * 100 / COUNT(DISTINCT results.driverId) AS completion_percentage\nFROM results\nINNER JOIN drivers ON results.driverId = drivers.driverId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT races.year, AVG(CAST(SUBSTR(results.time, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(results.time, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(results.time, 7) AS FLOAT)) AS average_time_seconds\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.year < 1975 AND results.positionOrder = 1 AND results.time IS NOT NULL\nGROUP BY races.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.year = 2009 AND results.time REGEXP '^\\d{1,2}:\\d{2}:\\d{2}\\.\\d$'\t----- bird -----\tformula_1",
    "226": "SELECT AVG(CAST(results.fastestLapSpeed AS FLOAT)) AS avg_fastest_lap_speed\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN d.dob < '1985-01-01' AND r.laps > 50 THEN r.driverId ELSE NULL END) AS REAL) / COUNT(DISTINCT r.driverId)) * 100 AS percentage\nFROM \n    results r\nINNER JOIN \n    races ra ON r.raceId = ra.raceId\nINNER JOIN \n    drivers d ON r.driverId = d.driverId\nWHERE \n    ra.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT drivers.driverId) \nFROM drivers \nINNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId \nWHERE drivers.nationality = 'French' AND strftime('%M:%S', lapTimes.time) < '02:00'\t----- bird -----\tformula_1",
    "229": "SELECT drivers.code FROM drivers WHERE drivers.nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT COUNT(*) AS count\nFROM (\n    SELECT drivers.nationality\n    FROM drivers\n    ORDER BY drivers.dob DESC\n    LIMIT 3\n) AS top_youngest_drivers\nWHERE nationality = 'Netherlandic'\t----- bird -----\tformula_1",
    "231": "SELECT drivers.driverRef\nFROM drivers\nWHERE drivers.nationality = 'German'\nORDER BY drivers.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nWHERE strftime('%Y', drivers.dob) = '1971'\nORDER BY results.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nINNER JOIN status ON results.statusId = status.statusId \nWHERE results.raceId > 50 AND results.raceId < 100 \nAND results.time IS NOT NULL \nAND status.statusId = 2;\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng, COUNT(*) AS times_held\nFROM circuits\nWHERE country = 'Austria'\nGROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "235": "SELECT races.year, races.name, races.date, races.time\nFROM qualifying\nINNER JOIN races ON qualifying.raceId = races.raceId\nINNER JOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT d.forename, d.surname\nFROM drivers d\nINNER JOIN pitStops ps ON d.driverId = ps.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.driverId\nORDER BY AVG(CAST(ps.duration AS FLOAT)) ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT results.time\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM constructors\nINNER JOIN results ON constructors.constructorId = results.constructorId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name\nFROM superpower\nINNER JOIN hero_power ON superpower.id = hero_power.power_id\nINNER JOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructors.name, constructors.nationality, SUM(constructorResults.points) AS sum_points\nFROM constructorResults\nINNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId\nINNER JOIN races ON constructorResults.raceId = races.raceId\nWHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructors.constructorId\nORDER BY sum_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM drivers\nINNER JOIN qualifying ON drivers.driverId = qualifying.driverId\nINNER JOIN races ON qualifying.raceId = races.raceId\nINNER JOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.year = 2008\nAND circuits.name = 'Marina Bay Street Circuit'\nAND qualifying.position = 1\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, drivers.nationality, races.name\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nINNER JOIN races ON results.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) AS accident_count\nFROM results\nINNER JOIN races ON results.raceId = races.raceId\nINNER JOIN status ON results.statusId = status.statusId\nWHERE races.name = 'Canadian Grand Prix' AND status.statusId = 3\nGROUP BY results.driverId\nORDER BY accident_count DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname\nFROM drivers\nINNER JOIN results ON drivers.driverId = results.driverId\nORDER BY results.fastestLapTime ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, MIN(lapTimes.time) AS fastest_lap_time\nFROM circuits\nINNER JOIN races ON circuits.circuitId = races.circuitId\nINNER JOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.circuitId, circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(DISTINCT superhero.id) \nFROM superhero \nINNER JOIN hero_power ON superhero.id = hero_power.hero_id \nINNER JOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) \nFROM superhero \nINNER JOIN colour ON superhero.eye_colour_id = colour.id \nINNER JOIN hero_power ON superhero.id = hero_power.hero_id \nINNER JOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nINNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS eye_colour_popularity\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY eye_colour_popularity DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM hero_attribute\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nINNER JOIN superhero ON hero_attribute.hero_id = superhero.id\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nINNER JOIN colour ON superhero.eye_colour_id = colour.id \nINNER JOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race \nFROM superhero \nINNER JOIN race ON superhero.race_id = race.id \nWHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT superhero.id) \nFROM superhero \nINNER JOIN gender ON superhero.gender_id = gender.id \nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' \nAND attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (COUNT(CASE WHEN a.alignment = 'Neutral' THEN 1 END) * 100.0 / COUNT(s.id)) AS percentage_neutral,\n    COUNT(CASE WHEN a.alignment = 'Neutral' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_neutral_count\nFROM \n    superhero s\nINNER JOIN \n    alignment a ON s.alignment_id = a.id\nLEFT JOIN \n    publisher p ON s.publisher_id = p.id\t----- bird -----\tsuperhero",
    "260": "SELECT ABS(COUNT(DISTINCT CASE WHEN p.publisher_name = 'Marvel Comics' THEN s.id END) - COUNT(DISTINCT CASE WHEN p.publisher_name = 'DC Comics' THEN s.id END)) AS difference\nFROM superhero s\nINNER JOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name IN ('DC Comics', 'Marvel Comics')\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS total_number_of_superheroes_without_full_name\nFROM superhero\nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(superhero.weight_kg) AS average_weight\nFROM superhero\nINNER JOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superpower sp\nINNER JOIN hero_power hp ON sp.id = hp.power_id\nINNER JOIN superhero sh ON hp.hero_id = sh.id\nINNER JOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nLEFT JOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190 AND (colour.colour = 'No Colour' OR superhero.eye_colour_id IS NULL)\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour\nFROM superhero\nINNER JOIN race ON superhero.race_id = race.id\nINNER JOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185 AND race.race = 'Human'\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0) / COUNT(*) AS percentage\nFROM \n    superhero s\nINNER JOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    s.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male' AND superhero.weight_kg > (SELECT AVG(superhero.weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name\nFROM hero_power\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_power.hero_id) \nFROM hero_power \nINNER JOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'Durability'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT eye_colour.colour AS eye_colour, hair_colour.colour AS hair_colour, skin_colour.colour AS skin_colour\nFROM superhero\nINNER JOIN gender ON superhero.gender_id = gender.id\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nINNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nINNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nINNER JOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.hair_colour_id = superhero.skin_colour_id \nAND superhero.hair_colour_id = superhero.eye_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (COUNT(CASE WHEN colour.colour = 'Blue' THEN 1 END) * 100.0) / COUNT(*) AS percentage\nFROM \n    superhero\nINNER JOIN \n    gender ON superhero.gender_id = gender.id\nINNER JOIN \n    colour ON superhero.skin_colour_id = colour.id\nWHERE \n    gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(DISTINCT hero_power.power_id) AS total_powers\nFROM hero_power\nINNER JOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nINNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT ha.hero_id) \nFROM hero_attribute ha \nINNER JOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Strength' \nAND ha.attribute_value = (\n    SELECT MAX(ha2.attribute_value) \n    FROM hero_attribute ha2 \n    INNER JOIN attribute a2 ON ha2.attribute_id = a2.id \n    WHERE a2.attribute_name = 'Strength'\n)\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (COUNT(CASE WHEN gender.gender = 'Female' THEN 1 END) * 100.0) / COUNT(*) AS percent\nFROM \n    superhero\nINNER JOIN \n    publisher ON superhero.publisher_id = publisher.id\nINNER JOIN \n    gender ON superhero.gender_id = gender.id\nWHERE \n    publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT \n    (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky') - \n    (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler') AS difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE height_cm > 0\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name\nFROM superhero\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nINNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT DISTINCT publisher.publisher_name\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM superhero) * 100 AS percentage\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "290": "SELECT \n    SUM(CASE WHEN gender.gender = 'Male' THEN 1 ELSE 0 END) * 1.0 / \n    SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS ratio\nFROM \n    superhero\nINNER JOIN \n    gender ON superhero.gender_id = gender.id\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour \nFROM superhero \nINNER JOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT \n    (SUM(CASE WHEN c.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN c.id = 1 THEN 1 ELSE 0 END)) AS difference\nFROM \n    superhero s\nLEFT JOIN \n    colour c ON s.eye_colour_id = c.id\nWHERE \n    s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) AS green_skinned_villains\nFROM superhero\nINNER JOIN colour ON superhero.skin_colour_id = colour.id\nINNER JOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender \nFROM gender \nINNER JOIN superhero ON gender.id = superhero.gender_id \nINNER JOIN hero_power ON superhero.id = hero_power.hero_id \nINNER JOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT ABS(COUNT(DISTINCT CASE WHEN p.publisher_name = 'DC Comics' THEN s.id END) - COUNT(DISTINCT CASE WHEN p.publisher_name = 'Marvel Comics' THEN s.id END)) AS difference\nFROM superhero s\nINNER JOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name IN ('DC Comics', 'Marvel Comics');\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT users.DisplayName\nFROM users\nWHERE strftime('%Y', users.CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(posts.Id) AS NumberOfPosts\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName\nFROM posts\nINNER JOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(posts.Id) \nFROM posts \nINNER JOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Age > 65 AND posts.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.Body\nFROM tags\nINNER JOIN posts ON tags.ExcerptPostId = posts.Id\nWHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(posts.Score) AS average_score\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(COUNT(DISTINCT CASE WHEN u.Age > 65 THEN p.Id END) AS REAL) * 100 / COUNT(DISTINCT p.Id) AS percentage\nFROM posts p\nINNER JOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.FavoriteCount\nFROM comments\nINNER JOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = '3025' AND comments.CreationDate = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "308": "SELECT posts.ClosedDate \nFROM comments \nINNER JOIN posts ON comments.PostId = posts.Id \nWHERE comments.UserId = 23853 \nAND comments.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(posts.Id) AS NumberOfPosts\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nINNER JOIN users ON votes.UserId = users.Id\nWHERE votes.Id = '6347'\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(DISTINCT posts.Id) AS REAL) / COUNT(DISTINCT votes.Id) AS times\nFROM posts\nLEFT JOIN votes ON posts.OwnerUserId = votes.UserId\nWHERE posts.OwnerUserId = '24' AND votes.UserId = '24'\t----- bird -----\tcodebase_community",
    "312": "SELECT posts.ViewCount\nFROM posts\nWHERE posts.Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT comments.Text\nFROM comments\nWHERE comments.Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName \nFROM comments \nINNER JOIN users ON comments.UserId = users.Id \nWHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.DisplayName \nFROM posts \nINNER JOIN users ON posts.OwnerUserId = users.Id \nWHERE posts.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text\nFROM comments\nINNER JOIN postHistory ON comments.UserId = postHistory.UserId\nINNER JOIN posts ON postHistory.PostId = posts.Id\nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName\nFROM votes\nINNER JOIN users ON votes.UserId = users.Id\nINNER JOIN posts ON votes.PostId = posts.Id\nWHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, ph.Text, AVG(p.ViewCount) AS avg_view_count\nFROM posts p\nINNER JOIN postHistory ph ON p.Id = ph.PostId\nWHERE p.Tags LIKE '%<humor>%'\nGROUP BY p.Title, ph.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) AS NumberOfUsers\nFROM (\n  SELECT badges.UserId\n  FROM badges\n  GROUP BY badges.UserId\n  HAVING COUNT(badges.Name) > 5\n) AS SubQuery\t----- bird -----\tcodebase_community",
    "321": "SELECT ph.UserId\nFROM postHistory ph\nINNER JOIN posts p ON ph.PostId = p.Id\nWHERE p.ViewCount >= 1000\nGROUP BY ph.PostId, ph.UserId\nHAVING COUNT(ph.Id) = 1\t----- bird -----\tcodebase_community",
    "322": "SELECT ABS(\n    (COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN Name END) * 100.0 / COUNT(*)) -\n    (COUNT(CASE WHEN strftime('%Y', Date) = '2011' THEN Name END) * 100.0 / COUNT(*))\n) AS percentage_difference\nFROM badges\nWHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS average_upvotes, AVG(u.Age) AS average_age\nFROM users u\nINNER JOIN posts p ON u.Id = p.OwnerUserId\nGROUP BY p.OwnerUserId\nHAVING COUNT(p.Id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(SUM(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) AS ratio FROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT posts.Id\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'slashnick'\nORDER BY posts.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT posts.Id\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nORDER BY posts.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT posts.Tags\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(COUNT(CASE WHEN posts.Tags LIKE '%<r>%' THEN 1 END) AS REAL) / COUNT(*) * 100 AS percentage\nFROM posts\nWHERE posts.OwnerDisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    (SELECT SUM(posts.ViewCount) \n     FROM posts \n     INNER JOIN users ON posts.OwnerUserId = users.Id \n     WHERE users.DisplayName = 'Mornington') - \n    (SELECT SUM(posts.ViewCount) \n     FROM posts \n     INNER JOIN users ON posts.OwnerUserId = users.Id \n     WHERE users.DisplayName = 'Amos') AS difference_in_view_count\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(LinkCount) AS AverageMonthlyLinks\nFROM (\n    SELECT strftime('%m', postLinks.CreationDate) AS Month, COUNT(postLinks.Id) AS LinkCount\n    FROM postLinks\n    INNER JOIN posts ON postLinks.PostId = posts.Id\n    WHERE posts.AnswerCount <= 2 AND strftime('%Y', postLinks.CreationDate) = '2010'\n    GROUP BY strftime('%m', postLinks.CreationDate)\n) AS MonthlyLinks\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(votes.CreationDate) AS FirstVoteDate\nFROM votes\nINNER JOIN users ON votes.UserId = users.Id\nWHERE users.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName\nFROM badges\nINNER JOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Autobiographer'\nORDER BY badges.Date ASC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT posts.OwnerUserId) \nFROM posts \nINNER JOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.Id, posts.Title\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky'\nORDER BY posts.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.Id, posts.OwnerDisplayName\nFROM posts\nWHERE strftime('%Y', posts.CreationDate) = '2010'\nORDER BY posts.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN u.Reputation > 1000 THEN p.Id END) AS REAL) / COUNT(DISTINCT p.Id)) * 100 AS percentage\nFROM \n    posts p\nINNER JOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    strftime('%Y', p.CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "337": "SELECT posts.ViewCount, users.DisplayName\nFROM posts\nINNER JOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(comments.Id) AS NumberOfComments\nFROM comments\nINNER JOIN (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1) AS HighestScorePost\nON comments.PostId = HighestScorePost.Id\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName\nFROM comments\nINNER JOIN posts ON comments.PostId = posts.Id\nINNER JOIN users ON comments.UserId = users.Id\nWHERE posts.Title = 'Analysing wind data with R'\nORDER BY comments.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0) / COUNT(*) AS percentage\nFROM \n    posts p\nINNER JOIN \n    (SELECT u.Id\n     FROM users u\n     ORDER BY u.Reputation DESC\n     LIMIT 1) AS most_influential_user\nON \n    p.OwnerUserId = most_influential_user.Id\t----- bird -----\tcodebase_community",
    "341": "SELECT tags.ExcerptPostId, tags.WikiPostId FROM tags WHERE tags.TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes\nFROM users\nINNER JOIN comments ON users.Id = comments.UserId\nWHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text\nFROM comments\nINNER JOIN posts ON comments.PostId = posts.Id\nWHERE posts.ViewCount BETWEEN 100 AND 150\nORDER BY comments.Score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nINNER JOIN posts ON comments.PostId = posts.Id \nWHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(COUNT(DISTINCT CASE WHEN users.UpVotes = 0 THEN comments.UserId END) AS REAL) * 100 / COUNT(DISTINCT comments.UserId) AS percentage\nFROM comments\nINNER JOIN users ON comments.UserId = users.Id\nWHERE comments.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT cards.id\nFROM cards\nWHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT cards.id\nFROM cards\nWHERE cards.borderColor = 'borderless' AND cards.cardKingdomId IS NOT NULL AND cards.cardKingdomFoilId IS NULL\t----- bird -----\tcard_games",
    "348": "SELECT cards.id\nFROM cards\nINNER JOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic'\nAND legalities.status = 'Banned'\nAND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT legalities.status\nFROM cards\nINNER JOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nINNER JOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power = '*' OR cards.power IS NULL)\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, rulings.text, cards.hasContentWarning\nFROM cards\nINNER JOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Stephen Daniel'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nINNER JOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY cards.uuid\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT CAST(COUNT(*) FILTER (WHERE language = 'Chinese Simplified') AS REAL) * 100 / COUNT(*) AS percentage\nFROM foreign_data\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) AS total_infinite_power_cards FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT cards.borderColor \nFROM cards \nWHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format\nFROM legalities\nINNER JOIN cards ON legalities.uuid = cards.uuid\nWHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage\nFROM cards\t----- bird -----\tcard_games",
    "358": "SELECT CAST(COUNT(DISTINCT fd.id) AS REAL) * 100 / COUNT(DISTINCT c.id) AS percentage\nFROM cards c\nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.isStorySpotlight = 1 AND fd.language = 'French' OR fd.language IS NULL\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = 'Summon - Angel' \nAND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT cards.id\nFROM cards\nWHERE cards.duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM legalities \nINNER JOIN cards ON legalities.uuid = cards.uuid \nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT cards.name, foreign_data.name\nFROM cards\nINNER JOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.originalType LIKE '%Artifact%' AND cards.colors LIKE '%B%'\t----- bird -----\tcard_games",
    "363": "SELECT cards.manaCost\nFROM cards\nWHERE cards.frameVersion = '2003'\nAND cards.borderColor = 'black'\nAND cards.availability = 'mtgo,paper'\nAND cards.layout = 'normal'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN cards.isStorySpotlight = 1 AND cards.isTextless = 1 THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN cards.isStorySpotlight = 1 THEN 1 ELSE 0 END) AS REAL) * 100 AS percentage\nFROM cards\nWHERE cards.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(DISTINCT set_translations.setCode) \nFROM set_translations \nINNER JOIN sets ON set_translations.setCode = sets.code \nWHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT cards.subtypes \nFROM cards \nWHERE cards.subtypes IS NOT NULL\nUNION \nSELECT DISTINCT cards.supertypes \nFROM cards \nWHERE cards.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') \nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(DISTINCT cards.id) \nFROM cards \nINNER JOIN legalities ON cards.uuid = legalities.uuid \nINNER JOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name\nFROM cards\nINNER JOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE foreign_data.language = 'French'\nAND cards.borderColor = 'black'\nAND cards.type LIKE 'Creature%'\nAND cards.layout = 'normal'\nAND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language\nFROM set_translations\nINNER JOIN sets ON set_translations.setCode = sets.code\nWHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT \n    CAST(COUNT(CASE WHEN cards.hasContentWarning = 0 THEN 1 END) AS REAL) / COUNT(*) * 100 AS percentage\nFROM \n    legalities\nINNER JOIN \n    cards ON legalities.uuid = cards.uuid\nWHERE \n    legalities.format = 'commander' \n    AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "372": "SELECT CAST(COUNT(DISTINCT CASE WHEN fd.language = 'French' THEN c.uuid END) AS REAL) / COUNT(DISTINCT c.uuid) * 100 AS percentage\nFROM cards c\nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.power IS NULL OR c.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT foreign_data.language\nFROM foreign_data\nWHERE foreign_data.multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(CASE WHEN cards.isTextless = 1 AND cards.layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS proportion\nFROM cards\nWHERE cards.isTextless = 1;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT set_translations.language\nFROM set_translations\nWHERE set_translations.setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT foreign_data.language\nFROM foreign_data\nWHERE foreign_data.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM set_translations st\nINNER JOIN cards c ON st.setCode = c.setCode\nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT foreign_data.name\nFROM cards\nINNER JOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nINNER JOIN set_translations ON cards.setCode = set_translations.setCode \nWHERE set_translations.translation = 'Hauptset Zehnte Edition' \nAND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT set_translations.translation\nFROM sets\nINNER JOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT sets.name\nFROM sets\nINNER JOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT sets.id) \nFROM sets \nINNER JOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT cards.isForeignOnly\nFROM cards\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT sets.code)\nFROM sets\nINNER JOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT cards.artist\nFROM cards\nWHERE cards.setCode = 'Coldsnap' AND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards \nINNER JOIN sets ON cards.setCode = sets.code \nWHERE sets.name = 'Coldsnap' \nAND cards.convertedManaCost > 5 \nAND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT foreign_data.flavorText\nFROM cards\nINNER JOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT foreign_data.text\nFROM foreign_data\nINNER JOIN cards ON foreign_data.uuid = cards.uuid\nINNER JOIN sets ON cards.setCode = sets.code\nWHERE sets.code = 'CSP' AND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT foreign_data.name \nFROM foreign_data \nINNER JOIN cards ON foreign_data.uuid = cards.uuid \nINNER JOIN sets ON cards.setCode = sets.code \nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian' \nORDER BY cards.convertedManaCost DESC \nLIMIT 1\t----- bird -----\tcard_games",
    "391": "SELECT \n    (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP')) * 100 AS percentage\nFROM \n    cards\nWHERE \n    convertedManaCost = 7 AND setCode = 'CSP'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(CASE WHEN cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage_of_incredibly_powerful_cards\nFROM cards\nWHERE cards.setCode = 'CSP'\t----- bird -----\tcard_games",
    "393": "SELECT l.format, c.name\nFROM legalities l\nINNER JOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nHAVING COUNT(l.status) = (\n    SELECT MAX(CountStatus)\n    FROM (\n        SELECT COUNT(l.status) AS CountStatus\n        FROM legalities l\n        WHERE l.status = 'Banned'\n        GROUP BY l.format\n    )\n)\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nINNER JOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nINNER JOIN sets ON cards.setCode = sets.code\nINNER JOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT s.name \nFROM sets s \nINNER JOIN set_translations st_korean ON s.code = st_korean.setCode \nWHERE st_korean.language = 'Korean' \nAND NOT EXISTS (\n    SELECT 1 \n    FROM set_translations st_japanese \n    WHERE st_japanese.setCode = s.code \n    AND st_japanese.language LIKE '%Japanese%'\n)\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT c.frameVersion, c.id\nFROM cards c\nLEFT JOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'Allen Williams' AND (l.status = 'Banned' OR l.status IS NULL)\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(bond_type) DESC \nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS avg_oxygen_atoms\nFROM (\n    SELECT atom.molecule_id, COUNT(atom.element) AS oxygen_count\n    FROM atom\n    INNER JOIN bond ON atom.molecule_id = bond.molecule_id\n    WHERE bond.bond_type = '-' AND atom.element = 'o'\n    GROUP BY atom.molecule_id\n) AS subquery\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bond_count) AS average_single_bonded_carcinogenic_molecules\nFROM (\n    SELECT molecule.molecule_id, COUNT(bond.bond_id) AS single_bond_count\n    FROM molecule\n    INNER JOIN bond ON molecule.molecule_id = bond.molecule_id\n    WHERE molecule.label = '+' AND bond.bond_type = '-'\n    GROUP BY molecule.molecule_id\n) AS subquery\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT bond.molecule_id\nFROM bond\nINNER JOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '#' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(COUNT(DISTINCT atom.atom_id) AS REAL) * 100 / (SELECT COUNT(DISTINCT atom.atom_id) \n                                                           FROM atom \n                                                           INNER JOIN bond ON atom.molecule_id = bond.molecule_id \n                                                           WHERE bond.bond_type = '=') AS percentage\nFROM atom \nINNER JOIN bond ON atom.molecule_id = bond.molecule_id \nWHERE bond.bond_type = '=' AND atom.element = 'c'\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT atom.element\nFROM atom\nINNER JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT atom.element\nFROM atom\nINNER JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nINNER JOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT molecule.label, COUNT(*) AS count\nFROM atom\nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.element = 'h'\nGROUP BY molecule.label\nORDER BY count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT atom.element, COUNT(atom.element) AS element_count\nFROM atom\nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY atom.element\nORDER BY element_count ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type\nFROM connected\nINNER JOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20')\n   OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nINNER JOIN bond ON atom.molecule_id = bond.molecule_id \nWHERE bond.bond_type = '-' AND atom.element IN ('i', 's');\t----- bird -----\ttoxicology",
    "409": "SELECT \n    (COUNT(DISTINCT CASE WHEN a.element != 'f' THEN m.molecule_id ELSE NULL END) * 100.0) / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN bond.bond_type = '#' AND molecule.label = '+' THEN molecule.molecule_id END) AS REAL) / COUNT(DISTINCT CASE WHEN bond.bond_type = '#' THEN molecule.molecule_id END)) * 100 AS percentage\nFROM \n    bond\nINNER JOIN \n    molecule ON bond.molecule_id = molecule.molecule_id\nWHERE \n    bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "411": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR000'\nORDER BY atom.element ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) / COUNT(bond_id) * 100, 5) AS percentage\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(molecule_id) * 100, 3) AS percentage\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(CAST(COUNT(CASE WHEN element = 'h' THEN 1 END) AS REAL) / COUNT(*) * 100, 4) AS percentage\nFROM atom\nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT atom.element, molecule.label\nFROM atom\nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond.bond_type, molecule.label\nFROM bond\nINNER JOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.molecule_id = 'TR010'\nGROUP BY bond.bond_type\nORDER BY COUNT(bond.bond_type) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT molecule.molecule_id\nFROM molecule\nINNER JOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '-' AND molecule.label = '-'\nGROUP BY molecule.molecule_id\nORDER BY molecule.molecule_id ASC\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT bond.bond_id) AS total_bonds\nFROM connected\nINNER JOIN bond ON connected.bond_id = bond.bond_id\nWHERE (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12') AND bond.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2\nFROM bond\nINNER JOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) AS total_connections\nFROM (\n    SELECT atom_id FROM connected WHERE atom_id LIKE 'TR%_19'\n    UNION ALL\n    SELECT atom_id2 FROM connected WHERE atom_id2 LIKE 'TR%_19'\n) AS combined_connections\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT molecule.molecule_id\nFROM atom\nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+' AND SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25'\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT bond.bond_id\nFROM connected\nINNER JOIN atom ON connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id\nINNER JOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element IN ('p', 'n')\nGROUP BY bond.bond_id\nHAVING COUNT(DISTINCT atom.element) = 2\t----- bird -----\ttoxicology",
    "424": "SELECT molecule.label\nFROM molecule\nINNER JOIN (\n    SELECT bond.molecule_id, COUNT(*) as bond_count\n    FROM bond\n    WHERE bond.bond_type = '='\n    GROUP BY bond.molecule_id\n    ORDER BY bond_count DESC\n    LIMIT 1\n) AS most_double_bonds ON molecule.molecule_id = most_double_bonds.molecule_id\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS avg_bonds\nFROM (\n    SELECT atom.atom_id, COUNT(bond.bond_id) AS bond_count\n    FROM atom\n    LEFT JOIN bond ON atom.atom_id = bond.bond_id\n    WHERE atom.element = 'i'\n    GROUP BY atom.atom_id\n) AS subquery\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT atom.element\nFROM atom\nWHERE atom.atom_id NOT IN (\n    SELECT connected.atom_id\n    FROM connected\n    UNION\n    SELECT connected.atom_id2\n    FROM connected\n)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.atom_id\nFROM atom\nINNER JOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.molecule_id = 'TR041' AND bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT atom.element\nFROM atom\nINNER JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element\nFROM atom a\nINNER JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nINNER JOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond.bond_id), 5) AS percentage\nFROM bond\nINNER JOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nINNER JOIN bond ON atom.molecule_id = bond.molecule_id \nWHERE bond.bond_type = '#' \nAND (atom.element = 'p' OR atom.element = 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN a.element = 'cl' THEN a.atom_id ELSE NULL END) AS REAL) / COUNT(DISTINCT a.atom_id)) * 100 AS percent\nFROM \n    atom a\nINNER JOIN \n    bond b ON a.molecule_id = b.molecule_id\nWHERE \n    b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT DISTINCT atom.element\nFROM connected\nINNER JOIN atom ON connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id\nWHERE connected.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN a.element = 'cl' THEN a.molecule_id ELSE NULL END) AS REAL) / COUNT(DISTINCT a.molecule_id)) * 100 AS percentage\nFROM \n    atom a\nINNER JOIN \n    molecule m ON a.molecule_id = m.molecule_id\nWHERE \n    m.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT atom.element, COUNT(*) AS count\nFROM atom\nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+' AND substr(atom.atom_id, 7, 1) = '4'\nGROUP BY atom.element\t----- bird -----\ttoxicology",
    "436": "SELECT \n    CAST(COUNT(CASE WHEN a.element = 'h' THEN 1 END) AS REAL) / COUNT(a.element) AS ratio, \n    m.label \nFROM \n    atom a \nINNER JOIN \n    molecule m \nON \n    a.molecule_id = m.molecule_id \nWHERE \n    a.molecule_id = 'TR006' \nGROUP BY \n    m.label\t----- bird -----\ttoxicology",
    "437": "SELECT molecule.molecule_id\nFROM molecule\nINNER JOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '-'\nGROUP BY molecule.molecule_id\nHAVING COUNT(atom.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores \nINNER JOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.Virtual = 'F' AND satscores.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "439": "SELECT frpm.CDSCode\nFROM frpm\nWHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) AS highest_eligible_free_rate\nFROM satscores\nINNER JOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT schools.CharterNum\nFROM satscores\nINNER JOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrWrite > 499 AND schools.CharterNum IS NOT NULL\nORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.School, schools.Street\nFROM frpm\nINNER JOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT DISTINCT schools.School\nFROM schools\nINNER JOIN frpm ON schools.CDSCode = frpm.CDSCode\nINNER JOIN satscores ON schools.CDSCode = satscores.cds\nWHERE (frpm.FreeMealCount / frpm.Total) > 0.1 AND satscores.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.School, schools.FundingType\nFROM satscores\nINNER JOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Riverside'\nGROUP BY schools.School, schools.FundingType\nHAVING AVG(satscores.AvgScrMath) > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.School, schools.Street, schools.City, schools.State, schools.Zip\nFROM schools\nINNER JOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Monterey' AND schools.SOCType = 'High Schools (Public)' AND frpm.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, ss.AvgScrWrite, s.Phone\nFROM schools s\nLEFT JOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nWHERE s.FundingType = 'Locally funded'\nAND (s.`Enrollment (K-12)` - s.`Enrollment (Ages 15-17)`) > (\n    SELECT AVG(s_inner.`Enrollment (K-12)` - s_inner.`Enrollment (Ages 15-17)`)\n    FROM schools s_inner\n    WHERE s_inner.FundingType = 'Locally funded'\n)\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` AS eligible_free_rate\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT schools.School, (frpm.`FRPM Count (K-12)` / frpm.`Enrollment (K-12)`) AS Eligible_FRPM_Rate\nFROM frpm\nINNER JOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.SOC = '66'\nORDER BY frpm.`FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.Street, schools.City, schools.Zip, schools.State\nFROM schools\nINNER JOIN (\n    SELECT satscores.cds, \n           SUM(satscores.NumGE1500) AS TotalGE1500, \n           SUM(satscores.NumTstTakr) AS TotalTestTakers,\n           (SUM(satscores.NumGE1500) * 1.0 / SUM(satscores.NumTstTakr)) AS ExcellenceRate\n    FROM satscores\n    GROUP BY satscores.cds\n    ORDER BY ExcellenceRate ASC\n    LIMIT 1\n) AS lowest_excellence_rate ON schools.CDSCode = lowest_excellence_rate.cds\t----- bird -----\tcalifornia_schools",
    "451": "SELECT schools.AdmFName1, schools.AdmLName1, schools.AdmFName2, schools.AdmLName2, schools.AdmFName3, schools.AdmLName3\nFROM schools\nINNER JOIN satscores ON schools.CDSCode = satscores.cds\nORDER BY satscores.NumGE1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr) \nFROM satscores \nINNER JOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.County = 'Fresno' \nAND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.Phone\nFROM satscores\nINNER JOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.District = 'Fresno Unified'\nORDER BY satscores.AvgScrRead ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School\nFROM schools s\nINNER JOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'F'\nORDER BY s.County, ss.AvgScrRead DESC\nQUALIFY ROW_NUMBER() OVER(PARTITION BY s.County ORDER BY ss.AvgScrRead DESC) <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT schools.School, AVG(satscores.AvgScrWrite) AS AvgWritingScore\nFROM schools\nINNER JOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich'\nGROUP BY schools.School\t----- bird -----\tcalifornia_schools",
    "456": "SELECT schools.School\nFROM schools\nWHERE schools.DOC = '31'\nORDER BY schools.enrollees DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS monthly_average\nFROM schools\nWHERE County = 'Alameda'\nAND DOC = '52'\nAND strftime('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND StatusType = 'Merged' AND DOC = '54') /\n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND StatusType = 'Merged' AND DOC = '52') AS ratio\t----- bird -----\tcalifornia_schools",
    "459": "SELECT schools.School, schools.Street\nFROM satscores\nINNER JOIN schools ON satscores.cds = schools.CDSCode\nORDER BY satscores.AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools \nINNER JOIN frpm ON schools.CDSCode = frpm.CDSCode \nWHERE schools.Charter = 0 \nAND schools.County = 'Los Angeles' \nAND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(frpm.`Enrollment (Ages 5-17)`) \nFROM frpm \nINNER JOIN schools ON frpm.CDSCode = schools.CDSCode \nWHERE schools.EdOpsCode = 'SSS' \nAND schools.City = 'Fremont' \nAND frpm.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.School, (frpm.FRPMCountAges5_17 / frpm.EnrollmentAges5_17 * 100) AS PercentEligibleFRPM\nFROM schools\nINNER JOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.GSserved = 'K-9' AND schools.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumberOfSchools\nFROM schools\nWHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F'\nGROUP BY County\nORDER BY NumberOfSchools DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT schools.GSoffered \nFROM schools \nORDER BY ABS(schools.Longitude) DESC \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT schools.City, COUNT(schools.School) AS NumberOfSchools\nFROM schools\nINNER JOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.Magnet = 1 AND schools.GSserved = 'K-8' AND frpm.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY schools.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.`District Code`\nFROM schools\nINNER JOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT schools.AdmEmail1, schools.AdmEmail2\nFROM schools\nWHERE schools.County = 'San Bernardino'\nAND schools.City = 'San Bernardino City Unified'\nAND schools.OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\nAND (schools.SOC = '62' OR schools.DOC = '54')\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nINNER JOIN district ON account.district_id = district.district_id \nWHERE account.frequency = 'POPLATEK PO OBRATU' \nAND district.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(DISTINCT district.district_id) \nFROM district \nJOIN client ON district.district_id = client.district_id \nWHERE district.A11 > 6000 AND district.A11 < 10000 AND client.gender = 'F'\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(DISTINCT client.client_id) \nFROM client \nINNER JOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' \nAND district.A3 = 'north Bohemia' \nAND district.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT a.account_id, \n       (SELECT MAX(d.A11) FROM district d) - d.A11 AS salary_gap\nFROM account a\nJOIN disp di ON a.account_id = di.account_id\nJOIN client c ON di.client_id = c.client_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F'\nORDER BY c.birth_date DESC, d.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nINNER JOIN disp ON account.account_id = disp.account_id\nINNER JOIN client ON disp.client_id = client.client_id\nINNER JOIN district ON account.district_id = district.district_id\nORDER BY client.birth_date DESC, district.A11 DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id\nFROM account\nINNER JOIN loan ON account.account_id = loan.account_id\nWHERE loan.date LIKE '1997%' AND account.frequency = 'POPLATEK TYDNE'\nORDER BY loan.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id\nFROM account\nINNER JOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND strftime('%Y', account.date) = '1993'\nORDER BY loan.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT client.client_id) \nFROM client \nINNER JOIN disp ON client.client_id = disp.client_id \nINNER JOIN account ON disp.account_id = account.account_id \nINNER JOIN district ON account.district_id = district.district_id \nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT district.A2 \nFROM client \nINNER JOIN account ON client.client_id = account.account_id \nINNER JOIN district ON account.district_id = district.district_id \nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT CAST(COUNT(CASE WHEN c.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage_of_male_clients\nFROM client c\nINNER JOIN district d ON c.district_id = d.district_id\nWHERE d.A3 = 'south Bohemia' AND d.A4 = (\n    SELECT MAX(A4) \n    FROM district \n    WHERE A3 = 'south Bohemia'\n)\t----- bird -----\tfinancial",
    "478": "SELECT ((MAX(CASE WHEN trans.date = '1998-12-27' THEN trans.balance ELSE NULL END) - \n         MIN(CASE WHEN trans.date = '1993-03-22' THEN trans.balance ELSE NULL END)) * 100.0 / \n         MIN(CASE WHEN trans.date = '1993-03-22' THEN trans.balance ELSE NULL END)) AS increase_rate\nFROM trans\nINNER JOIN loan ON trans.account_id = loan.account_id\nWHERE loan.date = '1993-07-05'\nAND trans.date IN ('1993-03-22', '1998-12-27')\nAND loan.account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1);\t----- bird -----\tfinancial",
    "479": "SELECT \n    (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) / SUM(amount)) * 100 AS percentage_paid_no_issue\nFROM \n    loan\t----- bird -----\tfinancial",
    "480": "SELECT (CAST(COUNT(DISTINCT loan.account_id) AS REAL) / COUNT(DISTINCT account.account_id)) * 100 AS percentage\nFROM loan\nINNER JOIN account ON loan.account_id = account.account_id\nWHERE loan.amount < 100000 AND loan.status = 'C'\t----- bird -----\tfinancial",
    "481": "SELECT \n    a.district_id, \n    ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment_percentage\nFROM \n    loan l\nINNER JOIN \n    account a ON l.account_id = a.account_id\nINNER JOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    l.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT district.A2 AS district_name, COUNT(DISTINCT client.client_id) AS female_account_holders\nFROM client\nINNER JOIN disp ON client.client_id = disp.client_id\nINNER JOIN account ON disp.account_id = account.account_id\nINNER JOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F' AND disp.type = 'OWNER'\nGROUP BY district.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT loan.account_id) \nFROM loan \nINNER JOIN account ON loan.account_id = account.account_id \nWHERE loan.date >= '1995-01-01' \nAND loan.date <= '1997-12-31' \nAND loan.amount >= 250000 \nAND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nINNER JOIN loan ON account.account_id = loan.account_id \nWHERE account.district_id = 1 AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) AS male_clients_count\nFROM client\nINNER JOIN (\n  SELECT district_id\n  FROM district\n  ORDER BY A15 DESC\n  LIMIT 1 OFFSET 1\n) AS second_highest_crimes_district ON client.district_id = second_highest_crimes_district.district_id\nWHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT district.A2, trans.amount\nFROM trans\nINNER JOIN account ON trans.account_id = account.account_id\nINNER JOIN district ON account.district_id = district.district_id\nWHERE trans.type = 'VYDAJ' AND trans.operation != 'VYBER KARTOU' AND trans.date LIKE '1996-01%'\nORDER BY trans.amount DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nINNER JOIN loan ON account.account_id = loan.account_id \nWHERE loan.status IN ('C', 'D') AND account.district_id = 1\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) AS male_clients_count\nFROM client\nINNER JOIN (\n  SELECT district_id\n  FROM district\n  ORDER BY A15 DESC\n  LIMIT 1 OFFSET 1\n) AS second_highest_crimes\nON client.district_id = second_highest_crimes.district_id\nWHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT t.account_id\nFROM trans t\nWHERE t.operation = 'VYBER KARTOU'\nAND t.date >= '1998-01-01' AND t.date <= '1998-12-31'\nAND t.amount < (\n    SELECT AVG(t2.amount)\n    FROM trans t2\n    WHERE t2.operation = 'VYBER KARTOU'\n    AND t2.date >= '1998-01-01' AND t2.date <= '1998-12-31'\n)\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT account.frequency, district.A11 AS average_salary\nFROM account\nINNER JOIN district ON account.district_id = district.district_id\nINNER JOIN disp ON account.account_id = disp.account_id\nWHERE district.A11 > 8000 AND district.A11 <= 9000 AND disp.type != 'OWNER'\t----- bird -----\tfinancial",
    "491": "SELECT AVG(district.A15) AS average_crimes\nFROM account\nINNER JOIN district ON account.district_id = district.district_id\nWHERE account.date >= '1997-01-01'\nGROUP BY district.A3\nHAVING AVG(district.A15) > 4000\t----- bird -----\tfinancial",
    "492": "SELECT trans.amount\nFROM trans\nINNER JOIN disp ON trans.account_id = disp.account_id\nINNER JOIN client ON disp.client_id = client.client_id\nWHERE client.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT \n    CAST(COUNT(DISTINCT CASE WHEN c.gender = 'F' THEN c.client_id ELSE NULL END) AS REAL) / COUNT(DISTINCT c.client_id) * 100 AS percentage_of_women\nFROM \n    client c\nINNER JOIN \n    account a ON c.district_id = a.district_id\nINNER JOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    d.A11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT \n    (SUM(CASE WHEN l.date BETWEEN '1997-01-01' AND '1997-12-31' THEN l.amount ELSE 0 END) - \n    SUM(CASE WHEN l.date BETWEEN '1996-01-01' AND '1996-12-31' THEN l.amount ELSE 0 END)) * 100.0 / \n    SUM(CASE WHEN l.date BETWEEN '1996-01-01' AND '1996-12-31' THEN l.amount ELSE 0 END) AS growth_rate\nFROM \n    loan l\n    INNER JOIN account a ON l.account_id = a.account_id\n    INNER JOIN disp d ON a.account_id = d.account_id\n    INNER JOIN client c ON d.client_id = c.client_id\nWHERE \n    c.gender = 'M' AND d.type = 'OWNER' AND \n    (l.date BETWEEN '1996-01-01' AND '1996-12-31' OR l.date BETWEEN '1997-01-01' AND '1997-12-31')\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS statement_requests, \n       (SELECT trans.k_symbol \n        FROM trans \n        WHERE trans.amount = 3539 \n        AND trans.account_id = 3) AS purpose_of_3539\nFROM trans\nWHERE trans.account_id = 3 \nAND trans.k_symbol = 'SLUZBY'\t----- bird -----\tfinancial",
    "496": "SELECT \n    CAST(COUNT(DISTINCT client.client_id) FILTER (WHERE client.gender = 'M' AND account.frequency = 'POPLATEK TYDNE') AS REAL) \n    / COUNT(DISTINCT client.client_id) FILTER (WHERE account.frequency = 'POPLATEK TYDNE') * 100 AS percentage_male_clients\nFROM \n    client\nINNER JOIN \n    account ON client.client_id = account.account_id\nWHERE \n    account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nINNER JOIN disp ON account.account_id = disp.account_id\nINNER JOIN client ON disp.client_id = client.client_id\nINNER JOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount) \nFROM loan \nINNER JOIN account ON loan.account_id = account.account_id \nWHERE loan.status = 'C' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, strftime('%Y', 'now') - strftime('%Y', client.birth_date) AS age\nFROM client\nINNER JOIN disp ON client.client_id = disp.client_id\nINNER JOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}