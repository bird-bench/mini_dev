{
    "0": "SELECT \n    CAST((SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') AS REAL) / \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') as ratio_of_customers\n\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customers.CustomerID\nFROM yearmonth\nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Segment = 'LAM'\nORDER BY yearmonth.Consumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12\nFROM yearmonth\nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE yearmonth.Date BETWEEN '201301' AND '201312'\nAND customers.Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    (SUM(CASE WHEN yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Currency = 'CZK' THEN yearmonth.Consumption ELSE 0 END) - \n    SUM(CASE WHEN yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Currency = 'EUR' THEN yearmonth.Consumption ELSE 0 END)) AS Consumption_Difference\nFROM \n    yearmonth\nJOIN \n    customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE \n    yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Currency IN ('CZK', 'EUR')\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT yearmonth.Date\nFROM yearmonth\nWHERE customers.Currency = 'CZK'\nORDER BY yearmonth.Consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT yearmonth.Date, MAX(yearmonth.Consumption) AS max_consumption\nFROM yearmonth\nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE yearmonth.Date BETWEEN '201301' AND '201312' AND customers.Segment = 'SME'\nGROUP BY yearmonth.Date\nORDER BY max_consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (MAX(CASE WHEN c.Segment = 'SME' THEN y.Consumption END) - MAX(CASE WHEN c.Segment = 'LAM' THEN y.Consumption END)) AS SME_LAM_Difference,\n    (MAX(CASE WHEN c.Segment = 'LAM' THEN y.Consumption END) - MAX(CASE WHEN c.Segment = 'KAM' THEN y.Consumption END)) AS LAM_KAM_Difference,\n    (MAX(CASE WHEN c.Segment = 'KAM' THEN y.Consumption END) - MAX(CASE WHEN c.Segment = 'SME' THEN y.Consumption END)) AS KAM_SME_Difference\nFROM \n    customers c\nJOIN \n    yearmonth y ON c.CustomerID = y.CustomerID\nWHERE \n    c.Currency = 'CZK' AND \n    y.Date BETWEEN '201301' AND '201312'\nGROUP BY \n    c.Segment;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    customers.Segment,\n    (MAX((SUM(CASE WHEN yearmonth.Date = '2013' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN yearmonth.Date = '2012' THEN yearmonth.Consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth.Date = '2013' THEN yearmonth.Consumption ELSE 0 END) * 100)) AS max_percentage_increase,\n    (MIN((SUM(CASE WHEN yearmonth.Date = '2013' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN yearmonth.Date = '2012' THEN yearmonth.Consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth.Date = '2013' THEN yearmonth.Consumption ELSE 0 END) * 100)) AS min_percentage_increase\nFROM \n    customers\nINNER JOIN \n    yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE \n    customers.Segment IN ('SME', 'LAM', 'KAM')\n    AND customers.Currency = 'EUR'\n    AND yearmonth.Date BETWEEN '2012' AND '2013'\nGROUP BY \n    customers.Segment;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE Date >= '201308' \nAND Date <= '201311' \nAND CustomerID = 6;\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS result;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT (COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Amount_of_more_SMEs_currency_CZK_than_EUR\n\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST((CAST(COUNT(*) AS REAL) * 100) / (SELECT COUNT(*) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM')) AS REAL) \nFROM yearmonth \nWHERE Consumption > 46.73 \nAND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM')\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST((COUNT(CASE WHEN yearmonth.Date = '201202' THEN 1 END) * 100.0) / COUNT(*)) AS real\nFROM yearmonth\nWHERE yearmonth.Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS highest_monthly_consumption \nFROM yearmonth \nWHERE Date LIKE '2012%'\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description\nFROM products\nJOIN transactions_1k ON products.ProductID = transactions_1k.ProductID\nJOIN yearmonth ON transactions_1k.Date = yearmonth.Date\nWHERE yearmonth.Date = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT gasstations.Country\nFROM yearmonth\nJOIN transactions_1k ON yearmonth.Date = transactions_1k.Date\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE yearmonth.Date LIKE '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(customers.CustomerID) \nFROM yearmonth \nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID \nWHERE customers.Currency = 'EUR' \nAND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description \nFROM transactions_1k \nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID \nJOIN products ON transactions_1k.ProductID = products.ProductID \nWHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT transactions_1k.Time\nFROM gasstations\nINNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nWHERE gasstations.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(transactions_1k.Date) AS count\nFROM gasstations\nINNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nWHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT customers.Currency\nFROM transactions_1k\nINNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Time = '16:25:00' AND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment\nFROM transactions_1k\nINNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)\nFROM transactions_1k\nINNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-26' \nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\nAND gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT customers.CustomerID\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Amount = 548.4\nAND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST((COUNT(DISTINCT t1.CustomerID) * 100) / COUNT(DISTINCT t2.CustomerID) AS REAL) AS percentage\nFROM transactions_1k t1\nINNER JOIN customers c ON t1.CustomerID = c.CustomerID\nINNER JOIN transactions_1k t2 ON t1.CustomerID = t2.CustomerID\nWHERE t1.Date = '2012-08-25' AND c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT CAST(((\n    SELECT SUM(yearmonth.Consumption) \n    FROM yearmonth \n    WHERE yearmonth.Date LIKE '2012%'\n    GROUP BY yearmonth.CustomerID\n) - (\n    SELECT SUM(yearmonth.Consumption) \n    FROM yearmonth \n    WHERE yearmonth.Date LIKE '2013%'\n    GROUP BY yearmonth.CustomerID\n)) AS REAL) * 100 / (\n    SELECT SUM(transactions_1k.Amount) \n    FROM transactions_1k \n    WHERE transactions_1k.Date = '2012-08-25'\n)) AS result\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (CAST(COUNT(CASE WHEN gasstations.Segment = 'Premium' THEN 1 END) AS REAL) * 100) / COUNT(*)\nFROM \n    gasstations\nWHERE \n    gasstations.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(transactions_1k.Amount) \nFROM transactions_1k \nWHERE transactions_1k.CustomerID = 38508 \nAND transactions_1k.Description = 'Gas Station';\n\nSELECT SUM(transactions_1k.Amount) \nFROM transactions_1k \nWHERE transactions_1k.CustomerID = 38508 \nAND strftime('%Y-%m', transactions_1k.Date) = '2012-01';\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT df1.CustomerID, \n       sum(transactions_1k.Price) / sum(transactions_1k.Amount) as average_price,\n       customers.Currency\nFROM (SELECT transactions_1k.CustomerID, \n             sum(transactions_1k.Price) as total_spending\n      FROM transactions_1k\n      GROUP BY transactions_1k.CustomerID\n      ORDER BY total_spending DESC\n      LIMIT 1) as df1\nJOIN customers ON df1.CustomerID = customers.CustomerID\n\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT yearmonth.Consumption\nFROM transactions_1k\nINNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE transactions_1k.ProductID = 5\nAND transactions_1k.Price / transactions_1k.Amount > 29.00\nAND strftime('%Y%m', transactions_1k.Date) = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE event.event_name = \"Women's Soccer\" AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event.event_id) AS meeting_count\nFROM (\n    SELECT event.event_id, COUNT(attendance.link_to_member) AS member_count\n    FROM table_name\n    GROUP BY event.event_id\n    HAVING COUNT(attendance.link_to_member) > 10\n) AS df1\nWHERE event.type = 'Meeting'\t----- bird -----\tstudent_club",
    "33": "SELECT event_name \nFROM event \nGROUP BY event_id, event_name \nHAVING COUNT(link_to_member) > 20 \nEXCEPT \nSELECT event_name \nFROM event \nWHERE category = 'Fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT income.amount \nFROM member \nJOIN income ON member.member_id = income.link_to_member \nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name, member.last_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.approved\nFROM event\nJOIN expense ON event.event_id = expense.link_to_event\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(expense.cost) \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE member.first_name = 'Elijah' \nAND member.last_name = 'Allen' \nAND (strftime('%m', expense.expense_date) = '09' OR strftime('%m', expense.expense_date) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT SUM(budget.spent) \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE strftime('%Y', event.event_date) = '2019'\nUNION\nSELECT SUM(budget.spent) \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE strftime('%Y', event.event_date) = '2020';\t----- bird -----\tstudent_club",
    "39": "SELECT income.notes \nFROM income \nWHERE income.source = 'Fundraising' \nAND income.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT member.phone\nFROM member\nWHERE member.first_name = 'Carlo' AND member.last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT event.status \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nJOIN expense ON budget.budget_id = expense.link_to_budget \nWHERE expense.expense_description = 'Post Cards, Posters' \nAND expense.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nINNER JOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Business' \nAND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT income.date_received\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT CAST((SELECT SUM(budget.amount) \n             FROM budget \n             INNER JOIN event ON budget.link_to_event = event.event_id \n             WHERE budget.category = 'Advertisement' \n             AND event.event_name = 'Yearly Kickoff') \n             / \n             (SELECT SUM(budget.amount) \n             FROM budget \n             INNER JOIN event ON budget.link_to_event = event.event_id \n             WHERE budget.category = 'Advertisement' \n             AND event.event_name = 'October Meeting') AS REAL) AS result;\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) \nFROM expense \nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(zip_code.city) \nFROM zip_code \nWHERE zip_code.county = 'Orange County' \nAND zip_code.state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM major\nINNER JOIN member ON major.major_id = member.link_to_major\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*)\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE event.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_id, event.event_name, (budget.spent / budget.amount) AS spend_to_budget_ratio\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed'\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_amount_of_budget_spend\nFROM budget\nORDER BY spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) \nFROM budget \nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT member.first_name, member.last_name\nFROM df\nGROUP BY member.member_id, member.first_name, member.last_name\nHAVING COUNT(attendance.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name\nFROM df\nJOIN event ON budget.link_to_event = event.event_id\nJOIN member ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name, MIN(expense.cost) AS lowest_cost\nFROM event\nJOIN expense ON event.event_id = expense.link_to_event\nGROUP BY event.event_name\nORDER BY lowest_cost\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT (CAST(SUM(e1.cost) AS REAL) * 100 / SUM(e2.cost)) AS percentage\nFROM expense e1\nJOIN event ON e1.link_to_budget = budget.budget_id\nJOIN budget ON budget.link_to_event = event.event_id\nJOIN (SELECT SUM(cost) AS cost FROM expense) e2\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "59": "SELECT income.source\nFROM income\nWHERE income.date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY income.source\nORDER BY SUM(amount) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM major \nINNER JOIN member ON major.major_id = member.link_to_major \nWHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT df1.member_id, df2.event_id\nFROM member AS df1\nINNER JOIN attendance AS df2 ON df1.member_id = df2.link_to_member\nINNER JOIN event AS df3 ON df2.link_to_event = df3.event_id\nWHERE df1.first_name = 'Maya' AND df1.last_name = 'Mclean' AND df3.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN event ON expense.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.status = 'Closed' AND budget.remaining < 0\nORDER BY budget.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nJOIN expense ON budget.budget_id = expense.link_to_budget \nWHERE event.event_name = 'October Meeting' \nAND expense.approved = 'true' \nGROUP BY expense.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT budget.category, SUM(budget.amount) AS total_budgeted_amount\nFROM event\nINNER JOIN budget ON event.event_id = budget.link_to_event\nWHERE event.event_name = 'April Speaker'\nGROUP BY budget.category\nORDER BY total_budgeted_amount ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) \nFROM expense \nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT member.first_name, member.last_name, SUM(expense.cost) AS total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY member.first_name, member.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT expense.expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT event.type\nFROM event\nWHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category \nFROM event \nINNER JOIN budget ON event.event_id = budget.link_to_event \nWHERE event.location = 'MU 215' \nAND event.type = 'Guest Speaker' \nAND budget.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT CAST((COUNT(CASE WHEN amount = 50 THEN 1 END) * 100) / COUNT(member_id) AS REAL) AS percentage\nFROM member\nWHERE t_shirt_size = 'Medium' AND position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event.event_name \nFROM event \nWHERE event.type = 'Game' \nAND event.status = 'Closed' \nAND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name, member.last_name, member.phone, expense.expense_id\nFROM expense\nINNER JOIN member ON expense.link_to_member = member.member_id\nGROUP BY expense.expense_id\nHAVING expense.cost > AVG(expense.cost)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name, member.last_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\nAND member.first_name = 'Tyler'\nAND member.last_name = 'Woodard'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE income.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "78": "SELECT \n    (CAST((COUNT(Patient.ID WHERE Patient.SEX = 'M' AND Patient.Admission = '+') - COUNT(Patient.ID WHERE Patient.SEX = 'M' AND Patient.Admission = '-'), REAL) * 100 / COUNT(Patient.ID WHERE Patient.SEX = 'M' AND Patient.Admission = '-')) AS deviation_percentage\nFROM \n    Patient;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT (CAST(COUNT(Patient.ID) * 100 AS real) / (SELECT COUNT(Patient.ID) FROM Patient WHERE strftime('%Y', Patient.Birthday) > '1930' AND Patient.SEX = 'F')) AS percentage_female_born_after_1930\nFROM Patient\nWHERE strftime('%Y', Patient.Birthday) > '1930' AND Patient.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(COUNT(Patient.ID WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '+') AS REAL) / COUNT(Patient.ID WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '-') AS ratio\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday \nFROM Laboratory \nINNER JOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Examination\nINNER JOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.RVVT = '+';\n\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Examination\nINNER JOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' \nAND strftime('%Y', Description) = '1997' \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)\nFROM Examination\nINNER JOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.Thrombosis = 1\nAND Patient.SEX = 'F'\nAND strftime('%Y', Examination.ExamDate) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Examination.Symptoms, Examination.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.Birthday = (SELECT MIN(Birthday) FROM Patient)\nAND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Date, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Laboratory.Date ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    CAST(SUM(CASE WHEN Patient.SEX = 'M' AND Laboratory.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN Patient.SEX = 'F' AND Laboratory.UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) AS ratio_of_male_to_female_patients\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(*)\nFROM Patient\nINNER JOIN Examination ON Patient.ID = Examination.ID\nWHERE strftime('%Y', Patient.Birthday) < 18\nAND strftime('%Y', Examination.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    SUBTRACT(strftime('%Y', Examination.`Examination Date`), strftime('%Y', Patient.Birthday)) AS Age,\n    Examination.Diagnosis\nFROM \n    df AS df1\n    INNER JOIN (\n        SELECT \n            Examination.ID\n        FROM \n            df AS df1\n        GROUP BY \n            Examination.ID\n        HAVING \n            MAX(HGB)\n    ) AS df2 ON df1.Examination.ID = df2.Examination.ID\nWHERE \n    df1.Examination.ID = df2.Examination.ID;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Examination.`aCL IgM`\nFROM Examination\nINNER JOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND Examination.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT ((SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) * 100) / SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END) AS decrease_rate\nFROM df\nWHERE Birthday = '1959-02-18' AND (Date LIKE '1981-11-%' OR Date LIKE '1981-12-%')\n\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Examination.ID, Patient.ID\nFROM Laboratory\nINNER JOIN Examination ON Laboratory.ID = Examination.ID\nWHERE Laboratory.GPT > 30 \nAND Laboratory.ALB < 4 \nAND Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*)\nFROM Examination\nWHERE Thrombosis = 2\nAND `ANA Pattern` = 'S'\nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(Laboratory.ALB) \nFROM df \nWHERE Patient.SEX = 'F' \nAND Laboratory.PLT > 400 \nAND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)\nFROM Patient\nINNER JOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST((COUNT(CASE WHEN YEAR(Birthday) = '1980' AND Diagnosis = 'RA' AND SEX = 'F' THEN 1 END) * 100) / COUNT(CASE WHEN YEAR(Birthday) = '1980' AND Diagnosis = 'RA' THEN 1 END) AS REAL) \nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT COUNT(Laboratory.UA) \nFROM table \nWHERE Patient.ID = 57266 \nAND ((Laboratory.UA > 8.0 AND Patient.SEX = 'M') OR (Laboratory.UA > 6.5 AND Patient.SEX = 'F'))\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Patient.ID\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.Diagnosis \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.GPT > 60 \nORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday \nFROM Patient \nWHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT Patient.SEX, COUNT(Laboratory.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.T_BIL >= 2.0 \nGROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(NOW()) - YEAR(Patient.Birthday)) AS average_age\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID) \nFROM \n    (SELECT Patient.ID \n     FROM \n         (SELECT * \n          FROM \n              (SELECT * \n               FROM \n                   (SELECT * \n                    FROM Patient \n                    INNER JOIN Laboratory ON Patient.ID = Laboratory.ID) \n               WHERE Laboratory.TG >= 200) \n          WHERE (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50) \n     GROUP BY Patient.ID) as res;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE strftime('%Y', Patient.Birthday) BETWEEN '1936' AND '1956' \nAND Patient.SEX = 'M' \nAND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, Patient.Diagnosis, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nWHERE Laboratory.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX \nFROM Patient \nWHERE Patient.Diagnosis = 'SLE' \nAND Patient.ID IN (SELECT ID \n                   FROM Laboratory \n                   WHERE HGB > 10 AND HGB < 17) \nORDER BY Patient.Birthday DESC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) > 2\nAND Laboratory.HCT >= 52;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) - (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS result;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.Birthday\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE strftime('%Y', Laboratory.Date) = '1984'\nAND (strftime('%Y', current_timestamp) - strftime('%Y', Patient.Birthday)) < 50\nAND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (CAST(SUM(CASE WHEN (strftime('%Y', current_timestamp) - strftime('%Y', Birthday)) > 55 AND Laboratory.PT >= 14 THEN 1 ELSE 0 END) AS REAL) * 100) / SUM(CASE WHEN Laboratory.PT >= 14 THEN 1 ELSE 0 END) \nFROM Patient \nINNER JOIN Examination ON Patient.ID = Examination.ID \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(*)\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.WBC > 3.5\nAND Laboratory.WBC < 9.0\nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT DISTINCT Patient.ID\nFROM Laboratory\nWHERE Laboratory.IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Examination \nINNER JOIN Laboratory ON Examination.ID = Laboratory.ID \nWHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 \nAND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(Patient.ID) \nFROM Laboratory \nINNER JOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 \nAND strftime('%Y', Patient.`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Patient.Diagnosis\nFROM \n    (SELECT Patient.Diagnosis, COUNT(*) AS diagnosis_count\n     FROM \n         (SELECT *\n          FROM \n              (SELECT *\n               FROM df\n               WHERE Laboratory.IGM <= 40\n               UNION\n               SELECT *\n               FROM df\n               WHERE Laboratory.IGM >= 400) AS df1\n          WHERE df1.ID = Laboratory.ID) AS df2\n     GROUP BY Patient.Diagnosis\n     ORDER BY diagnosis_count DESC\n     LIMIT 1) AS res;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRP = '+'\nAND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)\nFROM \n    (SELECT *\n     FROM \n         (SELECT *\n          FROM table\n          WHERE Laboratory.CRE >= 1.5) AS df1\n     WHERE (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70) AS df2;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (Laboratory.RNP = '-' OR Laboratory.RNP = '+-')\nAND Patient.Admission = '+'\n\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM \n    Laboratory\nWHERE \n    (SM IN ('-', '+-') OR SM = 'negative')\n    AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Laboratory \nINNER JOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Laboratory.SC170 IN ('negative', '0') \nAND Patient.SEX = 'F' \nAND symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID) AS male_count\nFROM Laboratory\nINNER JOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.CENTROMEA IN ('-', '+-')\nAND Laboratory.SSB IN ('-', '+-')\nAND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT Patient.Birthday \nFROM Patient \nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.GOT >= 60 \nORDER BY Patient.Birthday ASC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*)\nFROM Laboratory\nWHERE Laboratory.CPK < 250\nAND (Laboratory.KCT = '+' OR Laboratory.RVVT = '+' OR Laboratory.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY Match.league_id\nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND (Match.away_team_goal - Match.home_team_goal) > 0\nGROUP BY Match.away_team_api_id\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed\nFROM Team\nINNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nORDER BY Team_Attributes.buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016' AND Match.goal = 'Draw'\nGROUP BY Match.league_id\nORDER BY COUNT(Match.id) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT (STRFTIME('%Y', 'now') - STRFTIME('%Y', Player.birthday)) AS player_age\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.sprint_speed >= 97\nAND STRFTIME('%Y', Player_Attributes.date) >= '2013'\nAND STRFTIME('%Y', Player_Attributes.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) \nFROM Match \nJOIN League ON Match.league_id = League.id \nGROUP BY Match.league_id, League.name \nORDER BY COUNT(Match.id) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT Team.team_fifa_api_id\nFROM Team\nJOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id\nWHERE Team_Attributes.buildUpPlaySpeed > 50 AND Team_Attributes.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT Team.team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE strftime('%Y', Team_Attributes.date) = '2012'\nGROUP BY Team.team_long_name\nHAVING avg(Team_Attributes.buildUpPlayPassing) > (SELECT SUM(buildUpPlayPassing) / COUNT(team_long_name) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL)\n\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST((COUNT(CASE WHEN Player_Attributes.preferred_foot = 'left' AND strftime('%Y', Player.birthday) BETWEEN '1987' AND '1992' THEN 1 END) * 100) AS REAL) / COUNT(Player.player_fifa_api_id) AS percentage_of_left_foot_players_between_1987_and_1992\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(Player_Attributes.long_shots) \nFROM Player_Attributes \nINNER JOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id \nWHERE Player.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2009/2010'\nGROUP BY Match.league_id\nHAVING SUM(Match.home_team_goal) / COUNT(DISTINCT Match.id) > SUM(Match.away_team_goal) / COUNT(DISTINCT Match.id)\t----- bird -----\teuropean_football_2",
    "140": "SELECT Player.birthday, Player.player_name\nFROM Player\nWHERE substr(Player.birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT Player_Attributes.overall_rating\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas'\nAND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nWHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') \nAND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_name\nFROM (\n    SELECT player_name, AVG(finishing) AS avg_finishing\n    FROM Player_Attributes\n    INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\n    GROUP BY Player.player_api_id\n) AS df1\nWHERE height = (SELECT MAX(height) FROM Player)\nUNION\nSELECT player_name\nFROM (\n    SELECT player_name, AVG(finishing) AS avg_finishing\n    FROM Player_Attributes\n    INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\n    GROUP BY Player.player_api_id\n) AS df2\nWHERE height = (SELECT MIN(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nINNER JOIN Player \nON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.height > 170 \nAND strftime('%Y', Player_Attributes.date) >= '2010' \nAND strftime('%Y', Player_Attributes.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SELECT AVG(ball_control) FROM Player_Attributes \n     WHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Abdou Diallo')) \n    - \n    (SELECT AVG(ball_control) FROM Player_Attributes \n     WHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Aaron Appindangoye')) \n    AS difference_of_average_ball_control_score\t----- bird -----\teuropean_football_2",
    "146": "SELECT \n    CASE \n        WHEN (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') < (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada') \n        THEN 'Aaron Lennon' \n        ELSE 'Abdelaziz Barrada' \n    END AS older_player\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name\nFROM Player\nORDER BY height DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*)\nFROM Player_Attributes\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT Player_Attributes.id) \nFROM Player_Attributes \nINNER JOIN Player \nON Player_Attributes.player_api_id = Player.player_api_id \nWHERE strftime('%Y', Player.birthday) < '1986' \nAND Player_Attributes.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.dribbling > 70\nAND Player_Attributes.volleys > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(Match.id) \nFROM Match \nINNER JOIN League ON Match.league_id = League.id \nWHERE League.name = 'Belgium Jupiler League' \nAND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2008/2009'\nGROUP BY Match.league_id\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) AS REAL) * 100) / \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) AS result;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino')\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score, chanceCreationPassingClass AS classification\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE team_long_name = 'Ajax'\nGROUP BY chanceCreationPassingClass\nORDER BY highest_chance_creation_passing_score DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT Player_Attributes.overall_rating\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT Player_Attributes.attacking_work_rate\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Francesco Migliore'\nAND Player_Attributes.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT Player_Attributes.date\nFROM Player_Attributes\nWHERE Player_Attributes.player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant')\nORDER BY Player_Attributes.crossing DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT Team_Attributes.buildUpPlayPassingClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\n\t----- bird -----\teuropean_football_2",
    "161": "SELECT Team_Attributes.defenceAggressionClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%'\n\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player.player_name = 'Marko Arnautovic' \nAND SUBSTR(date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    ((SELECT SUM(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') - \n    (SELECT SUM(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')) * 100 / \n    (SELECT SUM(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')\t----- bird -----\teuropean_football_2",
    "164": "SELECT Player.player_name\nFROM Player\nORDER BY Player.height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": "SELECT Player.player_name\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nORDER BY Player_Attributes.overall_rating DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.player_name\nFROM Player\nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(Player.player_name) AS count\nFROM Player\nWHERE Player.player_name LIKE 'Aaron%' AND Player.birthday > '1990';\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT Player_Attributes.id\nFROM Player\nJOIN Player_Attributes ON Player.id = Player_Attributes.player_api_id\nWHERE Player_Attributes.potential = (\n    SELECT MIN(potential) \n    FROM Player_Attributes\n)\nAND Player_Attributes.preferred_foot = 'right'\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*)\nFROM Player_Attributes\nGROUP BY preferred_foot\nHAVING MAX(crossing) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT Match.home_team_goal, Match.away_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgian Jupiler League' AND Match.date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "173": "SELECT Team_Attributes.buildUpPlaySpeedClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT Player_Attributes.finishing, Player_Attributes.curve\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nORDER BY Player.weight DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY Match.league_id\nORDER BY COUNT(Match.id) DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE Match.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "177": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nORDER BY Player_Attributes.overall_rating DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT (CAST(COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END) AS REAL) * 100 / COUNT(id)) AS percentage\nFROM Player_Attributes\nINNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id;\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverRef\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 20\nAND qualifying.q1 = (SELECT MAX(q1) FROM qualifying WHERE raceId = 20)\nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 19\nORDER BY qualifying.q2\nLIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT qualifying.q1\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceId = 354\t----- bird -----\tformula_1",
    "185": "SELECT qualifying.number \nFROM qualifying \nWHERE qualifying.q3 LIKE '0:01:54%' \nAND qualifying.raceId = 903;\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(results.time) \nFROM races \nINNER JOIN results ON races.raceId = results.raceId \nWHERE races.name = 'Bahrain Grand Prix' \nAND races.year = 2007 \nAND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT drivers.driverRef, drivers.url\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE lapTimes.time LIKE '0:01:27%'\nAND lapTimes.raceId = 161;\t----- bird -----\tformula_1",
    "189": "SELECT location, lat, lng\nFROM circuits\nWHERE name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 45\nAND qualifying.q3 LIKE '0:01:33%'\n\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url, seasons.year\nFROM seasons\nWHERE seasons.year = (SELECT races.year FROM races WHERE races.raceId = 901)\t----- bird -----\tformula_1",
    "193": "SELECT drivers.forename, drivers.surname \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nWHERE results.raceId = 872 AND results.time IS NOT NULL \nORDER BY drivers.dob DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.fastestLapSpeed = (SELECT MAX(results.fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT \n    CAST((SELECT SUM(results.fastestLapSpeed) \n          FROM results \n          INNER JOIN drivers ON results.driverId = drivers.driverId \n          WHERE drivers.forename = 'Paul' \n          AND drivers.surname = 'di Resta' \n          AND results.raceId = 853) \n          - \n          (SELECT SUM(results.fastestLapSpeed) \n          FROM results \n          WHERE results.raceId = 854), \n          REAL) * 100 / \n          (SELECT SUM(results.fastestLapSpeed) \n          FROM results \n          WHERE results.raceId = 854) AS percentage\n\t----- bird -----\tformula_1",
    "196": "SELECT COUNT(results.driverId) / COUNT(results.driverId) AS percentage\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.date = '1983-07-16' AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE year = (SELECT MIN(year) FROM races) \nAND strftime('%m', date) = (SELECT strftime('%m', MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, driverStandings.points\nFROM driverStandings\nJOIN drivers ON driverStandings.driverId = drivers.driverId\nORDER BY driverStandings.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT drivers.forename, drivers.surname, races.name\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nORDER BY results.fastestLapTime ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) \nFROM lapTimes \nJOIN races ON lapTimes.raceId = races.raceId \nJOIN drivers ON lapTimes.driverId = drivers.driverId \nWHERE races.name = 'Malaysian Grand Prix' \nAND drivers.forename = 'Lewis' \nAND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "201": "SELECT (CAST((COUNT(results.raceId) WHERE drivers.surname = 'Hamilton' AND results.position > 1 AND seasons.year >= 2010) AS REAL) * 100 / COUNT(results.raceId) WHERE drivers.surname = 'Hamilton' AND seasons.year >= 2010) AS percentage\nFROM results\nINNER JOIN drivers ON results.driverId = drivers.driverId\nINNER JOIN seasons ON results.raceId = seasons.year;\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) AS max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nHAVING MAX(driverStandings.wins)\n\t----- bird -----\tformula_1",
    "203": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nWHERE drivers.nationality = 'Japanese'\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005;\t----- bird -----\tformula_1",
    "205": "SELECT races.name\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nGROUP BY results.raceId, races.name, races.year\nORDER BY min(results.milliseconds)\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nGROUP BY results.driverId\nHAVING MIN(races.year)\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')) AS percentage\nFROM races\nWHERE name = 'European Grand Prix' AND country = 'Germany';\t----- bird -----\tformula_1",
    "209": "SELECT circuits.lat, circuits.lng\nFROM circuits\nWHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality \nFROM drivers \nORDER BY dob ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT races.name\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(results.fastestLapSpeed) \nFROM results \nINNER JOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008;\t----- bird -----\tformula_1",
    "216": "SELECT results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'AustChineseralian Grand Prix' AND races.year = 2008 AND results.position = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(results.driverId) \nFROM races \nJOIN results ON races.raceId = results.raceId \nWHERE races.year = 2008 \nAND races.name = 'Chinese Grand Prix' \nAND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT CAST((results.time - champion_time) * 100 / champion_time AS REAL) AS res\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2008\nAND races.name = 'Australian Grand Prix'\nAND results.time IS NOT NULL\n\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE country = 'Australia' \nAND location = 'Adelaide'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(constructorStandings.points) \nFROM constructors \nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId \nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name\nFROM constructorResults\nINNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 291\nAND constructorResults.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(constructors.constructorId) AS count\nFROM \n    (SELECT constructors.constructorId\n    FROM \n        (SELECT *\n        FROM constructors\n        WHERE constructors.nationality = 'Japanese') AS df1\n    INNER JOIN constructorStandings ON df1.constructorId = constructorStandings.constructorId\n    GROUP BY constructors.constructorId\n    HAVING COUNT(constructorStandings.raceId) = 2 AND SUM(constructorStandings.points) = 0) AS df2;\t----- bird -----\tformula_1",
    "223": "SELECT CAST((COUNT(results.driverId) * 100) / COUNT(results.driverId) AS REAL) AS race_completion_percentage\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nINNER JOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.nationality = 'Japanese' \nAND races.year BETWEEN 2007 AND 2009 \nAND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "224": "SELECT races.year, AVG(SUBSTR(results.time, INSTR(results.time, ':') + 1)) AS average_time_seconds\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE races.year < 1975 AND results.time IS NOT NULL AND results.time LIKE '%:%'\nGROUP BY races.year;\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap\nFROM results\nWHERE results.position = 1\nAND results.year = 2009;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(results.fastestLapSpeed) \nFROM races \nJOIN results ON races.raceId = results.raceId \nWHERE races.name = 'Spanish Grand Prix' \nAND races.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT (CAST(COUNT(driverId) * 100 AS REAL) / COUNT(driverId)) AS percentage\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE strftime('%Y', drivers.dob) < 1985\nAND races.year BETWEEN 2000 AND 2005\nAND driverStandings.lap > 50;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*)\nFROM drivers\nINNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId\nWHERE drivers.nationality = 'French' AND lapTimes.time < '02:00.00';\t----- bird -----\tformula_1",
    "229": "SELECT code\nFROM drivers\nWHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT code \nFROM drivers \nORDER BY dob DESC \nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT drivers.driverRef \nFROM drivers \nWHERE drivers.nationality = 'German' \nORDER BY drivers.dob ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code\nFROM results\nINNER JOIN drivers ON results.driverId = drivers.driverId\nWHERE strftime('%Y', drivers.dob) = '1971' AND results.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(results.time) \nFROM results \nJOIN status ON results.statusId = status.statusId \nWHERE results.raceId > 50 AND results.raceId < 100 \nAND results.time IS NOT NULL \nAND status.statusId = 2;\t----- bird -----\tformula_1",
    "234": "SELECT circuits.location, circuits.lat, circuits.lng\nFROM circuits\nWHERE circuits.country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT MIN(races.year) AS first_qualifying_year, races.name, races.date, races.time\nFROM qualifying\nJOIN races ON qualifying.raceId = races.raceId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nGROUP BY qualifying.driverId\t----- bird -----\tformula_1",
    "236": "SELECT drivers.forename, drivers.surname, AVG(pitStops.duration) AS avg_duration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' AND year(drivers.dob) BETWEEN 1980 AND 1985\nGROUP BY drivers.driverId, drivers.forename, drivers.surname\nORDER BY avg_duration\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008\nORDER BY results.position\nLIMIT 1;\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN constructors ON results.constructorId = constructors.constructorId\nWHERE races.name = '2009 Singapore Grand Prix'\nORDER BY races.time DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name\nFROM hero_power\nINNER JOIN superhero ON hero_power.hero_id = superhero.id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT constructors.name, constructors.nationality, sum(constructorResults.points) AS total_points\nFROM constructorResults\nJOIN races ON constructorResults.raceId = races.raceId\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE races.name = 'Monaco Grand Prix' AND races.year >= 1980 AND races.year <= 2010\nGROUP BY constructors.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname\nFROM races\nJOIN qualifying ON races.raceId = qualifying.raceId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE races.year = 2008\nAND races.name = 'Marina Bay Street Circuit'\nAND qualifying.number = 3\nGROUP BY qualifying.driverId\nHAVING MIN(qualifying.position)\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename || ' ' || drivers.surname, drivers.nationality, races.name\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nORDER BY drivers.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) \nFROM results \nWHERE statusId = 3 \nAND raceId = (SELECT raceId \n              FROM races \n              WHERE name = 'Canadian Grand Prix') \nGROUP BY driverId \nORDER BY COUNT(*) DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nGROUP BY lapTimes.driverId\nORDER BY MIN(lapTimes.time)\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name, lapTimes.time\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nORDER BY lapTimes.time ASC;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(superhero.id) \nFROM hero_power \nINNER JOIN superhero ON hero_power.hero_id = superhero.id \nINNER JOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' \nAND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name \nFROM superhero \nINNER JOIN colour ON superhero.eye_colour_id = colour.id \nINNER JOIN colour ON superhero.hair_colour_id = colour.id \nWHERE colour.colour = 'Blue' \nAND colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY superhero.eye_colour_id\nORDER BY COUNT(superhero.id) DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM publisher\nJOIN superhero ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON hero_attribute.hero_id = superhero.id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value\nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(superhero.id) \nFROM superhero \nINNER JOIN publisher ON superhero.publisher_id = publisher.id \nINNER JOIN colour ON superhero.eye_colour_id = colour.id \nWHERE colour.colour = 'Gold' \nAND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM hero_attribute\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN superhero ON hero_attribute.hero_id = superhero.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race\nFROM race\nJOIN superhero ON race.id = superhero.race_id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM hero_attribute\nJOIN superhero ON hero_attribute.hero_id = superhero.id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM hero_power\nINNER JOIN superhero ON hero_power.hero_id = superhero.id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*)\nFROM hero_attribute\nINNER JOIN superhero ON hero_attribute.hero_id = superhero.id\nINNER JOIN gender ON superhero.gender_id = gender.id\nINNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT (CAST(COUNT(s.id) AS REAL) * 100 / COUNT(a.id)) \nFROM superhero s \nINNER JOIN alignment a ON s.alignment_id = a.id \nINNER JOIN publisher p ON s.publisher_id = p.id \nWHERE a.alignment = 'Bad' \nAND p.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "260": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference\t----- bird -----\tsuperhero",
    "261": "SELECT publisher.id\nFROM publisher\nWHERE publisher.publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*)\nFROM superhero\nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(superhero.weight_kg) \nFROM superhero \nINNER JOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT superpower.power_name \nFROM superpower \nINNER JOIN hero_power ON superpower.id = hero_power.power_id \nINNER JOIN superhero ON hero_power.hero_id = superhero.id \nINNER JOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Male' \nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name \nFROM superhero \nWHERE superhero.height_cm BETWEEN 170 AND 190 \nAND superhero.eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour \nFROM colour \nJOIN superhero ON superhero.hair_colour_id = colour.id \nJOIN race ON superhero.race_id = race.id \nWHERE superhero.height_cm = 185 \nAND race.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT (COUNT(CASE WHEN superhero.height_cm BETWEEN 150 AND 180 THEN 1 END) * 100 / COUNT(superhero.id)) \nFROM superhero \nINNER JOIN publisher ON superhero.publisher_id = publisher.id \nWHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name \nFROM superhero \nINNER JOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Male' \nAND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name\nFROM hero_power\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE hero_power.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_power.hero_id) \nFROM hero_power \nINNER JOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name \nFROM hero_attribute \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nJOIN superhero ON hero_attribute.hero_id = superhero.id \nWHERE attribute.attribute_name = 'Strength' \nORDER BY hero_attribute.attribute_value DESC \nLIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE attribute.attribute_name = 'Durability' \nAND publisher.publisher_name = 'Dark Horse Comics'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT colour.colour AS eye_colour, \n       c.colour AS hair_colour, \n       sc.colour AS skin_colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN colour c ON superhero.hair_colour_id = c.id\nJOIN colour sc ON superhero.skin_colour_id = sc.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female' \nAND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.hair_colour_id = superhero.skin_colour_id\nAND superhero.hair_colour_id = superhero.eye_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT (CAST(COUNT(s1.id) AS REAL) * 100 / COUNT(s2.id)) AS percentage \nFROM superhero AS s1 \nINNER JOIN gender AS g ON s1.gender_id = g.id \nINNER JOIN colour AS c ON s1.skin_colour_id = c.id \nCROSS JOIN (SELECT id FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female') AS s2 \nWHERE g.gender = 'Female' AND c.colour = 'Blue';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(hero_power.hero_id) AS power_count\nFROM hero_power\nINNER JOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nINNER JOIN colour ON superhero.hair_colour_id = colour.id\nWHERE colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM hero_attribute \nWHERE attribute_id = (SELECT id \n                      FROM attribute \n                      WHERE attribute_name = 'Strength') \n      AND attribute_value = (SELECT MAX(attribute_value) \n                             FROM hero_attribute \n                             WHERE attribute_id = (SELECT id \n                                                   FROM attribute \n                                                   WHERE attribute_name = 'Strength'));\t----- bird -----\tsuperhero",
    "281": "SELECT (COUNT(CASE WHEN gender.gender = 'Female' THEN 1 END) * 100) / COUNT(*) AS percent_female_heroes_published_by_marvel_comics\nFROM superhero\nINNER JOIN publisher ON superhero.publisher_id = publisher.id\nINNER JOIN gender ON superhero.gender_id = gender.id\nWHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler') AS difference;\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height\nFROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name\nFROM hero_power\nINNER JOIN superhero ON hero_power.hero_id = superhero.id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM hero_attribute\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN superhero ON hero_attribute.hero_id = superhero.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM hero_attribute\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN superhero ON hero_attribute.hero_id = superhero.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nINNER JOIN colour ON superhero.hair_colour_id = colour.id\nWHERE colour.colour = 'Blue' AND colour.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT DISTINCT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT (CAST(COUNT(superhero.superhero_name WHERE colour.colour = 'Blue') AS REAL) * 100 / COUNT(superhero.superhero_name)) AS percentage\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id;\t----- bird -----\tsuperhero",
    "290": "SELECT CAST((SELECT COUNT(*) FROM superhero WHERE gender_id = 1) AS REAL) / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) AS ratio;\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour\nFROM colour\nJOIN superhero ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT \n    (SUM(CASE WHEN superhero.weight_kg = 0 OR superhero.weight_kg IS NULL THEN 1 ELSE 0 END AND superhero.eye_colour_id = 7) - \n    SUM(CASE WHEN superhero.weight_kg = 0 OR superhero.weight_kg IS NULL THEN 1 ELSE 0 END AND superhero.eye_colour_id = 1)) AS weight_difference\nFROM \n    superhero\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name \nFROM superhero \nINNER JOIN hero_power ON superhero.id = hero_power.hero_id \nINNER JOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Wind Control' \nORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT \n    (SELECT COUNT(*) FROM publisher WHERE publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM publisher WHERE publisher_name = 'Marvel Comics') AS difference\n\t----- bird -----\tsuperhero",
    "297": "SELECT MAX(Reputation) \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName\nFROM users\nWHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(users.LastAccessDate) AS count_of_users\nFROM users\nWHERE users.LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(posts.Id) AS post_count\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(posts.Id) \nFROM posts \nINNER JOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Age > 65 AND posts.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.Body\nFROM posts\nJOIN tags ON tags.ExcerptPostId = posts.Id\nWHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(posts.Score) \nFROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST((COUNT(posts.Id) * 100) / (SELECT COUNT(posts.Id) FROM posts WHERE posts.Score > 5) AS REAL) \nFROM posts \nINNER JOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Age > 65 AND posts.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.FavoriteCount\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = '3025' AND comments.CreationDate = '2014/4/23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "308": "SELECT posts.ClosedDate\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = '23853' AND comments.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(posts.Id) AS post_count\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE users.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nINNER JOIN users ON votes.UserId = users.Id\nWHERE votes.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST((COUNT(posts.Id) / COUNT(votes.Id)) AS REAL) AS result\nFROM posts\nINNER JOIN votes ON posts.OwnerUserId = votes.UserId\nWHERE posts.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT posts.ViewCount\nFROM posts\nWHERE posts.Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT comments.Text\nFROM comments\nWHERE comments.Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName\nFROM users\nJOIN comments ON users.Id = comments.UserId\nWHERE comments.Text = 'thank you user93'\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text\nFROM posts\nJOIN postHistory ON posts.Id = postHistory.PostId\nJOIN comments ON comments.PostId = posts.Id\nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName\nFROM votes\nINNER JOIN posts ON votes.PostId = posts.Id\nINNER JOIN users ON votes.UserId = users.Id\nWHERE votes.BountyAmount = 50\nAND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT posts.Title, posts.Body, AVG(posts.ViewCount) AS average_view_count\nFROM posts\nJOIN postLinks ON posts.Id = postLinks.PostId\nJOIN tags ON postLinks.RelatedPostId = tags.ExcerptPostId\nWHERE tags.TagName = 'humor'\nGROUP BY posts.Title, posts.Body;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(badges.UserId) AS awarded_users\nFROM badges\nGROUP BY badges.UserId\nHAVING COUNT(badges.Name) > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT users.DisplayName\nFROM postHistory\nINNER JOIN posts ON postHistory.PostId = posts.Id\nINNER JOIN users ON postHistory.UserId = users.Id\nGROUP BY postHistory.UserId, posts.Id\nHAVING count(postHistory.PostId) = 1\nAND posts.ViewCount >= 1000;\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    ((CAST((COUNT(Name WHERE strftime('%Y', Date) = '2010') * 100) / COUNT(Name), REAL)) - (COUNT(Name WHERE strftime('%Y', Date) = '2011') * 100 / COUNT(Name))) AS percentage_difference\nFROM \n    badges\nWHERE \n    Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT \n    CAST(SUM(u.UpVotes) AS REAL) / COUNT(u.Id) AS avg_up_votes,\n    CAST(SUM(u.Age) AS REAL) / COUNT(u.Id) AS avg_user_age\nFROM \n    users u\nJOIN \n    posts p ON u.Id = p.OwnerUserId\nGROUP BY \n    u.Id\nHAVING \n    COUNT(p.Id) > 10;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    CAST(COUNT(Id) FILTER (WHERE strftime('%Y', CreationDate) = '2010') AS REAL) / \n    COUNT(Id) FILTER (WHERE strftime('%Y', CreationDate) = '2011') \nFROM \n    votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT posts.Id\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'slashnick'\nORDER BY posts.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(total_view_count)\nFROM (\n    SELECT SUM(ViewCount) AS total_view_count\n    FROM posts\n    INNER JOIN users ON posts.OwnerUserId = users.Id\n    WHERE users.DisplayName = 'Harvey Motulsky'\n    UNION\n    SELECT SUM(ViewCount) AS total_view_count\n    FROM posts\n    INNER JOIN users ON posts.OwnerUserId = users.Id\n    WHERE users.DisplayName = 'Noah Snyder'\n) as view_counts;\t----- bird -----\tcodebase_community",
    "327": "SELECT posts.Tags, tags.TagName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nJOIN tags ON posts.Tags LIKE '%' || tags.TagName || '%'\nWHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(COUNT(p.Id) * 100.0 / (SELECT COUNT(Id) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')) AS REAL) AS percentage\nFROM posts p\nINNER JOIN tags t ON p.Id = t.Id\nWHERE t.TagName = 'r'\t----- bird -----\tcodebase_community",
    "329": "SELECT (SUM(p1.ViewCount) - SUM(p2.ViewCount)) AS view_count_difference\nFROM posts p1\nJOIN users u1 ON p1.OwnerUserId = u1.Id\nJOIN posts p2 ON p2.OwnerUserId = u2.Id\nWHERE u1.DisplayName = 'Mornington' AND u2.DisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(postLinks.Id) / 12 AS average_monthly_links_created\nFROM postLinks\nINNER JOIN posts ON postLinks.PostId = posts.Id\nWHERE strftime('%Y', postLinks.CreationDate) = '2010' \nAND posts.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(votes.CreationDate) \nFROM votes \nINNER JOIN users ON votes.UserId = users.Id \nWHERE users.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName\nFROM badges\nINNER JOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Autobiographer'\nORDER BY badges.Date\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(users.Id)\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.Id, posts.Title \nFROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.DisplayName = 'Harvey Motulsky' \nORDER BY posts.ViewCount DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.Id, posts.OwnerDisplayName\nFROM posts\nWHERE strftime('%Y', CreationDate) = '2010'\nORDER BY posts.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT (CAST(COUNT(posts.Id) * 100.0 / COUNT(posts.Id) AS REAL)) AS percentage\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE strftime('%Y', users.CreationDate) = '2011' AND users.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": "SELECT users.DisplayName, posts.ViewCount\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Computer Game Datasets'\nORDER BY posts.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(comments.Id) \nFROM comments \nWHERE comments.PostId = (SELECT posts.Id \n                         FROM posts \n                         ORDER BY posts.Score DESC \n                         LIMIT 1)\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nJOIN users ON comments.UserId = users.Id\nWHERE posts.Title = 'Analysing wind data with R'\nORDER BY comments.CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST((COUNT(posts.Id) * 100) / (SELECT COUNT(posts.Id) FROM posts WHERE OwnerUserId = (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING MAX(users.Reputation))), REAL) AS percentage\nFROM posts\nWHERE OwnerUserId = (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING MAX(users.Reputation))\nAND Score > 50;\t----- bird -----\tcodebase_community",
    "341": "SELECT tags.WikiPostId, tags.ExcerptPostId \nFROM tags \nWHERE tags.TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text\nFROM posts\nJOIN comments ON posts.Id = comments.PostId\nWHERE posts.ViewCount BETWEEN 100 AND 150\nORDER BY comments.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(comments.Id) \nFROM comments \nINNER JOIN posts ON comments.PostId = posts.Id \nWHERE posts.CommentCount = 1 \nAND comments.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(COUNT(comments.UserId) * 100.0 / COUNT(comments.UserId) as REAL) \nFROM comments \nINNER JOIN users ON comments.UserId = users.Id \nWHERE comments.Score BETWEEN 5 AND 10 \nAND users.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "346": "SELECT cards.asciiName\nFROM cards\nWHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT cards.cardKingdomFoilId, cards.cardKingdomId, cards.id\nFROM cards\nWHERE cards.borderColor = 'borderless' AND cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "348": "SELECT cards.uuid, cards.name\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' \nAND legalities.status = 'Banned' \nAND legalities.format = 'gladiator' \nAND cards.rarity = 'mythic' \nAND legalities.status = 'Banned' \nAND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT cards.uuid, legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.type = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'commander' \nAND (cards.power = '*' OR cards.power IS NULL) \nAND legalities.status = 'Legal' \nAND legalities.format = 'commander'\t----- bird -----\tcard_games",
    "351": "SELECT cards.uuid, rulings.text, cards.hasContentWarning\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Stephen Daniel'\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.isPromo = 1\nGROUP BY cards.uuid\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT (CAST(COUNT(id) AS REAL) * 100 / (SELECT COUNT(id) FROM foreign_data)) AS percentage \nFROM foreign_data \nWHERE language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*)\nFROM cards\nWHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT cards.borderColor\nFROM cards\nWHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT rulings.text\nFROM cards\nJOIN rulings ON cards.id = rulings.id\nWHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT (CAST(COUNT(cards.id) * 100 AS REAL) / COUNT(cards.id)) AS percentage_borderless\nFROM cards\nWHERE cards.borderColor = 'borderless'\t----- bird -----\tcard_games",
    "358": "SELECT \n    (COUNT(cards.id) * 100) / (SELECT COUNT(cards.id) FROM cards WHERE cards.isStorySpotlight = 1) AS percentage\nFROM \n    cards\nINNER JOIN \n    foreign_data ON cards.uuid = foreign_data.uuid\nWHERE \n    cards.isStorySpotlight = 1\n    AND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "360": "SELECT cards.id\nFROM cards\nWHERE cards.duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards\nWHERE status = 'Banned' AND borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT cards.uuid, cards.name, foreign_data.name, foreign_data.language\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.originalType = 'Artifact' \nAND cards.colors = 'B' \nAND foreign_data.language IS NOT NULL;\t----- bird -----\tcard_games",
    "363": "SELECT manaCost \nFROM cards \nWHERE frameVersion = '2003' \nAND layout = 'normal' \nAND borderColor = 'black' \nAND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT cards.id\nFROM cards\nWHERE cards.isStorySpotlight = 1 AND cards.isTextless = 0;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.block = 'Commander'\nAND set_translations.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT cards.supertypes, cards.subtypes\nFROM cards\nJOIN set_translations ON cards.uuid = set_translations.uuid\nWHERE set_translations.language = 'German'\nAND cards.supertypes IS NOT NULL\nAND cards.subtypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(cards.id) AS num_cards\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nLEFT JOIN rulings ON cards.uuid = rulings.uuid\nWHERE legalities.format = 'premodern'\nAND cards.side IS NULL\nAND rulings.text = 'This is a triggered mana ability.'\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.type = 'Creature' \nAND cards.layout = 'normal' \nAND cards.borderColor = 'black' \nAND cards.artist = 'Matthew D. Wilson'\nAND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.baseSetSize = 180 \nAND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(COUNT(cards.hasContentWarning = 0) * 100 / COUNT(ID) AS REAL) AS percentage\nFROM cards\nINNER JOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'commander' AND legalities.Status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT CAST((COUNT(*) * 100) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*')) AS REAL \nFROM foreign_data \nWHERE language = 'French'\t----- bird -----\tcard_games",
    "373": "SELECT foreign_data.language \nFROM foreign_data \nWHERE foreign_data.multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT CAST((COUNT(CASE WHEN cards.isTextless = 1 AND cards.layout = 'normal' THEN 1 END) * 100) / COUNT(cards.isTextless) AS REAL) AS proportion_of_cards_without_text_box\nFROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT set_translations.language\nFROM set_translations\nWHERE set_translations.translation = 'Archenemy' AND set_translations.setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT foreign_data.language \nFROM foreign_data \nWHERE foreign_data.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT (c1.convertedManaCost - c2.convertedManaCost) AS cost_difference\nFROM cards c1\nJOIN cards c2 ON c1.name = 'Serra Angel' AND c2.name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "378": "SELECT set_translations.translation\nFROM set_translations\nJOIN cards ON cards.setCode = set_translations.setCode\nWHERE set_translations.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "379": "SELECT COUNT(*)\nFROM set_translations\nJOIN cards ON set_translations.setCode = cards.setCode\nWHERE cards.name = 'Ancestor''s Chosen'\nAND set_translations.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nJOIN set_translations ON cards.setCode = set_translations.setCode\nWHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT set_translations.translation\nFROM set_translations\nWHERE set_translations.setCode = '8ED' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT COUNT(*)\nFROM cards\nWHERE name = 'Angel of Mercy' AND mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.block = 'Ice Age' \nAND set_translations.language = 'Italian' \nAND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT COUNT(sets.name) \nFROM sets \nWHERE sets.name = 'Adarkar Valkyrie' \nAND sets.isForeignOnly = 1;\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*)\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE set_translations.language = 'Italian' \nAND set_translations.translation IS NOT NULL\nAND sets.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT cards.artist\nFROM cards\nWHERE cards.name = 'Coldsnap'\nAND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' \nAND cards.convertedManaCost > 5\nAND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT foreign_data.flavorText\nFROM cards\nINNER JOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT cards.uuid, rulings.uuid, cards.text, rulings.text\nFROM cards\nJOIN set_translations ON cards.id = set_translations.id\nJOIN rulings ON cards.id = rulings.id\nWHERE set_translations.language = 'Italian' AND set_translations.translation = 'Coldsnap'\t----- bird -----\tcard_games",
    "390": "SELECT foreign_data.name\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian'\nORDER BY cards.convertedManaCost DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "391": "SELECT CAST((CAST(COUNT(cards.convertedManaCost = 7) AS REAL) * 100) / COUNT(cards.name) AS REAL) AS percentage\nFROM cards\nWHERE cards.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT (CAST(COUNT(cards.cardKingdomFoilId) * 100 AS REAL) / COUNT(cards.name)) AS percentage_of_incredibly_powerful\nFROM cards\nWHERE cards.name = 'Coldsnap' AND cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "393": "SELECT legalities.format, card.name\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE legalities.status = 'Banned'\nGROUP BY legalities.format\nORDER BY COUNT(legalities.status) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1\nAND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name\nFROM sets\nWHERE sets.name NOT IN (SELECT set_translations.setCode FROM set_translations WHERE set_translations.language LIKE '%Japanese%')\nAND sets.name IN (SELECT set_translations.setCode FROM set_translations WHERE set_translations.language = 'Korean')\t----- bird -----\tcard_games",
    "397": "SELECT cards.frameVersion, legalities.uuid\nFROM cards\nINNER JOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.artist = 'Allen Williams' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nORDER BY COUNT(bond_type) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS average_oxygen_count\nFROM (\n    SELECT a.molecule_id, COUNT(a.element) AS oxygen_count\n    FROM atom a\n    INNER JOIN bond b ON a.molecule_id = b.molecule_id\n    WHERE b.bond_type = '-'\n    AND a.element = 'o'\n    GROUP BY a.molecule_id\n) subquery;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN bond.bond_type = '-' THEN 1 ELSE 0 END) \nFROM bond \nINNER JOIN molecule ON bond.molecule_id = molecule.molecule_id \nWHERE molecule.label = '+';\n\t----- bird -----\ttoxicology",
    "401": "SELECT bond.molecule_id\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '#'\nAND molecule.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT CAST((COUNT(CASE WHEN element = 'c' THEN 1 END) * 100) / COUNT(*)) AS real\nFROM bond\nINNER JOIN atom ON bond.molecule_id = atom.molecule_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.atom_id = bond.bond_id\nWHERE bond.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE atom.element = bond.bond_type\nAND bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT atom.label\nFROM atom\nWHERE atom.element = 'h'\nGROUP BY atom.label\nORDER BY COUNT(atom.label) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '-'\nGROUP BY atom.element\nORDER BY COUNT(atom.element) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type \nFROM bond \nJOIN connected ON bond.bond_id = connected.bond_id \nJOIN atom ON connected.atom_id = atom.atom_id \nWHERE (atom.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') \n   OR (atom.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nJOIN bond ON atom.molecule_id = bond.molecule_id \nWHERE atom.element = 'i' AND bond.bond_type = '-' \nUNION \nSELECT COUNT(DISTINCT atom.atom_id) \nFROM atom \nJOIN bond ON atom.molecule_id = bond.molecule_id \nWHERE atom.element = 's' AND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT CAST((COUNT(DISTINCT CASE WHEN element = 'f' THEN atom.molecule_id END) * 100) / COUNT(DISTINCT CASE WHEN molecule.label = '+' THEN atom.molecule_id END) AS REAL) AS percentage\nFROM atom\nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+';\n\t----- bird -----\ttoxicology",
    "410": "SELECT (CAST(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(bond_id) AS percent \nFROM bond \nINNER JOIN molecule ON bond.molecule_id = molecule.molecule_id \nWHERE label = '+';\n\t----- bird -----\ttoxicology",
    "411": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR000'\nORDER BY atom.element\nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT CAST((COUNT(CASE WHEN bond_type = '=' THEN 1 END) * 100.0) / COUNT(bond_id) AS REAL) AS percent \nFROM bond \nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT (CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule.molecule_id)) AS percent\nFROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT CAST((COUNT(CASE WHEN element = 'h' THEN 1 END) * 100) / COUNT(atom_id) AS REAL) AS percent\nFROM atom\nWHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT atom.element, molecule.label\nFROM df\nWHERE atom.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond.bond_type, molecule.molecule_id\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR010'\nGROUP BY bond.bond_type\nORDER BY COUNT(bond.bond_type) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT bond.molecule_id\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-' AND molecule.label = '-'\nORDER BY molecule.molecule_id ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*)\nFROM connected\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE (atom.molecule_id = 'TR009' OR atom.molecule_id = 'TR009')\nAND (atom.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(connected.atom_id2) \nFROM df \nWHERE atom.atom_id LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element\nFROM atom\nWHERE atom.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT molecule.molecule_id \nFROM atom \nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE SUBSTR(atom.atom_id, 7, 2) >= '21' AND SUBSTR(atom.atom_id, 7, 2) <= '25' \nAND molecule.label = '+'\nGROUP BY molecule.molecule_id;\t----- bird -----\ttoxicology",
    "423": "SELECT connected.bond_id\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE atom.element = 'p' OR atom.element = 'n'\t----- bird -----\ttoxicology",
    "424": "SELECT molecule.label\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '='\nGROUP BY bond.molecule_id\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT CAST(COUNT(bond.bond_id) AS REAL) / COUNT(atom.atom_id) AS average_bonds\nFROM atom\nWHERE element = 'i'\t----- bird -----\ttoxicology",
    "426": "SELECT atom_id, element\nFROM atom\nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.atom_id\nFROM bond\nJOIN atom ON bond.molecule_id = atom.molecule_id\nWHERE bond.bond_type = '#'\nAND atom.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.atom_id = bond.atom_id\nWHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT CAST((COUNT(CASE WHEN bond_type = '-' AND label = '+' THEN 1 END) * 100.0) / COUNT(bond_id) AS decimal(10, 5)) AS proportion_of_carcinogenic_single_bonds\nFROM bond\nINNER JOIN molecule ON bond.molecule_id = molecule.molecule_id;\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*)\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '#'\nAND (atom.element = 'p' OR atom.element = 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT molecule_id, \n       (COUNT(CASE WHEN element = 'cl' THEN atom_id END) * 100) / COUNT(atom_id) AS percent\nFROM atom\nWHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-')\nGROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "433": "SELECT atom.element\nFROM atom\nWHERE atom.element = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT (CAST(SUM(atom.element = 'cl') * 100 AS REAL) / COUNT(molecule.molecule_id)) AS percentage \nFROM atom \nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.label = '+';\n\t----- bird -----\ttoxicology",
    "435": "SELECT atom.element, COUNT(*) \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.label = '+' \nAND substr(atom.atom_id, 7, 1) = '4' \nGROUP BY atom.element;\t----- bird -----\ttoxicology",
    "436": "SELECT \n    (CAST(SUM(CASE WHEN atom.element = 'h' AND molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(atom.element) AS carcinogenic_ratio,\n    (CAST(SUM(CASE WHEN atom.element = 'h' AND molecule.label = '-' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(atom.element) AS non_carcinogenic_ratio\nFROM \n    atom\nJOIN \n    molecule ON atom.molecule_id = molecule.molecule_id\nWHERE \n    atom.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT molecule.molecule_id, COUNT(atom.atom_id) AS atom_count\nFROM molecule\nINNER JOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '-'\nGROUP BY molecule.molecule_id\nHAVING COUNT(atom.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)\nFROM schools\nINNER JOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.AvgScrMath > 400\nAND schools.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT frpm.CDSCode\nFROM schema\nWHERE frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)` > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)`\nFROM satscores\nINNER JOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE satscores.NumGE1500 / satscores.NumTstTakr > 0.3\nORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT schools.CharterNum\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.AvgScrWrite > 499\nORDER BY satscores.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.School, schools.Street\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT schools.CDSCode\nFROM frpm\nINNER JOIN schools ON frpm.CDSCode = schools.CDSCode\nINNER JOIN satscores ON schools.CDSCode = satscores.cds\nWHERE frpm.`Percent (%) Eligible Free (K-12)` > 0.1\nAND satscores.test_score >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.FundingType, schools.School\nFROM schools\nINNER JOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.County = 'Riverside'\nGROUP BY schools.CDSCode\nHAVING SUM(satscores.AvgScrMath) / COUNT(schools) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.School, schools.Street, schools.City, schools.State, schools.Zip\nFROM schools\nWHERE schools.EILName = 'High School' \nAND schools.County = 'Monterey' \nAND schools.CDSCode IN (SELECT frpm.CDSCode FROM frpm WHERE frpm > 800)\t----- bird -----\tcalifornia_schools",
    "446": "SELECT schools.School, satscores.AvgScrWrite, schools.Phone\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.OpenDate > '1991' OR schools.ClosedDate < '2000'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT schools.School, schools.DOCType\nFROM schools\nWHERE schools.FundingType = 'Locally funded'\nGROUP BY schools.School, schools.DOCType\nHAVING (schools.`Enrollment (K-12)` - schools.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(schools.`Enrollment (K-12)` - schools.`Enrollment (Ages 5-17)`) FROM schools WHERE schools.FundingType = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, `Free Meal Count (K-12)` / `Enrollment (K-12)` AS eligible_free_rate\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 11\t----- bird -----\tcalifornia_schools",
    "449": "SELECT frpm.CDSCode, frpm.`FRPM Count (K-12)`, frpm.`FRPM Count (K-12)` / frpm.`Enrollment (K-12)`\nFROM frpm\nINNER JOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.SOC = '66'\nORDER BY frpm.`FRPM Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.Street, schools.City, schools.Zip, schools.State\nFROM satscores\nINNER JOIN schools ON satscores.cds = schools.CDSCode\nORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT schools.AdmFName1, schools.AdmLName1\nFROM satscores\nINNER JOIN schools ON satscores.cds = schools.CDSCode\nORDER BY satscores.NumGE1500 DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr) \nFROM schools \nINNER JOIN satscores ON schools.CDSCode = satscores.cds \nWHERE schools.County = 'Fresno' \nAND strftime('%Y', schools.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.Phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.dname = 'Fresno Unified'\nORDER BY satscores.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT schools.School\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.Virtual = 'F'\nAND schools.School IN (\n    SELECT schools.School\n    FROM schools\n    JOIN satscores ON schools.CDSCode = satscores.cds\n    GROUP BY schools.County, schools.School\n    HAVING satscores.AvgScrRead = MAX(satscores.AvgScrRead)\n    ORDER BY schools.County, MAX(satscores.AvgScrRead) DESC\n    LIMIT 5\n)\nORDER BY schools.County, satscores.AvgScrRead DESC;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT satscores.cds, schools.School, schools.AdmFName1, AVG(satscores.AvgScrWrite) AS avg_writing_score\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.AdmLName1 = 'Ulrich'\nGROUP BY satscores.cds, schools.School, schools.AdmFName1\t----- bird -----\tcalifornia_schools",
    "456": "SELECT schools.CDSCode, COUNT(schools.CDSCode) AS enrollees_count\nFROM schools\nWHERE schools.DOC = '31' AND schools.GSserved BETWEEN '1' AND '12'\nGROUP BY schools.CDSCode\nORDER BY enrollees_count DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(schools.OpenDate) / 12 AS monthly_avg\nFROM schools\nWHERE schools.County = 'Alameda' \nAND schools.DOC = '52' \nAND strftime('%Y', schools.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT CAST(\n        (SELECT COUNT(*)\n         FROM schools\n         WHERE County = 'Orange County' AND DOC = 'Merged' AND DOC = '54')\n        /\n        (SELECT COUNT(*)\n         FROM schools\n         WHERE County = 'Orange County' AND DOC = 'Merged' AND DOC = '52')\n        AS REAL) AS ratio_of_merged_schools;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT schools.Street, schools.CDSCode\nFROM schools\nINNER JOIN satscores ON schools.CDSCode = satscores.cds\nORDER BY satscores.AvgScrMath DESC\nLIMIT 7;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM schools\nWHERE Charter = 0\nAND County = 'Los Angeles'\nAND `Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT sum(frpm.`Enrollment (Ages 5-17)`) \nFROM frpm \nINNER JOIN schools ON frpm.CDSCode = schools.CDSCode \nWHERE schools.EdOpsCode = 'SSS' \nAND frpm.`Academic Year` = 2014-2015;\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.School, frpm.`Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.GSserved = 'Kindergarten-9' AND schools.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT schools.County, COUNT(schools.School) AS school_count\nFROM schools\nWHERE schools.Virtual = 'F' \nAND schools.County IN ('San Diego', 'Santa Barbara')\nGROUP BY schools.County\nORDER BY school_count DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT schools.GSoffered \nFROM schools \nORDER BY ABS(schools.Longitude) DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) \nFROM schools \nWHERE GSoffered = 'K-8' \nAND Magnet = 1 \nAND CDSCode IN (SELECT CDSCode FROM frpm WHERE `NSLP Provision Status` = 'Multiple Provision Types')\nGROUP BY City, GSoffered\nHAVING GSoffered = 'K-8'\t----- bird -----\tcalifornia_schools",
    "466": "SELECT `Percent (%) Eligible Free (K-12)`, CDSCode, `District Code`\nFROM frpm\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT schools.AdmEmail1 \nFROM schools \nWHERE schools.County = 'San Bernardino' \nAND schools.City = 'San Bernardino City Unified' \nAND schools.OpenDate >= '2009-01-01' \nAND schools.OpenDate <= '2010-12-31' \nAND schools.SOC = '62' \nAND schools.DOC = '54'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(account.district_id)\nFROM account\nINNER JOIN district ON account.district_id = district.district_id\nWHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(DISTINCT district.district_id) \nFROM client \nINNER JOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'F' \nAND district.A11 > 6000 \nAND district.A11 < 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M' \nAND district.A3 = 'north Bohemia' \nAND district.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id\nFROM account\nJOIN client ON account.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN client ON account.client_id = client.client_id\nGROUP BY client.client_id\nHAVING client.birth_date = (SELECT MIN(birth_date) FROM client)\nAND account.salary = (SELECT AVG(salary) FROM account)\n\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.date BETWEEN '1997-01-01' AND '1997-12-31'\nAND account.frequency = 'POPLATEK TYDNE'\nAND loan.amount = (\n    SELECT MIN(amount)\n    FROM loan\n    WHERE loan.date BETWEEN '1997-01-01' AND '1997-12-31'\n)\n\t----- bird -----\tfinancial",
    "474": "SELECT account_id\nFROM account\nWHERE account_id IN (\n    SELECT account_id\n    FROM loan\n    WHERE duration > 12\n)\nAND strftime('%Y', date) = '1993'\nORDER BY amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT district.A2\nFROM client\nJOIN account ON client.client_id = account.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT CAST((COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100) / COUNT(c.client_id) AS REAL) \nFROM client c \nINNER JOIN district d ON c.district_id = d.district_id \nWHERE d.A3 = 'south Bohemia' \nORDER BY d.inhabitants DESC \nLIMIT 1;\t----- bird -----\tfinancial",
    "478": "SELECT CAST((SUM(t1.balance) - SUM(t2.balance)) * 100 / SUM(t1.balance) AS REAL) AS increase_rate\nFROM trans t1\nJOIN loan ON loan.account_id = t1.account_id\nJOIN trans t2 ON t2.account_id = t1.account_id\nWHERE loan.date = '1993-07-05' AND t2.date = '1993-03-22' AND t1.date = '1998-12-27'\t----- bird -----\tfinancial",
    "479": "SELECT (CAST(SUM(loan.amount) * 100 / (SELECT SUM(loan.amount) FROM loan), REAL)) AS percentage_of_fully_paid\nFROM loan\nWHERE loan.status = 'A';\t----- bird -----\tfinancial",
    "480": "SELECT (COUNT(loan.amount) * 100 / COUNT(*)) AS percentage\nFROM loan\nWHERE loan.amount < 100000\nAND loan.status = 'C';\t----- bird -----\tfinancial",
    "481": "SELECT district.district_id, (district.A13 - district.A12) AS unemployment_increment_rate\nFROM loan\nINNER JOIN account ON loan.account_id = account.account_id\nINNER JOIN client ON account.client_id = client.client_id\nINNER JOIN district ON client.district_id = district.district_id\nWHERE loan.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT district.A2, COUNT(client.client_id) AS num_female_account_holders\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nGROUP BY district.A2\nORDER BY num_female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(loan.account_id) \nFROM loan \nINNER JOIN account ON loan.account_id = account.account_id \nWHERE loan.amount >= 250000 \nAND account.frequency = 'POPLATEK MESICNE' \nAND account.date >= '1995-01-01' \nAND account.date <= '1997-12-31'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(account.account_id) AS running_contracts\nFROM account\nINNER JOIN loan ON account.account_id = loan.account_id\nWHERE account.district_id = 1\nAND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client.client_id) \nFROM client \nINNER JOIN district ON client.district_id = district.district_id \nWHERE district.district_id IN \n    (SELECT district_id \n     FROM \n         (SELECT district_id, \n                 ROW_NUMBER() OVER (ORDER BY A15 DESC) AS rn \n          FROM district) \n     WHERE rn = 2) \nAND client.gender = 'M';\t----- bird -----\tfinancial",
    "486": "SELECT district.A2, SUM(trans.amount) AS total_withdrawals\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN client ON account.district_id = client.district_id\nJOIN district ON client.district_id = district.district_id\nWHERE trans.type = 'VYDAJ' \nAND account.date LIKE '1996-01%'\nGROUP BY district.A2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(account.account_id) AS running_contracts\nFROM account\nINNER JOIN loan ON account.account_id = loan.account_id\nWHERE account.district_id = 1\nAND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client.client_id) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE district.district_id = (\n    SELECT district.district_id \n    FROM (\n        SELECT client.district_id \n        FROM client \n        GROUP BY client.district_id \n        ORDER BY district.A15 DESC \n        LIMIT 2\n    ) AS df1 \n    ORDER BY district.A15 DESC \n    LIMIT 1\n) \nAND client.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT card.disp_id, trans.account\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN disp ON card.disp_id = disp.disp_id\nWHERE trans.type = 'VYDAJ' \nAND trans.amount < (SELECT AVG(amount) FROM trans) \nAND strftime('%Y', trans.date) = '1998'\t----- bird -----\tfinancial",
    "490": "SELECT account.frequency, district.A11\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE account.frequency = 'OWNER'\nAND district.A11 > 8000\nAND district.A11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(district.A15) \nFROM district \nJOIN account ON district.district_id = account.district_id \nWHERE district.A3 IN ('north Moravia', 'south Bohemia', 'west Bohemia', 'south Moravia', 'Prague', 'east Bohemia', 'central Bohemia', 'north Bohemia') \nAND district.A8 > 4000 \nAND account.date >= '1997-01-01' \nGROUP BY district.A3;\t----- bird -----\tfinancial",
    "492": "SELECT trans.operation, trans.account\nFROM trans\nJOIN client ON trans.account_id = client.client_id\nWHERE trans.operation = 'VYBER' AND client.client_id = 3356;\t----- bird -----\tfinancial",
    "493": "SELECT CAST((COUNT(client.client_id) * 100.0) / (SELECT COUNT(client.client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) AS REAL) AS percentage_of_women\nFROM client\nWHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 10000);\t----- bird -----\tfinancial",
    "494": "SELECT ((SUM(l.amount) - (SELECT SUM(l.amount) FROM loan l INNER JOIN account a ON l.account_id = a.account_id INNER JOIN client c ON a.client_id = c.client_id WHERE c.gender = 'M' AND l.date BETWEEN '1996-01-01' AND '1996-12-31')) * 100) / (SELECT SUM(l.amount) FROM loan l INNER JOIN account a ON l.account_id = a.account_id INNER JOIN client c ON a.client_id = c.client_id WHERE c.gender = 'M' AND l.date BETWEEN '1996-01-01' AND '1996-12-31') AS growth_rate\nFROM loan l\nINNER JOIN account a ON l.account_id = a.account_id\nINNER JOIN client c ON a.client_id = c.client_id\nWHERE c.gender = 'M' AND l.date BETWEEN '1997-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(trans.account_id) AS request_count, SUM(trans.amount) AS total_debit\nFROM trans\nINNER JOIN account ON trans.account_id = account.account_id\nINNER JOIN \"order\" ON trans.account_id = \"order\".account_id\nWHERE account.account_id = 3\nAND \"order\".k_symbol = 'VYBER'\t----- bird -----\tfinancial",
    "496": "SELECT (COUNT(CASE WHEN client.gender = 'M' AND account.frequency = 'POPLATEK TYDNE' THEN 1 END) * 100) / COUNT(CASE WHEN account.frequency = 'POPLATEK TYDNE' THEN 1 END) AS percentage_of_male_clients_requesting_weekly_statements\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id;\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM client\nJOIN account ON client.client_id = account.client_id\nWHERE client.gender = 'F'\nGROUP BY client.birth_date\nORDER BY client.birth_date ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount) \nFROM loan \nWHERE loan.status IN ('C', 'D') \nAND loan.account_id IN \n    (SELECT account_id \n     FROM trans \n     WHERE k_symbol = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, client.birth_date\nFROM card\nJOIN disp ON card.disp_id = disp.disp_id\nJOIN client ON disp.client_id = client.client_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}