{
    "0": "SELECT \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio_EUR_to_CZK\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) AS LeastConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE SUBSTR(Date, 1, 4) = '2012' AND customers.Segment = 'LAM'\nGROUP BY CustomerID\nORDER BY LeastConsumption ASC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND SUBSTR(Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT\n    (SELECT SUM(Consumption)\n     FROM yearmonth\n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID\n     WHERE customers.Currency = 'CZK'\n       AND SUBSTR(yearmonth.Date, 1, 4) = '2012') -\n    (SELECT SUM(Consumption)\n     FROM yearmonth\n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID\n     WHERE customers.Currency = 'EUR'\n       AND SUBSTR(yearmonth.Date, 1, 4) = '2012') AS DifferenceInConsumption\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT Date, SUM(Consumption) as TotalConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'CZK'\nGROUP BY substr(Date, 1, 4)\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date, MAX(Consumption) AS PeakConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND SUBSTR(Date, 1, 4) = '2013'\nGROUP BY Date\nORDER BY PeakConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n    (SME_avg - LAM_avg) AS Difference_SME_LAM,\n    (LAM_avg - KAM_avg) AS Difference_LAM_KAM,\n    (KAM_avg - SME_avg) AS Difference_KAM_SME\nFROM\n    (SELECT\n        AVG(CASE WHEN c.Segment = 'SME' THEN ym.Consumption END) / COUNT(DISTINCT CASE WHEN c.Segment = 'SME' THEN c.CustomerID END) AS SME_avg,\n        AVG(CASE WHEN c.Segment = 'LAM' THEN ym.Consumption END) / COUNT(DISTINCT CASE WHEN c.Segment = 'LAM' THEN c.CustomerID END) AS LAM_avg,\n        AVG(CASE WHEN c.Segment = 'KAM' THEN ym.Consumption END) / COUNT(DISTINCT CASE WHEN c.Segment = 'KAM' THEN c.CustomerID END) AS KAM_avg\n    FROM\n        yearmonth ym\n    JOIN\n        customers c ON ym.CustomerID = c.CustomerID\n    WHERE\n        c.Currency = 'CZK'\n        AND SUBSTR(ym.Date, 1, 4) = '2013')\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    ym.Segment,\n    SUM(CASE WHEN SUBSTR(ym.Date, 1, 4) = '2013' THEN ym.Consumption ELSE 0 END) AS Consumption2013,\n    SUM(CASE WHEN SUBSTR(ym.Date, 1, 4) = '2012' THEN ym.Consumption ELSE 0 END) AS Consumption2012,\n    (SUM(CASE WHEN SUBSTR(ym.Date, 1, 4) = '2013' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(ym.Date, 1, 4) = '2012' THEN ym.Consumption ELSE 0 END)) AS Increase,\n    ((SUM(CASE WHEN SUBSTR(ym.Date, 1, 4) = '2013' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(ym.Date, 1, 4) = '2012' THEN ym.Consumption ELSE 0 END)) / SUM(CASE WHEN SUBSTR(ym.Date, 1, 4) = '2012' THEN ym.Consumption ELSE 0 END)) * 100 AS PercentageIncrease\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR' AND\n    (SUBSTR(ym.Date, 1, 4) = '2012' OR SUBSTR(ym.Date, 1, 4) = '2013') AND\n    c.Segment IN ('SME', 'LAM', 'KAM')\nGROUP BY \n    ym.Segment\nORDER BY \n    PercentageIncrease DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\nAND SUBSTR(Date, 1, 6) BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT\n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') -\n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS MoreDiscountStationsCZEvsSVK\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT\n    (SELECT COUNT(DISTINCT CustomerID)\n     FROM customers\n     WHERE Currency = 'CZK'\n       AND Segment = 'SME') -\n    (SELECT COUNT(DISTINCT CustomerID)\n     FROM customers\n     WHERE Currency = 'EUR'\n       AND Segment = 'SME') AS DifferenceInSMEsCount\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT \n    (COUNT(DISTINCT CASE WHEN y.Consumption > 46.73 THEN y.CustomerID END) * 1.0 / COUNT(DISTINCT y.CustomerID)) * 100 AS Percentage\nFROM \n    yearmonth y\nJOIN \n    customers c ON y.CustomerID = c.CustomerID\nWHERE \n    c.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE SUBSTR(Date, 1, 6) = '201202')) AS Percentage\nFROM \n    yearmonth\nWHERE \n    SUBSTR(Date, 1, 6) = '201202' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE SUBSTR(ym.Date, 1, 6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE strftime('%Y%m', t.Date) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT ym.CustomerID)\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND ym.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE' AND DATE(transactions_1k.Date) > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k \nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' \nAND transactions_1k.Date = '2012-08-26' \nAND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT c.Currency AS Nationality\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND (t.Price * t.Amount) = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(DISTINCT t.CustomerID) * 100.0 / (SELECT COUNT(*) FROM customers)) AS Percentage\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR' AND \n    t.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n    (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate\nFROM\n    (SELECT \n         (SELECT Consumption \n          FROM yearmonth \n          WHERE CustomerID = (SELECT CustomerID \n                              FROM transactions_1k \n                              WHERE Price = 634.8 AND Date = '2012-08-25') \n            AND Date LIKE '2012%') AS consumption_2012,\n         (SELECT Consumption \n          FROM yearmonth \n          WHERE CustomerID = (SELECT CustomerID \n                              FROM transactions_1k \n                              WHERE Price = 634.8 AND Date = '2012-08-25') \n            AND Date LIKE '2013%') AS consumption_2013\n    ) AS consumption_data\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (COUNT(CASE WHEN Segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS PremiumPercentage\nFROM gasstations\nWHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Amount * Price) AS TotalSpent\nFROM transactions_1k\nWHERE CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    t.CustomerID,\n    c.Currency,\n    SUM(t.Price) / SUM(t.Amount) AS AvgPricePerItem\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nGROUP BY \n    t.CustomerID\nORDER BY \n    SUM(t.Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.CustomerID, ym.Consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID\nWHERE t.ProductID = 5\nAND (t.Price / t.Amount) > 29.00\nAND ym.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE event.event_name = 'Women's Soccer'\nAND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) AS meeting_count\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE type = 'Meeting'\nGROUP BY event.event_id\nHAVING COUNT(link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nGROUP BY e.event_id\nHAVING COUNT(a.link_to_member) > 20 AND e.type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(income.amount) AS total_funds_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT first_name || ' ' || last_name AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense.approved\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) AS average_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND SUBSTR(expense_date, 6, 2) IN ('09', '10')\t----- bird -----\tstudent_club",
    "38": "SELECT\n    (SELECT COALESCE(SUM(spent), 0) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE SUBSTR(event.event_date, 1, 4) = '2019') -\n    (SELECT COALESCE(SUM(spent), 0) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE SUBSTR(event.event_date, 1, 4) = '2020') AS difference_in_spending\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT e.status\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON b.budget_id = ex.link_to_budget\nWHERE ex.expense_description = 'Post Cards, Posters'\nAND ex.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT income.date_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT \n    CASE \n        WHEN SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) > SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) THEN 1\n        ELSE 0\n    END AS times_more\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) AS number_of_attendees\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT first_name, last_name FROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name, MAX(b.spent / b.amount) AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nGROUP BY e.event_id\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) AS highest_budget_spent FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS total_spent_for_food\nFROM budget\nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name, MIN(expense.cost) AS lowest_cost\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nGROUP BY event.event_id\nORDER BY lowest_cost ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT \n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS percentage_cost_for_yearly_kickoff\nFROM \n    event e\nJOIN \n    budget b ON e.event_id = b.link_to_event\nJOIN \n    expense ex ON b.budget_id = ex.link_to_budget\t----- bird -----\tstudent_club",
    "59": "SELECT source\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nORDER BY amount DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT EXISTS (\n    SELECT 1\n    FROM attendance a\n    JOIN member m ON a.link_to_member = m.member_id\n    JOIN event e ON a.link_to_event = e.event_id\n    WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer'\n) as attended\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed' AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) AS total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) AS amount_budgeted\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY amount_budgeted ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT expense.expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT type\nFROM event\nWHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, ma.department, ma.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT \n    (COUNT(CASE WHEN i.amount = 50 THEN 1 END) * 100.0 / COUNT(DISTINCT m.member_id)) AS percentage\nFROM \n    member m\nJOIN \n    income i ON m.member_id = i.link_to_member\nWHERE \n    m.t_shirt_size = 'Medium' \n    AND m.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' \nAND status = 'Closed' \nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nHAVING e.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT\n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS Inpatient_Male,\n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS Outpatient_Male,\n    (CAST((SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS REAL) / \n     (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-')) * 100 - 100 AS Percentage_Deviation\nFROM Patient\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT \n    CAST(SUM(CASE WHEN strftime('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 AS Percentage_Female_After_1930\nFROM \n    Patient\nWHERE \n    SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS OutpatientToInpatientRatio\nFROM Patient\nWHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND strftime('%Y', Description) = '1997' \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Patient.SEX = 'F' \nAND Examination.Thrombosis = 1 \nAND strftime('%Y', Examination.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Symptoms, Diagnosis FROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Symptoms IS NOT NULL\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MIN(L.Date) AS EarliestLabDate, (strftime('%Y', P.`First Date`) - strftime('%Y', P.Birthday)) AS AgeAtFirstVisit\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.Diagnosis = 'SJS'\nGROUP BY P.ID\nORDER BY P.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS MaleCount,\n    SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS FemaleCount,\n    (1.0 * SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END)) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) AS MaleToFemaleRatio\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    (SEX = 'M' AND UA <= 8.0) OR (SEX = 'F' AND UA <= 6.5)\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE strftime('%Y', Patient.Birthday) > strftime('%Y', '1990-01-01') - 18 \nAND strftime('%Y', Examination.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    (strftime('%Y', Examination.`Examination Date`) - strftime('%Y', Patient.Birthday)) AS Age,\n    Patient.Diagnosis\nFROM \n    Laboratory\nJOIN \n    Patient ON Laboratory.ID = Patient.ID\nJOIN \n    Examination ON Laboratory.ID = Examination.ID\nWHERE \n    Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory)\nORDER BY \n    Laboratory.Date DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM`\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) \n    / CAST(SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END) AS REAL) AS DecreaseRate\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(DISTINCT e.ID)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.Thrombosis = 2\nAND e.`ANA Pattern` = 'S'\nAND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(L.ALB)\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT \n    (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS PercentageOfWomen\nFROM \n    Patient\nWHERE \n    strftime('%Y', Birthday) = '1980' \n    AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n           WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n           WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n           ELSE 'No'\n       END AS `Uric Acid Normal`\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 60\nORDER BY p.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT Patient.ID) AS Patient_IDs\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE `T-BIL` >= 2.0\nGROUP BY SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR('now') - YEAR(Birthday)) AS AverageAge\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'M' AND `T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND strftime('%Y', Patient.Birthday) BETWEEN '1936' AND '1956'\nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT p.ID, \n       (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS Age, \n       p.Diagnosis \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.Birthday DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT p.ID, (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.HCT >= 52\nGROUP BY p.ID\nHAVING COUNT(l.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT < 100) AS Patients_Low_PLT,\n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT > 400) AS Patients_High_PLT,\n    (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT < 100) - (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE PLT > 400) AS Difference\nFROM Laboratory\nWHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis, l.Date, l.PLT\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE strftime('%Y', l.Date) = '1984'\nAND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 50\nAND l.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n    (CAST(SUM(CASE WHEN SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END)) * 100 AS Percentage_Female_Abnormal_PT\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    (strftime('%Y', 'now') - strftime('%Y', Birthday)) > 55\n    AND PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND (Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0) AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) AS PatientsWithHighIgG\nFROM Laboratory\nWHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Patient.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500\nAND strftime('%Y', Patient.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE IGM <= 40 OR IGM >= 400\nGROUP BY Diagnosis\nORDER BY DiagnosisCount DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) \nFROM Patient \nWHERE ID IN (SELECT ID FROM Laboratory WHERE CRP = '+') \nAND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP IN ('-', '+-') AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SM IN ('-', '+-') AND e.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'F' AND Patient.Symptoms IS NULL AND (Laboratory.SC170 = 'negative' OR Laboratory.SC170 = '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.CENTROMEA IN ('-', '+-') AND l.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.season = '2015/2016' \nGROUP BY League.id \nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal\nGROUP BY Team.team_long_name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_long_name, buildUpPlaySpeed\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal \nGROUP BY League.id \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT Player.player_name, \n       (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) AS age \nFROM Player_Attributes \nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player_Attributes.sprint_speed >= 97 \nAND strftime('%Y', Player_Attributes.date) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) AS total_matches\nFROM Match\nJOIN League ON Match.league_id = League.id\nGROUP BY League.id\nORDER BY total_matches DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T.team_long_name\nFROM Team T\nJOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id\nWHERE strftime('%Y', TA.date) = '2012' AND TA.buildUpPlayPassing > (\n    SELECT AVG(TA2.buildUpPlayPassing)\n    FROM Team_Attributes TA2\n    WHERE TA2.buildUpPlayPassing IS NOT NULL AND strftime('%Y', TA2.date) = '2012'\n)\t----- bird -----\teuropean_football_2",
    "136": "SELECT \n    (COUNT(CASE WHEN preferred_foot = 'left' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_left_foot\nFROM Player\nJOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id\nWHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992' AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180\nGROUP BY p.player_name\nORDER BY AVG(pa.heading_accuracy) DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.season = '2009/2010' \nGROUP BY League.id \nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE substr(birthday, 1, 7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating\nFROM Player_Attributes\nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Country ON League.country_id = Country.id\nWHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT \n    CASE \n        WHEN MAX(average_finishing_tallest) > MAX(average_finishing_shortest) THEN tallest_player_name\n        ELSE shortest_player_name\n    END AS player_with_highest_average_finishing_rate\nFROM (\n    SELECT \n        MAX(CASE WHEN p.height = tallest.height THEN pa.finishing ELSE NULL END) AS average_finishing_tallest,\n        MAX(CASE WHEN p.height = shortest.height THEN pa.finishing ELSE NULL END) AS average_finishing_shortest,\n        MAX(CASE WHEN p.height = tallest.height THEN p.player_name ELSE NULL END) AS tallest_player_name,\n        MAX(CASE WHEN p.height = shortest.height THEN p.player_name ELSE NULL END) AS shortest_player_name\n    FROM Player_Attributes pa\n    JOIN Player p ON pa.player_api_id = p.player_api_id\n    CROSS JOIN (SELECT MAX(height) AS height FROM Player) tallest\n    CROSS JOIN (SELECT MIN(height) AS height FROM Player) shortest\n    GROUP BY p.player_api_id\n)\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE strftime('%Y', Player_Attributes.date) BETWEEN '2010' AND '2015'\nAND Player.height > 170\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SELECT AVG(ball_control) \n     FROM Player_Attributes \n     JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n     WHERE Player.player_name = 'Abdou Diallo') \n    -\n    (SELECT AVG(ball_control) \n     FROM Player_Attributes \n     JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n     WHERE Player.player_name = 'Aaron Appindangoye') AS difference_avg_ball_control\t----- bird -----\teuropean_football_2",
    "146": "SELECT \n    CASE \n        WHEN MIN(birthday) = birthday THEN player_name \n    END AS older_player\nFROM Player\nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, height FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id) \nFROM Player \nWHERE strftime('%Y', birthday) < '1986' \nAND player_api_id IN (\n    SELECT player_api_id \n    FROM Player_Attributes \n    WHERE defensive_work_rate = 'high'\n)\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM `Match`\nJOIN `League` ON `Match`.league_id = `League`.id\nWHERE `League`.name = 'Belgium Jupiler League' AND SUBSTR(`Match`.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.season = '2008/2009' \nGROUP BY League.name \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT \n    ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk') ORDER BY date DESC LIMIT 1) - \n    (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1)) * 100.0 / \n    (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') ORDER BY date DESC LIMIT 1) AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(ta.chanceCreationPassing) AS HighestChanceCreationPassing, ta.chanceCreationPassingClass\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%'\nORDER BY Player.birthday DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy') AND date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore') AND date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) AS first_highest_crossing_date\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Kevin Constant'\nAND crossing = (\n    SELECT MAX(crossing)\n    FROM Player_Attributes\n    JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\n    WHERE Player.player_name = 'Kevin Constant'\n)\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass FROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT Team_Attributes.defenceAggressionClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.player_name = 'Marko Arnautovic' \nAND substr(Player_Attributes.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    ((ld.overall_rating - jb.overall_rating) * 100.0 / ld.overall_rating) AS percentage_difference\nFROM \n    Player_Attributes AS ld\nJOIN \n    Player AS pld ON ld.player_api_id = pld.player_api_id\nJOIN \n    Player_Attributes AS jb\nJOIN \n    Player AS pjb ON jb.player_api_id = pjb.player_api_id\nWHERE \n    pld.player_name = 'Landon Donovan'\n    AND pjb.player_name = 'Jordan Bowery'\n    AND ld.date = '2013-07-12'\n    AND jb.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31'\t----- bird -----\teuropean_football_2",
    "169": "SELECT \n    (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - \n    (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23) AS difference_in_jumping\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE preferred_foot = 'right'\nORDER BY potential ASC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE preferred_foot = 'left') \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal FROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT finishing, curve \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) AS num_games\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name \nFROM Match \nJOIN Team ON Match.away_team_api_id = Team.team_api_id \nGROUP BY Match.away_team_api_id \nORDER BY SUM(Match.away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "178": "SELECT \n    (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id) AS percentage\nFROM \n    Player \nJOIN \n    Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE \n    Player.height < 180 AND Player_Attributes.strength > 70\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverRef\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 20 AND qualifying.q1 IN (\n    SELECT q1\n    FROM qualifying\n    WHERE raceId = 20 AND q1 IS NOT NULL\n    ORDER BY q1 DESC\n    LIMIT 5\n)\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 19 AND qualifying.q2 IS NOT NULL\nORDER BY qualifying.q2\nLIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT races.name FROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix')\t----- bird -----\tformula_1",
    "184": "SELECT q1 FROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE raceId = 354 AND drivers.forename = 'Bruno' AND drivers.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT drivers.number\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 903 AND qualifying.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Bahrain Grand Prix' \nAND races.year = 2007 \nAND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 592 AND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT d.url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.time LIKE '1:27%' AND lt.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Malaysian Grand Prix')\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructorResults\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE constructorResults.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 45 AND qualifying.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872 AND r.time IS NOT NULL\nORDER BY d.dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT drivers.nationality\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT \n    ((CAST(r853.fastestLapSpeed AS REAL) - CAST(r854.fastestLapSpeed AS REAL)) / CAST(r853.fastestLapSpeed AS REAL)) * 100 AS percentageFaster\nFROM \n    results r853\nJOIN \n    results r854 ON r853.driverId = r854.driverId\nJOIN \n    drivers ON drivers.driverId = r853.driverId\nWHERE \n    drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND r853.raceId = 853 AND r854.raceId = 854\t----- bird -----\tformula_1",
    "196": "SELECT \n    (CAST(COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) AS REAL) / COUNT(*) * 100) AS completion_rate\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT d.forename || ' ' || d.surname AS FullName, SUM(r.points) AS TotalPoints\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nGROUP BY d.driverId\nORDER BY TotalPoints DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name, MIN(lt.milliseconds) AS best_lap_time\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nJOIN races r ON lt.raceId = r.raceId\nGROUP BY lt.raceId, lt.driverId\nORDER BY best_lap_time ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS averageLapTime\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Malaysian Grand Prix'\nAND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(CASE WHEN position > 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_not_first\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.surname = 'Hamilton' AND races.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT d.forename || ' ' || d.surname AS FullName, d.nationality, MAX(ds.points) AS MaxPoints\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nORDER BY SUM(ds.wins) DESC, MAX(ds.points) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname, MIN(strftime('%Y', 'now') - strftime('%Y', dob)) AS age\nFROM drivers\nWHERE nationality = 'Japanese'\nGROUP BY driverId\nORDER BY dob DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE strftime('%Y', races.date) = '2005' AND strftime('%m', races.date) = '09'\t----- bird -----\tformula_1",
    "205": "SELECT races.name \nFROM races \nJOIN results ON races.raceId = results.raceId \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.grid < 20\t----- bird -----\tformula_1",
    "206": "SELECT r.name AS race, r.year AS year\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY res.milliseconds ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT r.year, r.name, res.points\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.year ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix')) AS percentage\nFROM \n    races \nINNER JOIN \n    circuits ON races.circuitId = circuits.circuitId\nWHERE \n    races.name = 'European Grand Prix' AND circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT r.name AS RaceName\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND res.rank = 1\nORDER BY res.rank ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) AS FastestLapSpeed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.name = 'Chinese Grand Prix'\nAND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT time FROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT drivers.driverId) \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((julianday(r2.time) - julianday(r1.time)) / julianday(r2.time)) * 100 AS percentage_faster\nFROM \n    results r1\nJOIN \n    results r2 ON r1.raceId = r2.raceId\nJOIN \n    races ra ON ra.raceId = r1.raceId\nWHERE \n    ra.year = 2008 AND \n    ra.name = 'Australian Grand Prix' AND \n    r1.position = 1 AND \n    r2.position = (SELECT MAX(position) FROM results WHERE raceId = r1.raceId AND time IS NOT NULL)\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) AS maximum_points\nFROM constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT c.name\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 291 AND cr.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) \nFROM (\n    SELECT c.constructorId\n    FROM constructors c\n    JOIN constructorResults cr ON c.constructorId = cr.constructorId\n    WHERE c.nationality = 'Japanese' AND cr.points = 0\n    GROUP BY c.constructorId\n    HAVING COUNT(cr.raceId) = 2\n)\t----- bird -----\tformula_1",
    "223": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN r.resultId END) AS REAL) / COUNT(DISTINCT r.resultId)) * 100 AS race_completion_percentage\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nJOIN \n    drivers d ON r.driverId = d.driverId\nWHERE \n    ra.year BETWEEN 2007 AND 2009\n    AND d.nationality = 'Japanese'\t----- bird -----\tformula_1",
    "224": "SELECT \n    r.year, \n    AVG(strftime('%s', res.time) - strftime('%s', '00:00:00')) AS average_time_seconds\nFROM \n    results res\nJOIN \n    races r ON res.raceId = r.raceId\nWHERE \n    r.year < 1975 \n    AND res.time IS NOT NULL\nGROUP BY \n    r.year\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN driverStandings ON results.raceId = driverStandings.raceId AND results.driverId = driverStandings.driverId\nWHERE races.year = 2009 AND driverStandings.position = 1\nORDER BY races.date DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT \n    (SELECT CAST(COUNT(DISTINCT d.driverId) AS FLOAT)\n     FROM drivers d\n     JOIN results r ON d.driverId = r.driverId\n     JOIN races ra ON r.raceId = ra.raceId\n     WHERE strftime('%Y', d.dob) < '1985' AND r.laps > 50 AND ra.year BETWEEN 2000 AND 2005)\n    /\n    (SELECT CAST(COUNT(DISTINCT d.driverId) AS FLOAT)\n     FROM drivers d\n     JOIN results r ON d.driverId = r.driverId\n     JOIN races ra ON r.raceId = ra.raceId\n     WHERE ra.year BETWEEN 2000 AND 2005)\n    * 100 AS percentage\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId)\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French' AND lt.milliseconds < 120000\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT driverId, code, nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 3;\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE strftime('%Y', d.dob) = '1971' AND r.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT \n    MIN(races.year) AS year,\n    drivers.forename || ' ' || drivers.surname AS name,\n    races.date,\n    races.time\nFROM \n    qualifying\nJOIN \n    races ON qualifying.raceId = races.raceId\nJOIN \n    drivers ON qualifying.driverId = drivers.driverId\nWHERE \n    drivers.dob = (SELECT MAX(dob) FROM drivers)\nGROUP BY \n    drivers.driverId\t----- bird -----\tformula_1",
    "236": "SELECT d.forename || ' ' || d.surname AS FullName, AVG(p.milliseconds) AS AvgPitStopDuration\nFROM drivers d\nJOIN pitStops p ON d.driverId = p.driverId\nWHERE d.nationality = 'German' AND strftime('%Y', d.dob) BETWEEN '1980' AND '1985'\nGROUP BY d.driverId\nORDER BY AvgPitStopDuration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.year = 2008 AND races.name = 'Canadian Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN constructors ON results.constructorId = constructors.constructorId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY results.time DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name \nFROM superhero sh \nJOIN hero_power hp ON sh.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sh.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points\nFROM constructorResults cr\nJOIN races r ON cr.raceId = r.raceId\nJOIN circuits ci ON r.circuitId = ci.circuitId\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010\nGROUP BY cr.constructorId\nORDER BY total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008 AND c.name = 'Marina Bay Street Circuit' AND q.q3 = (\n    SELECT MIN(q3)\n    FROM qualifying\n    JOIN races ON qualifying.raceId = races.raceId\n    WHERE races.year = 2008 AND qualifying.q3 IS NOT NULL\n)\nORDER BY q.q3\nLIMIT 1\t----- bird -----\tformula_1",
    "242": "SELECT d.forename || ' ' || d.surname AS FullName, d.nationality, r.name AS RaceName\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY r.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT MAX(accident_count) AS max_accidents\nFROM (\n    SELECT driverId, COUNT(*) AS accident_count\n    FROM results\n    JOIN races ON results.raceId = races.raceId\n    WHERE races.name = 'Canadian Grand Prix' AND results.statusId = 3\n    GROUP BY results.driverId\n)\t----- bird -----\tformula_1",
    "244": "SELECT d.forename || ' ' || d.surname AS FullName\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nORDER BY lt.time\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT circuits.name AS CircuitName, MIN(lapTimes.time) AS LapRecord\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nGROUP BY circuits.circuitId\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id) AS superheroes_with_agility_and_blue_eyes\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(s.id) AS count\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name\nFROM publisher\nJOIN superhero ON publisher.id = superhero.publisher_id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero_name \nFROM superhero \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE attribute_name = 'Intelligence' \nORDER BY attribute_value ASC \nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race \nFROM superhero \nJOIN race ON superhero.race_id = race.id \nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' \nAND attribute.attribute_name = 'Strength' \nAND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \n    COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,\n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_heroes\nFROM \n    superhero s\nJOIN \n    alignment a ON s.alignment_id = a.id\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    a.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "260": "SELECT ABS(\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) -\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics'))\n) AS difference_in_superheroes_published\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name\nFROM superpower sp\nJOIN hero_power hp ON sp.id = hp.power_id\nJOIN superhero sh ON hp.hero_id = sh.id\nJOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'Male'\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour AS hair_colour\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185 AND race.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (COUNT(CASE WHEN publisher_id = 13 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_marvel_comics\nFROM \n    superhero\nJOIN \n    publisher ON superhero.publisher_id = publisher.id\nWHERE \n    height_cm BETWEEN 150 AND 180\n    AND publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male' AND superhero.weight_kg > (\n    SELECT AVG(weight_kg) * 0.79 FROM superhero\n)\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name \nFROM superpower sp \nJOIN hero_power hp ON sp.id = hp.power_id \nWHERE hp.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_id) AS number_of_heroes_with_stealth\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT ec.colour AS eye_colour, hc.colour AS hair_colour, sc.colour AS skin_colour\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour ec ON s.eye_colour_id = ec.id\nJOIN colour hc ON s.hair_colour_id = hc.id\nJOIN colour sc ON s.skin_colour_id = sc.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN colour ec ON s.eye_colour_id = ec.id\nJOIN colour hc ON s.hair_colour_id = hc.id\nJOIN colour sc ON s.skin_colour_id = sc.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.hair_colour_id = s.skin_colour_id AND s.hair_colour_id = s.eye_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (COUNT(DISTINCT CASE WHEN c.colour = 'Blue' THEN s.id END) * 100.0 / COUNT(*)) AS percentage_blue_female_superheroes\nFROM \n    superhero s\nJOIN \n    gender g ON s.gender_id = g.id\nJOIN \n    colour c ON s.skin_colour_id = c.id\nWHERE \n    g.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) AS number_of_powers\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nWHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM (\n    SELECT hero_id \n    FROM hero_attribute \n    JOIN attribute ON hero_attribute.attribute_id = attribute.id \n    WHERE attribute.attribute_name = 'Strength' \n    AND hero_attribute.attribute_value = (\n        SELECT MAX(attribute_value) \n        FROM hero_attribute \n        JOIN attribute ON hero_attribute.attribute_id = attribute.id \n        WHERE attribute.attribute_name = 'Strength'\n    )\n)\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) * 100.0 / COUNT(*)) AS percent_female_marvel\nFROM \n    superhero s\nJOIN \n    gender g ON s.gender_id = g.id\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    p.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT ABS((SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')) AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT \n    (COUNT(CASE WHEN eye_colour_id = 7 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_blue_eyes\nFROM \n    superhero\t----- bird -----\tsuperhero",
    "290": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) * 1.0 / \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) AS ratio\nFROM dual\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT\n    (SUM(CASE WHEN s.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN s.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference\nFROM\n    superhero s\nWHERE\n    s.weight_kg IS NULL OR s.weight_kg = 0\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT ABS(\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics'))\n    -\n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))\n) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, MAX(Reputation) AS HighestReputation\nFROM users\nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.Age > 65 AND posts.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) AS AverageScore\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN u.Age > 65 THEN p.Id END) AS FLOAT) / COUNT(DISTINCT p.Id)) * 100 AS PercentageElderUserPosts\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'Not well-finished' ELSE 'Well-finished' END AS PostStatus\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) AS NumberOfPosts\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT \n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) \n    / \n    (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS TimesOfPostsToVotes\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN postHistory ph ON ph.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\nAND ph.UserId = c.UserId\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nJOIN posts p ON v.PostId = p.Id\nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) AS AverageViewCount\nFROM posts p\nJOIN postTags pt ON p.Id = pt.PostId\nJOIN tags t ON pt.TagId = t.Id\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = '<humor>'\nGROUP BY p.Id, p.Title, c.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT DISTINCT ph.UserId\nFROM postHistory ph\nJOIN posts p ON ph.PostId = p.Id\nWHERE p.ViewCount >= 1000\nGROUP BY ph.PostId, ph.UserId\nHAVING COUNT(ph.Id) = 1\t----- bird -----\tcodebase_community",
    "322": "SELECT\n    ABS(\n        (CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN Name END) AS REAL) / COUNT(Name) * 100)\n        -\n        (CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2011' THEN Name END) AS REAL) / COUNT(Name) * 100)\n    ) AS PercentageDifference\nFROM badges\nWHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS AverageUpVotes, AVG(u.Age) AS AverageAge\nFROM users u\nJOIN (\n    SELECT OwnerUserId, COUNT(*) AS PostCount\n    FROM posts\n    GROUP BY OwnerUserId\n    HAVING COUNT(*) > 10\n) AS p ON u.Id = p.OwnerUserId\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010') * 1.0 / \n    (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS ratio_2010_2011\t----- bird -----\tcodebase_community",
    "325": "SELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, MAX(TotalViews) AS HighestPopularity\nFROM (\n    SELECT u.DisplayName, SUM(p.ViewCount) AS TotalViews\n    FROM users u\n    JOIN posts p ON u.Id = p.OwnerUserId\n    WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\n    GROUP BY u.DisplayName\n)\nGROUP BY DisplayName\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT t.TagName\nFROM tags t\nJOIN posts p ON t.Id = p.Id\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (CAST(COUNT(DISTINCT p.Id) AS FLOAT) / CAST(COUNT(DISTINCT p_all.Id) AS FLOAT)) * 100 AS percentage\nFROM \n    posts p_all\nJOIN \n    users u ON p_all.OwnerUserId = u.Id\nLEFT JOIN \n    posts p ON p.Id = p_all.Id\nLEFT JOIN \n    tags t ON t.TagName = 'r' AND t.ExcerptPostId = p.Id\nWHERE \n    u.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT\n    (SELECT SUM(p.ViewCount)\n     FROM posts p\n     JOIN users u ON p.OwnerUserId = u.Id\n     WHERE u.DisplayName = 'Mornington') -\n    (SELECT SUM(p.ViewCount)\n     FROM posts p\n     JOIN users u ON p.OwnerUserId = u.Id\n     WHERE u.DisplayName = 'Amos') AS ViewCountDifference\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(MonthlyLinks) AS AverageMonthlyLinks\nFROM (\n    SELECT COUNT(pl.Id) AS MonthlyLinks\n    FROM postLinks pl\n    JOIN posts p ON pl.PostId = p.Id\n    WHERE strftime('%Y', pl.CreationDate) = '2010' AND p.AnswerCount <= 2\n    GROUP BY strftime('%Y-%m', pl.CreationDate)\n)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Autobiographer'\nORDER BY badges.Date ASC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT users.Id) AS UserCount\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE strftime('%Y', p.CreationDate) = '2010'\nORDER BY p.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT\n    (COUNT(CASE WHEN u.Reputation > 1000 AND strftime('%Y', p.CreaionDate) = '2011' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\nFROM\n    posts p\nJOIN\n    users u ON p.OwnerUserId = u.Id\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) AS NumberOfComments\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    WHERE Score = (\n        SELECT MAX(Score)\n        FROM posts\n    )\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text AS CommentText, u.DisplayName AS UserDisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nLEFT JOIN users u ON c.UserId = u.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    (CAST(COUNT(CASE WHEN p.Score > 50 THEN 1 END) AS FLOAT) / COUNT(p.Id)) * 100 AS PercentageAbove50\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    u.Id = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nJOIN posts ON comments.PostId = posts.Id \nWHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN u.UpVotes = 0 THEN c.UserId END) AS FLOAT) / COUNT(DISTINCT c.UserId)) * 100 AS PercentageOfUsersWithZeroUpVotes\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT *\nFROM cards\nWHERE borderColor = 'borderless'\nAND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT c.*\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types = 'Artifact'\nAND c.side IS NULL\nAND l.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\nAND l.format = 'commander'\nAND l.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, c.hasContentWarning\nFROM cards c\nLEFT JOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele' AND c.hasContentWarning = 1\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.uuid\nORDER BY COUNT(r.id) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT\n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM foreign_data)) AS percentage\nFROM\n    foreign_data\nWHERE\n    language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT format, status FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Benalish Knight')\t----- bird -----\tcard_games",
    "357": "SELECT\n    (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_borderless\nFROM\n    cards\t----- bird -----\tcard_games",
    "358": "SELECT \n    (CAST(COUNT(DISTINCT fd.id) AS FLOAT) / CAST(COUNT(DISTINCT c.id) AS FLOAT)) * 100 AS percentage_french_story_spotlight\nFROM \n    cards c\nLEFT JOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.isStorySpotlight = 1\n    AND fd.language = 'French'\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.id, c.name, fd.language, fd.name AS foreign_name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originalType = 'Artifact' AND c.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost\nFROM cards\nWHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT \n    COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) AS percentage\nFROM cards\nWHERE isStorySpotlight = 1 AND isTextless = 1\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nJOIN sets ON set_translations.setCode = sets.code \nWHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT c.subtypes, c.supertypes\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'German' AND c.subtypes IS NOT NULL AND c.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE legalities.format = 'premodern'\nAND rulings.text = 'This is a triggered mana ability.'\nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'French'\nAND c.type = 'Creature'\nAND c.layout = 'normal'\nAND c.borderColor = 'black'\nAND c.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT DISTINCT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ravnica' AND s.baseSetSize = 180\t----- bird -----\tcard_games",
    "371": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'legal')) AS percentage\nFROM \n    cards c \nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    l.format = 'commander' AND l.status = 'legal' AND c.hasContentWarning = 0\t----- bird -----\tcard_games",
    "372": "SELECT \n    (COUNT(CASE WHEN fd.language = 'French' AND (c.power IS NULL OR c.power = '*') THEN 1 END) * 100.0 / \n     COUNT(CASE WHEN c.power IS NULL OR c.power = '*' THEN 1 END)) AS percentage\nFROM \n    cards c\nLEFT JOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.power IS NULL OR c.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isTextless = 1)) AS proportion\nFROM cards\nWHERE isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT language \nFROM set_translations \nWHERE setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT \n    CASE \n        WHEN a.convertedManaCost > b.convertedManaCost THEN 'Serra Angel'\n        WHEN a.convertedManaCost < b.convertedManaCost THEN 'Shrine Keeper'\n        ELSE 'Both have the same converted mana cost'\n    END AS card_with_more_converted_mana_cost\nFROM \n    cards a, \n    cards b\nWHERE \n    a.name = 'Serra Angel' AND \n    b.name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "378": "SELECT st.translation\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN set_translations st ON s.code = st.setCode\nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS (\n    SELECT 1\n    FROM foreign_data\n    WHERE uuid IN (\n        SELECT uuid\n        FROM cards\n        WHERE name = 'Ancestor''s Chosen'\n    )\n    AND language = 'Korean'\n) as hasKoreanVersion\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.translation = 'Hauptset Zehnte Edition'\nAND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT EXISTS (\n    SELECT 1\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\n) as isAvailableOnMTGO\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT s.code)\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT sets.id)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian'\nAND set_translations.translation IS NOT NULL\nAND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT artist\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR cards.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT fd.flavorText\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND r.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT fd.name\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND c.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE sets.name = 'Coldsnap'\n)\t----- bird -----\tcard_games",
    "391": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP')) AS percentage\nFROM \n    cards\nWHERE \n    convertedManaCost = 7\n    AND setCode = 'CSP'\t----- bird -----\tcard_games",
    "392": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP')) AS percentage_incredibly_powerful\nFROM \n    cards\nWHERE \n    setCode = 'CSP' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "393": "SELECT format, GROUP_CONCAT(name) AS banned_cards\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1 AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nJOIN legalities l ON c.uuid = l.uuid\nWHERE s.name = 'Hour of Devastation' AND l.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT s.name \nFROM sets s \nJOIN set_translations st_korean ON s.code = st_korean.setCode \nLEFT JOIN set_translations st_japanese ON s.code = st_japanese.setCode AND st_japanese.language LIKE '%Japanese%' \nWHERE st_korean.language = 'Korean' AND st_japanese.id IS NULL\t----- bird -----\tcard_games",
    "397": "SELECT c.frameVersion, c.name, l.status\nFROM cards c\nLEFT JOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'Allen Williams' AND (l.status = 'Banned' OR l.status IS NULL)\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) AS average_oxygen_atoms\nFROM (\n  SELECT m.molecule_id, COUNT(a.atom_id) AS oxygen_count\n  FROM molecule m\n  JOIN atom a ON m.molecule_id = a.molecule_id\n  JOIN connected c ON a.atom_id = c.atom_id\n  JOIN bond b ON c.bond_id = b.bond_id\n  WHERE a.element = 'O' AND b.bond_type = '-'\n  GROUP BY m.molecule_id\n)\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bond_count) AS average_single_bonded_carcinogenic\nFROM (\n  SELECT m.molecule_id, COUNT(b.bond_id) AS single_bond_count\n  FROM molecule m\n  JOIN bond b ON m.molecule_id = b.molecule_id\n  WHERE m.label = '+' AND b.bond_type = '-'\n  GROUP BY m.molecule_id\n)\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT \n  (COUNT(DISTINCT CASE WHEN a.element = 'c' THEN a.atom_id ELSE NULL END) * 100.0 / COUNT(DISTINCT a.atom_id)) AS percentage_of_carbon\nFROM \n  atom a\nJOIN \n  connected c ON a.atom_id = c.atom_id\nJOIN \n  bond b ON c.bond_id = b.bond_id\nWHERE \n  b.bond_type = '='\nAND \n  b.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '=')\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'H'\n)\nGROUP BY label\nORDER BY COUNT(label) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nGROUP BY element\nORDER BY COUNT(element) ASC\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE atom.element IN ('i', 's') AND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT \n    100.0 * (COUNT(DISTINCT m.molecule_id) - COUNT(DISTINCT CASE WHEN a.element = 'f' THEN m.molecule_id END)) / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+'\n\t----- bird -----\ttoxicology",
    "410": "SELECT \n  (COUNT(DISTINCT CASE WHEN b.bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR000' \nORDER BY element ASC \nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT \n    ROUND(\n        (CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) / COUNT(bond_id)) * 100,\n        5\n    ) AS percentage_of_double_bonds\nFROM \n    bond\nWHERE \n    molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule_id)), 3) AS percentage_carcinogenic\nFROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT \n    ROUND(\n        (COUNT(CASE WHEN element = 'h' THEN 1 END) * 100.0 / COUNT(atom_id)),\n        4\n    ) AS percentage\nFROM atom\nWHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '-' AND m.label = '-'\nORDER BY m.molecule_id\nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id \nWHERE a.molecule_id = 'TR009' AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2 \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nWHERE b.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(DISTINCT c.bond_id) AS number_of_connections\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nWHERE a.atom_id LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\nAND m.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'P'\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'N'\nWHERE b.molecule_id = a1.molecule_id AND b.molecule_id = a2.molecule_id\t----- bird -----\ttoxicology",
    "424": "SELECT m.label = '+' AS is_carcinogenic\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n  SELECT a.atom_id, COUNT(c.bond_id) AS bond_count\n  FROM atom a\n  LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n  WHERE a.element = 'i'\n  GROUP BY a.atom_id\n)\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected) AND atom_id NOT IN (SELECT atom_id2 FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT a.atom_id, a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR041' AND b.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND(CAST(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id), 5) AS proportion_of_single_bonds_carcinogenic\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT \n    (COUNT(DISTINCT CASE WHEN a.element = 'cl' THEN a.atom_id ELSE NULL END) * 100.0 / COUNT(DISTINCT a.atom_id)) AS percentage\nFROM \n    atom a\nJOIN \n    connected c ON a.atom_id = c.atom_id\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nWHERE c.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT \n    (COUNT(DISTINCT CASE WHEN a.element = 'cl' THEN a.atom_id ELSE NULL END) * 100.0 / COUNT(DISTINCT a.molecule_id)) AS percentage\nFROM \n    atom a\nJOIN \n    molecule m ON a.molecule_id = m.molecule_id\nWHERE \n    m.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+' AND substr(atom.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT \n    m.label,\n    CAST(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(a.element) AS hydrogen_ratio\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.molecule_id = 'TR006'\nGROUP BY \n    m.molecule_id, m.label\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE satscores.AvgScrMath > 400 \nAND schools.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`)\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE (NumGE1500 * 1.0 / NumTstTakr) > 0.3 AND `Enrollment (Ages 5-17)` > 0\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.School, s.CharterNum, ss.AvgScrWrite\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.AvgScrWrite > 499 AND s.CharterNum IS NOT NULL\nORDER BY ss.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.School\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1\nAND ss.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Riverside' AND ss.AvgScrMath > 400\nGROUP BY s.School, s.FundingType\nHAVING AVG(ss.AvgScrMath) > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT School, Street, City, State, Zip\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE County = 'Monterey'\nAND `High Grade` = '12'\nAND (`FRPM Count (Ages 5-17)` > 800 OR `Free Meal Count (Ages 5-17)` > 800)\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, ss.AvgScrWrite, s.Phone\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01') AND ss.AvgScrWrite IS NOT NULL\nGROUP BY s.School, ss.AvgScrWrite, s.Phone\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.FundingType = 'Locally funded' AND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n     FROM frpm f2\n     JOIN schools s2 ON f2.CDSCode = s2.CDSCode\n     WHERE s2.FundingType = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `Percent (%) Eligible Free (K-12)`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \n    s.School,\n    (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) * 100 AS `Eligible FRPM Rate (%)`\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nWHERE \n    s.DOC = '66'\nORDER BY \n    f.`FRPM Count (K-12)` DESC\nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE ss.NumTstTakr > 0\nORDER BY CAST(ss.NumGE1500 AS REAL) / ss.NumTstTakr ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT AdmFName1 || ' ' || AdmLName1 AS Admin1FullName, AdmFName2 || ' ' || AdmLName2 AS Admin2FullName, AdmFName3 || ' ' || AdmLName3 AS Admin3FullName\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nORDER BY satscores.NumGE1500 DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr) AS AvgNumTestTakers\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Fresno'\nAND strftime('%Y', schools.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE s.District = 'Fresno Unified'\nORDER BY ss.AvgScrRead ASC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'F'\nAND s.County IN (\n    SELECT County\n    FROM (\n        SELECT s.County, s.School, ss.AvgScrRead,\n               RANK() OVER (PARTITION BY s.County ORDER BY ss.AvgScrRead DESC) AS rank\n        FROM schools s\n        JOIN satscores ss ON s.CDSCode = ss.cds\n        WHERE s.Virtual = 'F'\n    ) AS ranked\n    WHERE ranked.rank <= 5\n)\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, ss.AvgScrWrite\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.AdmLName1 = 'Ulrich' AND s.AdmFName1 = 'Ricci'\nAND ss.AvgScrWrite IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "456": "SELECT School, MAX(`Enrollment (K-12)`) AS MaxEnrollment\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE DOC = '31'\nGROUP BY School\nORDER BY MaxEnrollment DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT AVG(CountPerMonth) AS MonthlyAverage\nFROM (\n    SELECT COUNT(*) AS CountPerMonth\n    FROM schools\n    WHERE County = 'Alameda'\n      AND DOC = '52'\n      AND strftime('%Y', OpenDate) = '1980'\n    GROUP BY strftime('%m', OpenDate)\n)\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange') AS UnifiedCount,\n    (SELECT COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange') AS ElementaryCount,\n    CAST((SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange') AS REAL) / \n    CAST((SELECT COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange') AS REAL) AS Ratio\nFROM schools\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.School, s.MailStreet\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE ss.AvgScrMath IS NOT NULL\nORDER BY ss.AvgScrMath DESC\nLIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Charter = 0\nAND s.County = 'Los Angeles'\nAND (f.`Free Meal Count (K-12)` * 100.0 / f.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT frpm.`Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.EdOpsCode = 'SSS'\nAND schools.City = 'Fremont'\nAND frpm.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, \n       (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) * 100 AS `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles'\nAND s.GSoffered LIKE 'K-9%'\nAND f.`Enrollment (Ages 5-17)` IS NOT NULL\nAND f.`FRPM Count (Ages 5-17)` IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS NumberOfVirtualSchools\nFROM schools\nWHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara')\nGROUP BY County\nORDER BY NumberOfVirtualSchools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT s.City, COUNT(*) AS NumberOfSchools\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Magnet = 1\nAND s.GSoffered LIKE '%K-8%'\nAND f.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY s.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.`District Code`, (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) * 100 AS `Percent (%) Eligible Free (K-12)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3\nFROM schools\nWHERE County = 'San Bernardino' \nAND District = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\nAND ((SOC = '62' AND SOCType = 'Public') OR (DOC = '54' AND DOCType = 'Public'))\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id) \nFROM account a \nJOIN district d ON a.district_id = d.district_id \nWHERE a.frequency = 'POPLATEK PO OBRATU' AND d.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) \nFROM district d \nWHERE EXISTS (\n    SELECT 1 \n    FROM client c \n    JOIN disp dp ON c.client_id = dp.client_id \n    JOIN account a ON dp.account_id = a.account_id \n    WHERE c.district_id = d.district_id \n    AND c.gender = 'F' \n    AND d.A11 > 6000 \n    AND d.A11 < 10000\n)\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' AND district.A3 = 'North Bohemia' AND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id, MIN(district.A11) AS LowestAvgSalary, MAX(district.A11) - MIN(district.A11) AS SalaryGap\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nGROUP BY account.account_id\nORDER BY client.birth_date DESC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.birth_date = (SELECT MAX(birth_date) FROM client)\nAND district.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.date LIKE '1997%' AND a.frequency = 'POPLATEK TYDNE'\nORDER BY l.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id, loan.amount, account.date\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND strftime('%Y', account.date) = '1993'\nORDER BY loan.amount DESC\nLIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) \nFROM client \nJOIN account ON client.client_id = account.account_id \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT d.A2\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT \n    (COUNT(CASE WHEN gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients\nFROM \n    client\nJOIN \n    district ON client.district_id = district.district_id\nWHERE \n    district.A3 = 'south Bohemia'\nAND \n    district.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT \n    ((final_balance.balance - initial_balance.balance) / CAST(initial_balance.balance AS REAL)) * 100 AS increase_rate\nFROM \n    (SELECT balance FROM trans WHERE account_id = (\n        SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1\n    ) AND date = '1998-12-27') AS final_balance,\n    (SELECT balance FROM trans WHERE account_id = (\n        SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1\n    ) AND date = '1993-03-22') AS initial_balance\t----- bird -----\tfinancial",
    "479": "SELECT \n    (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage_paid_no_issue\nFROM \n    loan\t----- bird -----\tfinancial",
    "480": "SELECT \n    (COUNT(DISTINCT CASE WHEN l.amount < 100000 AND l.status = 'C' THEN l.account_id END) * 1.0 / COUNT(DISTINCT l.account_id)) * 100 AS percentage_running_ok\nFROM \n    loan l\nWHERE \n    l.amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT d.A2 AS district, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status = 'D' AND l.date > DATE('now', '-1 year')\t----- bird -----\tfinancial",
    "482": "SELECT d.A2 AS district, COUNT(*) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F' AND dp.type = 'OWNER'\nGROUP BY d.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT loan.loan_id) AS approved_loans\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.amount >= 250000\nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT d.A2 AS district_name, t.amount\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nORDER BY t.amount DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(DISTINCT account.account_id) \nFROM account \nJOIN district ON account.district_id = district.district_id \nJOIN loan ON account.account_id = loan.account_id \nWHERE district.A2 = 'Branch location 1' AND loan.status IN ('C', 'D')\t----- bird -----\tfinancial",
    "486": "SELECT COUNT(*) AS male_clients\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE gender = 'M' AND district.district_id = (\n    SELECT district_id\n    FROM district\n    ORDER BY A15 DESC\n    LIMIT 1 OFFSET 1\n)\t----- bird -----\tfinancial",
    "487": "SELECT DISTINCT d.client_id\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE t.operation = 'VYBER KARTOU'\nAND t.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND strftime('%Y', date) = '1998')\nAND strftime('%Y', t.date) = '1998'\t----- bird -----\tfinancial",
    "488": "SELECT DISTINCT a.frequency\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.frequency != 'OWNER'\nAND d.A11 > 8000\nAND d.A11 <= 9000\t----- bird -----\tfinancial",
    "489": "SELECT AVG(d.A15) AS average_crimes_1995\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE d.A15 > 4000\nAND strftime('%Y', a.date) >= '1997'\nGROUP BY d.A3\t----- bird -----\tfinancial",
    "490": "SELECT t.trans_id, t.date, t.amount, t.balance\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE d.client_id = 3356 AND t.operation = 'VYBER'\t----- bird -----\tfinancial",
    "491": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client JOIN account ON client.client_id = disp.client_id JOIN disp ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A11 > 10000)) AS percentage_women\nFROM \n    client \nJOIN \n    disp ON client.client_id = disp.client_id\nJOIN \n    account ON disp.account_id = account.account_id\nJOIN \n    district ON account.district_id = district.district_id\nWHERE \n    district.A11 > 10000 AND client.gender = 'F'\t----- bird -----\tfinancial",
    "492": "SELECT \n    ((SUM(CASE WHEN strftime('%Y', l.date) = '1997' THEN l.amount ELSE 0 END) - \n      SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) / \n      SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) * 100.0 AS growth_rate\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    disp d ON a.account_id = d.account_id\nJOIN \n    client c ON d.client_id = c.client_id\nWHERE \n    c.gender = 'M' \n    AND (strftime('%Y', l.date) = '1996' OR strftime('%Y', l.date) = '1997')\n    AND d.type = 'OWNER'\t----- bird -----\tfinancial",
    "493": "SELECT frequency FROM account WHERE account_id = 3;\t----- bird -----\tfinancial",
    "494": "SELECT \n    (COUNT(DISTINCT male_clients.client_id) * 100.0 / COUNT(DISTINCT all_weekly_clients.client_id)) AS percentage_male_weekly\nFROM \n    (SELECT client_id FROM client WHERE gender = 'M') AS male_clients\nJOIN \n    disp ON male_clients.client_id = disp.client_id\nJOIN \n    account ON disp.account_id = account.account_id\nJOIN \n    (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE') AS weekly_accounts\nON \n    account.account_id = weekly_accounts.account_id,\n    (SELECT client_id FROM client\n     JOIN disp ON client.client_id = disp.client_id\n     JOIN account ON disp.account_id = account.account_id\n     WHERE account.frequency = 'POPLATEK TYDNE') AS all_weekly_clients\t----- bird -----\tfinancial",
    "495": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "496": "SELECT AVG(amount) AS average_running_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE (loan.status = 'C' OR loan.status = 'D')\nAND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "497": "SELECT client.client_id, (strftime('%Y', 'now') - strftime('%Y', client.birth_date)) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "498": "SELECT account.account_id, district.A2 AS district_name, district.A3 AS district_region\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE strftime('%Y', account.date) = '1993' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT a.account_id, a.frequency\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE dist.A3 = 'east Bohemia' AND d.type = 'OWNER'\t----- bird -----\tfinancial"
}